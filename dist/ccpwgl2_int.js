(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/core-js/internals/a-function.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/a-function.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "../node_modules/core-js/internals/a-possible-prototype.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/internals/a-possible-prototype.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "../node_modules/core-js/internals/add-to-unscopables.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/internals/add-to-unscopables.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../node_modules/core-js/internals/object-create.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  hide(ArrayPrototype, UNSCOPABLES, create(null));
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "../node_modules/core-js/internals/advance-string-index.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/internals/advance-string-index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__(/*! ../internals/string-multibyte */ "../node_modules/core-js/internals/string-multibyte.js").charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "../node_modules/core-js/internals/an-instance.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/an-instance.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "../node_modules/core-js/internals/an-object.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/an-object.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "../node_modules/core-js/internals/array-buffer-view-core.js":
/*!*******************************************************************!*\
  !*** ../node_modules/core-js/internals/array-buffer-view-core.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../node_modules/core-js/internals/classof.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../node_modules/core-js/internals/redefine.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js").f;
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../node_modules/core-js/internals/object-set-prototype-of.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../node_modules/core-js/internals/uid.js");

var DataView = global.DataView;
var DataViewPrototype = DataView && DataView.prototype;
var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray = global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
var TypedArray = Int8Array && getPrototypeOf(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype = Object.prototype;
var isPrototypeOf = ObjectPrototype.isPrototypeOf;

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
var NATIVE_ARRAY_BUFFER = !!(global.ArrayBuffer && DataView);
var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf;
var TYPED_ARRAY_TAG_REQIRED = false;
var NAME;

var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};

var isView = function isView(it) {
  var klass = classof(it);
  return klass === 'DataView' || has(TypedArrayConstructorsList, klass);
};

var isTypedArray = function (it) {
  return isObject(it) && has(TypedArrayConstructorsList, classof(it));
};

var aTypedArray = function (it) {
  if (isTypedArray(it)) return it;
  throw TypeError('Target is not a typed array');
};

var aTypedArrayConstructor = function (C) {
  if (setPrototypeOf) {
    if (isPrototypeOf.call(TypedArray, C)) return C;
  } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME)) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {
      return C;
    }
  } throw TypeError('Target is not a typed array constructor');
};

var exportProto = function (KEY, property, forced) {
  if (!DESCRIPTORS) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {
      delete TypedArrayConstructor.prototype[KEY];
    }
  }
  if (!TypedArrayPrototype[KEY] || forced) {
    redefine(TypedArrayPrototype, KEY, forced ? property
      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);
  }
};

var exportStatic = function (KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!DESCRIPTORS) return;
  if (setPrototypeOf) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global[ARRAY];
      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {
        delete TypedArrayConstructor[KEY];
      }
    }
    if (!TypedArray[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY] || property);
      } catch (error) { /* empty */ }
    } else return;
  }
  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      redefine(TypedArrayConstructor, KEY, property);
    }
  }
};

for (NAME in TypedArrayConstructorsList) {
  if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {
  // eslint-disable-next-line no-shadow
  TypedArray = function TypedArray() {
    throw TypeError('Incorrect invocation');
  };
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
  }
}

if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
  TypedArrayPrototype = TypedArray.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
  }
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}

if (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {
  TYPED_ARRAY_TAG_REQIRED = true;
  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {
    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
  } });
  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {
    hide(global[NAME], TYPED_ARRAY_TAG, NAME);
  }
}

// WebKit bug - the same parent prototype for typed arrays and data view
if (NATIVE_ARRAY_BUFFER && setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {
  setPrototypeOf(DataViewPrototype, ObjectPrototype);
}

module.exports = {
  NATIVE_ARRAY_BUFFER: NATIVE_ARRAY_BUFFER,
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,
  aTypedArray: aTypedArray,
  aTypedArrayConstructor: aTypedArrayConstructor,
  exportProto: exportProto,
  exportStatic: exportStatic,
  isView: isView,
  isTypedArray: isTypedArray,
  TypedArray: TypedArray,
  TypedArrayPrototype: TypedArrayPrototype
};


/***/ }),

/***/ "../node_modules/core-js/internals/array-buffer.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/internals/array-buffer.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../node_modules/core-js/internals/array-buffer-view-core.js").NATIVE_ARRAY_BUFFER;
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../node_modules/core-js/internals/redefine-all.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../node_modules/core-js/internals/an-instance.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "../node_modules/core-js/internals/to-index.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../node_modules/core-js/internals/object-get-own-property-names.js").f;
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js").f;
var arrayFill = __webpack_require__(/*! ../internals/array-fill */ "../node_modules/core-js/internals/array-fill.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = 1 / 0;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;

// IEEE754 conversions based on https://github.com/feross/ieee754
var packIEEE754 = function (number, mantissaLength, bytes) {
  var buffer = new Array(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs(number);
  // eslint-disable-next-line no-self-compare
  if (number != number || number === Infinity) {
    // eslint-disable-next-line no-self-compare
    mantissa = number != number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor(log(number) / LN2);
    if (number * (c = pow(2, -exponent)) < 1) {
      exponent--;
      c *= 2;
    }
    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow(2, 1 - eBias);
    }
    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }
    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow(2, mantissaLength);
      exponent = exponent + eBias;
    } else {
      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
      exponent = 0;
    }
  }
  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);
  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;
  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);
  buffer[--index] |= sign * 128;
  return buffer;
};

var unpackIEEE754 = function (buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;
  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);
  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;
  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);
  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa = mantissa + pow(2, mantissaLength);
    exponent = exponent - eBias;
  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};

var unpackInt32 = function (buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};

var packInt8 = function (number) {
  return [number & 0xFF];
};

var packInt16 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};

var packInt32 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};

var packFloat32 = function (number) {
  return packIEEE754(number, 23, 4);
};

var packFloat64 = function (number) {
  return packIEEE754(number, 52, 8);
};

var addGetter = function (Constructor, key) {
  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });
};

var get = function (view, count, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = bytes.slice(start, start + count);
  return isLittleEndian ? pack : pack.reverse();
};

var set = function (view, count, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = conversion(+value);
  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
};

if (!NATIVE_ARRAY_BUFFER) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    setInternalState(this, {
      bytes: arrayFill.call(new Array(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS) this.byteLength = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = getInternalState(buffer).byteLength;
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    setInternalState(this, {
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset
    });
    if (!DESCRIPTORS) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, 'byteLength');
    addGetter($DataView, 'buffer');
    addGetter($DataView, 'byteLength');
    addGetter($DataView, 'byteOffset');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
    }
  });
} else {
  if (!fails(function () {
    NativeArrayBuffer(1);
  }) || !fails(function () {
    new NativeArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new NativeArrayBuffer(); // eslint-disable-line no-new
    new NativeArrayBuffer(1.5); // eslint-disable-line no-new
    new NativeArrayBuffer(NaN); // eslint-disable-line no-new
    return NativeArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new NativeArrayBuffer(toIndex(length));
    };
    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];
    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, NativeArrayBuffer[key]);
    }
    ArrayBufferPrototype.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var testView = new $DataView(new $ArrayBuffer(2));
  var nativeSetInt8 = $DataView[PROTOTYPE].setInt8;
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, { unsafe: true });
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),

/***/ "../node_modules/core-js/internals/array-fill.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/array-fill.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");

// `Array.prototype.fill` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "../node_modules/core-js/internals/array-for-each.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/internals/array-for-each.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__(/*! ../internals/array-iteration */ "../node_modules/core-js/internals/array-iteration.js").forEach;
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "../node_modules/core-js/internals/sloppy-array-method.js");

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports = sloppyArrayMethod('forEach') ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "../node_modules/core-js/internals/array-from.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/array-from.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/bind-context */ "../node_modules/core-js/internals/bind-context.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "../node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../node_modules/core-js/internals/create-property.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../node_modules/core-js/internals/get-iterator-method.js");

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var index = 0;
  var iteratorMethod = getIteratorMethod(O);
  var length, result, step, iterator;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    result = new C();
    for (;!(step = iterator.next()).done; index++) {
      createProperty(result, index, mapping
        ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true)
        : step.value
      );
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "../node_modules/core-js/internals/array-includes.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/internals/array-includes.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../node_modules/core-js/internals/to-indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../node_modules/core-js/internals/to-absolute-index.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "../node_modules/core-js/internals/array-iteration.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/internals/array-iteration.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/bind-context */ "../node_modules/core-js/internals/bind-context.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../node_modules/core-js/internals/array-species-create.js");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6)
};


/***/ }),

/***/ "../node_modules/core-js/internals/array-species-create.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/internals/array-species-create.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../node_modules/core-js/internals/is-array.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "../node_modules/core-js/internals/bind-context.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/internals/bind-context.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    var returnMethod = iterator['return'];
    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
    throw error;
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!***************************************************************************!*\
  !*** ../node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "../node_modules/core-js/internals/classof-raw.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/classof-raw.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../node_modules/core-js/internals/classof.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/internals/classof.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "../node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "../node_modules/core-js/internals/copy-constructor-properties.js":
/*!************************************************************************!*\
  !*** ../node_modules/core-js/internals/copy-constructor-properties.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/correct-prototype-getter.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/internals/correct-prototype-getter.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "../node_modules/core-js/internals/create-iterator-constructor.js":
/*!************************************************************************!*\
  !*** ../node_modules/core-js/internals/create-iterator-constructor.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__(/*! ../internals/iterators-core */ "../node_modules/core-js/internals/iterators-core.js").IteratorPrototype;
var create = __webpack_require__(/*! ../internals/object-create */ "../node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "../node_modules/core-js/internals/create-property-descriptor.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/internals/create-property-descriptor.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../node_modules/core-js/internals/create-property.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/internals/create-property.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../node_modules/core-js/internals/to-primitive.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "../node_modules/core-js/internals/define-iterator.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/internals/define-iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../node_modules/core-js/internals/create-iterator-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../node_modules/core-js/internals/set-to-string-tag.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../node_modules/core-js/internals/is-pure.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "../node_modules/core-js/internals/iterators-core.js");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          hide(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    hide(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "../node_modules/core-js/internals/define-well-known-symbol.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/internals/define-well-known-symbol.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "../node_modules/core-js/internals/path.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/wrapped-well-known-symbol */ "../node_modules/core-js/internals/wrapped-well-known-symbol.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "../node_modules/core-js/internals/descriptors.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/descriptors.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");

// Thank's IE8 for his funny defineProperty
module.exports = !fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../node_modules/core-js/internals/document-create-element.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/internals/document-create-element.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "../node_modules/core-js/internals/dom-iterables.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/internals/dom-iterables.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "../node_modules/core-js/internals/enum-bug-keys.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/internals/enum-bug-keys.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "../node_modules/core-js/internals/export.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/internals/export.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../node_modules/core-js/internals/redefine.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../node_modules/core-js/internals/set-global.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../node_modules/core-js/internals/is-forced.js");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      hide(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/fails.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/internals/fails.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../node_modules/core-js/internals/redefine.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../node_modules/core-js/internals/regexp-exec.js");

var SPECIES = wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

module.exports = function (KEY, length, exec, sham) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };

    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === regexpExec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    });
    var stringMethod = methods[0];
    var regexMethod = methods[1];

    redefine(String.prototype, KEY, stringMethod);
    redefine(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return regexMethod.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return regexMethod.call(string, this); }
    );
    if (sham) hide(RegExp.prototype[SYMBOL], 'sham', true);
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/flatten-into-array.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/internals/flatten-into-array.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "../node_modules/core-js/internals/is-array.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../node_modules/core-js/internals/bind-context.js");

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;
  var element;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};

module.exports = flattenIntoArray;


/***/ }),

/***/ "../node_modules/core-js/internals/forced-object-prototype-accessors-methods.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/core-js/internals/forced-object-prototype-accessors-methods.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");

// Forced replacement object prototype accessors methods
module.exports = IS_PURE || !fails(function () {
  var key = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, key, function () { /* empty */ });
  delete global[key];
});


/***/ }),

/***/ "../node_modules/core-js/internals/forced-string-trim-method.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/internals/forced-string-trim-method.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../node_modules/core-js/internals/whitespaces.js");

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),

/***/ "../node_modules/core-js/internals/function-to-string.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/internals/function-to-string.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ../internals/shared */ "../node_modules/core-js/internals/shared.js");

module.exports = shared('native-function-to-string', Function.toString);


/***/ }),

/***/ "../node_modules/core-js/internals/get-built-in.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/internals/get-built-in.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "../node_modules/core-js/internals/path.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "../node_modules/core-js/internals/get-iterator-method.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/internals/get-iterator-method.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "../node_modules/core-js/internals/classof.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../node_modules/core-js/internals/get-iterator.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/internals/get-iterator.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../node_modules/core-js/internals/get-iterator-method.js");

module.exports = function (it) {
  var iteratorMethod = getIteratorMethod(it);
  if (typeof iteratorMethod != 'function') {
    throw TypeError(String(it) + ' is not iterable');
  } return anObject(iteratorMethod.call(it));
};


/***/ }),

/***/ "../node_modules/core-js/internals/global.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/internals/global.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var O = 'object';
var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line no-undef
  check(typeof globalThis == O && globalThis) ||
  check(typeof window == O && window) ||
  check(typeof self == O && self) ||
  check(typeof global == O && global) ||
  // eslint-disable-next-line no-new-func
  Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/core-js/internals/has.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/internals/has.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../node_modules/core-js/internals/hidden-keys.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/hidden-keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../node_modules/core-js/internals/hide.js":
/*!*************************************************!*\
  !*** ../node_modules/core-js/internals/hide.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../node_modules/core-js/internals/host-report-errors.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/internals/host-report-errors.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/html.js":
/*!*************************************************!*\
  !*** ../node_modules/core-js/internals/html.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "../node_modules/core-js/internals/ie8-dom-define.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/internals/ie8-dom-define.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "../node_modules/core-js/internals/document-create-element.js");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "../node_modules/core-js/internals/indexed-object.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/internals/indexed-object.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../node_modules/core-js/internals/classof-raw.js");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "../node_modules/core-js/internals/internal-state.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/internals/internal-state.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "../node_modules/core-js/internals/native-weak-map.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var objectHas = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../node_modules/core-js/internals/hidden-keys.js");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = new WeakMap();
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    hide(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "../node_modules/core-js/internals/is-array-iterator-method.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/internals/is-array-iterator-method.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "../node_modules/core-js/internals/is-array.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/internals/is-array.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "../node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "../node_modules/core-js/internals/is-forced.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/is-forced.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "../node_modules/core-js/internals/is-object.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/is-object.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../node_modules/core-js/internals/is-pure.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/internals/is-pure.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "../node_modules/core-js/internals/iterate.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/internals/iterate.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../node_modules/core-js/internals/bind-context.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../node_modules/core-js/internals/get-iterator-method.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "../node_modules/core-js/internals/call-with-safe-iteration-closing.js");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {
  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);
  var iterator, iterFn, index, length, result, step;

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = AS_ENTRIES
          ? boundFunction(anObject(step = iterable[index])[0], step[1])
          : boundFunction(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  while (!(step = iterator.next()).done) {
    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);
    if (result && result instanceof Result) return result;
  } return new Result(false);
};

iterate.stop = function (result) {
  return new Result(true, result);
};


/***/ }),

/***/ "../node_modules/core-js/internals/iterators-core.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/internals/iterators-core.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../node_modules/core-js/internals/object-get-prototype-of.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "../node_modules/core-js/internals/iterators.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/iterators.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../node_modules/core-js/internals/microtask.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/microtask.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../node_modules/core-js/internals/classof-raw.js");
var macrotask = __webpack_require__(/*! ../internals/task */ "../node_modules/core-js/internals/task.js").set;
var userAgent = __webpack_require__(/*! ../internals/user-agent */ "../node_modules/core-js/internals/user-agent.js");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var IS_NODE = classof(process) == 'process';
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  } else if (MutationObserver && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "../node_modules/core-js/internals/native-symbol.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/internals/native-symbol.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  // Chrome 38 Symbol has incorrect toString conversion
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "../node_modules/core-js/internals/native-url.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/native-url.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = !fails(function () {
  var url = new URL('b?e=1', 'http://a');
  var searchParams = url.searchParams;
  url.pathname = 'c%20d';
  return (IS_PURE && !url.toJSON)
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?e=1'
    || searchParams.get('e') !== '1'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://тест').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#б').hash !== '#%D0%B1';
});


/***/ }),

/***/ "../node_modules/core-js/internals/native-weak-map.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/internals/native-weak-map.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var nativeFunctionToString = __webpack_require__(/*! ../internals/function-to-string */ "../node_modules/core-js/internals/function-to-string.js");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));


/***/ }),

/***/ "../node_modules/core-js/internals/new-promise-capability.js":
/*!*******************************************************************!*\
  !*** ../node_modules/core-js/internals/new-promise-capability.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-assign.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/internals/object-assign.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../node_modules/core-js/internals/indexed-object.js");

var nativeAssign = Object.assign;

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !nativeAssign || fails(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
    }
  } return T;
} : nativeAssign;


/***/ }),

/***/ "../node_modules/core-js/internals/object-create.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/internals/object-create.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var defineProperties = __webpack_require__(/*! ../internals/object-define-properties */ "../node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "../node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "../node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../node_modules/core-js/internals/shared-key.js");
var IE_PROTO = sharedKey('IE_PROTO');

var PROTOTYPE = 'prototype';
var Empty = function () { /* empty */ };

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var length = enumBugKeys.length;
  var lt = '<';
  var script = 'script';
  var gt = '>';
  var js = 'java' + script + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  iframe.src = String(js);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];
  return createDict();
};

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : defineProperties(result, Properties);
};

hiddenKeys[IE_PROTO] = true;


/***/ }),

/***/ "../node_modules/core-js/internals/object-define-properties.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/internals/object-define-properties.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-define-property.js":
/*!*******************************************************************!*\
  !*** ../node_modules/core-js/internals/object-define-property.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../node_modules/core-js/internals/ie8-dom-define.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../node_modules/core-js/internals/to-primitive.js");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../node_modules/core-js/internals/to-indexed-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../node_modules/core-js/internals/to-primitive.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../node_modules/core-js/internals/ie8-dom-define.js");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-get-own-property-names.js":
/*!**************************************************************************!*\
  !*** ../node_modules/core-js/internals/object-get-own-property-names.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!****************************************************************************!*\
  !*** ../node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "../node_modules/core-js/internals/object-get-prototype-of.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/internals/object-get-prototype-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-keys-internal.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/internals/object-keys-internal.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../node_modules/core-js/internals/to-indexed-object.js");
var indexOf = __webpack_require__(/*! ../internals/array-includes */ "../node_modules/core-js/internals/array-includes.js").indexOf;
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../node_modules/core-js/internals/hidden-keys.js");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-keys.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/object-keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "../node_modules/core-js/internals/object-property-is-enumerable.js":
/*!**************************************************************************!*\
  !*** ../node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "../node_modules/core-js/internals/object-set-prototype-of.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/internals/object-set-prototype-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "../node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "../node_modules/core-js/internals/own-keys.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/internals/own-keys.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../node_modules/core-js/internals/get-built-in.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "../node_modules/core-js/internals/parse-float.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/parse-float.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var trim = __webpack_require__(/*! ../internals/string-trim */ "../node_modules/core-js/internals/string-trim.js").trim;
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../node_modules/core-js/internals/whitespaces.js");

var nativeParseFloat = global.parseFloat;
var FORCED = 1 / nativeParseFloat(whitespaces + '-0') !== -Infinity;

// `parseFloat` method
// https://tc39.github.io/ecma262/#sec-parsefloat-string
module.exports = FORCED ? function parseFloat(string) {
  var trimmedString = trim(String(string));
  var result = nativeParseFloat(trimmedString);
  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;
} : nativeParseFloat;


/***/ }),

/***/ "../node_modules/core-js/internals/path.js":
/*!*************************************************!*\
  !*** ../node_modules/core-js/internals/path.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");


/***/ }),

/***/ "../node_modules/core-js/internals/perform.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/internals/perform.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/promise-resolve.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/internals/promise-resolve.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "../node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "../node_modules/core-js/internals/punycode-to-ascii.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/internals/punycode-to-ascii.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function (string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = string.charCodeAt(counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = string.charCodeAt(counter++);
      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        output.push(value);
        counter--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function (digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function (delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  for (; delta > baseMinusTMin * tMax >> 1; k += base) {
    delta = floor(delta / baseMinusTMin);
  }
  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
// eslint-disable-next-line  max-statements
var encode = function (input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      output.push(stringFromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    output.push(delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      throw RangeError(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw RangeError(OVERFLOW_ERROR);
      }
      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        for (var k = base; /* no condition */; k += base) {
          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor(qMinusT / baseMinusT);
        }

        output.push(stringFromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        ++handledCPCount;
      }
    }

    ++delta;
    ++n;
  }
  return output.join('');
};

module.exports = function (input) {
  var encoded = [];
  var labels = input.toLowerCase().replace(regexSeparators, '\u002E').split('.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);
  }
  return encoded.join('.');
};


/***/ }),

/***/ "../node_modules/core-js/internals/redefine-all.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/internals/redefine-all.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ../internals/redefine */ "../node_modules/core-js/internals/redefine.js");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "../node_modules/core-js/internals/redefine.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/internals/redefine.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../node_modules/core-js/internals/shared.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../node_modules/core-js/internals/set-global.js");
var nativeFunctionToString = __webpack_require__(/*! ../internals/function-to-string */ "../node_modules/core-js/internals/function-to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(nativeFunctionToString).split('toString');

shared('inspectSource', function (it) {
  return nativeFunctionToString.call(it);
});

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);
    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else hide(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);
});


/***/ }),

/***/ "../node_modules/core-js/internals/regexp-exec-abstract.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/internals/regexp-exec-abstract.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./classof-raw */ "../node_modules/core-js/internals/classof-raw.js");
var regexpExec = __webpack_require__(/*! ./regexp-exec */ "../node_modules/core-js/internals/regexp-exec.js");

// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "../node_modules/core-js/internals/regexp-exec.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/regexp-exec.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpFlags = __webpack_require__(/*! ./regexp-flags */ "../node_modules/core-js/internals/regexp-flags.js");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "../node_modules/core-js/internals/regexp-flags.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/internals/regexp-flags.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "../node_modules/core-js/internals/require-object-coercible.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/internals/require-object-coercible.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "../node_modules/core-js/internals/set-global.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/set-global.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");

module.exports = function (key, value) {
  try {
    hide(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "../node_modules/core-js/internals/set-species.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/set-species.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../node_modules/core-js/internals/get-built-in.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/set-to-string-tag.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/internals/set-to-string-tag.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js").f;
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "../node_modules/core-js/internals/shared-key.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/shared-key.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ../internals/shared */ "../node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "../node_modules/core-js/internals/shared.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/internals/shared.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../node_modules/core-js/internals/set-global.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../node_modules/core-js/internals/is-pure.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.1.3',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "../node_modules/core-js/internals/sloppy-array-method.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/internals/sloppy-array-method.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !method || !fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "../node_modules/core-js/internals/species-constructor.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/internals/species-constructor.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "../node_modules/core-js/internals/string-multibyte.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/internals/string-multibyte.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../node_modules/core-js/internals/require-object-coercible.js");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "../node_modules/core-js/internals/string-pad.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/string-pad.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var repeat = __webpack_require__(/*! ../internals/string-repeat */ "../node_modules/core-js/internals/string-repeat.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../node_modules/core-js/internals/require-object-coercible.js");

var ceil = Math.ceil;

// `String.prototype.{ padStart, padEnd }` methods implementation
var createMethod = function (IS_END) {
  return function ($this, maxLength, fillString) {
    var S = String(requireObjectCoercible($this));
    var stringLength = S.length;
    var fillStr = fillString === undefined ? ' ' : String(fillString);
    var intMaxLength = toLength(maxLength);
    var fillLen, stringFiller;
    if (intMaxLength <= stringLength || fillStr == '') return S;
    fillLen = intMaxLength - stringLength;
    stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
    return IS_END ? S + stringFiller : stringFiller + S;
  };
};

module.exports = {
  // `String.prototype.padStart` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.padstart
  start: createMethod(false),
  // `String.prototype.padEnd` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.padend
  end: createMethod(true)
};


/***/ }),

/***/ "../node_modules/core-js/internals/string-repeat.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/internals/string-repeat.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../node_modules/core-js/internals/require-object-coercible.js");

// `String.prototype.repeat` method implementation
// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
module.exports = ''.repeat || function repeat(count) {
  var str = String(requireObjectCoercible(this));
  var result = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};


/***/ }),

/***/ "../node_modules/core-js/internals/string-trim.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/string-trim.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../node_modules/core-js/internals/require-object-coercible.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../node_modules/core-js/internals/whitespaces.js");

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.github.io/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "../node_modules/core-js/internals/task.js":
/*!*************************************************!*\
  !*** ../node_modules/core-js/internals/task.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../node_modules/core-js/internals/classof-raw.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../node_modules/core-js/internals/bind-context.js");
var html = __webpack_require__(/*! ../internals/html */ "../node_modules/core-js/internals/html.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "../node_modules/core-js/internals/document-create-element.js");

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (classof(process) == 'process') {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-absolute-index.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/internals/to-absolute-index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-index.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/internals/to-index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");

// `ToIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-toindex
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length or index');
  return length;
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-indexed-object.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/internals/to-indexed-object.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-integer.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/to-integer.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-length.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/to-length.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-object.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/to-object.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../node_modules/core-js/internals/require-object-coercible.js");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-offset.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/internals/to-offset.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");

module.exports = function (it, BYTES) {
  var offset = toInteger(it);
  if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset');
  return offset;
};


/***/ }),

/***/ "../node_modules/core-js/internals/to-primitive.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/internals/to-primitive.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../node_modules/core-js/internals/typed-array-constructor.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/internals/typed-array-constructor.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-arrays-constructors-requires-wrappers */ "../node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../node_modules/core-js/internals/array-buffer-view-core.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../node_modules/core-js/internals/array-buffer.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../node_modules/core-js/internals/an-instance.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../node_modules/core-js/internals/create-property-descriptor.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "../node_modules/core-js/internals/to-index.js");
var toOffset = __webpack_require__(/*! ../internals/to-offset */ "../node_modules/core-js/internals/to-offset.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../node_modules/core-js/internals/to-primitive.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../node_modules/core-js/internals/classof.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../node_modules/core-js/internals/object-create.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../node_modules/core-js/internals/object-set-prototype-of.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../node_modules/core-js/internals/object-get-own-property-names.js").f;
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../node_modules/core-js/internals/typed-array-from.js");
var forEach = __webpack_require__(/*! ../internals/array-iteration */ "../node_modules/core-js/internals/array-iteration.js").forEach;
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../node_modules/core-js/internals/set-species.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../node_modules/core-js/internals/object-get-own-property-descriptor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var round = Math.round;
var RangeError = global.RangeError;
var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
var TypedArray = ArrayBufferViewCore.TypedArray;
var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var isTypedArray = ArrayBufferViewCore.isTypedArray;
var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
var WRONG_LENGTH = 'Wrong length';

var fromList = function (C, list) {
  var index = 0;
  var length = list.length;
  var result = new (aTypedArrayConstructor(C))(length);
  while (length > index) result[index] = list[index++];
  return result;
};

var addGetter = function (it, key) {
  nativeDefineProperty(it, key, { get: function () {
    return getInternalState(this)[key];
  } });
};

var isArrayBuffer = function (it) {
  var klass;
  return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
};

var isTypedArrayIndex = function (target, key) {
  return isTypedArray(target)
    && typeof key != 'symbol'
    && key in target
    && String(+key) == String(key);
};

var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
  return isTypedArrayIndex(target, key = toPrimitive(key, true))
    ? createPropertyDescriptor(2, target[key])
    : nativeGetOwnPropertyDescriptor(target, key);
};

var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
  if (isTypedArrayIndex(target, key = toPrimitive(key, true))
    && isObject(descriptor)
    && has(descriptor, 'value')
    && !has(descriptor, 'get')
    && !has(descriptor, 'set')
    // TODO: add validation descriptor w/o calling accessors
    && !descriptor.configurable
    && (!has(descriptor, 'writable') || descriptor.writable)
    && (!has(descriptor, 'enumerable') || descriptor.enumerable)
  ) {
    target[key] = descriptor.value;
    return target;
  } return nativeDefineProperty(target, key, descriptor);
};

if (DESCRIPTORS) {
  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
    definePropertyModule.f = wrappedDefineProperty;
    addGetter(TypedArrayPrototype, 'buffer');
    addGetter(TypedArrayPrototype, 'byteOffset');
    addGetter(TypedArrayPrototype, 'byteLength');
    addGetter(TypedArrayPrototype, 'length');
  }

  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
    defineProperty: wrappedDefineProperty
  });

  // eslint-disable-next-line max-statements
  module.exports = function (TYPE, BYTES, wrapper, CLAMPED) {
    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + TYPE;
    var SETTER = 'set' + TYPE;
    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
    var TypedArrayConstructor = NativeTypedArrayConstructor;
    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
    var exported = {};

    var getter = function (that, index) {
      var data = getInternalState(that);
      return data.view[GETTER](index * BYTES + data.byteOffset, true);
    };

    var setter = function (that, index, value) {
      var data = getInternalState(that);
      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
      data.view[SETTER](index * BYTES + data.byteOffset, value, true);
    };

    var addElement = function (that, index) {
      nativeDefineProperty(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };

    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);
        var index = 0;
        var byteOffset = 0;
        var buffer, byteLength, length;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new ArrayBuffer(byteLength);
        } else if (isArrayBuffer(data)) {
          buffer = data;
          byteOffset = toOffset(offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - byteOffset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (isTypedArray(data)) {
          return fromList(TypedArrayConstructor, data);
        } else {
          return typedArrayFrom.call(TypedArrayConstructor, data);
        }
        setInternalState(that, {
          buffer: buffer,
          byteOffset: byteOffset,
          byteLength: byteLength,
          length: length,
          view: new DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
        anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);
        if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
        if (isArrayBuffer(data)) return $length !== undefined
          ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)
          : typedArrayOffset !== undefined
            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))
            : new NativeTypedArrayConstructor(data);
        if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
        return typedArrayFrom.call(TypedArrayConstructor, data);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
        if (!(key in TypedArrayConstructor)) hide(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
      });
      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
    }

    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
      hide(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
    }

    if (TYPED_ARRAY_TAG) hide(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);

    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

    $({
      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS
    }, exported);

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
      hide(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
    }

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
      hide(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
    }

    setSpecies(CONSTRUCTOR_NAME);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "../node_modules/core-js/internals/typed-array-from.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/internals/typed-array-from.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../node_modules/core-js/internals/get-iterator-method.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../node_modules/core-js/internals/is-array-iterator-method.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../node_modules/core-js/internals/bind-context.js");
var aTypedArrayConstructor = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../node_modules/core-js/internals/array-buffer-view-core.js").aTypedArrayConstructor;

module.exports = function from(source /* , mapfn, thisArg */) {
  var O = toObject(source);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var i, length, result, step, iterator;
  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {
    iterator = iteratorMethod.call(O);
    O = [];
    while (!(step = iterator.next()).done) {
      O.push(step.value);
    }
  }
  if (mapping && argumentsLength > 2) {
    mapfn = bind(mapfn, arguments[2], 2);
  }
  length = toLength(O.length);
  result = new (aTypedArrayConstructor(this))(length);
  for (i = 0; length > i; i++) {
    result[i] = mapping ? mapfn(O[i], i) : O[i];
  }
  return result;
};


/***/ }),

/***/ "../node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-new */
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../node_modules/core-js/internals/check-correctness-of-iteration.js");
var NATIVE_ARRAY_BUFFER_VIEWS = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../node_modules/core-js/internals/array-buffer-view-core.js").NATIVE_ARRAY_BUFFER_VIEWS;

var ArrayBuffer = global.ArrayBuffer;
var Int8Array = global.Int8Array;

module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
  Int8Array(1);
}) || !fails(function () {
  new Int8Array(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
  new Int8Array();
  new Int8Array(null);
  new Int8Array(1.5);
  new Int8Array(iterable);
}, true) || fails(function () {
  // Safari 11 bug
  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
});


/***/ }),

/***/ "../node_modules/core-js/internals/uid.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/internals/uid.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "../node_modules/core-js/internals/user-agent.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/internals/user-agent.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "../node_modules/core-js/internals/webkit-string-pad-bug.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/internals/webkit-string-pad-bug.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/zloirock/core-js/issues/280
var userAgent = __webpack_require__(/*! ../internals/user-agent */ "../node_modules/core-js/internals/user-agent.js");

// eslint-disable-next-line unicorn/no-unsafe-regex
module.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);


/***/ }),

/***/ "../node_modules/core-js/internals/well-known-symbol.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/internals/well-known-symbol.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../node_modules/core-js/internals/native-symbol.js");

var Symbol = global.Symbol;
var store = shared('wks');

module.exports = function (name) {
  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]
    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};


/***/ }),

/***/ "../node_modules/core-js/internals/whitespaces.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/internals/whitespaces.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "../node_modules/core-js/internals/wrapped-well-known-symbol.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/internals/wrapped-well-known-symbol.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");


/***/ }),

/***/ "../node_modules/core-js/modules/es.array-buffer.constructor.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.array-buffer.constructor.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var arrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../node_modules/core-js/internals/array-buffer.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../node_modules/core-js/internals/set-species.js");

var ARRAY_BUFFER = 'ArrayBuffer';
var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
var NativeArrayBuffer = global[ARRAY_BUFFER];

// `ArrayBuffer` constructor
// https://tc39.github.io/ecma262/#sec-arraybuffer-constructor
$({ global: true, forced: NativeArrayBuffer !== ArrayBuffer }, {
  ArrayBuffer: ArrayBuffer
});

setSpecies(ARRAY_BUFFER);


/***/ }),

/***/ "../node_modules/core-js/modules/es.array-buffer.slice.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es.array-buffer.slice.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../node_modules/core-js/internals/array-buffer.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../node_modules/core-js/internals/species-constructor.js");

var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var nativeArrayBufferSlice = ArrayBuffer.prototype.slice;

var INCORRECT_SLICE = fails(function () {
  return !new ArrayBuffer(2).slice(1, undefined).byteLength;
});

// `ArrayBuffer.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-arraybuffer.prototype.slice
$({ target: 'ArrayBuffer', proto: true, unsafe: true, forced: INCORRECT_SLICE }, {
  slice: function slice(start, end) {
    if (nativeArrayBufferSlice !== undefined && end === undefined) {
      return nativeArrayBufferSlice.call(anObject(this), start); // FF fix
    }
    var length = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));
    var viewSource = new DataView(this);
    var viewTarget = new DataView(result);
    var index = 0;
    while (first < fin) {
      viewTarget.setUint8(index++, viewSource.getUint8(first++));
    } return result;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.array.flat-map.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es.array.flat-map.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flatMap` method
// https://github.com/tc39/proposal-flatMap
$({ target: 'Array', proto: true }, {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A;
    aFunction(callbackfn);
    A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return A;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.array.flat.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es.array.flat.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flat` method
// https://github.com/tc39/proposal-flatMap
$({ target: 'Array', proto: true }, {
  flat: function flat(/* depthArg = 1 */) {
    var depthArg = arguments.length ? arguments[0] : undefined;
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.array.iterator.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es.array.iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../node_modules/core-js/internals/define-iterator.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../node_modules/core-js/modules/es.array.reverse.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es.array.reverse.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../node_modules/core-js/internals/is-array.js");

var nativeReverse = [].reverse;
var test = [1, 2];

// `Array.prototype.reverse` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794
$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {
  reverse: function reverse() {
    if (isArray(this)) this.length = this.length;
    return nativeReverse.call(this);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.array.sort.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es.array.sort.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../node_modules/core-js/internals/fails.js");
var sloppyArrayMethod = __webpack_require__(/*! ../internals/sloppy-array-method */ "../node_modules/core-js/internals/sloppy-array-method.js");

var nativeSort = [].sort;
var test = [1, 2, 3];

// IE8-
var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails(function () {
  test.sort(null);
});
// Old WebKit
var SLOPPY_METHOD = sloppyArrayMethod('sort');

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || SLOPPY_METHOD;

// `Array.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-array.prototype.sort
$({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? nativeSort.call(toObject(this))
      : nativeSort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.array.unscopables.flat-map.js":
/*!************************************************************************!*\
  !*** ../node_modules/core-js/modules/es.array.unscopables.flat-map.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../node_modules/core-js/internals/add-to-unscopables.js");

addToUnscopables('flatMap');


/***/ }),

/***/ "../node_modules/core-js/modules/es.array.unscopables.flat.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.array.unscopables.flat.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../node_modules/core-js/internals/add-to-unscopables.js");

addToUnscopables('flat');


/***/ }),

/***/ "../node_modules/core-js/modules/es.number.parse-float.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es.number.parse-float.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var parseFloat = __webpack_require__(/*! ../internals/parse-float */ "../node_modules/core-js/internals/parse-float.js");

// `Number.parseFloat` method
// https://tc39.github.io/ecma262/#sec-number.parseFloat
$({ target: 'Number', stat: true, forced: Number.parseFloat != parseFloat }, {
  parseFloat: parseFloat
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.object.define-getter.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es.object.define-getter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");

// `Object.prototype.__defineGetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__defineGetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __defineGetter__: function __defineGetter__(P, getter) {
      definePropertyModule.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es.object.define-setter.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es.object.define-setter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js");

// `Object.prototype.__defineSetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__defineSetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __defineSetter__: function __defineSetter__(P, setter) {
      definePropertyModule.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es.object.from-entries.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es.object.from-entries.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../node_modules/core-js/internals/iterate.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../node_modules/core-js/internals/create-property.js");

// `Object.fromEntries` method
// https://github.com/tc39/proposal-object-from-entries
$({ target: 'Object', stat: true }, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function (k, v) {
      createProperty(obj, k, v);
    }, undefined, true);
    return obj;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.object.lookup-getter.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es.object.lookup-getter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../node_modules/core-js/internals/to-primitive.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../node_modules/core-js/internals/object-get-own-property-descriptor.js").f;

// `Object.prototype.__lookupGetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__lookupGetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupGetter__: function __lookupGetter__(P) {
      var O = toObject(this);
      var key = toPrimitive(P, true);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.get;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es.object.lookup-setter.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es.object.lookup-setter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../node_modules/core-js/internals/to-primitive.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../node_modules/core-js/internals/object-get-own-property-descriptor.js").f;

// `Object.prototype.__lookupSetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__lookupSetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupSetter__: function __lookupSetter__(P) {
      var O = toObject(this);
      var key = toPrimitive(P, true);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.set;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es.promise.finally.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es.promise.finally.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../node_modules/core-js/internals/get-built-in.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../node_modules/core-js/internals/species-constructor.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../node_modules/core-js/internals/promise-resolve.js");

// `Promise.prototype.finally` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.finally
$({ target: 'Promise', proto: true, real: true }, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = typeof onFinally == 'function';
    return this.then(
      isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.promise.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/es.promise.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var path = __webpack_require__(/*! ../internals/path */ "../node_modules/core-js/internals/path.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../node_modules/core-js/internals/redefine-all.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../node_modules/core-js/internals/set-to-string-tag.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../node_modules/core-js/internals/set-species.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../node_modules/core-js/internals/a-function.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../node_modules/core-js/internals/an-instance.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../node_modules/core-js/internals/classof-raw.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../node_modules/core-js/internals/iterate.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../node_modules/core-js/internals/check-correctness-of-iteration.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../node_modules/core-js/internals/species-constructor.js");
var task = __webpack_require__(/*! ../internals/task */ "../node_modules/core-js/internals/task.js").set;
var microtask = __webpack_require__(/*! ../internals/microtask */ "../node_modules/core-js/internals/microtask.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../node_modules/core-js/internals/promise-resolve.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "../node_modules/core-js/internals/host-report-errors.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../node_modules/core-js/internals/perform.js");
var userAgent = __webpack_require__(/*! ../internals/user-agent */ "../node_modules/core-js/internals/user-agent.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../node_modules/core-js/internals/is-forced.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = global[PROMISE];
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = global.fetch;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var IS_NODE = classof(process) == 'process';
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper;

var FORCED = isForced(PROMISE, function () {
  // correct subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var empty = function () { /* empty */ };
  var FakePromise = (promise.constructor = {})[SPECIES] = function (exec) {
    exec(empty, empty);
  };
  // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  return !((IS_NODE || typeof PromiseRejectionEvent == 'function')
    && (!IS_PURE || promise['finally'])
    && promise.then(empty) instanceof FakePromise
    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // we can't detect it synchronously, so just check versions
    && v8.indexOf('6.6') !== 0
    && userAgent.indexOf('Chrome/66') === -1);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (promise, state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(promise, state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (handler = global['on' + name]) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (promise, state) {
  task.call(global, function () {
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (promise, state) {
  task.call(global, function () {
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, promise, state, unwrap) {
  return function (value) {
    fn(promise, state, value, unwrap);
  };
};

var internalReject = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(promise, state, true);
};

var internalResolve = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, promise, wrapper, state),
            bind(internalReject, promise, wrapper, state)
          );
        } catch (error) {
          internalReject(promise, wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(promise, state, false);
    }
  } catch (error) {
    internalReject(promise, { done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, this, state), bind(internalReject, this, state));
    } catch (error) {
      internalReject(this, state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(this, state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, promise, state);
    this.reject = bind(internalReject, promise, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  // wrap fetch result
  if (!IS_PURE && typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
    // eslint-disable-next-line no-unused-vars
    fetch: function fetch(input) {
      return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
    }
  });
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = path[PROMISE];

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.github.io/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.github.io/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.github.io/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.github.io/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.string.iterator.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es.string.iterator.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__(/*! ../internals/string-multibyte */ "../node_modules/core-js/internals/string-multibyte.js").charAt;
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../node_modules/core-js/internals/define-iterator.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.string.pad-end.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es.string.pad-end.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var $padEnd = __webpack_require__(/*! ../internals/string-pad */ "../node_modules/core-js/internals/string-pad.js").end;
var WEBKIT_BUG = __webpack_require__(/*! ../internals/webkit-string-pad-bug */ "../node_modules/core-js/internals/webkit-string-pad-bug.js");

// `String.prototype.padEnd` method
// https://tc39.github.io/ecma262/#sec-string.prototype.padend
$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.string.pad-start.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es.string.pad-start.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var $padStart = __webpack_require__(/*! ../internals/string-pad */ "../node_modules/core-js/internals/string-pad.js").start;
var WEBKIT_BUG = __webpack_require__(/*! ../internals/webkit-string-pad-bug */ "../node_modules/core-js/internals/webkit-string-pad-bug.js");

// `String.prototype.padStart` method
// https://tc39.github.io/ecma262/#sec-string.prototype.padstart
$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.string.replace.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es.string.replace.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../node_modules/core-js/internals/to-integer.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../node_modules/core-js/internals/advance-string-index.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../node_modules/core-js/internals/regexp-exec-abstract.js");

var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
      return replacer !== undefined
        ? replacer.call(searchValue, O, replaceValue)
        : nativeReplace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);

      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        results.push(result);
        if (!global) break;

        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

  // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return nativeReplace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.string.trim-end.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es.string.trim-end.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var $trimEnd = __webpack_require__(/*! ../internals/string-trim */ "../node_modules/core-js/internals/string-trim.js").end;
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/forced-string-trim-method */ "../node_modules/core-js/internals/forced-string-trim-method.js");

var FORCED = forcedStringTrimMethod('trimEnd');

var trimEnd = FORCED ? function trimEnd() {
  return $trimEnd(this);
} : ''.trimEnd;

// `String.prototype.{ trimEnd, trimRight }` methods
// https://github.com/tc39/ecmascript-string-left-right-trim
$({ target: 'String', proto: true, forced: FORCED }, {
  trimEnd: trimEnd,
  trimRight: trimEnd
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.string.trim-start.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es.string.trim-start.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var $trimStart = __webpack_require__(/*! ../internals/string-trim */ "../node_modules/core-js/internals/string-trim.js").start;
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/forced-string-trim-method */ "../node_modules/core-js/internals/forced-string-trim-method.js");

var FORCED = forcedStringTrimMethod('trimStart');

var trimStart = FORCED ? function trimStart() {
  return $trimStart(this);
} : ''.trimStart;

// `String.prototype.{ trimStart, trimLeft }` methods
// https://github.com/tc39/ecmascript-string-left-right-trim
$({ target: 'String', proto: true, forced: FORCED }, {
  trimStart: trimStart,
  trimLeft: trimStart
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.string.trim.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es.string.trim.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var $trim = __webpack_require__(/*! ../internals/string-trim */ "../node_modules/core-js/internals/string-trim.js").trim;
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/forced-string-trim-method */ "../node_modules/core-js/internals/forced-string-trim-method.js");

// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.symbol.async-iterator.js":
/*!*******************************************************************!*\
  !*** ../node_modules/core-js/modules/es.symbol.async-iterator.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.asyncIterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.asynciterator
defineWellKnownSymbol('asyncIterator');


/***/ }),

/***/ "../node_modules/core-js/modules/es.symbol.description.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es.symbol.description.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../node_modules/core-js/internals/object-define-property.js").f;
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../node_modules/core-js/internals/copy-constructor-properties.js");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.float32-array.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.float32-array.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Float32Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.float64-array.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.float64-array.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Float64Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.from.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.from.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-arrays-constructors-requires-wrappers */ "../node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../node_modules/core-js/internals/array-buffer-view-core.js");
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../node_modules/core-js/internals/typed-array-from.js");

// `%TypedArray%.from` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.from
ArrayBufferViewCore.exportStatic('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.int16-array.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.int16-array.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Int16Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.int32-array.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.int32-array.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Int32Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.int8-array.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.int8-array.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Int8Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.of.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.of.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../node_modules/core-js/internals/array-buffer-view-core.js");
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-arrays-constructors-requires-wrappers */ "../node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js");

var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;

// `%TypedArray%.of` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.of
ArrayBufferViewCore.exportStatic('of', function of(/* ...items */) {
  var index = 0;
  var length = arguments.length;
  var result = new (aTypedArrayConstructor(this))(length);
  while (length > index) result[index] = arguments[index++];
  return result;
}, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.uint16-array.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.uint16-array.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Uint16Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.uint32-array.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.uint32-array.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Uint32Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.uint8-array.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.uint8-array.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Uint8Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var typedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../node_modules/core-js/internals/typed-array-constructor.js");

// `Uint8ClampedArray` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
typedArrayConstructor('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);


/***/ }),

/***/ "../node_modules/core-js/modules/web.dom-collections.for-each.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/modules/web.dom-collections.for-each.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "../node_modules/core-js/internals/dom-iterables.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "../node_modules/core-js/internals/array-for-each.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    hide(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "../node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "../node_modules/core-js/internals/dom-iterables.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "../node_modules/core-js/modules/es.array.iterator.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../node_modules/core-js/internals/hide.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      hide(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) hide(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        hide(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "../node_modules/core-js/modules/web.immediate.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/web.immediate.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var task = __webpack_require__(/*! ../internals/task */ "../node_modules/core-js/internals/task.js");

var FORCED = !global.setImmediate || !global.clearImmediate;

// http://w3c.github.io/setImmediate/
__webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js")({ global: true, bind: true, enumerable: true, forced: FORCED }, {
  // `setImmediate` method
  // http://w3c.github.io/setImmediate/#si-setImmediate
  setImmediate: task.set,
  // `clearImmediate` method
  // http://w3c.github.io/setImmediate/#si-clearImmediate
  clearImmediate: task.clear
});


/***/ }),

/***/ "../node_modules/core-js/modules/web.queue-microtask.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/web.queue-microtask.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var microtask = __webpack_require__(/*! ../internals/microtask */ "../node_modules/core-js/internals/microtask.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../node_modules/core-js/internals/classof-raw.js");

var process = global.process;
var isNode = classof(process) == 'process';

// `queueMicrotask` method
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask
$({ global: true, enumerable: true, noTargetGet: true }, {
  queueMicrotask: function queueMicrotask(fn) {
    var domain = isNode && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/web.url-search-params.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/web.url-search-params.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.array.iterator */ "../node_modules/core-js/modules/es.array.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/native-url */ "../node_modules/core-js/internals/native-url.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../node_modules/core-js/internals/redefine.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../node_modules/core-js/internals/redefine-all.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../node_modules/core-js/internals/set-to-string-tag.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../node_modules/core-js/internals/create-iterator-constructor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../node_modules/core-js/internals/an-instance.js");
var hasOwn = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../node_modules/core-js/internals/bind-context.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../node_modules/core-js/internals/is-object.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../node_modules/core-js/internals/get-iterator-method.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState = InternalStateModule.set;
var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);

var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function (bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function (sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function (it) {
  var result = it.replace(plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = result.replace(percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};

var find = /[!'()~]|%20/g;

var replace = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function (match) {
  return replace[match];
};

var serialize = function (it) {
  return encodeURIComponent(it).replace(find, replacer);
};

var parseSearchParams = function (result, query) {
  if (query) {
    var attributes = query.split('&');
    var index = 0;
    var attribute, entry;
    while (index < attributes.length) {
      attribute = attributes[index++];
      if (attribute.length) {
        entry = attribute.split('=');
        result.push({
          key: deserialize(entry.shift()),
          value: deserialize(entry.join('='))
        });
      }
    }
  }
};

var updateSearchParams = function (query) {
  this.entries.length = 0;
  parseSearchParams(this.entries, query);
};

var validateArgumentsLength = function (passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
};

var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
});

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  var that = this;
  var entries = [];
  var iteratorMethod, iterator, step, entryIterator, first, second, key;

  setInternalState(that, {
    type: URL_SEARCH_PARAMS,
    entries: entries,
    updateURL: function () { /* empty */ },
    updateSearchParams: updateSearchParams
  });

  if (init !== undefined) {
    if (isObject(init)) {
      iteratorMethod = getIteratorMethod(init);
      if (typeof iteratorMethod === 'function') {
        iterator = iteratorMethod.call(init);
        while (!(step = iterator.next()).done) {
          entryIterator = getIterator(anObject(step.value));
          if (
            (first = entryIterator.next()).done ||
            (second = entryIterator.next()).done ||
            !entryIterator.next().done
          ) throw TypeError('Expected sequence with length 2');
          entries.push({ key: first.value + '', value: second.value + '' });
        }
      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });
    } else {
      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');
    }
  }
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

redefineAll(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.appent` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    state.entries.push({ key: name + '', value: value + '' });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = name + '';
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) entries.splice(index, 1);
      else index++;
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) result.push(entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = name + '';
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = name + '';
    var val = value + '';
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) entries.splice(index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) entries.push({ key: key, value: val });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    var entries = state.entries;
    // Array#sort is not stable in some engines
    var slice = entries.slice();
    var entry, entriesIndex, sliceIndex;
    entries.length = 0;
    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {
      entry = slice[sliceIndex];
      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {
        if (entries[entriesIndex].key > entry.key) {
          entries.splice(entriesIndex, 0, entry);
          break;
        }
      }
      if (entriesIndex === sliceIndex) entries.push(entry);
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
redefine(URLSearchParamsPrototype, 'toString', function toString() {
  var entries = getInternalParamsState(this).entries;
  var result = [];
  var index = 0;
  var entry;
  while (index < entries.length) {
    entry = entries[index++];
    result.push(serialize(entry.key) + '=' + serialize(entry.value));
  } return result.join('&');
}, { enumerable: true });

setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

$({ global: true, forced: !USE_NATIVE_URL }, {
  URLSearchParams: URLSearchParamsConstructor
});

module.exports = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};


/***/ }),

/***/ "../node_modules/core-js/modules/web.url.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/web.url.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.string.iterator */ "../node_modules/core-js/modules/es.string.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../node_modules/core-js/internals/descriptors.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/native-url */ "../node_modules/core-js/internals/native-url.js");
var global = __webpack_require__(/*! ../internals/global */ "../node_modules/core-js/internals/global.js");
var defineProperties = __webpack_require__(/*! ../internals/object-define-properties */ "../node_modules/core-js/internals/object-define-properties.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../node_modules/core-js/internals/redefine.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../node_modules/core-js/internals/an-instance.js");
var has = __webpack_require__(/*! ../internals/has */ "../node_modules/core-js/internals/has.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "../node_modules/core-js/internals/object-assign.js");
var arrayFrom = __webpack_require__(/*! ../internals/array-from */ "../node_modules/core-js/internals/array-from.js");
var codeAt = __webpack_require__(/*! ../internals/string-multibyte */ "../node_modules/core-js/internals/string-multibyte.js").codeAt;
var toASCII = __webpack_require__(/*! ../internals/punycode-to-ascii */ "../node_modules/core-js/internals/punycode-to-ascii.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../node_modules/core-js/internals/set-to-string-tag.js");
var URLSearchParamsModule = __webpack_require__(/*! ../modules/web.url-search-params */ "../node_modules/core-js/modules/web.url-search-params.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../node_modules/core-js/internals/internal-state.js");

var NativeURL = global.URL;
var URLSearchParams = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;
var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var floor = Math.floor;
var pow = Math.pow;

var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';

var ALPHA = /[A-Za-z]/;
var ALPHANUMERIC = /[\d+\-.A-Za-z]/;
var DIGIT = /\d/;
var HEX_START = /^(0x|0X)/;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\dA-Fa-f]+$/;
// eslint-disable-next-line no-control-regex
var FORBIDDEN_HOST_CODE_POINT = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/;
// eslint-disable-next-line no-control-regex
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/;
// eslint-disable-next-line no-control-regex
var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g;
// eslint-disable-next-line no-control-regex
var TAB_AND_NEW_LINE = /[\u0009\u000A\u000D]/g;
var EOF;

var parseHost = function (url, input) {
  var result, codePoints, index;
  if (input.charAt(0) == '[') {
    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;
    result = parseIPv6(input.slice(1, -1));
    if (!result) return INVALID_HOST;
    url.host = result;
  // opaque host
  } else if (!isSpecial(url)) {
    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;
    result = '';
    codePoints = arrayFrom(input);
    for (index = 0; index < codePoints.length; index++) {
      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
    }
    url.host = result;
  } else {
    input = toASCII(input);
    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;
    result = parseIPv4(input);
    if (result === null) return INVALID_HOST;
    url.host = result;
  }
};

var parseIPv4 = function (input) {
  var parts = input.split('.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] == '') {
    parts.pop();
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;
    if (part.length > 1 && part.charAt(0) == '0') {
      radix = HEX_START.test(part) ? 16 : 8;
      part = part.slice(radix == 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;
      number = parseInt(part, radix);
    }
    numbers.push(number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = numbers.pop();
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// eslint-disable-next-line max-statements
var parseIPv6 = function (input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var char = function () {
    return input.charAt(pointer);
  };

  if (char() == ':') {
    if (input.charAt(1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (char()) {
    if (pieceIndex == 8) return;
    if (char() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && HEX.test(char())) {
      value = value * 16 + parseInt(char(), 16);
      pointer++;
      length++;
    }
    if (char() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (char()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (char() == '.' && numbersSeen < 4) pointer++;
          else return;
        }
        if (!DIGIT.test(char())) return;
        while (DIGIT.test(char())) {
          number = parseInt(char(), 10);
          if (ipv4Piece === null) ipv4Piece = number;
          else if (ipv4Piece == 0) return;
          else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }
      if (numbersSeen != 4) return;
      break;
    } else if (char() == ':') {
      pointer++;
      if (!char()) return;
    } else if (char()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;
  return address;
};

var findLongestZeroSequence = function (ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

var serializeHost = function (host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      result.unshift(host % 256);
      host = floor(host / 256);
    } return result.join('.');
  // ipv6
  } else if (typeof host == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += host[index].toString(16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  } return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
  ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
});
var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
  '#': 1, '?': 1, '{': 1, '}': 1
});
var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
});

var percentEncode = function (char, set) {
  var code = codeAt(char, 0);
  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);
};

var specialSchemes = {
  ftp: 21,
  file: null,
  gopher: 70,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

var isSpecial = function (url) {
  return has(specialSchemes, url.scheme);
};

var includesCredentials = function (url) {
  return url.username != '' || url.password != '';
};

var cannotHaveUsernamePasswordPort = function (url) {
  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';
};

var isWindowsDriveLetter = function (string, normalized) {
  var second;
  return string.length == 2 && ALPHA.test(string.charAt(0))
    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));
};

var startsWithWindowsDriveLetter = function (string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (
    string.length == 2 ||
    ((third = string.charAt(2)) === '/' || third === '\\' || third === '?' || third === '#')
  );
};

var shortenURLsPath = function (url) {
  var path = url.path;
  var pathSize = path.length;
  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
    path.pop();
  }
};

var isSingleDot = function (segment) {
  return segment === '.' || segment.toLowerCase() === '%2e';
};

var isDoubleDot = function (segment) {
  segment = segment.toLowerCase();
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

// eslint-disable-next-line max-statements
var parseURL = function (url, input, stateOverride, base) {
  var state = stateOverride || SCHEME_START;
  var pointer = 0;
  var buffer = '';
  var seenAt = false;
  var seenBracket = false;
  var seenPasswordToken = false;
  var codePoints, char, bufferCodePoints, failure;

  if (!stateOverride) {
    url.scheme = '';
    url.username = '';
    url.password = '';
    url.host = null;
    url.port = null;
    url.path = [];
    url.query = null;
    url.fragment = null;
    url.cannotBeABaseURL = false;
    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
  }

  input = input.replace(TAB_AND_NEW_LINE, '');

  codePoints = arrayFrom(input);

  while (pointer <= codePoints.length) {
    char = codePoints[pointer];
    switch (state) {
      case SCHEME_START:
        if (char && ALPHA.test(char)) {
          buffer += char.toLowerCase();
          state = SCHEME;
        } else if (!stateOverride) {
          state = NO_SCHEME;
          continue;
        } else return INVALID_SCHEME;
        break;

      case SCHEME:
        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {
          buffer += char.toLowerCase();
        } else if (char == ':') {
          if (stateOverride && (
            (isSpecial(url) != has(specialSchemes, buffer)) ||
            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||
            (url.scheme == 'file' && !url.host)
          )) return;
          url.scheme = buffer;
          if (stateOverride) {
            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;
            return;
          }
          buffer = '';
          if (url.scheme == 'file') {
            state = FILE;
          } else if (isSpecial(url) && base && base.scheme == url.scheme) {
            state = SPECIAL_RELATIVE_OR_AUTHORITY;
          } else if (isSpecial(url)) {
            state = SPECIAL_AUTHORITY_SLASHES;
          } else if (codePoints[pointer + 1] == '/') {
            state = PATH_OR_AUTHORITY;
            pointer++;
          } else {
            url.cannotBeABaseURL = true;
            url.path.push('');
            state = CANNOT_BE_A_BASE_URL_PATH;
          }
        } else if (!stateOverride) {
          buffer = '';
          state = NO_SCHEME;
          pointer = 0;
          continue;
        } else return INVALID_SCHEME;
        break;

      case NO_SCHEME:
        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;
        if (base.cannotBeABaseURL && char == '#') {
          url.scheme = base.scheme;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          url.cannotBeABaseURL = true;
          state = FRAGMENT;
          break;
        }
        state = base.scheme == 'file' ? FILE : RELATIVE;
        continue;

      case SPECIAL_RELATIVE_OR_AUTHORITY:
        if (char == '/' && codePoints[pointer + 1] == '/') {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          pointer++;
        } else {
          state = RELATIVE;
          continue;
        } break;

      case PATH_OR_AUTHORITY:
        if (char == '/') {
          state = AUTHORITY;
          break;
        } else {
          state = PATH;
          continue;
        }

      case RELATIVE:
        url.scheme = base.scheme;
        if (char == EOF) {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
        } else if (char == '/' || (char == '\\' && isSpecial(url))) {
          state = RELATIVE_SLASH;
        } else if (char == '?') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = '';
          state = QUERY;
        } else if (char == '#') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          state = FRAGMENT;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.path.pop();
          state = PATH;
          continue;
        } break;

      case RELATIVE_SLASH:
        if (isSpecial(url) && (char == '/' || char == '\\')) {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        } else if (char == '/') {
          state = AUTHORITY;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          state = PATH;
          continue;
        } break;

      case SPECIAL_AUTHORITY_SLASHES:
        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;
        pointer++;
        break;

      case SPECIAL_AUTHORITY_IGNORE_SLASHES:
        if (char != '/' && char != '\\') {
          state = AUTHORITY;
          continue;
        } break;

      case AUTHORITY:
        if (char == '@') {
          if (seenAt) buffer = '%40' + buffer;
          seenAt = true;
          bufferCodePoints = arrayFrom(buffer);
          for (var i = 0; i < bufferCodePoints.length; i++) {
            var codePoint = bufferCodePoints[i];
            if (codePoint == ':' && !seenPasswordToken) {
              seenPasswordToken = true;
              continue;
            }
            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
            if (seenPasswordToken) url.password += encodedCodePoints;
            else url.username += encodedCodePoints;
          }
          buffer = '';
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url))
        ) {
          if (seenAt && buffer == '') return INVALID_AUTHORITY;
          pointer -= arrayFrom(buffer).length + 1;
          buffer = '';
          state = HOST;
        } else buffer += char;
        break;

      case HOST:
      case HOSTNAME:
        if (stateOverride && url.scheme == 'file') {
          state = FILE_HOST;
          continue;
        } else if (char == ':' && !seenBracket) {
          if (buffer == '') return INVALID_HOST;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PORT;
          if (stateOverride == HOSTNAME) return;
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url))
        ) {
          if (isSpecial(url) && buffer == '') return INVALID_HOST;
          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PATH_START;
          if (stateOverride) return;
          continue;
        } else {
          if (char == '[') seenBracket = true;
          else if (char == ']') seenBracket = false;
          buffer += char;
        } break;

      case PORT:
        if (DIGIT.test(char)) {
          buffer += char;
        } else if (
          char == EOF || char == '/' || char == '?' || char == '#' ||
          (char == '\\' && isSpecial(url)) ||
          stateOverride
        ) {
          if (buffer != '') {
            var port = parseInt(buffer, 10);
            if (port > 0xFFFF) return INVALID_PORT;
            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;
            buffer = '';
          }
          if (stateOverride) return;
          state = PATH_START;
          continue;
        } else return INVALID_PORT;
        break;

      case FILE:
        url.scheme = 'file';
        if (char == '/' || char == '\\') state = FILE_SLASH;
        else if (base && base.scheme == 'file') {
          if (char == EOF) {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
          } else if (char == '?') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = '';
            state = QUERY;
          } else if (char == '#') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
              url.host = base.host;
              url.path = base.path.slice();
              shortenURLsPath(url);
            }
            state = PATH;
            continue;
          }
        } else {
          state = PATH;
          continue;
        } break;

      case FILE_SLASH:
        if (char == '/' || char == '\\') {
          state = FILE_HOST;
          break;
        }
        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);
          else url.host = base.host;
        }
        state = PATH;
        continue;

      case FILE_HOST:
        if (char == EOF || char == '/' || char == '\\' || char == '?' || char == '#') {
          if (!stateOverride && isWindowsDriveLetter(buffer)) {
            state = PATH;
          } else if (buffer == '') {
            url.host = '';
            if (stateOverride) return;
            state = PATH_START;
          } else {
            failure = parseHost(url, buffer);
            if (failure) return failure;
            if (url.host == 'localhost') url.host = '';
            if (stateOverride) return;
            buffer = '';
            state = PATH_START;
          } continue;
        } else buffer += char;
        break;

      case PATH_START:
        if (isSpecial(url)) {
          state = PATH;
          if (char != '/' && char != '\\') continue;
        } else if (!stateOverride && char == '?') {
          url.query = '';
          state = QUERY;
        } else if (!stateOverride && char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          state = PATH;
          if (char != '/') continue;
        } break;

      case PATH:
        if (
          char == EOF || char == '/' ||
          (char == '\\' && isSpecial(url)) ||
          (!stateOverride && (char == '?' || char == '#'))
        ) {
          if (isDoubleDot(buffer)) {
            shortenURLsPath(url);
            if (char != '/' && !(char == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else if (isSingleDot(buffer)) {
            if (char != '/' && !(char == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else {
            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
              if (url.host) url.host = '';
              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter
            }
            url.path.push(buffer);
          }
          buffer = '';
          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {
            while (url.path.length > 1 && url.path[0] === '') {
              url.path.shift();
            }
          }
          if (char == '?') {
            url.query = '';
            state = QUERY;
          } else if (char == '#') {
            url.fragment = '';
            state = FRAGMENT;
          }
        } else {
          buffer += percentEncode(char, pathPercentEncodeSet);
        } break;

      case CANNOT_BE_A_BASE_URL_PATH:
        if (char == '?') {
          url.query = '';
          state = QUERY;
        } else if (char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);
        } break;

      case QUERY:
        if (!stateOverride && char == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (char != EOF) {
          if (char == "'" && isSpecial(url)) url.query += '%27';
          else if (char == '#') url.query += '%23';
          else url.query += percentEncode(char, C0ControlPercentEncodeSet);
        } break;

      case FRAGMENT:
        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);
        break;
    }

    pointer++;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance(this, URLConstructor, 'URL');
  var base = arguments.length > 1 ? arguments[1] : undefined;
  var urlString = String(url);
  var state = setInternalState(that, { type: 'URL' });
  var baseState, failure;
  if (base !== undefined) {
    if (base instanceof URLConstructor) baseState = getInternalURLState(base);
    else {
      failure = parseURL(baseState = {}, String(base));
      if (failure) throw TypeError(failure);
    }
  }
  failure = parseURL(state, urlString, null, baseState);
  if (failure) throw TypeError(failure);
  var searchParams = state.searchParams = new URLSearchParams();
  var searchParamsState = getInternalSearchParamsState(searchParams);
  searchParamsState.updateSearchParams(state.query);
  searchParamsState.updateURL = function () {
    state.query = String(searchParams) || null;
  };
  if (!DESCRIPTORS) {
    that.href = serializeURL.call(that);
    that.origin = getOrigin.call(that);
    that.protocol = getProtocol.call(that);
    that.username = getUsername.call(that);
    that.password = getPassword.call(that);
    that.host = getHost.call(that);
    that.hostname = getHostname.call(that);
    that.port = getPort.call(that);
    that.pathname = getPathname.call(that);
    that.search = getSearch.call(that);
    that.searchParams = getSearchParams.call(that);
    that.hash = getHash.call(that);
  }
};

var URLPrototype = URLConstructor.prototype;

var serializeURL = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var username = url.username;
  var password = url.password;
  var host = url.host;
  var port = url.port;
  var path = url.path;
  var query = url.query;
  var fragment = url.fragment;
  var output = scheme + ':';
  if (host !== null) {
    output += '//';
    if (includesCredentials(url)) {
      output += username + (password ? ':' + password : '') + '@';
    }
    output += serializeHost(host);
    if (port !== null) output += ':' + port;
  } else if (scheme == 'file') output += '//';
  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
  if (query !== null) output += '?' + query;
  if (fragment !== null) output += '#' + fragment;
  return output;
};

var getOrigin = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var port = url.port;
  if (scheme == 'blob') try {
    return new URL(scheme.path[0]).origin;
  } catch (error) {
    return 'null';
  }
  if (scheme == 'file' || !isSpecial(url)) return 'null';
  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');
};

var getProtocol = function () {
  return getInternalURLState(this).scheme + ':';
};

var getUsername = function () {
  return getInternalURLState(this).username;
};

var getPassword = function () {
  return getInternalURLState(this).password;
};

var getHost = function () {
  var url = getInternalURLState(this);
  var host = url.host;
  var port = url.port;
  return host === null ? ''
    : port === null ? serializeHost(host)
    : serializeHost(host) + ':' + port;
};

var getHostname = function () {
  var host = getInternalURLState(this).host;
  return host === null ? '' : serializeHost(host);
};

var getPort = function () {
  var port = getInternalURLState(this).port;
  return port === null ? '' : String(port);
};

var getPathname = function () {
  var url = getInternalURLState(this);
  var path = url.path;
  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
};

var getSearch = function () {
  var query = getInternalURLState(this).query;
  return query ? '?' + query : '';
};

var getSearchParams = function () {
  return getInternalURLState(this).searchParams;
};

var getHash = function () {
  var fragment = getInternalURLState(this).fragment;
  return fragment ? '#' + fragment : '';
};

var accessorDescriptor = function (getter, setter) {
  return { get: getter, set: setter, configurable: true, enumerable: true };
};

if (DESCRIPTORS) {
  defineProperties(URLPrototype, {
    // `URL.prototype.href` accessors pair
    // https://url.spec.whatwg.org/#dom-url-href
    href: accessorDescriptor(serializeURL, function (href) {
      var url = getInternalURLState(this);
      var urlString = String(href);
      var failure = parseURL(url, urlString);
      if (failure) throw TypeError(failure);
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.origin` getter
    // https://url.spec.whatwg.org/#dom-url-origin
    origin: accessorDescriptor(getOrigin),
    // `URL.prototype.protocol` accessors pair
    // https://url.spec.whatwg.org/#dom-url-protocol
    protocol: accessorDescriptor(getProtocol, function (protocol) {
      var url = getInternalURLState(this);
      parseURL(url, String(protocol) + ':', SCHEME_START);
    }),
    // `URL.prototype.username` accessors pair
    // https://url.spec.whatwg.org/#dom-url-username
    username: accessorDescriptor(getUsername, function (username) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom(String(username));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.username = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.password` accessors pair
    // https://url.spec.whatwg.org/#dom-url-password
    password: accessorDescriptor(getPassword, function (password) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom(String(password));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.password = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.host` accessors pair
    // https://url.spec.whatwg.org/#dom-url-host
    host: accessorDescriptor(getHost, function (host) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, String(host), HOST);
    }),
    // `URL.prototype.hostname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hostname
    hostname: accessorDescriptor(getHostname, function (hostname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, String(hostname), HOSTNAME);
    }),
    // `URL.prototype.port` accessors pair
    // https://url.spec.whatwg.org/#dom-url-port
    port: accessorDescriptor(getPort, function (port) {
      var url = getInternalURLState(this);
      if (cannotHaveUsernamePasswordPort(url)) return;
      port = String(port);
      if (port == '') url.port = null;
      else parseURL(url, port, PORT);
    }),
    // `URL.prototype.pathname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-pathname
    pathname: accessorDescriptor(getPathname, function (pathname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      url.path = [];
      parseURL(url, pathname + '', PATH_START);
    }),
    // `URL.prototype.search` accessors pair
    // https://url.spec.whatwg.org/#dom-url-search
    search: accessorDescriptor(getSearch, function (search) {
      var url = getInternalURLState(this);
      search = String(search);
      if (search == '') {
        url.query = null;
      } else {
        if ('?' == search.charAt(0)) search = search.slice(1);
        url.query = '';
        parseURL(url, search, QUERY);
      }
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.searchParams` getter
    // https://url.spec.whatwg.org/#dom-url-searchparams
    searchParams: accessorDescriptor(getSearchParams),
    // `URL.prototype.hash` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hash
    hash: accessorDescriptor(getHash, function (hash) {
      var url = getInternalURLState(this);
      hash = String(hash);
      if (hash == '') {
        url.fragment = null;
        return;
      }
      if ('#' == hash.charAt(0)) hash = hash.slice(1);
      url.fragment = '';
      parseURL(url, hash, FRAGMENT);
    })
  });
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
redefine(URLPrototype, 'toJSON', function toJSON() {
  return serializeURL.call(this);
}, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
redefine(URLPrototype, 'toString', function toString() {
  return serializeURL.call(this);
}, { enumerable: true });

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  // eslint-disable-next-line no-unused-vars
  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {
    return nativeCreateObjectURL.apply(NativeURL, arguments);
  });
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  // eslint-disable-next-line no-unused-vars
  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {
    return nativeRevokeObjectURL.apply(NativeURL, arguments);
  });
}

setToStringTag(URLConstructor, 'URL');

$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
  URL: URLConstructor
});


/***/ }),

/***/ "../node_modules/core-js/modules/web.url.to-json.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/web.url.to-json.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../node_modules/core-js/internals/export.js");

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
$({ target: 'URL', proto: true, enumerable: true }, {
  toJSON: function toJSON() {
    return URL.prototype.toString.call(this);
  }
});


/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix.js":
/*!**************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix.js ***!
  \**************************************************/
/*! exports provided: glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _gl_matrix_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gl-matrix/common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "glMatrix", function() { return _gl_matrix_common_js__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _gl_matrix_mat2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gl-matrix/mat2.js */ "../node_modules/gl-matrix/lib/gl-matrix/mat2.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat2", function() { return _gl_matrix_mat2_js__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _gl_matrix_mat2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gl-matrix/mat2d.js */ "../node_modules/gl-matrix/lib/gl-matrix/mat2d.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat2d", function() { return _gl_matrix_mat2d_js__WEBPACK_IMPORTED_MODULE_2__; });
/* harmony import */ var _gl_matrix_mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gl-matrix/mat3.js */ "../node_modules/gl-matrix/lib/gl-matrix/mat3.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat3", function() { return _gl_matrix_mat3_js__WEBPACK_IMPORTED_MODULE_3__; });
/* harmony import */ var _gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gl-matrix/mat4.js */ "../node_modules/gl-matrix/lib/gl-matrix/mat4.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "mat4", function() { return _gl_matrix_mat4_js__WEBPACK_IMPORTED_MODULE_4__; });
/* harmony import */ var _gl_matrix_quat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gl-matrix/quat.js */ "../node_modules/gl-matrix/lib/gl-matrix/quat.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "quat", function() { return _gl_matrix_quat_js__WEBPACK_IMPORTED_MODULE_5__; });
/* harmony import */ var _gl_matrix_quat2_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gl-matrix/quat2.js */ "../node_modules/gl-matrix/lib/gl-matrix/quat2.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "quat2", function() { return _gl_matrix_quat2_js__WEBPACK_IMPORTED_MODULE_6__; });
/* harmony import */ var _gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gl-matrix/vec2.js */ "../node_modules/gl-matrix/lib/gl-matrix/vec2.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "vec2", function() { return _gl_matrix_vec2_js__WEBPACK_IMPORTED_MODULE_7__; });
/* harmony import */ var _gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gl-matrix/vec3.js */ "../node_modules/gl-matrix/lib/gl-matrix/vec3.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "vec3", function() { return _gl_matrix_vec3_js__WEBPACK_IMPORTED_MODULE_8__; });
/* harmony import */ var _gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./gl-matrix/vec4.js */ "../node_modules/gl-matrix/lib/gl-matrix/vec4.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "vec4", function() { return _gl_matrix_vec4_js__WEBPACK_IMPORTED_MODULE_9__; });













/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/common.js":
/*!*********************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/common.js ***!
  \*********************************************************/
/*! exports provided: EPSILON, ARRAY_TYPE, RANDOM, setMatrixArrayType, toRadian, equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EPSILON", function() { return EPSILON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ARRAY_TYPE", function() { return ARRAY_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RANDOM", function() { return RANDOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMatrixArrayType", function() { return setMatrixArrayType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toRadian", function() { return toRadian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/**
 * Common utilities
 * @module glMatrix
 */

// Configuration Constants
var EPSILON = 0.000001;
var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;
var RANDOM = Math.random;

/**
 * Sets the type of array used when creating new vectors and matrices
 *
 * @param {Type} type Array type, such as Float32Array or Array
 */
function setMatrixArrayType(type) {
  ARRAY_TYPE = type;
}

var degree = Math.PI / 180;

/**
 * Convert Degree To Radian
 *
 * @param {Number} a Angle in Degrees
 */
function toRadian(a) {
  return a * degree;
}

/**
 * Tests whether or not the arguments have approximately the same value, within an absolute
 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less
 * than or equal to 1.0, and a relative tolerance is used for larger values)
 *
 * @param {Number} a The first number to test.
 * @param {Number} b The second number to test.
 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
 */
function equals(a, b) {
  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));
}

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/mat2.js":
/*!*******************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/mat2.js ***!
  \*******************************************************/
/*! exports provided: create, clone, copy, identity, fromValues, set, transpose, invert, adjoint, determinant, multiply, rotate, scale, fromRotation, fromScaling, str, frob, LDU, add, subtract, exactEquals, equals, multiplyScalar, multiplyScalarAndAdd, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjoint", function() { return adjoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LDU", function() { return LDU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");


/**
 * 2x2 Matrix
 * @module mat2
 */

/**
 * Creates a new identity mat2
 *
 * @returns {mat2} a new 2x2 matrix
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
  }
  out[0] = 1;
  out[3] = 1;
  return out;
}

/**
 * Creates a new mat2 initialized with values from an existing matrix
 *
 * @param {mat2} a matrix to clone
 * @returns {mat2} a new 2x2 matrix
 */
function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}

/**
 * Copy the values from one mat2 to another
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}

/**
 * Set a mat2 to the identity matrix
 *
 * @param {mat2} out the receiving matrix
 * @returns {mat2} out
 */
function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  return out;
}

/**
 * Create a new mat2 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out A new 2x2 matrix
 */
function fromValues(m00, m01, m10, m11) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = m00;
  out[1] = m01;
  out[2] = m10;
  out[3] = m11;
  return out;
}

/**
 * Set the components of a mat2 to the given values
 *
 * @param {mat2} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out
 */
function set(out, m00, m01, m10, m11) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m10;
  out[3] = m11;
  return out;
}

/**
 * Transpose the values of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache
  // some values
  if (out === a) {
    var a1 = a[1];
    out[1] = a[2];
    out[2] = a1;
  } else {
    out[0] = a[0];
    out[1] = a[2];
    out[2] = a[1];
    out[3] = a[3];
  }

  return out;
}

/**
 * Inverts a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
function invert(out, a) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];

  // Calculate the determinant
  var det = a0 * a3 - a2 * a1;

  if (!det) {
    return null;
  }
  det = 1.0 / det;

  out[0] = a3 * det;
  out[1] = -a1 * det;
  out[2] = -a2 * det;
  out[3] = a0 * det;

  return out;
}

/**
 * Calculates the adjugate of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the source matrix
 * @returns {mat2} out
 */
function adjoint(out, a) {
  // Caching this value is nessecary if out == a
  var a0 = a[0];
  out[0] = a[3];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a0;

  return out;
}

/**
 * Calculates the determinant of a mat2
 *
 * @param {mat2} a the source matrix
 * @returns {Number} determinant of a
 */
function determinant(a) {
  return a[0] * a[3] - a[2] * a[1];
}

/**
 * Multiplies two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
function multiply(out, a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  out[0] = a0 * b0 + a2 * b1;
  out[1] = a1 * b0 + a3 * b1;
  out[2] = a0 * b2 + a2 * b3;
  out[3] = a1 * b2 + a3 * b3;
  return out;
}

/**
 * Rotates a mat2 by the given angle
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */
function rotate(out, a, rad) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = a0 * c + a2 * s;
  out[1] = a1 * c + a3 * s;
  out[2] = a0 * -s + a2 * c;
  out[3] = a1 * -s + a3 * c;
  return out;
}

/**
 * Scales the mat2 by the dimensions in the given vec2
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to rotate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat2} out
 **/
function scale(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0 * v0;
  out[1] = a1 * v0;
  out[2] = a2 * v1;
  out[3] = a3 * v1;
  return out;
}

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.rotate(dest, dest, rad);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */
function fromRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = -s;
  out[3] = c;
  return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.scale(dest, dest, vec);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat2} out
 */
function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = v[1];
  return out;
}

/**
 * Returns a string representation of a mat2
 *
 * @param {mat2} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
function str(a) {
  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
}

/**
 * Returns Frobenius norm of a mat2
 *
 * @param {mat2} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
function frob(a) {
  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));
}

/**
 * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix
 * @param {mat2} L the lower triangular matrix
 * @param {mat2} D the diagonal matrix
 * @param {mat2} U the upper triangular matrix
 * @param {mat2} a the input matrix to factorize
 */

function LDU(L, D, U, a) {
  L[2] = a[2] / a[0];
  U[0] = a[0];
  U[1] = a[1];
  U[3] = a[3] - L[2] * U[1];
  return [L, D, U];
}

/**
 * Adds two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  return out;
}

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @returns {mat2} out
 */
function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  return out;
}

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat2} a The first matrix.
 * @param {mat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
}

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat2} a The first matrix.
 * @param {mat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));
}

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2} out the receiving matrix
 * @param {mat2} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2} out
 */
function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  return out;
}

/**
 * Adds two mat2's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2} out the receiving vector
 * @param {mat2} a the first operand
 * @param {mat2} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2} out
 */
function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  return out;
}

/**
 * Alias for {@link mat2.multiply}
 * @function
 */
var mul = multiply;

/**
 * Alias for {@link mat2.subtract}
 * @function
 */
var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/mat2d.js":
/*!********************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/mat2d.js ***!
  \********************************************************/
/*! exports provided: create, clone, copy, identity, fromValues, set, invert, determinant, multiply, rotate, scale, translate, fromRotation, fromScaling, fromTranslation, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");


/**
 * 2x3 Matrix
 * @module mat2d
 *
 * @description
 * A mat2d contains six elements defined as:
 * <pre>
 * [a, c, tx,
 *  b, d, ty]
 * </pre>
 * This is a short form for the 3x3 matrix:
 * <pre>
 * [a, c, tx,
 *  b, d, ty,
 *  0, 0, 1]
 * </pre>
 * The last row is ignored so the array is shorter and operations are faster.
 */

/**
 * Creates a new identity mat2d
 *
 * @returns {mat2d} a new 2x3 matrix
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](6);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[4] = 0;
    out[5] = 0;
  }
  out[0] = 1;
  out[3] = 1;
  return out;
}

/**
 * Creates a new mat2d initialized with values from an existing matrix
 *
 * @param {mat2d} a matrix to clone
 * @returns {mat2d} a new 2x3 matrix
 */
function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](6);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
}

/**
 * Copy the values from one mat2d to another
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the source matrix
 * @returns {mat2d} out
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
}

/**
 * Set a mat2d to the identity matrix
 *
 * @param {mat2d} out the receiving matrix
 * @returns {mat2d} out
 */
function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = 0;
  out[5] = 0;
  return out;
}

/**
 * Create a new mat2d with the given values
 *
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} A new mat2d
 */
function fromValues(a, b, c, d, tx, ty) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](6);
  out[0] = a;
  out[1] = b;
  out[2] = c;
  out[3] = d;
  out[4] = tx;
  out[5] = ty;
  return out;
}

/**
 * Set the components of a mat2d to the given values
 *
 * @param {mat2d} out the receiving matrix
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} out
 */
function set(out, a, b, c, d, tx, ty) {
  out[0] = a;
  out[1] = b;
  out[2] = c;
  out[3] = d;
  out[4] = tx;
  out[5] = ty;
  return out;
}

/**
 * Inverts a mat2d
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the source matrix
 * @returns {mat2d} out
 */
function invert(out, a) {
  var aa = a[0],
      ab = a[1],
      ac = a[2],
      ad = a[3];
  var atx = a[4],
      aty = a[5];

  var det = aa * ad - ab * ac;
  if (!det) {
    return null;
  }
  det = 1.0 / det;

  out[0] = ad * det;
  out[1] = -ab * det;
  out[2] = -ac * det;
  out[3] = aa * det;
  out[4] = (ac * aty - ad * atx) * det;
  out[5] = (ab * atx - aa * aty) * det;
  return out;
}

/**
 * Calculates the determinant of a mat2d
 *
 * @param {mat2d} a the source matrix
 * @returns {Number} determinant of a
 */
function determinant(a) {
  return a[0] * a[3] - a[1] * a[2];
}

/**
 * Multiplies two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
function multiply(out, a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5];
  out[0] = a0 * b0 + a2 * b1;
  out[1] = a1 * b0 + a3 * b1;
  out[2] = a0 * b2 + a2 * b3;
  out[3] = a1 * b2 + a3 * b3;
  out[4] = a0 * b4 + a2 * b5 + a4;
  out[5] = a1 * b4 + a3 * b5 + a5;
  return out;
}

/**
 * Rotates a mat2d by the given angle
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */
function rotate(out, a, rad) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = a0 * c + a2 * s;
  out[1] = a1 * c + a3 * s;
  out[2] = a0 * -s + a2 * c;
  out[3] = a1 * -s + a3 * c;
  out[4] = a4;
  out[5] = a5;
  return out;
}

/**
 * Scales the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to translate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat2d} out
 **/
function scale(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0 * v0;
  out[1] = a1 * v0;
  out[2] = a2 * v1;
  out[3] = a3 * v1;
  out[4] = a4;
  out[5] = a5;
  return out;
}

/**
 * Translates the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to translate
 * @param {vec2} v the vec2 to translate the matrix by
 * @returns {mat2d} out
 **/
function translate(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0;
  out[1] = a1;
  out[2] = a2;
  out[3] = a3;
  out[4] = a0 * v0 + a2 * v1 + a4;
  out[5] = a1 * v0 + a3 * v1 + a5;
  return out;
}

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.rotate(dest, dest, rad);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */
function fromRotation(out, rad) {
  var s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = -s;
  out[3] = c;
  out[4] = 0;
  out[5] = 0;
  return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.scale(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat2d} out
 */
function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = v[1];
  out[4] = 0;
  out[5] = 0;
  return out;
}

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.translate(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {vec2} v Translation vector
 * @returns {mat2d} out
 */
function fromTranslation(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = v[0];
  out[5] = v[1];
  return out;
}

/**
 * Returns a string representation of a mat2d
 *
 * @param {mat2d} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
function str(a) {
  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';
}

/**
 * Returns Frobenius norm of a mat2d
 *
 * @param {mat2d} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
function frob(a) {
  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);
}

/**
 * Adds two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  return out;
}

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @returns {mat2d} out
 */
function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  return out;
}

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2d} out the receiving matrix
 * @param {mat2d} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2d} out
 */
function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  return out;
}

/**
 * Adds two mat2d's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2d} out the receiving vector
 * @param {mat2d} a the first operand
 * @param {mat2d} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2d} out
 */
function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  return out;
}

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat2d} a The first matrix.
 * @param {mat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
}

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat2d} a The first matrix.
 * @param {mat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5));
}

/**
 * Alias for {@link mat2d.multiply}
 * @function
 */
var mul = multiply;

/**
 * Alias for {@link mat2d.subtract}
 * @function
 */
var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/mat3.js":
/*!*******************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/mat3.js ***!
  \*******************************************************/
/*! exports provided: create, fromMat4, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, rotate, scale, fromTranslation, fromRotation, fromScaling, fromMat2d, fromQuat, normalFromMat4, projection, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat4", function() { return fromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjoint", function() { return adjoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat2d", function() { return fromMat2d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromQuat", function() { return fromQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalFromMat4", function() { return normalFromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projection", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");


/**
 * 3x3 Matrix
 * @module mat3
 */

/**
 * Creates a new identity mat3
 *
 * @returns {mat3} a new 3x3 matrix
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](9);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
  }
  out[0] = 1;
  out[4] = 1;
  out[8] = 1;
  return out;
}

/**
 * Copies the upper-left 3x3 values into the given mat3.
 *
 * @param {mat3} out the receiving 3x3 matrix
 * @param {mat4} a   the source 4x4 matrix
 * @returns {mat3} out
 */
function fromMat4(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[4];
  out[4] = a[5];
  out[5] = a[6];
  out[6] = a[8];
  out[7] = a[9];
  out[8] = a[10];
  return out;
}

/**
 * Creates a new mat3 initialized with values from an existing matrix
 *
 * @param {mat3} a matrix to clone
 * @returns {mat3} a new 3x3 matrix
 */
function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](9);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}

/**
 * Copy the values from one mat3 to another
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}

/**
 * Create a new mat3 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} A new mat3
 */
function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](9);
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}

/**
 * Set the components of a mat3 to the given values
 *
 * @param {mat3} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} out
 */
function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}

/**
 * Set a mat3 to the identity matrix
 *
 * @param {mat3} out the receiving matrix
 * @returns {mat3} out
 */
function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}

/**
 * Transpose the values of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache some values
  if (out === a) {
    var a01 = a[1],
        a02 = a[2],
        a12 = a[5];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a01;
    out[5] = a[7];
    out[6] = a02;
    out[7] = a12;
  } else {
    out[0] = a[0];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a[1];
    out[4] = a[4];
    out[5] = a[7];
    out[6] = a[2];
    out[7] = a[5];
    out[8] = a[8];
  }

  return out;
}

/**
 * Inverts a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
function invert(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];

  var b01 = a22 * a11 - a12 * a21;
  var b11 = -a22 * a10 + a12 * a20;
  var b21 = a21 * a10 - a11 * a20;

  // Calculate the determinant
  var det = a00 * b01 + a01 * b11 + a02 * b21;

  if (!det) {
    return null;
  }
  det = 1.0 / det;

  out[0] = b01 * det;
  out[1] = (-a22 * a01 + a02 * a21) * det;
  out[2] = (a12 * a01 - a02 * a11) * det;
  out[3] = b11 * det;
  out[4] = (a22 * a00 - a02 * a20) * det;
  out[5] = (-a12 * a00 + a02 * a10) * det;
  out[6] = b21 * det;
  out[7] = (-a21 * a00 + a01 * a20) * det;
  out[8] = (a11 * a00 - a01 * a10) * det;
  return out;
}

/**
 * Calculates the adjugate of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the source matrix
 * @returns {mat3} out
 */
function adjoint(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];

  out[0] = a11 * a22 - a12 * a21;
  out[1] = a02 * a21 - a01 * a22;
  out[2] = a01 * a12 - a02 * a11;
  out[3] = a12 * a20 - a10 * a22;
  out[4] = a00 * a22 - a02 * a20;
  out[5] = a02 * a10 - a00 * a12;
  out[6] = a10 * a21 - a11 * a20;
  out[7] = a01 * a20 - a00 * a21;
  out[8] = a00 * a11 - a01 * a10;
  return out;
}

/**
 * Calculates the determinant of a mat3
 *
 * @param {mat3} a the source matrix
 * @returns {Number} determinant of a
 */
function determinant(a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];

  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
}

/**
 * Multiplies two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
function multiply(out, a, b) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];

  var b00 = b[0],
      b01 = b[1],
      b02 = b[2];
  var b10 = b[3],
      b11 = b[4],
      b12 = b[5];
  var b20 = b[6],
      b21 = b[7],
      b22 = b[8];

  out[0] = b00 * a00 + b01 * a10 + b02 * a20;
  out[1] = b00 * a01 + b01 * a11 + b02 * a21;
  out[2] = b00 * a02 + b01 * a12 + b02 * a22;

  out[3] = b10 * a00 + b11 * a10 + b12 * a20;
  out[4] = b10 * a01 + b11 * a11 + b12 * a21;
  out[5] = b10 * a02 + b11 * a12 + b12 * a22;

  out[6] = b20 * a00 + b21 * a10 + b22 * a20;
  out[7] = b20 * a01 + b21 * a11 + b22 * a21;
  out[8] = b20 * a02 + b21 * a12 + b22 * a22;
  return out;
}

/**
 * Translate a mat3 by the given vector
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to translate
 * @param {vec2} v vector to translate by
 * @returns {mat3} out
 */
function translate(out, a, v) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      x = v[0],
      y = v[1];

  out[0] = a00;
  out[1] = a01;
  out[2] = a02;

  out[3] = a10;
  out[4] = a11;
  out[5] = a12;

  out[6] = x * a00 + y * a10 + a20;
  out[7] = x * a01 + y * a11 + a21;
  out[8] = x * a02 + y * a12 + a22;
  return out;
}

/**
 * Rotates a mat3 by the given angle
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */
function rotate(out, a, rad) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      s = Math.sin(rad),
      c = Math.cos(rad);

  out[0] = c * a00 + s * a10;
  out[1] = c * a01 + s * a11;
  out[2] = c * a02 + s * a12;

  out[3] = c * a10 - s * a00;
  out[4] = c * a11 - s * a01;
  out[5] = c * a12 - s * a02;

  out[6] = a20;
  out[7] = a21;
  out[8] = a22;
  return out;
};

/**
 * Scales the mat3 by the dimensions in the given vec2
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to rotate
 * @param {vec2} v the vec2 to scale the matrix by
 * @returns {mat3} out
 **/
function scale(out, a, v) {
  var x = v[0],
      y = v[1];

  out[0] = x * a[0];
  out[1] = x * a[1];
  out[2] = x * a[2];

  out[3] = y * a[3];
  out[4] = y * a[4];
  out[5] = y * a[5];

  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.translate(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {vec2} v Translation vector
 * @returns {mat3} out
 */
function fromTranslation(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = v[0];
  out[7] = v[1];
  out[8] = 1;
  return out;
}

/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.rotate(dest, dest, rad);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */
function fromRotation(out, rad) {
  var s = Math.sin(rad),
      c = Math.cos(rad);

  out[0] = c;
  out[1] = s;
  out[2] = 0;

  out[3] = -s;
  out[4] = c;
  out[5] = 0;

  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.scale(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {vec2} v Scaling vector
 * @returns {mat3} out
 */
function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;

  out[3] = 0;
  out[4] = v[1];
  out[5] = 0;

  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}

/**
 * Copies the values from a mat2d into a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {mat2d} a the matrix to copy
 * @returns {mat3} out
 **/
function fromMat2d(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = 0;

  out[3] = a[2];
  out[4] = a[3];
  out[5] = 0;

  out[6] = a[4];
  out[7] = a[5];
  out[8] = 1;
  return out;
}

/**
* Calculates a 3x3 matrix from the given quaternion
*
* @param {mat3} out mat3 receiving operation result
* @param {quat} q Quaternion to create matrix from
*
* @returns {mat3} out
*/
function fromQuat(out, q) {
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;

  var xx = x * x2;
  var yx = y * x2;
  var yy = y * y2;
  var zx = z * x2;
  var zy = z * y2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;

  out[0] = 1 - yy - zz;
  out[3] = yx - wz;
  out[6] = zx + wy;

  out[1] = yx + wz;
  out[4] = 1 - xx - zz;
  out[7] = zy - wx;

  out[2] = zx - wy;
  out[5] = zy + wx;
  out[8] = 1 - xx - yy;

  return out;
}

/**
* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
*
* @param {mat3} out mat3 receiving operation result
* @param {mat4} a Mat4 to derive the normal matrix from
*
* @returns {mat3} out
*/
function normalFromMat4(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];

  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32;

  // Calculate the determinant
  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (!det) {
    return null;
  }
  det = 1.0 / det;

  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;

  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;

  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;

  return out;
}

/**
 * Generates a 2D projection matrix with the given bounds
 *
 * @param {mat3} out mat3 frustum matrix will be written into
 * @param {number} width Width of your gl context
 * @param {number} height Height of gl context
 * @returns {mat3} out
 */
function projection(out, width, height) {
  out[0] = 2 / width;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = -2 / height;
  out[5] = 0;
  out[6] = -1;
  out[7] = 1;
  out[8] = 1;
  return out;
}

/**
 * Returns a string representation of a mat3
 *
 * @param {mat3} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
function str(a) {
  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';
}

/**
 * Returns Frobenius norm of a mat3
 *
 * @param {mat3} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
function frob(a) {
  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));
}

/**
 * Adds two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  out[8] = a[8] + b[8];
  return out;
}

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @returns {mat3} out
 */
function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  out[6] = a[6] - b[6];
  out[7] = a[7] - b[7];
  out[8] = a[8] - b[8];
  return out;
}

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat3} out the receiving matrix
 * @param {mat3} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat3} out
 */
function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  out[8] = a[8] * b;
  return out;
}

/**
 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat3} out the receiving vector
 * @param {mat3} a the first operand
 * @param {mat3} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat3} out
 */
function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  out[6] = a[6] + b[6] * scale;
  out[7] = a[7] + b[7] * scale;
  out[8] = a[8] + b[8] * scale;
  return out;
}

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat3} a The first matrix.
 * @param {mat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
}

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat3} a The first matrix.
 * @param {mat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7],
      a8 = a[8];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7],
      b8 = b[8];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a8), Math.abs(b8));
}

/**
 * Alias for {@link mat3.multiply}
 * @function
 */
var mul = multiply;

/**
 * Alias for {@link mat3.subtract}
 * @function
 */
var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/mat4.js":
/*!*******************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/mat4.js ***!
  \*******************************************************/
/*! exports provided: create, clone, copy, fromValues, set, identity, transpose, invert, adjoint, determinant, multiply, translate, scale, rotate, rotateX, rotateY, rotateZ, fromTranslation, fromScaling, fromRotation, fromXRotation, fromYRotation, fromZRotation, fromRotationTranslation, fromQuat2, getTranslation, getScaling, getRotation, fromRotationTranslationScale, fromRotationTranslationScaleOrigin, fromQuat, frustum, perspective, perspectiveFromFieldOfView, ortho, lookAt, targetTo, str, frob, add, subtract, multiplyScalar, multiplyScalarAndAdd, exactEquals, equals, mul, sub */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return transpose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "adjoint", function() { return adjoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "determinant", function() { return determinant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromScaling", function() { return fromScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromXRotation", function() { return fromXRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromYRotation", function() { return fromYRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromZRotation", function() { return fromZRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslation", function() { return fromRotationTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromQuat2", function() { return fromQuat2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTranslation", function() { return getTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getScaling", function() { return getScaling; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRotation", function() { return getRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslationScale", function() { return fromRotationTranslationScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslationScaleOrigin", function() { return fromRotationTranslationScaleOrigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromQuat", function() { return fromQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frustum", function() { return frustum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "perspective", function() { return perspective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "perspectiveFromFieldOfView", function() { return perspectiveFromFieldOfView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ortho", function() { return ortho; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lookAt", function() { return lookAt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "targetTo", function() { return targetTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frob", function() { return frob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalar", function() { return multiplyScalar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiplyScalarAndAdd", function() { return multiplyScalarAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");


/**
 * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.
 * @module mat4
 */

/**
 * Creates a new identity mat4
 *
 * @returns {mat4} a new 4x4 matrix
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](16);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
  }
  out[0] = 1;
  out[5] = 1;
  out[10] = 1;
  out[15] = 1;
  return out;
}

/**
 * Creates a new mat4 initialized with values from an existing matrix
 *
 * @param {mat4} a matrix to clone
 * @returns {mat4} a new 4x4 matrix
 */
function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](16);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  out[9] = a[9];
  out[10] = a[10];
  out[11] = a[11];
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}

/**
 * Copy the values from one mat4 to another
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  out[9] = a[9];
  out[10] = a[10];
  out[11] = a[11];
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}

/**
 * Create a new mat4 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} A new mat4
 */
function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](16);
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m03;
  out[4] = m10;
  out[5] = m11;
  out[6] = m12;
  out[7] = m13;
  out[8] = m20;
  out[9] = m21;
  out[10] = m22;
  out[11] = m23;
  out[12] = m30;
  out[13] = m31;
  out[14] = m32;
  out[15] = m33;
  return out;
}

/**
 * Set the components of a mat4 to the given values
 *
 * @param {mat4} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} out
 */
function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m03;
  out[4] = m10;
  out[5] = m11;
  out[6] = m12;
  out[7] = m13;
  out[8] = m20;
  out[9] = m21;
  out[10] = m22;
  out[11] = m23;
  out[12] = m30;
  out[13] = m31;
  out[14] = m32;
  out[15] = m33;
  return out;
}

/**
 * Set a mat4 to the identity matrix
 *
 * @param {mat4} out the receiving matrix
 * @returns {mat4} out
 */
function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}

/**
 * Transpose the values of a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache some values
  if (out === a) {
    var a01 = a[1],
        a02 = a[2],
        a03 = a[3];
    var a12 = a[6],
        a13 = a[7];
    var a23 = a[11];

    out[1] = a[4];
    out[2] = a[8];
    out[3] = a[12];
    out[4] = a01;
    out[6] = a[9];
    out[7] = a[13];
    out[8] = a02;
    out[9] = a12;
    out[11] = a[14];
    out[12] = a03;
    out[13] = a13;
    out[14] = a23;
  } else {
    out[0] = a[0];
    out[1] = a[4];
    out[2] = a[8];
    out[3] = a[12];
    out[4] = a[1];
    out[5] = a[5];
    out[6] = a[9];
    out[7] = a[13];
    out[8] = a[2];
    out[9] = a[6];
    out[10] = a[10];
    out[11] = a[14];
    out[12] = a[3];
    out[13] = a[7];
    out[14] = a[11];
    out[15] = a[15];
  }

  return out;
}

/**
 * Inverts a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
function invert(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];

  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32;

  // Calculate the determinant
  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (!det) {
    return null;
  }
  det = 1.0 / det;

  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;

  return out;
}

/**
 * Calculates the adjugate of a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the source matrix
 * @returns {mat4} out
 */
function adjoint(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];

  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);
  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);
  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);
  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);
  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);
  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);
  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);
  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);
  return out;
}

/**
 * Calculates the determinant of a mat4
 *
 * @param {mat4} a the source matrix
 * @returns {Number} determinant of a
 */
function determinant(a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];

  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32;

  // Calculate the determinant
  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
}

/**
 * Multiplies two mat4s
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
function multiply(out, a, b) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];

  // Cache only the current line of the second matrix
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  return out;
}

/**
 * Translate a mat4 by the given vector
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to translate
 * @param {vec3} v vector to translate by
 * @returns {mat4} out
 */
function translate(out, a, v) {
  var x = v[0],
      y = v[1],
      z = v[2];
  var a00 = void 0,
      a01 = void 0,
      a02 = void 0,
      a03 = void 0;
  var a10 = void 0,
      a11 = void 0,
      a12 = void 0,
      a13 = void 0;
  var a20 = void 0,
      a21 = void 0,
      a22 = void 0,
      a23 = void 0;

  if (a === out) {
    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
  } else {
    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];
    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];
    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];

    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;
    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;
    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;

    out[12] = a00 * x + a10 * y + a20 * z + a[12];
    out[13] = a01 * x + a11 * y + a21 * z + a[13];
    out[14] = a02 * x + a12 * y + a22 * z + a[14];
    out[15] = a03 * x + a13 * y + a23 * z + a[15];
  }

  return out;
}

/**
 * Scales the mat4 by the dimensions in the given vec3 not using vectorization
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {vec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 **/
function scale(out, a, v) {
  var x = v[0],
      y = v[1],
      z = v[2];

  out[0] = a[0] * x;
  out[1] = a[1] * x;
  out[2] = a[2] * x;
  out[3] = a[3] * x;
  out[4] = a[4] * y;
  out[5] = a[5] * y;
  out[6] = a[6] * y;
  out[7] = a[7] * y;
  out[8] = a[8] * z;
  out[9] = a[9] * z;
  out[10] = a[10] * z;
  out[11] = a[11] * z;
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}

/**
 * Rotates a mat4 by the given angle around the given axis
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @param {vec3} axis the axis to rotate around
 * @returns {mat4} out
 */
function rotate(out, a, rad, axis) {
  var x = axis[0],
      y = axis[1],
      z = axis[2];
  var len = Math.sqrt(x * x + y * y + z * z);
  var s = void 0,
      c = void 0,
      t = void 0;
  var a00 = void 0,
      a01 = void 0,
      a02 = void 0,
      a03 = void 0;
  var a10 = void 0,
      a11 = void 0,
      a12 = void 0,
      a13 = void 0;
  var a20 = void 0,
      a21 = void 0,
      a22 = void 0,
      a23 = void 0;
  var b00 = void 0,
      b01 = void 0,
      b02 = void 0;
  var b10 = void 0,
      b11 = void 0,
      b12 = void 0;
  var b20 = void 0,
      b21 = void 0,
      b22 = void 0;

  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return null;
  }

  len = 1 / len;
  x *= len;
  y *= len;
  z *= len;

  s = Math.sin(rad);
  c = Math.cos(rad);
  t = 1 - c;

  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];
  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];
  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];

  // Construct the elements of the rotation matrix
  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;
  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;
  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;

  // Perform rotation-specific matrix multiplication
  out[0] = a00 * b00 + a10 * b01 + a20 * b02;
  out[1] = a01 * b00 + a11 * b01 + a21 * b02;
  out[2] = a02 * b00 + a12 * b01 + a22 * b02;
  out[3] = a03 * b00 + a13 * b01 + a23 * b02;
  out[4] = a00 * b10 + a10 * b11 + a20 * b12;
  out[5] = a01 * b10 + a11 * b11 + a21 * b12;
  out[6] = a02 * b10 + a12 * b11 + a22 * b12;
  out[7] = a03 * b10 + a13 * b11 + a23 * b12;
  out[8] = a00 * b20 + a10 * b21 + a20 * b22;
  out[9] = a01 * b20 + a11 * b21 + a21 * b22;
  out[10] = a02 * b20 + a12 * b21 + a22 * b22;
  out[11] = a03 * b20 + a13 * b21 + a23 * b22;

  if (a !== out) {
    // If the source and destination differ, copy the unchanged last row
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  }
  return out;
}

/**
 * Rotates a matrix by the given angle around the X axis
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
function rotateX(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a10 = a[4];
  var a11 = a[5];
  var a12 = a[6];
  var a13 = a[7];
  var a20 = a[8];
  var a21 = a[9];
  var a22 = a[10];
  var a23 = a[11];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged rows
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  }

  // Perform axis-specific matrix multiplication
  out[4] = a10 * c + a20 * s;
  out[5] = a11 * c + a21 * s;
  out[6] = a12 * c + a22 * s;
  out[7] = a13 * c + a23 * s;
  out[8] = a20 * c - a10 * s;
  out[9] = a21 * c - a11 * s;
  out[10] = a22 * c - a12 * s;
  out[11] = a23 * c - a13 * s;
  return out;
}

/**
 * Rotates a matrix by the given angle around the Y axis
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
function rotateY(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a03 = a[3];
  var a20 = a[8];
  var a21 = a[9];
  var a22 = a[10];
  var a23 = a[11];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged rows
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  }

  // Perform axis-specific matrix multiplication
  out[0] = a00 * c - a20 * s;
  out[1] = a01 * c - a21 * s;
  out[2] = a02 * c - a22 * s;
  out[3] = a03 * c - a23 * s;
  out[8] = a00 * s + a20 * c;
  out[9] = a01 * s + a21 * c;
  out[10] = a02 * s + a22 * c;
  out[11] = a03 * s + a23 * c;
  return out;
}

/**
 * Rotates a matrix by the given angle around the Z axis
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
function rotateZ(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a03 = a[3];
  var a10 = a[4];
  var a11 = a[5];
  var a12 = a[6];
  var a13 = a[7];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged last row
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  }

  // Perform axis-specific matrix multiplication
  out[0] = a00 * c + a10 * s;
  out[1] = a01 * c + a11 * s;
  out[2] = a02 * c + a12 * s;
  out[3] = a03 * c + a13 * s;
  out[4] = a10 * c - a00 * s;
  out[5] = a11 * c - a01 * s;
  out[6] = a12 * c - a02 * s;
  out[7] = a13 * c - a03 * s;
  return out;
}

/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {vec3} v Translation vector
 * @returns {mat4} out
 */
function fromTranslation(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;
  return out;
}

/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.scale(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {vec3} v Scaling vector
 * @returns {mat4} out
 */
function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = v[1];
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = v[2];
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}

/**
 * Creates a matrix from a given angle around a given axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotate(dest, dest, rad, axis);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @param {vec3} axis the axis to rotate around
 * @returns {mat4} out
 */
function fromRotation(out, rad, axis) {
  var x = axis[0],
      y = axis[1],
      z = axis[2];
  var len = Math.sqrt(x * x + y * y + z * z);
  var s = void 0,
      c = void 0,
      t = void 0;

  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return null;
  }

  len = 1 / len;
  x *= len;
  y *= len;
  z *= len;

  s = Math.sin(rad);
  c = Math.cos(rad);
  t = 1 - c;

  // Perform rotation-specific matrix multiplication
  out[0] = x * x * t + c;
  out[1] = y * x * t + z * s;
  out[2] = z * x * t - y * s;
  out[3] = 0;
  out[4] = x * y * t - z * s;
  out[5] = y * y * t + c;
  out[6] = z * y * t + x * s;
  out[7] = 0;
  out[8] = x * z * t + y * s;
  out[9] = y * z * t - x * s;
  out[10] = z * z * t + c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}

/**
 * Creates a matrix from the given angle around the X axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateX(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
function fromXRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);

  // Perform axis-specific matrix multiplication
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = c;
  out[6] = s;
  out[7] = 0;
  out[8] = 0;
  out[9] = -s;
  out[10] = c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}

/**
 * Creates a matrix from the given angle around the Y axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateY(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
function fromYRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);

  // Perform axis-specific matrix multiplication
  out[0] = c;
  out[1] = 0;
  out[2] = -s;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = s;
  out[9] = 0;
  out[10] = c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}

/**
 * Creates a matrix from the given angle around the Z axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateZ(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */
function fromZRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);

  // Perform axis-specific matrix multiplication
  out[0] = c;
  out[1] = s;
  out[2] = 0;
  out[3] = 0;
  out[4] = -s;
  out[5] = c;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}

/**
 * Creates a matrix from a quaternion rotation and vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @returns {mat4} out
 */
function fromRotationTranslation(out, q, v) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;

  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;

  out[0] = 1 - (yy + zz);
  out[1] = xy + wz;
  out[2] = xz - wy;
  out[3] = 0;
  out[4] = xy - wz;
  out[5] = 1 - (xx + zz);
  out[6] = yz + wx;
  out[7] = 0;
  out[8] = xz + wy;
  out[9] = yz - wx;
  out[10] = 1 - (xx + yy);
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;

  return out;
}

/**
 * Creates a new mat4 from a dual quat.
 *
 * @param {mat4} out Matrix
 * @param {quat2} a Dual Quaternion
 * @returns {mat4} mat4 receiving operation result
 */
function fromQuat2(out, a) {
  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7];

  var magnitude = bx * bx + by * by + bz * bz + bw * bw;
  //Only scale if it makes sense
  if (magnitude > 0) {
    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;
    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;
    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;
  } else {
    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;
    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;
    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;
  }
  fromRotationTranslation(out, a, translation);
  return out;
}

/**
 * Returns the translation vector component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslation,
 *  the returned vector will be the same as the translation vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive translation component
 * @param  {mat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */
function getTranslation(out, mat) {
  out[0] = mat[12];
  out[1] = mat[13];
  out[2] = mat[14];

  return out;
}

/**
 * Returns the scaling factor component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslationScale
 *  with a normalized Quaternion paramter, the returned vector will be
 *  the same as the scaling vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive scaling factor component
 * @param  {mat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */
function getScaling(out, mat) {
  var m11 = mat[0];
  var m12 = mat[1];
  var m13 = mat[2];
  var m21 = mat[4];
  var m22 = mat[5];
  var m23 = mat[6];
  var m31 = mat[8];
  var m32 = mat[9];
  var m33 = mat[10];

  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);
  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);
  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);

  return out;
}

/**
 * Returns a quaternion representing the rotational component
 *  of a transformation matrix. If a matrix is built with
 *  fromRotationTranslation, the returned quaternion will be the
 *  same as the quaternion originally supplied.
 * @param {quat} out Quaternion to receive the rotation component
 * @param {mat4} mat Matrix to be decomposed (input)
 * @return {quat} out
 */
function getRotation(out, mat) {
  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
  var trace = mat[0] + mat[5] + mat[10];
  var S = 0;

  if (trace > 0) {
    S = Math.sqrt(trace + 1.0) * 2;
    out[3] = 0.25 * S;
    out[0] = (mat[6] - mat[9]) / S;
    out[1] = (mat[8] - mat[2]) / S;
    out[2] = (mat[1] - mat[4]) / S;
  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {
    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;
    out[3] = (mat[6] - mat[9]) / S;
    out[0] = 0.25 * S;
    out[1] = (mat[1] + mat[4]) / S;
    out[2] = (mat[8] + mat[2]) / S;
  } else if (mat[5] > mat[10]) {
    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;
    out[3] = (mat[8] - mat[2]) / S;
    out[0] = (mat[1] + mat[4]) / S;
    out[1] = 0.25 * S;
    out[2] = (mat[6] + mat[9]) / S;
  } else {
    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;
    out[3] = (mat[1] - mat[4]) / S;
    out[0] = (mat[8] + mat[2]) / S;
    out[1] = (mat[6] + mat[9]) / S;
    out[2] = 0.25 * S;
  }

  return out;
}

/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @param {vec3} s Scaling vector
 * @returns {mat4} out
 */
function fromRotationTranslationScale(out, q, v, s) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;

  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  var sx = s[0];
  var sy = s[1];
  var sz = s[2];

  out[0] = (1 - (yy + zz)) * sx;
  out[1] = (xy + wz) * sx;
  out[2] = (xz - wy) * sx;
  out[3] = 0;
  out[4] = (xy - wz) * sy;
  out[5] = (1 - (xx + zz)) * sy;
  out[6] = (yz + wx) * sy;
  out[7] = 0;
  out[8] = (xz + wy) * sz;
  out[9] = (yz - wx) * sz;
  out[10] = (1 - (xx + yy)) * sz;
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;

  return out;
}

/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     mat4.translate(dest, origin);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *     mat4.translate(dest, negativeOrigin);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {vec3} v Translation vector
 * @param {vec3} s Scaling vector
 * @param {vec3} o The origin vector around which to scale and rotate
 * @returns {mat4} out
 */
function fromRotationTranslationScaleOrigin(out, q, v, s, o) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;

  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;

  var sx = s[0];
  var sy = s[1];
  var sz = s[2];

  var ox = o[0];
  var oy = o[1];
  var oz = o[2];

  var out0 = (1 - (yy + zz)) * sx;
  var out1 = (xy + wz) * sx;
  var out2 = (xz - wy) * sx;
  var out4 = (xy - wz) * sy;
  var out5 = (1 - (xx + zz)) * sy;
  var out6 = (yz + wx) * sy;
  var out8 = (xz + wy) * sz;
  var out9 = (yz - wx) * sz;
  var out10 = (1 - (xx + yy)) * sz;

  out[0] = out0;
  out[1] = out1;
  out[2] = out2;
  out[3] = 0;
  out[4] = out4;
  out[5] = out5;
  out[6] = out6;
  out[7] = 0;
  out[8] = out8;
  out[9] = out9;
  out[10] = out10;
  out[11] = 0;
  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);
  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);
  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);
  out[15] = 1;

  return out;
}

/**
 * Calculates a 4x4 matrix from the given quaternion
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat} q Quaternion to create matrix from
 *
 * @returns {mat4} out
 */
function fromQuat(out, q) {
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;

  var xx = x * x2;
  var yx = y * x2;
  var yy = y * y2;
  var zx = z * x2;
  var zy = z * y2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;

  out[0] = 1 - yy - zz;
  out[1] = yx + wz;
  out[2] = zx - wy;
  out[3] = 0;

  out[4] = yx - wz;
  out[5] = 1 - xx - zz;
  out[6] = zy + wx;
  out[7] = 0;

  out[8] = zx + wy;
  out[9] = zy - wx;
  out[10] = 1 - xx - yy;
  out[11] = 0;

  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;

  return out;
}

/**
 * Generates a frustum matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Number} left Left bound of the frustum
 * @param {Number} right Right bound of the frustum
 * @param {Number} bottom Bottom bound of the frustum
 * @param {Number} top Top bound of the frustum
 * @param {Number} near Near bound of the frustum
 * @param {Number} far Far bound of the frustum
 * @returns {mat4} out
 */
function frustum(out, left, right, bottom, top, near, far) {
  var rl = 1 / (right - left);
  var tb = 1 / (top - bottom);
  var nf = 1 / (near - far);
  out[0] = near * 2 * rl;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = near * 2 * tb;
  out[6] = 0;
  out[7] = 0;
  out[8] = (right + left) * rl;
  out[9] = (top + bottom) * tb;
  out[10] = (far + near) * nf;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[14] = far * near * 2 * nf;
  out[15] = 0;
  return out;
}

/**
 * Generates a perspective projection matrix with the given bounds.
 * Passing null/undefined/no value for far will generate infinite projection matrix.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} fovy Vertical field of view in radians
 * @param {number} aspect Aspect ratio. typically viewport width/height
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum, can be null or Infinity
 * @returns {mat4} out
 */
function perspective(out, fovy, aspect, near, far) {
  var f = 1.0 / Math.tan(fovy / 2),
      nf = void 0;
  out[0] = f / aspect;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = f;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[15] = 0;
  if (far != null && far !== Infinity) {
    nf = 1 / (near - far);
    out[10] = (far + near) * nf;
    out[14] = 2 * far * near * nf;
  } else {
    out[10] = -1;
    out[14] = -2 * near;
  }
  return out;
}

/**
 * Generates a perspective projection matrix with the given field of view.
 * This is primarily useful for generating projection matrices to be used
 * with the still experiemental WebVR API.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
function perspectiveFromFieldOfView(out, fov, near, far) {
  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);
  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);
  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);
  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);
  var xScale = 2.0 / (leftTan + rightTan);
  var yScale = 2.0 / (upTan + downTan);

  out[0] = xScale;
  out[1] = 0.0;
  out[2] = 0.0;
  out[3] = 0.0;
  out[4] = 0.0;
  out[5] = yScale;
  out[6] = 0.0;
  out[7] = 0.0;
  out[8] = -((leftTan - rightTan) * xScale * 0.5);
  out[9] = (upTan - downTan) * yScale * 0.5;
  out[10] = far / (near - far);
  out[11] = -1.0;
  out[12] = 0.0;
  out[13] = 0.0;
  out[14] = far * near / (near - far);
  out[15] = 0.0;
  return out;
}

/**
 * Generates a orthogonal projection matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} left Left bound of the frustum
 * @param {number} right Right bound of the frustum
 * @param {number} bottom Bottom bound of the frustum
 * @param {number} top Top bound of the frustum
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */
function ortho(out, left, right, bottom, top, near, far) {
  var lr = 1 / (left - right);
  var bt = 1 / (bottom - top);
  var nf = 1 / (near - far);
  out[0] = -2 * lr;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = -2 * bt;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 2 * nf;
  out[11] = 0;
  out[12] = (left + right) * lr;
  out[13] = (top + bottom) * bt;
  out[14] = (far + near) * nf;
  out[15] = 1;
  return out;
}

/**
 * Generates a look-at matrix with the given eye position, focal point, and up axis.
 * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {vec3} eye Position of the viewer
 * @param {vec3} center Point the viewer is looking at
 * @param {vec3} up vec3 pointing up
 * @returns {mat4} out
 */
function lookAt(out, eye, center, up) {
  var x0 = void 0,
      x1 = void 0,
      x2 = void 0,
      y0 = void 0,
      y1 = void 0,
      y2 = void 0,
      z0 = void 0,
      z1 = void 0,
      z2 = void 0,
      len = void 0;
  var eyex = eye[0];
  var eyey = eye[1];
  var eyez = eye[2];
  var upx = up[0];
  var upy = up[1];
  var upz = up[2];
  var centerx = center[0];
  var centery = center[1];
  var centerz = center[2];

  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return identity(out);
  }

  z0 = eyex - centerx;
  z1 = eyey - centery;
  z2 = eyez - centerz;

  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
  z0 *= len;
  z1 *= len;
  z2 *= len;

  x0 = upy * z2 - upz * z1;
  x1 = upz * z0 - upx * z2;
  x2 = upx * z1 - upy * z0;
  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
  if (!len) {
    x0 = 0;
    x1 = 0;
    x2 = 0;
  } else {
    len = 1 / len;
    x0 *= len;
    x1 *= len;
    x2 *= len;
  }

  y0 = z1 * x2 - z2 * x1;
  y1 = z2 * x0 - z0 * x2;
  y2 = z0 * x1 - z1 * x0;

  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
  if (!len) {
    y0 = 0;
    y1 = 0;
    y2 = 0;
  } else {
    len = 1 / len;
    y0 *= len;
    y1 *= len;
    y2 *= len;
  }

  out[0] = x0;
  out[1] = y0;
  out[2] = z0;
  out[3] = 0;
  out[4] = x1;
  out[5] = y1;
  out[6] = z1;
  out[7] = 0;
  out[8] = x2;
  out[9] = y2;
  out[10] = z2;
  out[11] = 0;
  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
  out[15] = 1;

  return out;
}

/**
 * Generates a matrix that makes something look at something else.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {vec3} eye Position of the viewer
 * @param {vec3} center Point the viewer is looking at
 * @param {vec3} up vec3 pointing up
 * @returns {mat4} out
 */
function targetTo(out, eye, target, up) {
  var eyex = eye[0],
      eyey = eye[1],
      eyez = eye[2],
      upx = up[0],
      upy = up[1],
      upz = up[2];

  var z0 = eyex - target[0],
      z1 = eyey - target[1],
      z2 = eyez - target[2];

  var len = z0 * z0 + z1 * z1 + z2 * z2;
  if (len > 0) {
    len = 1 / Math.sqrt(len);
    z0 *= len;
    z1 *= len;
    z2 *= len;
  }

  var x0 = upy * z2 - upz * z1,
      x1 = upz * z0 - upx * z2,
      x2 = upx * z1 - upy * z0;

  len = x0 * x0 + x1 * x1 + x2 * x2;
  if (len > 0) {
    len = 1 / Math.sqrt(len);
    x0 *= len;
    x1 *= len;
    x2 *= len;
  }

  out[0] = x0;
  out[1] = x1;
  out[2] = x2;
  out[3] = 0;
  out[4] = z1 * x2 - z2 * x1;
  out[5] = z2 * x0 - z0 * x2;
  out[6] = z0 * x1 - z1 * x0;
  out[7] = 0;
  out[8] = z0;
  out[9] = z1;
  out[10] = z2;
  out[11] = 0;
  out[12] = eyex;
  out[13] = eyey;
  out[14] = eyez;
  out[15] = 1;
  return out;
};

/**
 * Returns a string representation of a mat4
 *
 * @param {mat4} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */
function str(a) {
  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';
}

/**
 * Returns Frobenius norm of a mat4
 *
 * @param {mat4} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */
function frob(a) {
  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));
}

/**
 * Adds two mat4's
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  out[8] = a[8] + b[8];
  out[9] = a[9] + b[9];
  out[10] = a[10] + b[10];
  out[11] = a[11] + b[11];
  out[12] = a[12] + b[12];
  out[13] = a[13] + b[13];
  out[14] = a[14] + b[14];
  out[15] = a[15] + b[15];
  return out;
}

/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @returns {mat4} out
 */
function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  out[6] = a[6] - b[6];
  out[7] = a[7] - b[7];
  out[8] = a[8] - b[8];
  out[9] = a[9] - b[9];
  out[10] = a[10] - b[10];
  out[11] = a[11] - b[11];
  out[12] = a[12] - b[12];
  out[13] = a[13] - b[13];
  out[14] = a[14] - b[14];
  out[15] = a[15] - b[15];
  return out;
}

/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat4} out the receiving matrix
 * @param {mat4} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat4} out
 */
function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  out[8] = a[8] * b;
  out[9] = a[9] * b;
  out[10] = a[10] * b;
  out[11] = a[11] * b;
  out[12] = a[12] * b;
  out[13] = a[13] * b;
  out[14] = a[14] * b;
  out[15] = a[15] * b;
  return out;
}

/**
 * Adds two mat4's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat4} out the receiving vector
 * @param {mat4} a the first operand
 * @param {mat4} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat4} out
 */
function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  out[6] = a[6] + b[6] * scale;
  out[7] = a[7] + b[7] * scale;
  out[8] = a[8] + b[8] * scale;
  out[9] = a[9] + b[9] * scale;
  out[10] = a[10] + b[10] * scale;
  out[11] = a[11] + b[11] * scale;
  out[12] = a[12] + b[12] * scale;
  out[13] = a[13] + b[13] * scale;
  out[14] = a[14] + b[14] * scale;
  out[15] = a[15] + b[15] * scale;
  return out;
}

/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {mat4} a The first matrix.
 * @param {mat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
}

/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {mat4} a The first matrix.
 * @param {mat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7];
  var a8 = a[8],
      a9 = a[9],
      a10 = a[10],
      a11 = a[11];
  var a12 = a[12],
      a13 = a[13],
      a14 = a[14],
      a15 = a[15];

  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  var b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7];
  var b8 = b[8],
      b9 = b[9],
      b10 = b[10],
      b11 = b[11];
  var b12 = b[12],
      b13 = b[13],
      b14 = b[14],
      b15 = b[15];

  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a15), Math.abs(b15));
}

/**
 * Alias for {@link mat4.multiply}
 * @function
 */
var mul = multiply;

/**
 * Alias for {@link mat4.subtract}
 * @function
 */
var sub = subtract;

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/quat.js":
/*!*******************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/quat.js ***!
  \*******************************************************/
/*! exports provided: create, identity, setAxisAngle, getAxisAngle, multiply, rotateX, rotateY, rotateZ, calculateW, slerp, random, invert, conjugate, fromMat3, fromEuler, str, clone, fromValues, copy, set, add, mul, scale, dot, lerp, length, len, squaredLength, sqrLen, normalize, exactEquals, equals, rotationTo, sqlerp, setAxes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAxisAngle", function() { return setAxisAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAxisAngle", function() { return getAxisAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateW", function() { return calculateW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slerp", function() { return slerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conjugate", function() { return conjugate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat3", function() { return fromMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromEuler", function() { return fromEuler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotationTo", function() { return rotationTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqlerp", function() { return sqlerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setAxes", function() { return setAxes; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");
/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3.js */ "../node_modules/gl-matrix/lib/gl-matrix/mat3.js");
/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ "../node_modules/gl-matrix/lib/gl-matrix/vec3.js");
/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec4.js */ "../node_modules/gl-matrix/lib/gl-matrix/vec4.js");





/**
 * Quaternion
 * @module quat
 */

/**
 * Creates a new identity quat
 *
 * @returns {quat} a new quaternion
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
  }
  out[3] = 1;
  return out;
}

/**
 * Set a quat to the identity quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */
function identity(out) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  return out;
}

/**
 * Sets a quat from the given angle and rotation axis,
 * then returns it.
 *
 * @param {quat} out the receiving quaternion
 * @param {vec3} axis the axis around which to rotate
 * @param {Number} rad the angle in radians
 * @returns {quat} out
 **/
function setAxisAngle(out, axis, rad) {
  rad = rad * 0.5;
  var s = Math.sin(rad);
  out[0] = s * axis[0];
  out[1] = s * axis[1];
  out[2] = s * axis[2];
  out[3] = Math.cos(rad);
  return out;
}

/**
 * Gets the rotation axis and angle for a given
 *  quaternion. If a quaternion is created with
 *  setAxisAngle, this method will return the same
 *  values as providied in the original parameter list
 *  OR functionally equivalent values.
 * Example: The quaternion formed by axis [0, 0, 1] and
 *  angle -90 is the same as the quaternion formed by
 *  [0, 0, 1] and 270. This method favors the latter.
 * @param  {vec3} out_axis  Vector receiving the axis of rotation
 * @param  {quat} q     Quaternion to be decomposed
 * @return {Number}     Angle, in radians, of the rotation
 */
function getAxisAngle(out_axis, q) {
  var rad = Math.acos(q[3]) * 2.0;
  var s = Math.sin(rad / 2.0);
  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    out_axis[0] = q[0] / s;
    out_axis[1] = q[1] / s;
    out_axis[2] = q[2] / s;
  } else {
    // If s is zero, return any axis (no rotation - axis does not matter)
    out_axis[0] = 1;
    out_axis[1] = 0;
    out_axis[2] = 0;
  }
  return rad;
}

/**
 * Multiplies two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {quat} out
 */
function multiply(out, a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = b[0],
      by = b[1],
      bz = b[2],
      bw = b[3];

  out[0] = ax * bw + aw * bx + ay * bz - az * by;
  out[1] = ay * bw + aw * by + az * bx - ax * bz;
  out[2] = az * bw + aw * bz + ax * by - ay * bx;
  out[3] = aw * bw - ax * bx - ay * by - az * bz;
  return out;
}

/**
 * Rotates a quaternion by the given angle about the X axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
function rotateX(out, a, rad) {
  rad *= 0.5;

  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = Math.sin(rad),
      bw = Math.cos(rad);

  out[0] = ax * bw + aw * bx;
  out[1] = ay * bw + az * bx;
  out[2] = az * bw - ay * bx;
  out[3] = aw * bw - ax * bx;
  return out;
}

/**
 * Rotates a quaternion by the given angle about the Y axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
function rotateY(out, a, rad) {
  rad *= 0.5;

  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var by = Math.sin(rad),
      bw = Math.cos(rad);

  out[0] = ax * bw - az * by;
  out[1] = ay * bw + aw * by;
  out[2] = az * bw + ax * by;
  out[3] = aw * bw - ay * by;
  return out;
}

/**
 * Rotates a quaternion by the given angle about the Z axis
 *
 * @param {quat} out quat receiving operation result
 * @param {quat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */
function rotateZ(out, a, rad) {
  rad *= 0.5;

  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bz = Math.sin(rad),
      bw = Math.cos(rad);

  out[0] = ax * bw + ay * bz;
  out[1] = ay * bw - ax * bz;
  out[2] = az * bw + aw * bz;
  out[3] = aw * bw - az * bz;
  return out;
}

/**
 * Calculates the W component of a quat from the X, Y, and Z components.
 * Assumes that quaternion is 1 unit in length.
 * Any existing W component will be ignored.
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate W component of
 * @returns {quat} out
 */
function calculateW(out, a) {
  var x = a[0],
      y = a[1],
      z = a[2];

  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
  return out;
}

/**
 * Performs a spherical linear interpolation between two quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 */
function slerp(out, a, b, t) {
  // benchmarks:
  //    http://jsperf.com/quaternion-slerp-implementations
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = b[0],
      by = b[1],
      bz = b[2],
      bw = b[3];

  var omega = void 0,
      cosom = void 0,
      sinom = void 0,
      scale0 = void 0,
      scale1 = void 0;

  // calc cosine
  cosom = ax * bx + ay * by + az * bz + aw * bw;
  // adjust signs (if necessary)
  if (cosom < 0.0) {
    cosom = -cosom;
    bx = -bx;
    by = -by;
    bz = -bz;
    bw = -bw;
  }
  // calculate coefficients
  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    // standard case (slerp)
    omega = Math.acos(cosom);
    sinom = Math.sin(omega);
    scale0 = Math.sin((1.0 - t) * omega) / sinom;
    scale1 = Math.sin(t * omega) / sinom;
  } else {
    // "from" and "to" quaternions are very close
    //  ... so we can do a linear interpolation
    scale0 = 1.0 - t;
    scale1 = t;
  }
  // calculate final values
  out[0] = scale0 * ax + scale1 * bx;
  out[1] = scale0 * ay + scale1 * by;
  out[2] = scale0 * az + scale1 * bz;
  out[3] = scale0 * aw + scale1 * bw;

  return out;
}

/**
 * Generates a random quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */
function random(out) {
  // Implementation of http://planning.cs.uiuc.edu/node198.html
  // TODO: Calling random 3 times is probably not the fastest solution
  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]();
  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]();
  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]();

  var sqrt1MinusU1 = Math.sqrt(1 - u1);
  var sqrtU1 = Math.sqrt(u1);

  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);
  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);
  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);
  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);
  return out;
}

/**
 * Calculates the inverse of a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate inverse of
 * @returns {quat} out
 */
function invert(out, a) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;
  var invDot = dot ? 1.0 / dot : 0;

  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0

  out[0] = -a0 * invDot;
  out[1] = -a1 * invDot;
  out[2] = -a2 * invDot;
  out[3] = a3 * invDot;
  return out;
}

/**
 * Calculates the conjugate of a quat
 * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quat to calculate conjugate of
 * @returns {quat} out
 */
function conjugate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a[3];
  return out;
}

/**
 * Creates a quaternion from the given 3x3 rotation matrix.
 *
 * NOTE: The resultant quaternion is not normalized, so you should be sure
 * to renormalize the quaternion yourself where necessary.
 *
 * @param {quat} out the receiving quaternion
 * @param {mat3} m rotation matrix
 * @returns {quat} out
 * @function
 */
function fromMat3(out, m) {
  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes
  // article "Quaternion Calculus and Fast Animation".
  var fTrace = m[0] + m[4] + m[8];
  var fRoot = void 0;

  if (fTrace > 0.0) {
    // |w| > 1/2, may as well choose w > 1/2
    fRoot = Math.sqrt(fTrace + 1.0); // 2w
    out[3] = 0.5 * fRoot;
    fRoot = 0.5 / fRoot; // 1/(4w)
    out[0] = (m[5] - m[7]) * fRoot;
    out[1] = (m[6] - m[2]) * fRoot;
    out[2] = (m[1] - m[3]) * fRoot;
  } else {
    // |w| <= 1/2
    var i = 0;
    if (m[4] > m[0]) i = 1;
    if (m[8] > m[i * 3 + i]) i = 2;
    var j = (i + 1) % 3;
    var k = (i + 2) % 3;

    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);
    out[i] = 0.5 * fRoot;
    fRoot = 0.5 / fRoot;
    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;
    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;
    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;
  }

  return out;
}

/**
 * Creates a quaternion from the given euler angle x, y, z.
 *
 * @param {quat} out the receiving quaternion
 * @param {x} Angle to rotate around X axis in degrees.
 * @param {y} Angle to rotate around Y axis in degrees.
 * @param {z} Angle to rotate around Z axis in degrees.
 * @returns {quat} out
 * @function
 */
function fromEuler(out, x, y, z) {
  var halfToRad = 0.5 * Math.PI / 180.0;
  x *= halfToRad;
  y *= halfToRad;
  z *= halfToRad;

  var sx = Math.sin(x);
  var cx = Math.cos(x);
  var sy = Math.sin(y);
  var cy = Math.cos(y);
  var sz = Math.sin(z);
  var cz = Math.cos(z);

  out[0] = sx * cy * cz - cx * sy * sz;
  out[1] = cx * sy * cz + sx * cy * sz;
  out[2] = cx * cy * sz - sx * sy * cz;
  out[3] = cx * cy * cz + sx * sy * sz;

  return out;
}

/**
 * Returns a string representation of a quatenion
 *
 * @param {quat} a vector to represent as a string
 * @returns {String} string representation of the vector
 */
function str(a) {
  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
}

/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {quat} a quaternion to clone
 * @returns {quat} a new quaternion
 * @function
 */
var clone = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["clone"];

/**
 * Creates a new quat initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} a new quaternion
 * @function
 */
var fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["fromValues"];

/**
 * Copy the values from one quat to another
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the source quaternion
 * @returns {quat} out
 * @function
 */
var copy = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["copy"];

/**
 * Set the components of a quat to the given values
 *
 * @param {quat} out the receiving quaternion
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} out
 * @function
 */
var set = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["set"];

/**
 * Adds two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {quat} out
 * @function
 */
var add = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["add"];

/**
 * Alias for {@link quat.multiply}
 * @function
 */
var mul = multiply;

/**
 * Scales a quat by a scalar number
 *
 * @param {quat} out the receiving vector
 * @param {quat} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {quat} out
 * @function
 */
var scale = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["scale"];

/**
 * Calculates the dot product of two quat's
 *
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */
var dot = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["dot"];

/**
 * Performs a linear interpolation between two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 * @function
 */
var lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["lerp"];

/**
 * Calculates the length of a quat
 *
 * @param {quat} a vector to calculate length of
 * @returns {Number} length of a
 */
var length = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["length"];

/**
 * Alias for {@link quat.length}
 * @function
 */
var len = length;

/**
 * Calculates the squared length of a quat
 *
 * @param {quat} a vector to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */
var squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["squaredLength"];

/**
 * Alias for {@link quat.squaredLength}
 * @function
 */
var sqrLen = squaredLength;

/**
 * Normalize a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a quaternion to normalize
 * @returns {quat} out
 * @function
 */
var normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["normalize"];

/**
 * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {quat} a The first quaternion.
 * @param {quat} b The second quaternion.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
var exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["exactEquals"];

/**
 * Returns whether or not the quaternions have approximately the same elements in the same position.
 *
 * @param {quat} a The first vector.
 * @param {quat} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
var equals = _vec4_js__WEBPACK_IMPORTED_MODULE_3__["equals"];

/**
 * Sets a quaternion to represent the shortest rotation from one
 * vector to another.
 *
 * Both vectors are assumed to be unit length.
 *
 * @param {quat} out the receiving quaternion.
 * @param {vec3} a the initial vector
 * @param {vec3} b the destination vector
 * @returns {quat} out
 */
var rotationTo = function () {
  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["create"]();
  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["fromValues"](1, 0, 0);
  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["fromValues"](0, 1, 0);

  return function (out, a, b) {
    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__["dot"](a, b);
    if (dot < -0.999999) {
      _vec3_js__WEBPACK_IMPORTED_MODULE_2__["cross"](tmpvec3, xUnitVec3, a);
      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__["len"](tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__["cross"](tmpvec3, yUnitVec3, a);
      _vec3_js__WEBPACK_IMPORTED_MODULE_2__["normalize"](tmpvec3, tmpvec3);
      setAxisAngle(out, tmpvec3, Math.PI);
      return out;
    } else if (dot > 0.999999) {
      out[0] = 0;
      out[1] = 0;
      out[2] = 0;
      out[3] = 1;
      return out;
    } else {
      _vec3_js__WEBPACK_IMPORTED_MODULE_2__["cross"](tmpvec3, a, b);
      out[0] = tmpvec3[0];
      out[1] = tmpvec3[1];
      out[2] = tmpvec3[2];
      out[3] = 1 + dot;
      return normalize(out, out);
    }
  };
}();

/**
 * Performs a spherical linear interpolation with two control points
 *
 * @param {quat} out the receiving quaternion
 * @param {quat} a the first operand
 * @param {quat} b the second operand
 * @param {quat} c the third operand
 * @param {quat} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 */
var sqlerp = function () {
  var temp1 = create();
  var temp2 = create();

  return function (out, a, b, c, d, t) {
    slerp(temp1, a, d, t);
    slerp(temp2, b, c, t);
    slerp(out, temp1, temp2, 2 * t * (1 - t));

    return out;
  };
}();

/**
 * Sets the specified quaternion with values corresponding to the given
 * axes. Each axis is a vec3 and is expected to be unit length and
 * perpendicular to all other specified axes.
 *
 * @param {vec3} view  the vector representing the viewing direction
 * @param {vec3} right the vector representing the local "right" direction
 * @param {vec3} up    the vector representing the local "up" direction
 * @returns {quat} out
 */
var setAxes = function () {
  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_1__["create"]();

  return function (out, view, right, up) {
    matr[0] = right[0];
    matr[3] = right[1];
    matr[6] = right[2];

    matr[1] = up[0];
    matr[4] = up[1];
    matr[7] = up[2];

    matr[2] = -view[0];
    matr[5] = -view[1];
    matr[8] = -view[2];

    return normalize(out, fromMat3(out, matr));
  };
}();

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/quat2.js":
/*!********************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/quat2.js ***!
  \********************************************************/
/*! exports provided: create, clone, fromValues, fromRotationTranslationValues, fromRotationTranslation, fromTranslation, fromRotation, fromMat4, copy, identity, set, getReal, getDual, setReal, setDual, getTranslation, translate, rotateX, rotateY, rotateZ, rotateByQuatAppend, rotateByQuatPrepend, rotateAroundAxis, add, multiply, mul, scale, dot, lerp, invert, conjugate, length, len, squaredLength, sqrLen, normalize, str, exactEquals, equals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslationValues", function() { return fromRotationTranslationValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotationTranslation", function() { return fromRotationTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromTranslation", function() { return fromTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromRotation", function() { return fromRotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromMat4", function() { return fromMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getReal", function() { return getReal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDual", function() { return getDual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setReal", function() { return setReal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDual", function() { return setDual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTranslation", function() { return getTranslation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "translate", function() { return translate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateByQuatAppend", function() { return rotateByQuatAppend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateByQuatPrepend", function() { return rotateByQuatPrepend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateAroundAxis", function() { return rotateAroundAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invert", function() { return invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conjugate", function() { return conjugate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");
/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat.js */ "../node_modules/gl-matrix/lib/gl-matrix/quat.js");
/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4.js */ "../node_modules/gl-matrix/lib/gl-matrix/mat4.js");




/**
 * Dual Quaternion<br>
 * Format: [real, dual]<br>
 * Quaternion format: XYZW<br>
 * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>
 * @module quat2
 */

/**
 * Creates a new identity dual quat
 *
 * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]
 */
function create() {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    dq[0] = 0;
    dq[1] = 0;
    dq[2] = 0;
    dq[4] = 0;
    dq[5] = 0;
    dq[6] = 0;
    dq[7] = 0;
  }
  dq[3] = 1;
  return dq;
}

/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {quat2} a dual quaternion to clone
 * @returns {quat2} new dual quaternion
 * @function
 */
function clone(a) {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);
  dq[0] = a[0];
  dq[1] = a[1];
  dq[2] = a[2];
  dq[3] = a[3];
  dq[4] = a[4];
  dq[5] = a[5];
  dq[6] = a[6];
  dq[7] = a[7];
  return dq;
}

/**
 * Creates a new dual quat initialized with the given values
 *
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component
 * @param {Number} y2 Y component
 * @param {Number} z2 Z component
 * @param {Number} w2 W component
 * @returns {quat2} new dual quaternion
 * @function
 */
function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);
  dq[0] = x1;
  dq[1] = y1;
  dq[2] = z1;
  dq[3] = w1;
  dq[4] = x2;
  dq[5] = y2;
  dq[6] = z2;
  dq[7] = w2;
  return dq;
}

/**
 * Creates a new dual quat from the given values (quat and translation)
 *
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component (translation)
 * @param {Number} y2 Y component (translation)
 * @param {Number} z2 Z component (translation)
 * @returns {quat2} new dual quaternion
 * @function
 */
function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {
  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](8);
  dq[0] = x1;
  dq[1] = y1;
  dq[2] = z1;
  dq[3] = w1;
  var ax = x2 * 0.5,
      ay = y2 * 0.5,
      az = z2 * 0.5;
  dq[4] = ax * w1 + ay * z1 - az * y1;
  dq[5] = ay * w1 + az * x1 - ax * z1;
  dq[6] = az * w1 + ax * y1 - ay * x1;
  dq[7] = -ax * x1 - ay * y1 - az * z1;
  return dq;
}

/**
 * Creates a dual quat from a quaternion and a translation
 *
 * @param {quat2} dual quaternion receiving operation result
 * @param {quat} q quaternion
 * @param {vec3} t tranlation vector
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */
function fromRotationTranslation(out, q, t) {
  var ax = t[0] * 0.5,
      ay = t[1] * 0.5,
      az = t[2] * 0.5,
      bx = q[0],
      by = q[1],
      bz = q[2],
      bw = q[3];
  out[0] = bx;
  out[1] = by;
  out[2] = bz;
  out[3] = bw;
  out[4] = ax * bw + ay * bz - az * by;
  out[5] = ay * bw + az * bx - ax * bz;
  out[6] = az * bw + ax * by - ay * bx;
  out[7] = -ax * bx - ay * by - az * bz;
  return out;
}

/**
 * Creates a dual quat from a translation
 *
 * @param {quat2} dual quaternion receiving operation result
 * @param {vec3} t translation vector
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */
function fromTranslation(out, t) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = t[0] * 0.5;
  out[5] = t[1] * 0.5;
  out[6] = t[2] * 0.5;
  out[7] = 0;
  return out;
}

/**
 * Creates a dual quat from a quaternion
 *
 * @param {quat2} dual quaternion receiving operation result
 * @param {quat} q the quaternion
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */
function fromRotation(out, q) {
  out[0] = q[0];
  out[1] = q[1];
  out[2] = q[2];
  out[3] = q[3];
  out[4] = 0;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  return out;
}

/**
 * Creates a new dual quat from a matrix (4x4)
 *
 * @param {quat2} out the dual quaternion
 * @param {mat4} a the matrix
 * @returns {quat2} dual quat receiving operation result
 * @function
 */
function fromMat4(out, a) {
  //TODO Optimize this
  var outer = _quat_js__WEBPACK_IMPORTED_MODULE_1__["create"]();
  _mat4_js__WEBPACK_IMPORTED_MODULE_2__["getRotation"](outer, a);
  var t = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  _mat4_js__WEBPACK_IMPORTED_MODULE_2__["getTranslation"](t, a);
  fromRotationTranslation(out, outer, t);
  return out;
}

/**
 * Copy the values from one dual quat to another
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the source dual quaternion
 * @returns {quat2} out
 * @function
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  return out;
}

/**
 * Set a dual quat to the identity dual quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @returns {quat2} out
 */
function identity(out) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = 0;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  return out;
}

/**
 * Set the components of a dual quat to the given values
 *
 * @param {quat2} out the receiving quaternion
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component
 * @param {Number} y2 Y component
 * @param {Number} z2 Z component
 * @param {Number} w2 W component
 * @returns {quat2} out
 * @function
 */
function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {
  out[0] = x1;
  out[1] = y1;
  out[2] = z1;
  out[3] = w1;

  out[4] = x2;
  out[5] = y2;
  out[6] = z2;
  out[7] = w2;
  return out;
}

/**
 * Gets the real part of a dual quat
 * @param  {quat} out real part
 * @param  {quat2} a Dual Quaternion
 * @return {quat} real part
 */
var getReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__["copy"];

/**
 * Gets the dual part of a dual quat
 * @param  {quat} out dual part
 * @param  {quat2} a Dual Quaternion
 * @return {quat} dual part
 */
function getDual(out, a) {
  out[0] = a[4];
  out[1] = a[5];
  out[2] = a[6];
  out[3] = a[7];
  return out;
}

/**
 * Set the real component of a dual quat to the given quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @param {quat} q a quaternion representing the real part
 * @returns {quat2} out
 * @function
 */
var setReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__["copy"];

/**
 * Set the dual component of a dual quat to the given quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @param {quat} q a quaternion representing the dual part
 * @returns {quat2} out
 * @function
 */
function setDual(out, q) {
  out[4] = q[0];
  out[5] = q[1];
  out[6] = q[2];
  out[7] = q[3];
  return out;
}

/**
 * Gets the translation of a normalized dual quat
 * @param  {vec3} out translation
 * @param  {quat2} a Dual Quaternion to be decomposed
 * @return {vec3} translation
 */
function getTranslation(out, a) {
  var ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3];
  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;
  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;
  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;
  return out;
}

/**
 * Translates a dual quat by the given vector
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the dual quaternion to translate
 * @param {vec3} v vector to translate by
 * @returns {quat2} out
 */
function translate(out, a, v) {
  var ax1 = a[0],
      ay1 = a[1],
      az1 = a[2],
      aw1 = a[3],
      bx1 = v[0] * 0.5,
      by1 = v[1] * 0.5,
      bz1 = v[2] * 0.5,
      ax2 = a[4],
      ay2 = a[5],
      az2 = a[6],
      aw2 = a[7];
  out[0] = ax1;
  out[1] = ay1;
  out[2] = az1;
  out[3] = aw1;
  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;
  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;
  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;
  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;
  return out;
}

/**
 * Rotates a dual quat around the X axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */
function rotateX(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  _quat_js__WEBPACK_IMPORTED_MODULE_1__["rotateX"](out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}

/**
 * Rotates a dual quat around the Y axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */
function rotateY(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  _quat_js__WEBPACK_IMPORTED_MODULE_1__["rotateY"](out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}

/**
 * Rotates a dual quat around the Z axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */
function rotateZ(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  _quat_js__WEBPACK_IMPORTED_MODULE_1__["rotateZ"](out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}

/**
 * Rotates a dual quat by a given quaternion (a * q)
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the dual quaternion to rotate
 * @param {quat} q quaternion to rotate by
 * @returns {quat2} out
 */
function rotateByQuatAppend(out, a, q) {
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3],
      ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];

  out[0] = ax * qw + aw * qx + ay * qz - az * qy;
  out[1] = ay * qw + aw * qy + az * qx - ax * qz;
  out[2] = az * qw + aw * qz + ax * qy - ay * qx;
  out[3] = aw * qw - ax * qx - ay * qy - az * qz;
  ax = a[4];
  ay = a[5];
  az = a[6];
  aw = a[7];
  out[4] = ax * qw + aw * qx + ay * qz - az * qy;
  out[5] = ay * qw + aw * qy + az * qx - ax * qz;
  out[6] = az * qw + aw * qz + ax * qy - ay * qx;
  out[7] = aw * qw - ax * qx - ay * qy - az * qz;
  return out;
}

/**
 * Rotates a dual quat by a given quaternion (q * a)
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat} q quaternion to rotate by
 * @param {quat2} a the dual quaternion to rotate
 * @returns {quat2} out
 */
function rotateByQuatPrepend(out, q, a) {
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3],
      bx = a[0],
      by = a[1],
      bz = a[2],
      bw = a[3];

  out[0] = qx * bw + qw * bx + qy * bz - qz * by;
  out[1] = qy * bw + qw * by + qz * bx - qx * bz;
  out[2] = qz * bw + qw * bz + qx * by - qy * bx;
  out[3] = qw * bw - qx * bx - qy * by - qz * bz;
  bx = a[4];
  by = a[5];
  bz = a[6];
  bw = a[7];
  out[4] = qx * bw + qw * bx + qy * bz - qz * by;
  out[5] = qy * bw + qw * by + qz * bx - qx * bz;
  out[6] = qz * bw + qw * bz + qx * by - qy * bx;
  out[7] = qw * bw - qx * bx - qy * by - qz * bz;
  return out;
}

/**
 * Rotates a dual quat around a given axis. Does the normalisation automatically
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the dual quaternion to rotate
 * @param {vec3} axis the axis to rotate around
 * @param {Number} rad how far the rotation should be
 * @returns {quat2} out
 */
function rotateAroundAxis(out, a, axis, rad) {
  //Special case for rad = 0
  if (Math.abs(rad) < _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"]) {
    return copy(out, a);
  }
  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);

  rad = rad * 0.5;
  var s = Math.sin(rad);
  var bx = s * axis[0] / axisLength;
  var by = s * axis[1] / axisLength;
  var bz = s * axis[2] / axisLength;
  var bw = Math.cos(rad);

  var ax1 = a[0],
      ay1 = a[1],
      az1 = a[2],
      aw1 = a[3];
  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;

  var ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7];
  out[4] = ax * bw + aw * bx + ay * bz - az * by;
  out[5] = ay * bw + aw * by + az * bx - ax * bz;
  out[6] = az * bw + aw * bz + ax * by - ay * bx;
  out[7] = aw * bw - ax * bx - ay * by - az * bz;

  return out;
}

/**
 * Adds two dual quat's
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the first operand
 * @param {quat2} b the second operand
 * @returns {quat2} out
 * @function
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  return out;
}

/**
 * Multiplies two dual quat's
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a the first operand
 * @param {quat2} b the second operand
 * @returns {quat2} out
 */
function multiply(out, a, b) {
  var ax0 = a[0],
      ay0 = a[1],
      az0 = a[2],
      aw0 = a[3],
      bx1 = b[4],
      by1 = b[5],
      bz1 = b[6],
      bw1 = b[7],
      ax1 = a[4],
      ay1 = a[5],
      az1 = a[6],
      aw1 = a[7],
      bx0 = b[0],
      by0 = b[1],
      bz0 = b[2],
      bw0 = b[3];
  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;
  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;
  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;
  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;
  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;
  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;
  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;
  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;
  return out;
}

/**
 * Alias for {@link quat2.multiply}
 * @function
 */
var mul = multiply;

/**
 * Scales a dual quat by a scalar number
 *
 * @param {quat2} out the receiving dual quat
 * @param {quat2} a the dual quat to scale
 * @param {Number} b amount to scale the dual quat by
 * @returns {quat2} out
 * @function
 */
function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  return out;
}

/**
 * Calculates the dot product of two dual quat's (The dot product of the real parts)
 *
 * @param {quat2} a the first operand
 * @param {quat2} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */
var dot = _quat_js__WEBPACK_IMPORTED_MODULE_1__["dot"];

/**
 * Performs a linear interpolation between two dual quats's
 * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)
 *
 * @param {quat2} out the receiving dual quat
 * @param {quat2} a the first operand
 * @param {quat2} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat2} out
 */
function lerp(out, a, b, t) {
  var mt = 1 - t;
  if (dot(a, b) < 0) t = -t;

  out[0] = a[0] * mt + b[0] * t;
  out[1] = a[1] * mt + b[1] * t;
  out[2] = a[2] * mt + b[2] * t;
  out[3] = a[3] * mt + b[3] * t;
  out[4] = a[4] * mt + b[4] * t;
  out[5] = a[5] * mt + b[5] * t;
  out[6] = a[6] * mt + b[6] * t;
  out[7] = a[7] * mt + b[7] * t;

  return out;
}

/**
 * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a dual quat to calculate inverse of
 * @returns {quat2} out
 */
function invert(out, a) {
  var sqlen = squaredLength(a);
  out[0] = -a[0] / sqlen;
  out[1] = -a[1] / sqlen;
  out[2] = -a[2] / sqlen;
  out[3] = a[3] / sqlen;
  out[4] = -a[4] / sqlen;
  out[5] = -a[5] / sqlen;
  out[6] = -a[6] / sqlen;
  out[7] = a[7] / sqlen;
  return out;
}

/**
 * Calculates the conjugate of a dual quat
 * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.
 *
 * @param {quat2} out the receiving quaternion
 * @param {quat2} a quat to calculate conjugate of
 * @returns {quat2} out
 */
function conjugate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a[3];
  out[4] = -a[4];
  out[5] = -a[5];
  out[6] = -a[6];
  out[7] = a[7];
  return out;
}

/**
 * Calculates the length of a dual quat
 *
 * @param {quat2} a dual quat to calculate length of
 * @returns {Number} length of a
 * @function
 */
var length = _quat_js__WEBPACK_IMPORTED_MODULE_1__["length"];

/**
 * Alias for {@link quat2.length}
 * @function
 */
var len = length;

/**
 * Calculates the squared length of a dual quat
 *
 * @param {quat2} a dual quat to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */
var squaredLength = _quat_js__WEBPACK_IMPORTED_MODULE_1__["squaredLength"];

/**
 * Alias for {@link quat2.squaredLength}
 * @function
 */
var sqrLen = squaredLength;

/**
 * Normalize a dual quat
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {quat2} a dual quaternion to normalize
 * @returns {quat2} out
 * @function
 */
function normalize(out, a) {
  var magnitude = squaredLength(a);
  if (magnitude > 0) {
    magnitude = Math.sqrt(magnitude);

    var a0 = a[0] / magnitude;
    var a1 = a[1] / magnitude;
    var a2 = a[2] / magnitude;
    var a3 = a[3] / magnitude;

    var b0 = a[4];
    var b1 = a[5];
    var b2 = a[6];
    var b3 = a[7];

    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;

    out[0] = a0;
    out[1] = a1;
    out[2] = a2;
    out[3] = a3;

    out[4] = (b0 - a0 * a_dot_b) / magnitude;
    out[5] = (b1 - a1 * a_dot_b) / magnitude;
    out[6] = (b2 - a2 * a_dot_b) / magnitude;
    out[7] = (b3 - a3 * a_dot_b) / magnitude;
  }
  return out;
}

/**
 * Returns a string representation of a dual quatenion
 *
 * @param {quat2} a dual quaternion to represent as a string
 * @returns {String} string representation of the dual quat
 */
function str(a) {
  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';
}

/**
 * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {quat2} a the first dual quaternion.
 * @param {quat2} b the second dual quaternion.
 * @returns {Boolean} true if the dual quaternions are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];
}

/**
 * Returns whether or not the dual quaternions have approximately the same elements in the same position.
 *
 * @param {quat2} a the first dual quat.
 * @param {quat2} b the second dual quat.
 * @returns {Boolean} true if the dual quats are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a7), Math.abs(b7));
}

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/vec2.js":
/*!*******************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/vec2.js ***!
  \*******************************************************/
/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, cross, lerp, random, transformMat2, transformMat2d, transformMat3, transformMat4, rotate, angle, str, exactEquals, equals, len, sub, mul, div, dist, sqrDist, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat2", function() { return transformMat2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat2d", function() { return transformMat2d; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat3", function() { return transformMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotate", function() { return rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");


/**
 * 2 Dimensional Vector
 * @module vec2
 */

/**
 * Creates a new, empty vec2
 *
 * @returns {vec2} a new 2D vector
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](2);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
  }
  return out;
}

/**
 * Creates a new vec2 initialized with values from an existing vector
 *
 * @param {vec2} a vector to clone
 * @returns {vec2} a new 2D vector
 */
function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](2);
  out[0] = a[0];
  out[1] = a[1];
  return out;
}

/**
 * Creates a new vec2 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} a new 2D vector
 */
function fromValues(x, y) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](2);
  out[0] = x;
  out[1] = y;
  return out;
}

/**
 * Copy the values from one vec2 to another
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the source vector
 * @returns {vec2} out
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  return out;
}

/**
 * Set the components of a vec2 to the given values
 *
 * @param {vec2} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} out
 */
function set(out, x, y) {
  out[0] = x;
  out[1] = y;
  return out;
}

/**
 * Adds two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  return out;
}

/**
 * Subtracts vector b from vector a
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  return out;
}

/**
 * Multiplies two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  return out;
}

/**
 * Divides two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  return out;
}

/**
 * Math.ceil the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to ceil
 * @returns {vec2} out
 */
function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  return out;
}

/**
 * Math.floor the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to floor
 * @returns {vec2} out
 */
function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  return out;
}

/**
 * Returns the minimum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  return out;
}

/**
 * Returns the maximum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec2} out
 */
function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  return out;
}

/**
 * Math.round the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to round
 * @returns {vec2} out
 */
function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  return out;
}

/**
 * Scales a vec2 by a scalar number
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec2} out
 */
function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  return out;
}

/**
 * Adds two vec2's after scaling the second operand by a scalar value
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec2} out
 */
function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  return out;
}

/**
 * Calculates the euclidian distance between two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} distance between a and b
 */
function distance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return Math.sqrt(x * x + y * y);
}

/**
 * Calculates the squared euclidian distance between two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} squared distance between a and b
 */
function squaredDistance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return x * x + y * y;
}

/**
 * Calculates the length of a vec2
 *
 * @param {vec2} a vector to calculate length of
 * @returns {Number} length of a
 */
function length(a) {
  var x = a[0],
      y = a[1];
  return Math.sqrt(x * x + y * y);
}

/**
 * Calculates the squared length of a vec2
 *
 * @param {vec2} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
function squaredLength(a) {
  var x = a[0],
      y = a[1];
  return x * x + y * y;
}

/**
 * Negates the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to negate
 * @returns {vec2} out
 */
function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  return out;
}

/**
 * Returns the inverse of the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to invert
 * @returns {vec2} out
 */
function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  return out;
}

/**
 * Normalize a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a vector to normalize
 * @returns {vec2} out
 */
function normalize(out, a) {
  var x = a[0],
      y = a[1];
  var len = x * x + y * y;
  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
    out[0] = a[0] * len;
    out[1] = a[1] * len;
  }
  return out;
}

/**
 * Calculates the dot product of two vec2's
 *
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {Number} dot product of a and b
 */
function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1];
}

/**
 * Computes the cross product of two vec2's
 * Note that the cross product must by definition produce a 3D vector
 *
 * @param {vec3} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @returns {vec3} out
 */
function cross(out, a, b) {
  var z = a[0] * b[1] - a[1] * b[0];
  out[0] = out[1] = 0;
  out[2] = z;
  return out;
}

/**
 * Performs a linear interpolation between two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the first operand
 * @param {vec2} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec2} out
 */
function lerp(out, a, b, t) {
  var ax = a[0],
      ay = a[1];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  return out;
}

/**
 * Generates a random vector with the given scale
 *
 * @param {vec2} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec2} out
 */
function random(out, scale) {
  scale = scale || 1.0;
  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2.0 * Math.PI;
  out[0] = Math.cos(r) * scale;
  out[1] = Math.sin(r) * scale;
  return out;
}

/**
 * Transforms the vec2 with a mat2
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat2} m matrix to transform with
 * @returns {vec2} out
 */
function transformMat2(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y;
  out[1] = m[1] * x + m[3] * y;
  return out;
}

/**
 * Transforms the vec2 with a mat2d
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat2d} m matrix to transform with
 * @returns {vec2} out
 */
function transformMat2d(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y + m[4];
  out[1] = m[1] * x + m[3] * y + m[5];
  return out;
}

/**
 * Transforms the vec2 with a mat3
 * 3rd vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat3} m matrix to transform with
 * @returns {vec2} out
 */
function transformMat3(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[3] * y + m[6];
  out[1] = m[1] * x + m[4] * y + m[7];
  return out;
}

/**
 * Transforms the vec2 with a mat4
 * 3rd vector component is implicitly '0'
 * 4th vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {vec2} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec2} out
 */
function transformMat4(out, a, m) {
  var x = a[0];
  var y = a[1];
  out[0] = m[0] * x + m[4] * y + m[12];
  out[1] = m[1] * x + m[5] * y + m[13];
  return out;
}

/**
 * Rotate a 2D vector
 * @param {vec2} out The receiving vec2
 * @param {vec2} a The vec2 point to rotate
 * @param {vec2} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec2} out
 */
function rotate(out, a, b, c) {
  //Translate point to the origin
  var p0 = a[0] - b[0],
      p1 = a[1] - b[1],
      sinC = Math.sin(c),
      cosC = Math.cos(c);

  //perform rotation and translate to correct position
  out[0] = p0 * cosC - p1 * sinC + b[0];
  out[1] = p0 * sinC + p1 * cosC + b[1];

  return out;
}

/**
 * Get the angle between two 2D vectors
 * @param {vec2} a The first operand
 * @param {vec2} b The second operand
 * @returns {Number} The angle in radians
 */
function angle(a, b) {
  var x1 = a[0],
      y1 = a[1],
      x2 = b[0],
      y2 = b[1];

  var len1 = x1 * x1 + y1 * y1;
  if (len1 > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len1 = 1 / Math.sqrt(len1);
  }

  var len2 = x2 * x2 + y2 * y2;
  if (len2 > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len2 = 1 / Math.sqrt(len2);
  }

  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;

  if (cosine > 1.0) {
    return 0;
  } else if (cosine < -1.0) {
    return Math.PI;
  } else {
    return Math.acos(cosine);
  }
}

/**
 * Returns a string representation of a vector
 *
 * @param {vec2} a vector to represent as a string
 * @returns {String} string representation of the vector
 */
function str(a) {
  return 'vec2(' + a[0] + ', ' + a[1] + ')';
}

/**
 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
 *
 * @param {vec2} a The first vector.
 * @param {vec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1];
}

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec2} a The first vector.
 * @param {vec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1];
  var b0 = b[0],
      b1 = b[1];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1));
}

/**
 * Alias for {@link vec2.length}
 * @function
 */
var len = length;

/**
 * Alias for {@link vec2.subtract}
 * @function
 */
var sub = subtract;

/**
 * Alias for {@link vec2.multiply}
 * @function
 */
var mul = multiply;

/**
 * Alias for {@link vec2.divide}
 * @function
 */
var div = divide;

/**
 * Alias for {@link vec2.distance}
 * @function
 */
var dist = distance;

/**
 * Alias for {@link vec2.squaredDistance}
 * @function
 */
var sqrDist = squaredDistance;

/**
 * Alias for {@link vec2.squaredLength}
 * @function
 */
var sqrLen = squaredLength;

/**
 * Perform some operation over an array of vec2s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
var forEach = function () {
  var vec = create();

  return function (a, stride, offset, count, fn, arg) {
    var i = void 0,
        l = void 0;
    if (!stride) {
      stride = 2;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];vec[1] = a[i + 1];
      fn(vec, vec, arg);
      a[i] = vec[0];a[i + 1] = vec[1];
    }

    return a;
  };
}();

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/vec3.js":
/*!*******************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/vec3.js ***!
  \*******************************************************/
/*! exports provided: create, clone, length, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, squaredLength, negate, inverse, normalize, dot, cross, lerp, hermite, bezier, random, transformMat4, transformMat3, transformQuat, rotateX, rotateY, rotateZ, angle, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return cross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hermite", function() { return hermite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bezier", function() { return bezier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat3", function() { return transformMat3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformQuat", function() { return transformQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateX", function() { return rotateX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateY", function() { return rotateY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateZ", function() { return rotateZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");


/**
 * 3 Dimensional Vector
 * @module vec3
 */

/**
 * Creates a new, empty vec3
 *
 * @returns {vec3} a new 3D vector
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
  }
  return out;
}

/**
 * Creates a new vec3 initialized with values from an existing vector
 *
 * @param {vec3} a vector to clone
 * @returns {vec3} a new 3D vector
 */
function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}

/**
 * Calculates the length of a vec3
 *
 * @param {vec3} a vector to calculate length of
 * @returns {Number} length of a
 */
function length(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return Math.sqrt(x * x + y * y + z * z);
}

/**
 * Creates a new vec3 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} a new 3D vector
 */
function fromValues(x, y, z) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](3);
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}

/**
 * Copy the values from one vec3 to another
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the source vector
 * @returns {vec3} out
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}

/**
 * Set the components of a vec3 to the given values
 *
 * @param {vec3} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} out
 */
function set(out, x, y, z) {
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}

/**
 * Adds two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  return out;
}

/**
 * Subtracts vector b from vector a
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  return out;
}

/**
 * Multiplies two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  out[2] = a[2] * b[2];
  return out;
}

/**
 * Divides two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  out[2] = a[2] / b[2];
  return out;
}

/**
 * Math.ceil the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to ceil
 * @returns {vec3} out
 */
function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  out[2] = Math.ceil(a[2]);
  return out;
}

/**
 * Math.floor the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to floor
 * @returns {vec3} out
 */
function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  out[2] = Math.floor(a[2]);
  return out;
}

/**
 * Returns the minimum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  return out;
}

/**
 * Returns the maximum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  return out;
}

/**
 * Math.round the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to round
 * @returns {vec3} out
 */
function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  out[2] = Math.round(a[2]);
  return out;
}

/**
 * Scales a vec3 by a scalar number
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec3} out
 */
function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  return out;
}

/**
 * Adds two vec3's after scaling the second operand by a scalar value
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec3} out
 */
function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  return out;
}

/**
 * Calculates the euclidian distance between two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} distance between a and b
 */
function distance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return Math.sqrt(x * x + y * y + z * z);
}

/**
 * Calculates the squared euclidian distance between two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} squared distance between a and b
 */
function squaredDistance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return x * x + y * y + z * z;
}

/**
 * Calculates the squared length of a vec3
 *
 * @param {vec3} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
function squaredLength(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return x * x + y * y + z * z;
}

/**
 * Negates the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to negate
 * @returns {vec3} out
 */
function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  return out;
}

/**
 * Returns the inverse of the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to invert
 * @returns {vec3} out
 */
function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  return out;
}

/**
 * Normalize a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a vector to normalize
 * @returns {vec3} out
 */
function normalize(out, a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var len = x * x + y * y + z * z;
  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
    out[0] = a[0] * len;
    out[1] = a[1] * len;
    out[2] = a[2] * len;
  }
  return out;
}

/**
 * Calculates the dot product of two vec3's
 *
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {Number} dot product of a and b
 */
function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

/**
 * Computes the cross product of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @returns {vec3} out
 */
function cross(out, a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2];
  var bx = b[0],
      by = b[1],
      bz = b[2];

  out[0] = ay * bz - az * by;
  out[1] = az * bx - ax * bz;
  out[2] = ax * by - ay * bx;
  return out;
}

/**
 * Performs a linear interpolation between two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */
function lerp(out, a, b, t) {
  var ax = a[0];
  var ay = a[1];
  var az = a[2];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  out[2] = az + t * (b[2] - az);
  return out;
}

/**
 * Performs a hermite interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {vec3} c the third operand
 * @param {vec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */
function hermite(out, a, b, c, d, t) {
  var factorTimes2 = t * t;
  var factor1 = factorTimes2 * (2 * t - 3) + 1;
  var factor2 = factorTimes2 * (t - 2) + t;
  var factor3 = factorTimes2 * (t - 1);
  var factor4 = factorTimes2 * (3 - 2 * t);

  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;

  return out;
}

/**
 * Performs a bezier interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the first operand
 * @param {vec3} b the second operand
 * @param {vec3} c the third operand
 * @param {vec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */
function bezier(out, a, b, c, d, t) {
  var inverseFactor = 1 - t;
  var inverseFactorTimesTwo = inverseFactor * inverseFactor;
  var factorTimes2 = t * t;
  var factor1 = inverseFactorTimesTwo * inverseFactor;
  var factor2 = 3 * t * inverseFactorTimesTwo;
  var factor3 = 3 * factorTimes2 * inverseFactor;
  var factor4 = factorTimes2 * t;

  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;

  return out;
}

/**
 * Generates a random vector with the given scale
 *
 * @param {vec3} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec3} out
 */
function random(out, scale) {
  scale = scale || 1.0;

  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2.0 * Math.PI;
  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2.0 - 1.0;
  var zScale = Math.sqrt(1.0 - z * z) * scale;

  out[0] = Math.cos(r) * zScale;
  out[1] = Math.sin(r) * zScale;
  out[2] = z * scale;
  return out;
}

/**
 * Transforms the vec3 with a mat4.
 * 4th vector component is implicitly '1'
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec3} out
 */
function transformMat4(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  var w = m[3] * x + m[7] * y + m[11] * z + m[15];
  w = w || 1.0;
  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
  return out;
}

/**
 * Transforms the vec3 with a mat3.
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {mat3} m the 3x3 matrix to transform with
 * @returns {vec3} out
 */
function transformMat3(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  out[0] = x * m[0] + y * m[3] + z * m[6];
  out[1] = x * m[1] + y * m[4] + z * m[7];
  out[2] = x * m[2] + y * m[5] + z * m[8];
  return out;
}

/**
 * Transforms the vec3 with a quat
 * Can also be used for dual quaternions. (Multiply it with the real part)
 *
 * @param {vec3} out the receiving vector
 * @param {vec3} a the vector to transform
 * @param {quat} q quaternion to transform with
 * @returns {vec3} out
 */
function transformQuat(out, a, q) {
  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3];
  var x = a[0],
      y = a[1],
      z = a[2];
  // var qvec = [qx, qy, qz];
  // var uv = vec3.cross([], qvec, a);
  var uvx = qy * z - qz * y,
      uvy = qz * x - qx * z,
      uvz = qx * y - qy * x;
  // var uuv = vec3.cross([], qvec, uv);
  var uuvx = qy * uvz - qz * uvy,
      uuvy = qz * uvx - qx * uvz,
      uuvz = qx * uvy - qy * uvx;
  // vec3.scale(uv, uv, 2 * w);
  var w2 = qw * 2;
  uvx *= w2;
  uvy *= w2;
  uvz *= w2;
  // vec3.scale(uuv, uuv, 2);
  uuvx *= 2;
  uuvy *= 2;
  uuvz *= 2;
  // return vec3.add(out, a, vec3.add(out, uv, uuv));
  out[0] = x + uvx + uuvx;
  out[1] = y + uvy + uuvy;
  out[2] = z + uvz + uuvz;
  return out;
}

/**
 * Rotate a 3D vector around the x-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
function rotateX(out, a, b, c) {
  var p = [],
      r = [];
  //Translate point to the origin
  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2];

  //perform rotation
  r[0] = p[0];
  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);
  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);

  //translate to correct position
  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];

  return out;
}

/**
 * Rotate a 3D vector around the y-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
function rotateY(out, a, b, c) {
  var p = [],
      r = [];
  //Translate point to the origin
  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2];

  //perform rotation
  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);
  r[1] = p[1];
  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);

  //translate to correct position
  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];

  return out;
}

/**
 * Rotate a 3D vector around the z-axis
 * @param {vec3} out The receiving vec3
 * @param {vec3} a The vec3 point to rotate
 * @param {vec3} b The origin of the rotation
 * @param {Number} c The angle of rotation
 * @returns {vec3} out
 */
function rotateZ(out, a, b, c) {
  var p = [],
      r = [];
  //Translate point to the origin
  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2];

  //perform rotation
  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);
  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);
  r[2] = p[2];

  //translate to correct position
  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];

  return out;
}

/**
 * Get the angle between two 3D vectors
 * @param {vec3} a The first operand
 * @param {vec3} b The second operand
 * @returns {Number} The angle in radians
 */
function angle(a, b) {
  var tempA = fromValues(a[0], a[1], a[2]);
  var tempB = fromValues(b[0], b[1], b[2]);

  normalize(tempA, tempA);
  normalize(tempB, tempB);

  var cosine = dot(tempA, tempB);

  if (cosine > 1.0) {
    return 0;
  } else if (cosine < -1.0) {
    return Math.PI;
  } else {
    return Math.acos(cosine);
  }
}

/**
 * Returns a string representation of a vector
 *
 * @param {vec3} a vector to represent as a string
 * @returns {String} string representation of the vector
 */
function str(a) {
  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';
}

/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {vec3} a The first vector.
 * @param {vec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
}

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec3} a The first vector.
 * @param {vec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2));
}

/**
 * Alias for {@link vec3.subtract}
 * @function
 */
var sub = subtract;

/**
 * Alias for {@link vec3.multiply}
 * @function
 */
var mul = multiply;

/**
 * Alias for {@link vec3.divide}
 * @function
 */
var div = divide;

/**
 * Alias for {@link vec3.distance}
 * @function
 */
var dist = distance;

/**
 * Alias for {@link vec3.squaredDistance}
 * @function
 */
var sqrDist = squaredDistance;

/**
 * Alias for {@link vec3.length}
 * @function
 */
var len = length;

/**
 * Alias for {@link vec3.squaredLength}
 * @function
 */
var sqrLen = squaredLength;

/**
 * Perform some operation over an array of vec3s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
var forEach = function () {
  var vec = create();

  return function (a, stride, offset, count, fn, arg) {
    var i = void 0,
        l = void 0;
    if (!stride) {
      stride = 3;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];
      fn(vec, vec, arg);
      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];
    }

    return a;
  };
}();

/***/ }),

/***/ "../node_modules/gl-matrix/lib/gl-matrix/vec4.js":
/*!*******************************************************!*\
  !*** ../node_modules/gl-matrix/lib/gl-matrix/vec4.js ***!
  \*******************************************************/
/*! exports provided: create, clone, fromValues, copy, set, add, subtract, multiply, divide, ceil, floor, min, max, round, scale, scaleAndAdd, distance, squaredDistance, length, squaredLength, negate, inverse, normalize, dot, lerp, random, transformMat4, transformQuat, str, exactEquals, equals, sub, mul, div, dist, sqrDist, len, sqrLen, forEach */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clone", function() { return clone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromValues", function() { return fromValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copy", function() { return copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subtract", function() { return subtract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "divide", function() { return divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleAndAdd", function() { return scaleAndAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredDistance", function() { return squaredDistance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "squaredLength", function() { return squaredLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "negate", function() { return negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalize", function() { return normalize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dot", function() { return dot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lerp", function() { return lerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformMat4", function() { return transformMat4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformQuat", function() { return transformQuat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "str", function() { return str; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exactEquals", function() { return exactEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equals", function() { return equals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sub", function() { return sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mul", function() { return mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "div", function() { return div; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrDist", function() { return sqrDist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "len", function() { return len; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrLen", function() { return sqrLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forEach", function() { return forEach; });
/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ "../node_modules/gl-matrix/lib/gl-matrix/common.js");


/**
 * 4 Dimensional Vector
 * @module vec4
 */

/**
 * Creates a new, empty vec4
 *
 * @returns {vec4} a new 4D vector
 */
function create() {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  if (_common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"] != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
  }
  return out;
}

/**
 * Creates a new vec4 initialized with values from an existing vector
 *
 * @param {vec4} a vector to clone
 * @returns {vec4} a new 4D vector
 */
function clone(a) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}

/**
 * Creates a new vec4 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} a new 4D vector
 */
function fromValues(x, y, z, w) {
  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__["ARRAY_TYPE"](4);
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = w;
  return out;
}

/**
 * Copy the values from one vec4 to another
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the source vector
 * @returns {vec4} out
 */
function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}

/**
 * Set the components of a vec4 to the given values
 *
 * @param {vec4} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} out
 */
function set(out, x, y, z, w) {
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = w;
  return out;
}

/**
 * Adds two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  return out;
}

/**
 * Subtracts vector b from vector a
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  return out;
}

/**
 * Multiplies two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  out[2] = a[2] * b[2];
  out[3] = a[3] * b[3];
  return out;
}

/**
 * Divides two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  out[2] = a[2] / b[2];
  out[3] = a[3] / b[3];
  return out;
}

/**
 * Math.ceil the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to ceil
 * @returns {vec4} out
 */
function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  out[2] = Math.ceil(a[2]);
  out[3] = Math.ceil(a[3]);
  return out;
}

/**
 * Math.floor the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to floor
 * @returns {vec4} out
 */
function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  out[2] = Math.floor(a[2]);
  out[3] = Math.floor(a[3]);
  return out;
}

/**
 * Returns the minimum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  out[3] = Math.min(a[3], b[3]);
  return out;
}

/**
 * Returns the maximum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {vec4} out
 */
function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  out[3] = Math.max(a[3], b[3]);
  return out;
}

/**
 * Math.round the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to round
 * @returns {vec4} out
 */
function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  out[2] = Math.round(a[2]);
  out[3] = Math.round(a[3]);
  return out;
}

/**
 * Scales a vec4 by a scalar number
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec4} out
 */
function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  return out;
}

/**
 * Adds two vec4's after scaling the second operand by a scalar value
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec4} out
 */
function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  return out;
}

/**
 * Calculates the euclidian distance between two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} distance between a and b
 */
function distance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  var w = b[3] - a[3];
  return Math.sqrt(x * x + y * y + z * z + w * w);
}

/**
 * Calculates the squared euclidian distance between two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} squared distance between a and b
 */
function squaredDistance(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  var w = b[3] - a[3];
  return x * x + y * y + z * z + w * w;
}

/**
 * Calculates the length of a vec4
 *
 * @param {vec4} a vector to calculate length of
 * @returns {Number} length of a
 */
function length(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  return Math.sqrt(x * x + y * y + z * z + w * w);
}

/**
 * Calculates the squared length of a vec4
 *
 * @param {vec4} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */
function squaredLength(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  return x * x + y * y + z * z + w * w;
}

/**
 * Negates the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to negate
 * @returns {vec4} out
 */
function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = -a[3];
  return out;
}

/**
 * Returns the inverse of the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to invert
 * @returns {vec4} out
 */
function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  out[3] = 1.0 / a[3];
  return out;
}

/**
 * Normalize a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a vector to normalize
 * @returns {vec4} out
 */
function normalize(out, a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  var len = x * x + y * y + z * z + w * w;
  if (len > 0) {
    len = 1 / Math.sqrt(len);
    out[0] = x * len;
    out[1] = y * len;
    out[2] = z * len;
    out[3] = w * len;
  }
  return out;
}

/**
 * Calculates the dot product of two vec4's
 *
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @returns {Number} dot product of a and b
 */
function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
}

/**
 * Performs a linear interpolation between two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the first operand
 * @param {vec4} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec4} out
 */
function lerp(out, a, b, t) {
  var ax = a[0];
  var ay = a[1];
  var az = a[2];
  var aw = a[3];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  out[2] = az + t * (b[2] - az);
  out[3] = aw + t * (b[3] - aw);
  return out;
}

/**
 * Generates a random vector with the given scale
 *
 * @param {vec4} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec4} out
 */
function random(out, scale) {
  scale = scale || 1.0;

  // Marsaglia, George. Choosing a Point from the Surface of a
  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.
  // http://projecteuclid.org/euclid.aoms/1177692644;
  var v1, v2, v3, v4;
  var s1, s2;
  do {
    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    s1 = v1 * v1 + v2 * v2;
  } while (s1 >= 1);
  do {
    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__["RANDOM"]() * 2 - 1;
    s2 = v3 * v3 + v4 * v4;
  } while (s2 >= 1);

  var d = Math.sqrt((1 - s1) / s2);
  out[0] = scale * v1;
  out[1] = scale * v2;
  out[2] = scale * v3 * d;
  out[3] = scale * v4 * d;
  return out;
}

/**
 * Transforms the vec4 with a mat4.
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to transform
 * @param {mat4} m matrix to transform with
 * @returns {vec4} out
 */
function transformMat4(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2],
      w = a[3];
  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
  return out;
}

/**
 * Transforms the vec4 with a quat
 *
 * @param {vec4} out the receiving vector
 * @param {vec4} a the vector to transform
 * @param {quat} q quaternion to transform with
 * @returns {vec4} out
 */
function transformQuat(out, a, q) {
  var x = a[0],
      y = a[1],
      z = a[2];
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3];

  // calculate quat * vec
  var ix = qw * x + qy * z - qz * y;
  var iy = qw * y + qz * x - qx * z;
  var iz = qw * z + qx * y - qy * x;
  var iw = -qx * x - qy * y - qz * z;

  // calculate result * inverse quat
  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
  out[3] = a[3];
  return out;
}

/**
 * Returns a string representation of a vector
 *
 * @param {vec4} a vector to represent as a string
 * @returns {String} string representation of the vector
 */
function str(a) {
  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
}

/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {vec4} a The first vector.
 * @param {vec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
}

/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {vec4} a The first vector.
 * @param {vec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */
function equals(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__["EPSILON"] * Math.max(1.0, Math.abs(a3), Math.abs(b3));
}

/**
 * Alias for {@link vec4.subtract}
 * @function
 */
var sub = subtract;

/**
 * Alias for {@link vec4.multiply}
 * @function
 */
var mul = multiply;

/**
 * Alias for {@link vec4.divide}
 * @function
 */
var div = divide;

/**
 * Alias for {@link vec4.distance}
 * @function
 */
var dist = distance;

/**
 * Alias for {@link vec4.squaredDistance}
 * @function
 */
var sqrDist = squaredDistance;

/**
 * Alias for {@link vec4.length}
 * @function
 */
var len = length;

/**
 * Alias for {@link vec4.squaredLength}
 * @function
 */
var sqrLen = squaredLength;

/**
 * Perform some operation over an array of vec4s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */
var forEach = function () {
  var vec = create();

  return function (a, stride, offset, count, fn, arg) {
    var i = void 0,
        l = void 0;
    if (!stride) {
      stride = 4;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];
      fn(vec, vec, arg);
      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];
    }

    return a;
  };
}();

/***/ }),

/***/ "../node_modules/process/browser.js":
/*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "../node_modules/reflect-metadata/Reflect.js":
/*!***************************************************!*\
  !*** ../node_modules/reflect-metadata/Reflect.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof global === "object" ? global :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "../node_modules/process/browser.js"), __webpack_require__(/*! ./../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./config.js":
/*!*******************!*\
  !*** ./config.js ***!
  \*******************/
/*! exports provided: config */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config", function() { return config; });
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ "./core/index.js");
/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve */ "./curve/index.js");
/* harmony import */ var _eve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eve */ "./eve/index.js");
/* harmony import */ var _interior__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interior */ "./interior/index.js");
/* harmony import */ var _particle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./particle */ "./particle/index.js");
/* harmony import */ var _sof__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sof */ "./sof/index.js");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./state */ "./state/index.js");
/* harmony import */ var _global_class__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./global/class */ "./global/class/index.js");
/* harmony import */ var _global_math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./global/math */ "./global/math/index.js");









/**
 * Register global configurations
 */

const config = {
  debug: false,
  device: {
    "textureQuality": 0,
    "shaderQuality": "hi",
    "antialiasing": true,
    "anisotropicFiltering": true,
    "webgl2": true,
    "webvr": false,
    "performanceClock": true
  },
  resMan: {
    "systemMirror": false,
    "autoPurgeResources": true,
    "purgeTime": 60,
    "maxPrepareTime": 0.05
  },
  logger: {
    "name": "CCPWGL2",
    "history": 50,
    "throttle": 10,
    "display": true,
    "visible": {
      "error": true,
      "warning": false,
      "log": false,
      "info": false,
      "debug": false
    }
  },
  store: {
    path: {
      "res": "https://developers.eveonline.com/ccpwgl/assetpath/1097993/",
      // Set to you local cdn cache server path
      "cdn": "http://localhost:3000/"
    },
    extension: {
      "sm_hi": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2EffectRes"],
      "sm_lo": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2EffectRes"],
      "wbg": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryRes"],
      "png": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2TextureRes"],
      "dds": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2TextureRes"],
      "cube": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2TextureRes"],
      "mp4": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2VideoRes"],
      "ogg": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2VideoRes"],
      "webm": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2VideoRes"],
      "black": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2LoadingObject"],
      "red": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2LoadingObject"]
    },
    class: [_core__WEBPACK_IMPORTED_MODULE_0__, _curve__WEBPACK_IMPORTED_MODULE_1__, _eve__WEBPACK_IMPORTED_MODULE_2__, _interior__WEBPACK_IMPORTED_MODULE_3__, _particle__WEBPACK_IMPORTED_MODULE_4__, _sof__WEBPACK_IMPORTED_MODULE_5__, _state__WEBPACK_IMPORTED_MODULE_6__, {
      Tw2EventEmitter: _global_class__WEBPACK_IMPORTED_MODULE_7__["Tw2EventEmitter"],
      Tw2Notifications: _global_class__WEBPACK_IMPORTED_MODULE_7__["Tw2Notifications"]
    }],
    type: {
      "float": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2FloatParameter"],
      "number": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2FloatParameter"],
      "texture": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2TextureParameter"],
      "vector2": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2Vector2Parameter"],
      "vector3": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2Vector3Parameter"],
      "vector4": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2Vector4Parameter"],
      "matrix4": _core__WEBPACK_IMPORTED_MODULE_0__["Tw2Matrix4Parameter"]
    },
    variable: {
      "WorldMat": _global_math__WEBPACK_IMPORTED_MODULE_8__["mat4"].create(),
      "ViewMat": _global_math__WEBPACK_IMPORTED_MODULE_8__["mat4"].create(),
      "ProjectionMat": _global_math__WEBPACK_IMPORTED_MODULE_8__["mat4"].create(),
      "ViewProjectionMat": _global_math__WEBPACK_IMPORTED_MODULE_8__["mat4"].create(),
      "ViewportSize": _global_math__WEBPACK_IMPORTED_MODULE_8__["vec4"].create(),
      "Time": _global_math__WEBPACK_IMPORTED_MODULE_8__["vec4"].create(),
      "u_DecalMatrix": _global_math__WEBPACK_IMPORTED_MODULE_8__["mat4"].create(),
      "u_InvDecalMatrix": _global_math__WEBPACK_IMPORTED_MODULE_8__["mat4"].create(),
      "EveSpaceSceneEnvMap": "",
      "EnvMap1": "",
      "EnvMap2": "",
      "EnvMap3": "",
      "ShadowLightness": 0,
      "OccluderValue": _global_math__WEBPACK_IMPORTED_MODULE_8__["vec4"].fromValues(1, 1, 0, 0),
      "LensflareFxOccScale": _global_math__WEBPACK_IMPORTED_MODULE_8__["vec4"].fromValues(1, 1, 0, 0),
      "LensflareFxDirectionScale": _global_math__WEBPACK_IMPORTED_MODULE_8__["vec4"].create()
    }
  }
};

/***/ }),

/***/ "./core/Tr2DistanceTracker.js":
/*!************************************!*\
  !*** ./core/Tr2DistanceTracker.js ***!
  \************************************/
/*! exports provided: Tr2DistanceTracker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2DistanceTracker", function() { return Tr2DistanceTracker; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2DistanceTracker
 * @ccp Tr2DistanceTracker
 *
 * @property {String} name
 * @property {vec3} direction
 * @property {vec3} targetPosition
 */

class Tr2DistanceTracker {
  constructor() {
    this.name = "";
    this.direction = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.targetPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["direction", r.vector3], ["targetPosition", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2DistanceTracker.__isStaging = 4;

/***/ }),

/***/ "./core/Tr2RuntimeInstanceData.js":
/*!****************************************!*\
  !*** ./core/Tr2RuntimeInstanceData.js ***!
  \****************************************/
/*! exports provided: Tr2RuntimeInstanceData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2RuntimeInstanceData", function() { return Tr2RuntimeInstanceData; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _vertex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vertex */ "./core/vertex/index.js");
/* harmony import */ var particle_element_Tw2ParticleElementDeclaration__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! particle/element/Tw2ParticleElementDeclaration */ "./particle/element/Tw2ParticleElementDeclaration.js");



/**
 * Tr2RuntimeInstanceData
 * Todo: Find out if this is actually needed anywhere
 *
 * @property {Number} _count
 * @property {Float32Array} _data
 * @property {Boolean} _dirty
 * @property {Tw2VertexDeclaration} _declaration
 * @property {WebGLBuffer} _vb
 * @property {Number} _vertexStride
 */

class Tr2RuntimeInstanceData extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this._count = 0;
    this._data = null;
    this._dirty = true;
    this._declaration = null;
    this._vb = null;
    this._vertexStride = 0;
  }

  /**
   * GetMaxInstanceCount
   * @returns {number}
   */
  GetMaxInstanceCount() {
    return this._data ? this._data.length : 1;
  }
  /**
   * SetElementLayout
   * @param decl
   */


  SetElementLayout(decl) {
    if (this._vb) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._vb);
      this._vb = null;
    }

    this._vertexStride = 0;
    this._declaration = new _vertex__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"]();

    for (let i = 0; i < decl.length; ++i) {
      const element = new particle_element_Tw2ParticleElementDeclaration__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElementDeclaration"]();
      element.elementType = decl[i][0];
      element.dimension = decl[i][2];
      element.usageIndex = decl[i][1];
      const d = element.GetDeclaration();
      d.offset = this._vertexStride * 4;

      this._declaration.elements.push(d);

      this._vertexStride += element.dimension;
    }

    this._declaration.RebuildHash();
  }
  /**
   * SetData
   * @param data
   */


  SetData(data) {
    if (!this._declaration) {
      return;
    }

    this._data = data;
    this._count = this._data.length;
    this._dirty = true;
    this.UpdateData();
  }
  /**
   * SetItemElement
   * @param index
   * @param elementIndex
   * @param value
   * @constructor
   */


  SetItemElement(index, elementIndex, value) {
    if (this._declaration.elements[elementIndex].elements > 1) {
      for (let i = 0; i < this._declaration.elements[elementIndex].elements; ++i) {
        this._data[index][elementIndex][i] = value[i];
      }
    } else {
      this._data[index][elementIndex] = value;
    }

    this._dirty = true;
  }
  /**
   * SetItemElementRef
   * @param index
   * @param elementIndex
   * @param value
   * @constructor
   */


  SetItemElementRef(index, elementIndex, value) {
    this._data[index][elementIndex] = value;
    this._dirty = true;
  }
  /**
   * GetItemElement
   * @param index
   * @param elementIndex
   * @returns {*}
   */


  GetItemElement(index, elementIndex) {
    return this._data[index][elementIndex];
  }
  /**
   * UpdateData
   */


  UpdateData() {
    if (!this._dirty || !this._declaration) {
      return;
    }

    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl,
          vbData = new Float32Array(this._data.length * this._vertexStride);
    let offset = 0;

    for (let i = 0; i < this._data.length; ++i) {
      for (let j = 0; j < this._declaration.elements.length; ++j) {
        if (this._declaration.elements[j].elements === 1) {
          vbData[offset++] = this._data[i][j];
        } else {
          for (let k = 0; k < this._declaration.elements[j].elements; ++k) {
            vbData[offset++] = this._data[i][j][k];
          }
        }
      }
    }

    if (!this._vb) {
      this._vb = gl.createBuffer();
    }

    gl.bindBuffer(gl.ARRAY_BUFFER, this._vb);
    gl.bufferData(gl.ARRAY_BUFFER, vbData, gl.STATIC_DRAW);
    gl.bindBuffer(gl.ARRAY_BUFFER, null);
    this._dirty = false;
  }
  /**
   * Unloads the webgl buffer
   */


  Unload() {
    if (this._vb) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._vb);
      this._vb = null;
    }
  }
  /**
   * GetInstanceBuffer
   * @returns {WebglArrayBuffer}
   */


  GetInstanceBuffer() {
    return this._vb;
  }
  /**
   * GetInstanceDeclaration
   * @returns {Tw2VertexDeclaration}
   */


  GetInstanceDeclaration() {
    return this._declaration;
  }
  /**
   * GetInstanceStride
   * @returns {number}
   */


  GetInstanceStride() {
    return this._vertexStride * 4;
  }
  /**
   * GetInstanceCount
   * @returns {number}
   */


  GetInstanceCount() {
    return this._count;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [];
  }

}

/***/ }),

/***/ "./core/TriObserverLocal.js":
/*!**********************************!*\
  !*** ./core/TriObserverLocal.js ***!
  \**********************************/
/*! exports provided: TriObserverLocal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TriObserverLocal", function() { return TriObserverLocal; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * TriObserverLocal
 * Todo: Implement
 *
 * @property {vec3} front -
 */

class TriObserverLocal extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.front = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["front", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
TriObserverLocal.__isStaging = 4;

/***/ }),

/***/ "./core/Tw2Error.js":
/*!**************************!*\
  !*** ./core/Tw2Error.js ***!
  \**************************/
/*! exports provided: Tw2Error, ErrWebglContext, ErrWebxrNotSupported, ErrWebxrDeviceNotFound, ErrWebxrRequestFailed, ErrWebxrSessionNotSupported, ErrStoreKeyReserved, ErrStoreValueInvalid, ErrStoreValueMissing, ErrStoreInvalid, ErrHTTPRequest, ErrHTTPStatus, ErrBinaryFormat, ErrBinaryReaderReadError, ErrBinaryObjectTypeNotFound, ErrGeometryMeshMissingParticleElement, ErrGeometryMeshElementComponentsMissing, ErrGeometryMeshAreaMissing, ErrGeometryMeshBoneNameInvalid, ErrGeometryMeshEffectBinding, ErrGeometryFileType, ErrResourcePrefixUnregistered, ErrResourcePrefixUndefined, ErrResourceExtensionUnregistered, ErrResourceExtensionUndefined, ErrResourceFormat, ErrShaderVersion, ErrShaderHeaderSize, ErrShaderPermutationValue, ErrShaderCompile, ErrShaderLink, ErrDeclarationValueType, ErrSingletonInstantiation, ErrInvalidDecoratorUsage, ErrAbstractClass, ErrAbstractMethod, ErrFeatureNotImplemented, ErrIndexBounds, ErrBindingValueUndefined, ErrBindingType, ErrBindingReference, ErrSOFHullNotFound, ErrSOFFactionNotFound, ErrSOFRaceNotFound, ErrSOFMaterialNotFound, ErrSOFPatternNotFound, ErrWrapped */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Error", function() { return Tw2Error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrWebglContext", function() { return ErrWebglContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrNotSupported", function() { return ErrWebxrNotSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrDeviceNotFound", function() { return ErrWebxrDeviceNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrRequestFailed", function() { return ErrWebxrRequestFailed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrSessionNotSupported", function() { return ErrWebxrSessionNotSupported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrStoreKeyReserved", function() { return ErrStoreKeyReserved; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrStoreValueInvalid", function() { return ErrStoreValueInvalid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrStoreValueMissing", function() { return ErrStoreValueMissing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrStoreInvalid", function() { return ErrStoreInvalid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrHTTPRequest", function() { return ErrHTTPRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrHTTPStatus", function() { return ErrHTTPStatus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrBinaryFormat", function() { return ErrBinaryFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrBinaryReaderReadError", function() { return ErrBinaryReaderReadError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrBinaryObjectTypeNotFound", function() { return ErrBinaryObjectTypeNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshMissingParticleElement", function() { return ErrGeometryMeshMissingParticleElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshElementComponentsMissing", function() { return ErrGeometryMeshElementComponentsMissing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshAreaMissing", function() { return ErrGeometryMeshAreaMissing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshBoneNameInvalid", function() { return ErrGeometryMeshBoneNameInvalid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshEffectBinding", function() { return ErrGeometryMeshEffectBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryFileType", function() { return ErrGeometryFileType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrResourcePrefixUnregistered", function() { return ErrResourcePrefixUnregistered; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrResourcePrefixUndefined", function() { return ErrResourcePrefixUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrResourceExtensionUnregistered", function() { return ErrResourceExtensionUnregistered; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrResourceExtensionUndefined", function() { return ErrResourceExtensionUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrResourceFormat", function() { return ErrResourceFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrShaderVersion", function() { return ErrShaderVersion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrShaderHeaderSize", function() { return ErrShaderHeaderSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrShaderPermutationValue", function() { return ErrShaderPermutationValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrShaderCompile", function() { return ErrShaderCompile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrShaderLink", function() { return ErrShaderLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrDeclarationValueType", function() { return ErrDeclarationValueType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSingletonInstantiation", function() { return ErrSingletonInstantiation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrInvalidDecoratorUsage", function() { return ErrInvalidDecoratorUsage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrAbstractClass", function() { return ErrAbstractClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrAbstractMethod", function() { return ErrAbstractMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrFeatureNotImplemented", function() { return ErrFeatureNotImplemented; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrIndexBounds", function() { return ErrIndexBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrBindingValueUndefined", function() { return ErrBindingValueUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrBindingType", function() { return ErrBindingType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrBindingReference", function() { return ErrBindingReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFHullNotFound", function() { return ErrSOFHullNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFFactionNotFound", function() { return ErrSOFFactionNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFRaceNotFound", function() { return ErrSOFRaceNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFMaterialNotFound", function() { return ErrSOFMaterialNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFPatternNotFound", function() { return ErrSOFPatternNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrWrapped", function() { return ErrWrapped; });
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global/util */ "./global/util/index.js");

const HAS_CAPTURE_STACK_TRACE = Object(global_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(Error["captureStackTrace"]);
/**
 * Tw2Error
 *
 * @property {String} name    - The error's name
 * @property {String} message - The error's message
 * @property {Object} data    - Optional error data
 * @class
 */

class Tw2Error extends Error {
  /**
   * Constructor
   * @param {String|Object} [data={}]                   - Error message or an object containing relevant data
   * @param {String} [defaultMessage='Undefined Error'] - The default error message
   */
  constructor(data = {}, defaultMessage = "Undefined error") {
    let message = defaultMessage;

    if (typeof data === "string") {
      message = data;
      data = {};
    } else if (data.message) {
      message = data.message;
      delete data.message;
    }

    super();
    this.message = Object(global_util__WEBPACK_IMPORTED_MODULE_0__["template"])(message, data);
    this.name = this.constructor.name;
    this.data = data;

    if (HAS_CAPTURE_STACK_TRACE) {
      Error["captureStackTrace"](this, Tw2Error);
    } else {
      this.stack = new Error(this.message).stack;
    }
  }
  /**
   * Emits an event on a target emitter
   * @param {*} emitter
   * @param {String} [eventName='error']
   * @returns {Tw2Error}
   */


  emitOn(emitter, eventName = "error") {
    if (emitter && emitter.emit) {
      emitter.emit(eventName, this);
    }

    return this;
  }
  /**
   * Class category
   * @type {String}
   */


}
/**
 * Throws when unable to create a webgl context
 */

Tw2Error.__category = "error";
class ErrWebglContext extends Tw2Error {
  constructor(data) {
    super(data, "Unable to create webgl context (%version%)");
  }

}
/**
 * Throws when webxr is not supported
 */

class ErrWebxrNotSupported extends Tw2Error {
  constructor(data) {
    super(data, "Webxr not supported");
  }

}
/**
 * Throws when a webxr device is not found
 */

class ErrWebxrDeviceNotFound extends Tw2Error {
  constructor(data) {
    super(data, "Webxr device not found");
  }

}
/**
 * Throws when there is an error requesting a webxr device
 */

class ErrWebxrRequestFailed extends Tw2Error {
  constructor(data) {
    super(data, "Webxr request failed (%err%)");
  }

}
/**
 * Throws when a webxr session type is not supported
 */

class ErrWebxrSessionNotSupported extends Tw2Error {
  constructor(data) {
    super(data, "Webxr session not supported (%err%)");
  }

}
/**
 * Throws when trying to register a reserved store key
 */

class ErrStoreKeyReserved extends Tw2Error {
  constructor(data) {
    super(data, "Reserved key for '%store%' store (%key%)");
  }

}
/**
 * Throws when trying to register an invalid store value
 */

class ErrStoreValueInvalid extends Tw2Error {
  constructor(data) {
    super(data, "Invalid value for '%store%' store key (%key%)");
  }

}
/**
 * Throws when trying to retrieve a store value that doesn't exist
 */

class ErrStoreValueMissing extends Tw2Error {
  constructor(data) {
    super(data, "Missing '%store%' store key (%key%)");
  }

}
/**
 * Throws when trying to do something with an invalid store
 */

class ErrStoreInvalid extends Tw2Error {
  constructor(data) {
    super(data, "Invalid store");
  }

}
/**
 * Throws on http request errors
 */

class ErrHTTPRequest extends Tw2Error {
  constructor(data) {
    super(data, "Communication error while requesting resource");
  }

}
/**
 * Throws on http status errors
 */

class ErrHTTPStatus extends Tw2Error {
  constructor(data) {
    super(data, "%statusText=Communication status error while loading resource% (%status%)");
  }

}
/**
 * Throws when xml is not a valid format
 */

class ErrBinaryFormat extends Tw2Error {
  constructor(data) {
    super(data, "Invalid binary format (%formatError=undefined%)");
  }

}
/**
 * Throws on binary reader read errors
 */

class ErrBinaryReaderReadError extends Tw2Error {
  constructor(data) {
    super(data, "Error reading binary (%readError=undefined%)");
  }

}
/**
 * Throws when an xml object type is undefined
 */

class ErrBinaryObjectTypeNotFound extends Tw2Error {
  constructor(data) {
    super(data, "Binary object type not found (%type%)");
  }

}
/**
 * Throws when a geometry mesh lacks an element required for a particle system
 */

class ErrGeometryMeshMissingParticleElement extends Tw2Error {
  constructor(data) {
    super(data, "Input geometry mesh lacks element required by particle system");
  }

}
/**
 * Throws when a geometry mesh element doesn't have the required number of components
 */

class ErrGeometryMeshElementComponentsMissing extends Tw2Error {
  constructor(data) {
    super(data, "Input geometry mesh elements do not have the required number of components");
  }

}
/**
 * Throws when a geometry mesh area is missing
 */

class ErrGeometryMeshAreaMissing extends Tw2Error {
  constructor(data) {
    super(data, "Geometry mesh missing expected area at index %areaIndex%");
  }

}
/**
 * Throws when a geometry mesh has an invalid bone name for a model
 */

class ErrGeometryMeshBoneNameInvalid extends Tw2Error {
  constructor(data) {
    super(data, "Geometry mesh has invalid bone name for model");
  }

}
/**
 * Throws when there is an error binding a geometry mesh to an effect
 */

class ErrGeometryMeshEffectBinding extends Tw2Error {
  constructor(data) {
    super(data, "Error binding geometry mesh to effect");
  }

}
/**
 * Throws when a geometry mesh has an invalid file type
 */

class ErrGeometryFileType extends Tw2Error {
  constructor(data) {
    super(data, "Invalid geometry file type (%fileType%)");
  }

}
/**
 * Throws when a resource path has an unregistered prefix
 */

class ErrResourcePrefixUnregistered extends Tw2Error {
  constructor(data) {
    super(data, "Unregistered resource prefix (%prefix%)");
  }

}
/**
 * Throws when a resource path has no prefix
 */

class ErrResourcePrefixUndefined extends Tw2Error {
  constructor(data) {
    super(data, "Undefined resource prefix");
  }

}
/**
 * Throws when a resource path has an unregistered file extension
 */

class ErrResourceExtensionUnregistered extends Tw2Error {
  constructor(data) {
    super(data, "Unregistered resource extension (%extension%)");
  }

}
/**
 * Throws when a resource path has no file extension
 */

class ErrResourceExtensionUndefined extends Tw2Error {
  constructor(data) {
    super(data, "Undefined resource extension");
  }

}
/**
 * Throws in invalid resource formats
 */

class ErrResourceFormat extends Tw2Error {
  constructor(data) {
    super(data, "Invalid resource format");
  }

}
/**
 * Throws when an effect has an invalid shader version
 */

class ErrShaderVersion extends Tw2Error {
  constructor(data) {
    super(data, "Invalid version of effect file (%version%)");
  }

}
/**
 * Throws when an effect has no header
 */

class ErrShaderHeaderSize extends Tw2Error {
  constructor(data) {
    super(data, "Effect file contains no compiled effects");
  }

}
/**
 * Throws when a shader has an invalid permutation value
 */

class ErrShaderPermutationValue extends Tw2Error {
  constructor(data) {
    super(data, "Invalid shader permutation value");
  }

}
/**
 * Throws when a shader cannot compile
 */

class ErrShaderCompile extends Tw2Error {
  constructor(data) {
    super(data, "Error compiling %shaderType% shader (%infoLog%)");
  }

}
/**
 * Throws when unable to link a vertex shader and fragment shader
 */

class ErrShaderLink extends Tw2Error {
  constructor(data) {
    super(data, "Error linking shaders");
  }

}
/**
 * Throws on invalid raw data declaration types
 */

class ErrDeclarationValueType extends Tw2Error {
  constructor(data) {
    super(data, "Invalid declaration value type (%declaration%:%valueType%)");
  }

}
/**
 * Throws when a class can only be instantiated once
 */

class ErrSingletonInstantiation extends Tw2Error {
  constructor(data) {
    super(data, "Cannot re-instantiate singleton (%class%)");
  }

}
/**
 * Throws when a decorators usage is invalid
 */

class ErrInvalidDecoratorUsage extends Tw2Error {
  constructor(data) {
    super(data, "Invalid decorator usage (%reason%)");
  }

}
/**
 * Throws when an abstract classes' method is not implemented directly on a child class
 */

class ErrAbstractClass extends Tw2Error {
  constructor(data) {
    super(data, "Abstract class cannot be directly instantiated (%class%)");
  }

}
/**
 * Throws when an abstract classes' method is not implemented directly on a child class
 */

class ErrAbstractMethod extends Tw2Error {
  constructor(data) {
    super(data, "Abstract class method not implemented on child class (%method%)");
  }

}
/**
 * Throws when a feature is not implemented
 */

class ErrFeatureNotImplemented extends Tw2Error {
  constructor(data) {
    super(data, "%feature=Feature% not implemented");
  }

}
/**
 * Throws when an index is out of bounds
 */

class ErrIndexBounds extends Tw2Error {
  constructor(data) {
    super(data, "Array index out of bounds");
  }

}
/**
 * Throws when there's an error binding an object
 */

class ErrBindingValueUndefined extends Tw2Error {
  constructor(data) {
    super(data, "Error binding '%name=unknown%', '%object%' property is undefined (%property%)");
  }

}
/**
 * Throws when there's an error binding a value
 */

class ErrBindingType extends Tw2Error {
  constructor(data) {
    super(data, "Error binding '%name=unknown%', cannot identify binding type");
  }

}
/**
 * Throws when trying to bind an object by it's id and it can't be found
 */

class ErrBindingReference extends Tw2Error {
  constructor(data) {
    super(data, "Error binding '%name=unknown%', could not find '%object%' object reference");
  }

}
/**
 * Fires when a sof hull is not found
 */

class ErrSOFHullNotFound extends Tw2Error {
  constructor(data) {
    super(data, "SOF Hull not found (%name%)");
  }

}
/**
 * Fires when a sof faction is not found
 */

class ErrSOFFactionNotFound extends Tw2Error {
  constructor(data) {
    super(data, "SOF Faction not found (%name%)");
  }

}
/**
 * Fires when a sof race is not found
 */

class ErrSOFRaceNotFound extends Tw2Error {
  constructor(data) {
    super(data, "SOF Race not found (%name%)");
  }

}
/**
 * Fires when a sof material is not found
 */

class ErrSOFMaterialNotFound extends Tw2Error {
  constructor(data) {
    super(data, "SOF Material not found (%name%)");
  }

}
/**
 * Fires when a sof pattern is not found
 */

class ErrSOFPatternNotFound extends Tw2Error {
  constructor(data) {
    super(data, "SOF Pattern not found (%name%)");
  }

}
/**
 * Throws when invalid wrapped objects are passed as arguments
 */

class ErrWrapped extends Tw2Error {
  constructor(data) {
    super(data, "Invalid wrapped object(s) (%reason%)");
  }

}

/***/ }),

/***/ "./core/Tw2Frustum.js":
/*!****************************!*\
  !*** ./core/Tw2Frustum.js ***!
  \****************************/
/*! exports provided: Tw2Frustum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Frustum", function() { return Tw2Frustum; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2Frustum
 *
 * @property {Array.<vec4>} planes
 * @property {vec3} viewPos
 * @property {vec3} viewDir
 * @property {Number} halfWidthProjection
 * @class
 */

class Tw2Frustum {
  constructor() {
    this.planes = [global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(), global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(), global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(), global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(), global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(), global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create()];
    this.viewPos = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.viewDir = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.halfWidthProjection = 1;
  }

  /**
   * Initializes the Tw2Frustum
   *
   * @param {mat4} view - View Matrix
   * @param {mat4} proj - Projection Matrix
   * @param {Number} viewportSize
   * @param {mat4} [viewInverse] Optional viewInverse matrix
   * @param {mat4} [viewProjection] Optional viewProjection matrix
   */
  Initialize(view, proj, viewportSize, viewInverse, viewProjection) {
    const mat4_0 = Tw2Frustum.global.mat4_0;
    const viewInv = viewInverse ? viewInverse : global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(mat4_0, view);
    this.viewPos.set(viewInv.subarray(12, 14));
    this.viewDir.set(viewInv.subarray(8, 10));
    this.halfWidthProjection = proj[0] * viewportSize * 0.5;
    const viewProj = viewProjection ? viewProjection : global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(mat4_0, proj, view);
    this.planes[0][0] = viewProj[2];
    this.planes[0][1] = viewProj[6];
    this.planes[0][2] = viewProj[10];
    this.planes[0][3] = viewProj[14];
    this.planes[1][0] = viewProj[3] + viewProj[0];
    this.planes[1][1] = viewProj[7] + viewProj[4];
    this.planes[1][2] = viewProj[11] + viewProj[8];
    this.planes[1][3] = viewProj[15] + viewProj[12];
    this.planes[2][0] = viewProj[3] - viewProj[1];
    this.planes[2][1] = viewProj[7] - viewProj[5];
    this.planes[2][2] = viewProj[11] - viewProj[9];
    this.planes[2][3] = viewProj[15] - viewProj[13];
    this.planes[3][0] = viewProj[3] - viewProj[0];
    this.planes[3][1] = viewProj[7] - viewProj[4];
    this.planes[3][2] = viewProj[11] - viewProj[8];
    this.planes[3][3] = viewProj[15] - viewProj[12];
    this.planes[4][0] = viewProj[3] + viewProj[1];
    this.planes[4][1] = viewProj[7] + viewProj[5];
    this.planes[4][2] = viewProj[11] + viewProj[9];
    this.planes[4][3] = viewProj[15] + viewProj[13];
    this.planes[5][0] = viewProj[3] - viewProj[2];
    this.planes[5][1] = viewProj[7] - viewProj[6];
    this.planes[5][2] = viewProj[11] - viewProj[10];
    this.planes[5][3] = viewProj[15] - viewProj[14];

    for (let i = 0; i < 6; ++i) {
      let len = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length(this.planes[i]);
      this.planes[i][0] /= len;
      this.planes[i][1] /= len;
      this.planes[i][2] /= len;
      this.planes[i][3] /= len;
    }
  }
  /**
   * Checks to see if a sphere is visible within the frustum
   *
   * @param {vec3} center
   * @param {Number} radius
   * @returns {Boolean}
   */


  IsSphereVisible(center, radius) {
    for (let i = 0; i < 6; ++i) {
      if (this.planes[i][0] * center[0] + this.planes[i][1] * center[1] + this.planes[i][2] * center[2] + this.planes[i][3] < -radius) {
        return false;
      }
    }

    return true;
  }
  /**
   * GetPixelSizeAcross
   *
   * @param {vec3} center
   * @param {Number} radius
   * @returns {Number}
   */


  GetPixelSizeAcross(center, radius) {
    const d = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(Tw2Frustum.global.vec3_0, this.viewPos, center);
    let depth = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(this.viewDir, d),
        epsilon = 1e-5;
    if (depth < epsilon) depth = epsilon;
    if (radius < epsilon) return 0;
    let ratio = radius / depth;
    return ratio * this.halfWidthProjection * 2;
  }
  /**
   * Global and scratch variables
   */


}
Tw2Frustum.global = {
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
};

/***/ }),

/***/ "./core/Tw2RenderTarget.js":
/*!*********************************!*\
  !*** ./core/Tw2RenderTarget.js ***!
  \*********************************/
/*! exports provided: Tw2RenderTarget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RenderTarget", function() { return Tw2RenderTarget; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _resource_Tw2TextureRes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource/Tw2TextureRes */ "./core/resource/Tw2TextureRes.js");


/**
 * Tw2RenderTarget
 *
 * @property {String|Number} _id               - the render target's id
 * @property {String} name                     - the render target's name
 * @property {Tw2TextureRes} texture           - the render target's texture
 * @property {?Number} width                   - width of the render target's texture
 * @property {?Number} height                  - height of the render target's texture
 * @property {?Boolean} hasDepth               - toggles depth
 * @property {WebGLFramebuffer} _frameBuffer   - the render target's webgl frame buffer
 * @property {WebGLRenderbuffer} _renderBuffer - the render target's webgl render buffer
 * @class
 */

class Tw2RenderTarget {
  constructor() {
    this._id = global__WEBPACK_IMPORTED_MODULE_0__["util"].generateID();
    this.name = "";
    this.texture = null;
    this.width = null;
    this.height = null;
    this.hasDepth = null;
    this._frameBuffer = null;
    this._renderBuffer = null;
  }

  /**
   * Destroys the render target's webgl buffers and textures
   */
  Destroy() {
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;

    if (this.texture) {
      gl.deleteTexture(this.texture.texture);
      this.texture = null;
    }

    if (this._renderBuffer) {
      gl.deleteRenderbuffer(this._renderBuffer);
      this._renderBuffer = null;
    }

    if (this._frameBuffer) {
      gl.deleteFramebuffer(this._frameBuffer);
      this._frameBuffer = null;
    }
  }
  /**
   * Creates the render target's texture
   *
   * @param {Number} width     - The resulting texture's width
   * @param {Number} height    - The resulting texture's height
   * @param {Boolean} hasDepth - Optional flag to enable a depth buffer
   */


  Create(width, height, hasDepth) {
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;
    this.Destroy();
    this.texture = new _resource_Tw2TextureRes__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureRes"]();
    this.texture.Attach(gl.createTexture());
    this._frameBuffer = gl.createFramebuffer();
    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);
    gl.bindTexture(gl.TEXTURE_2D, this.texture.texture);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
    gl.bindTexture(gl.TEXTURE_2D, null);
    this._renderBuffer = null;

    if (hasDepth) {
      this._renderBuffer = gl.createRenderbuffer();
      gl.bindRenderbuffer(gl.RENDERBUFFER, this._renderBuffer);
      gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);
    }

    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.texture, 0);

    if (hasDepth) {
      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this._renderBuffer);
    }

    gl.bindRenderbuffer(gl.RENDERBUFFER, null);
    gl.bindFramebuffer(gl.FRAMEBUFFER, null);
    this.texture.width = this.width = width;
    this.texture.height = this.height = height;
    this.hasDepth = hasDepth;
  }
  /**
   * Sets the render target as the current frame buffer
   */


  Set() {
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindFramebuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.FRAMEBUFFER, this._frameBuffer);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.viewport(0, 0, this.width, this.height);
  }
  /**
   * Unsets the render target as the current frame buffer
   */


  Unset() {
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindFramebuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.FRAMEBUFFER, null);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.viewport(0, 0, global__WEBPACK_IMPORTED_MODULE_0__["device"].viewportWidth, global__WEBPACK_IMPORTED_MODULE_0__["device"].viewportHeight);
  }

}

/***/ }),

/***/ "./core/batch/Tw2BatchAccumulator.js":
/*!*******************************************!*\
  !*** ./core/batch/Tw2BatchAccumulator.js ***!
  \*******************************************/
/*! exports provided: Tw2BatchAccumulator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2BatchAccumulator", function() { return Tw2BatchAccumulator; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Accumulates render batches for rendering
 *
 * @property {Array.<Tw2RenderBatch>} batches - Accumulator render batches and/or child Tw2BatchAccumulators
 * @property {?function} _sortMethod          - An optional method to sort batches before rendering them
 * @class
 */

class Tw2BatchAccumulator {
  /**
   * Constructor
   * @param {?function} [sorting=null] - An optional function for sorting the collected render batches
   */
  constructor(sorting = null) {
    this.batches = [];
    this._sortMethod = null;
    this._sortMethod = sorting;
  }
  /**
   * Gets the batch count
   * @returns {Number}
   */


  get length() {
    return this.batches.length;
  }
  /**
   * Commits a batch
   * @param {Tw2BatchAccumulator|Tw2RenderBatch} batch
   */


  Commit(batch) {
    this.batches.push(batch);
  }
  /**
   * Clears any accumulated render batches
   */


  Clear() {
    this.batches = [];
  }
  /**
   * Renders the accumulated render batches
   * @param {String} [technique] - technique name
   */


  Render(technique = "Main") {
    if (this._sortMethod) {
      this.batches.sort(this._sortMethod);
    }

    for (let i = 0; i < this.batches.length; ++i) {
      if (this.batches[i] instanceof Tw2BatchAccumulator) {
        this.batches[i].Render(technique);
      } else {
        if (this.batches[i].renderMode !== global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ANY) {
          global__WEBPACK_IMPORTED_MODULE_0__["device"].SetStandardStates(this.batches[i].renderMode);
        }

        global__WEBPACK_IMPORTED_MODULE_0__["device"].perObjectData = this.batches[i].perObjectData;
        this.batches[i].Commit(technique);
      }
    }
  }

}

/***/ }),

/***/ "./core/batch/Tw2ForwardingRenderBatch.js":
/*!************************************************!*\
  !*** ./core/batch/Tw2ForwardingRenderBatch.js ***!
  \************************************************/
/*! exports provided: Tw2ForwardingRenderBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ForwardingRenderBatch", function() { return Tw2ForwardingRenderBatch; });
/* harmony import */ var _Tw2RenderBatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2RenderBatch */ "./core/batch/Tw2RenderBatch.js");

/**
 * A render batch that uses geometry provided from an external source
 *
 * @property {*} geometryProvider
 * @class
 */

class Tw2ForwardingRenderBatch extends _Tw2RenderBatch__WEBPACK_IMPORTED_MODULE_0__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.geometryProvider = null;
  }

  /**
   * Commits the batch for rendering
   * @param {String} technique - technique name
   */
  Commit(technique) {
    if (this.geometryProvider) {
      this.geometryProvider.Render(this, technique);
    }
  }

}

/***/ }),

/***/ "./core/batch/Tw2GeometryBatch.js":
/*!****************************************!*\
  !*** ./core/batch/Tw2GeometryBatch.js ***!
  \****************************************/
/*! exports provided: Tw2GeometryBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryBatch", function() { return Tw2GeometryBatch; });
/* harmony import */ var _Tw2RenderBatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2RenderBatch */ "./core/batch/Tw2RenderBatch.js");

/**
 * A render batch for geometry
 *
 * @property {Tw2GeometryRes} geometryRes
 * @property {Number} meshIx
 * @property {Number} start
 * @property {Number} count
 * @property {Tw2Effect} effect
 * @property {String} technique
 * @class
 */

class Tw2GeometryBatch extends _Tw2RenderBatch__WEBPACK_IMPORTED_MODULE_0__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.geometryRes = null;
    this.meshIx = 0;
    this.start = 0;
    this.count = 1;
    this.effect = null;
  }

  /**
   * Commits the Tw2InstancedMeshBatch for rendering
   * @param {String} technique - technique name
   */
  Commit(technique) {
    if (this.geometryRes && this.effect) {
      this.geometryRes.RenderAreas(this.meshIx, this.start, this.count, this.effect, technique);
    }
  }

}

/***/ }),

/***/ "./core/batch/Tw2GeometryLineBatch.js":
/*!********************************************!*\
  !*** ./core/batch/Tw2GeometryLineBatch.js ***!
  \********************************************/
/*! exports provided: Tw2GeometryLineBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryLineBatch", function() { return Tw2GeometryLineBatch; });
/* harmony import */ var _Tw2GeometryBatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2GeometryBatch */ "./core/batch/Tw2GeometryBatch.js");

/**
 * A render batch for line geometry
 *
 * @class
 */

class Tw2GeometryLineBatch extends _Tw2GeometryBatch__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryBatch"] {
  /**
   * Commits the Geometry Line Batch for rendering
   * @param {String} technique - technique name
   */
  Commit(technique) {
    if (this.geometryRes && this.effect) {
      this.geometryRes.RenderLines(this.meshIx, this.start, this.count, this.effect, technique);
    }
  }

}

/***/ }),

/***/ "./core/batch/Tw2InstancedMeshBatch.js":
/*!*********************************************!*\
  !*** ./core/batch/Tw2InstancedMeshBatch.js ***!
  \*********************************************/
/*! exports provided: Tw2InstancedMeshBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2InstancedMeshBatch", function() { return Tw2InstancedMeshBatch; });
/* harmony import */ var _Tw2GeometryBatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2GeometryBatch */ "./core/batch/Tw2GeometryBatch.js");

/**
 * A render batch for Instanced geometry
 *
 * @property {Tw2InstancedMesh} instanceMesh
 * @class
 */

class Tw2InstancedMeshBatch extends _Tw2GeometryBatch__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryBatch"] {
  constructor(...args) {
    super(...args);
    this.instanceMesh = null;
  }

  /**
   * Commits the Tw2InstancedMeshBatch for rendering
   * @param {String} technique - technique name
   */
  Commit(technique) {
    if (this.instanceMesh && this.effect) {
      this.instanceMesh.RenderAreas(this.meshIx, this.start, this.count, this.effect, technique);
    }
  }

}

/***/ }),

/***/ "./core/batch/Tw2RenderBatch.js":
/*!**************************************!*\
  !*** ./core/batch/Tw2RenderBatch.js ***!
  \**************************************/
/*! exports provided: Tw2RenderBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RenderBatch", function() { return Tw2RenderBatch; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/*eslint no-unused-vars:0*/

/**
 * Tw2RenderBatch base class
 *
 * @property {Number} renderMode
 * @property {Tw2PerObjectData} perObjectData
 * @class
 */

class Tw2RenderBatch {
  constructor() {
    this.renderMode = global__WEBPACK_IMPORTED_MODULE_0__["RM_ANY"];
    this.perObjectData = null;
  }

  /**
   * Commits the batch
   * @param {String} technique - technique name
   */
  Commit(technique) {}

}

/***/ }),

/***/ "./core/batch/index.js":
/*!*****************************!*\
  !*** ./core/batch/index.js ***!
  \*****************************/
/*! exports provided: Tw2BatchAccumulator, Tw2ForwardingRenderBatch, Tw2GeometryBatch, Tw2GeometryLineBatch, Tw2RenderBatch, Tw2InstancedMeshBatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2BatchAccumulator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2BatchAccumulator */ "./core/batch/Tw2BatchAccumulator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BatchAccumulator", function() { return _Tw2BatchAccumulator__WEBPACK_IMPORTED_MODULE_0__["Tw2BatchAccumulator"]; });

/* harmony import */ var _Tw2ForwardingRenderBatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ForwardingRenderBatch */ "./core/batch/Tw2ForwardingRenderBatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ForwardingRenderBatch", function() { return _Tw2ForwardingRenderBatch__WEBPACK_IMPORTED_MODULE_1__["Tw2ForwardingRenderBatch"]; });

/* harmony import */ var _Tw2GeometryBatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2GeometryBatch */ "./core/batch/Tw2GeometryBatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryBatch", function() { return _Tw2GeometryBatch__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryBatch"]; });

/* harmony import */ var _Tw2GeometryLineBatch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2GeometryLineBatch */ "./core/batch/Tw2GeometryLineBatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryLineBatch", function() { return _Tw2GeometryLineBatch__WEBPACK_IMPORTED_MODULE_3__["Tw2GeometryLineBatch"]; });

/* harmony import */ var _Tw2RenderBatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2RenderBatch */ "./core/batch/Tw2RenderBatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RenderBatch", function() { return _Tw2RenderBatch__WEBPACK_IMPORTED_MODULE_4__["Tw2RenderBatch"]; });

/* harmony import */ var _Tw2InstancedMeshBatch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2InstancedMeshBatch */ "./core/batch/Tw2InstancedMeshBatch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2InstancedMeshBatch", function() { return _Tw2InstancedMeshBatch__WEBPACK_IMPORTED_MODULE_5__["Tw2InstancedMeshBatch"]; });








/***/ }),

/***/ "./core/data/Tw2PerObjectData.js":
/*!***************************************!*\
  !*** ./core/data/Tw2PerObjectData.js ***!
  \***************************************/
/*! exports provided: Tw2PerObjectData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2PerObjectData", function() { return Tw2PerObjectData; });
/* harmony import */ var _Tw2RawData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2RawData */ "./core/data/Tw2RawData.js");

/**
 * Tw2PerObjectData
 *
 * @property {?Tw2RawData} vs - Per object vertex shader data
 * @property {?Tw2RawData} ps - Per object pixel shader data
 * @class
 */

class Tw2PerObjectData {
  constructor() {
    this.vs = null;
    this.ps = null;
    this.ffe = null;
  }

  /**
   * Creates per object data from values
   * @param {RawDataObject} values
   * @param {{}} [opt]
   * @param {Boolean} [opt.skipUpdate]
   * @returns {Tw2PerObjectData}
   */
  static from(values, opt) {
    const item = new Tw2PerObjectData();

    if (values) {
      if (values.ps) item.ps = _Tw2RawData__WEBPACK_IMPORTED_MODULE_0__["Tw2RawData"].from(values.ps, opt);
      if (values.vs) item.vs = _Tw2RawData__WEBPACK_IMPORTED_MODULE_0__["Tw2RawData"].from(values.vs, opt);
      if (values.ffe) item.ffe = _Tw2RawData__WEBPACK_IMPORTED_MODULE_0__["Tw2RawData"].from(values.ffe, opt);
    }

    return item;
  }

}

/***/ }),

/***/ "./core/data/Tw2RawData.js":
/*!*********************************!*\
  !*** ./core/data/Tw2RawData.js ***!
  \*********************************/
/*! exports provided: Tw2RawData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RawData", function() { return Tw2RawData; });
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/**
 * Stores raw data for {@link Tw2PerObjectData}
 *
 * @property {Float32Array} data
 * @property {*} elements
 * @property {Number} nextOffset
 * @class
 */

class Tw2RawData {
  constructor() {
    this.data = null;
    this.elements = {};
    this._nextOffset = 0;
  }

  /**
   * Checks if an element exists
   * @param {String} name
   * @returns {boolean}
   */
  Has(name) {
    return name in this.elements;
  }
  /**
   * Sets an element value
   * @param {String} name
   * @param {Float32Array|Array|vec3|vec4|mat4} value
   */


  Set(name, value) {
    const el = this.elements[name];

    for (let i = 0; i < el.size; i++) {
      this.data[i + el.offset] = value[i];
    }
  }
  /**
   * Sets an element index value
   * @param {String} name
   * @param {Number} index
   * @param {Number} value
   */


  SetIndex(name, index, value) {
    const el = this.elements[name];

    if (index < 0 || index >= el.size) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrIndexBounds"]();
    }

    this.data[index + el.offset] = value;
  }
  /**
   * Gets an element's array value
   * @param {String} name
   * @return {Float32Array}
   */


  Get(name) {
    return this.elements[name].array;
  }
  /**
   * Declares a raw data element
   * @param {String} name
   * @param {Number|Array|Float32Array} data - Size or the default value in an array
   */


  Declare(name, data) {
    let isValue = typeof data !== "number",
        size = isValue ? data.length : data,
        value = isValue ? data : null;
    this.elements[name] = {
      offset: this._nextOffset,
      array: null,
      size,
      value
    };
    this._nextOffset += size;
  }
  /**
   * Creates the raw data element array
   */


  Create() {
    this.data = new Float32Array(this._nextOffset);

    for (let name in this.elements) {
      if (this.elements.hasOwnProperty(name)) {
        const el = this.elements[name];
        el.array = this.data.subarray(el.offset, el.offset + el.size);

        if (el.value) {
          for (let i = 0; i < el.size; i++) {
            el.array[i] = el.value[i];
          }

          Reflect.deleteProperty(el, "value");
        }
      }
    }
  }
  /**
   * Creates raw data from values
   * @param {RawElementArray} [values]
   * @param {{}} [opt]
   * @param {boolean} [opt.skipUpdate]
   * @returns {Tw2RawData}
   */


  static from(values, opt) {
    const item = new Tw2RawData();

    if (values) {
      for (let i = 0; i < values.length; i++) {
        item.Declare(values[i][0], values[i][1]);
      }

      if (!opt || !opt.skipUpdate) item.Create();
    }

    return item;
  }

}

/***/ }),

/***/ "./core/data/index.js":
/*!****************************!*\
  !*** ./core/data/index.js ***!
  \****************************/
/*! exports provided: Tw2PerObjectData, Tw2RawData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2PerObjectData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2PerObjectData */ "./core/data/Tw2PerObjectData.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PerObjectData", function() { return _Tw2PerObjectData__WEBPACK_IMPORTED_MODULE_0__["Tw2PerObjectData"]; });

/* harmony import */ var _Tw2RawData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2RawData */ "./core/data/Tw2RawData.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RawData", function() { return _Tw2RawData__WEBPACK_IMPORTED_MODULE_1__["Tw2RawData"]; });



/**
 * An array containing raw element data
 * @typedef {[String, Number|Array|Float32Array|vec3|vec4|mat4]} RawElementData
 */

/**
 * An array of raw data elements
 * @typedef {Array<RawElementData>} RawElementArray
 */

/**
 * An object containing per object raw data elements
 * @typedef {{}} RawDataObject
 * @property {RawElementArray} [vs] Vertex shader data
 * @property {RawElementArray} [ps] Pixel shader data
 * @property {RawElementArray} [ffe] Fixed function emulation data
 */

/***/ }),

/***/ "./core/geometry/Tw2BlendShapeData.js":
/*!********************************************!*\
  !*** ./core/geometry/Tw2BlendShapeData.js ***!
  \********************************************/
/*! exports provided: Tw2BlendShapeData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2BlendShapeData", function() { return Tw2BlendShapeData; });
/* harmony import */ var _vertex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vertex */ "./core/vertex/index.js");

/**
 * Tw2BlendShapeData
 *
 * @property {String} name
 * @property {Tw2VertexDeclaration} declaration
 * @property {Array} buffers
 * @property indexes
 * @property weightProxy
 */

class Tw2BlendShapeData {
  constructor() {
    this.name = "";
    this.declaration = new _vertex__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexDeclaration"]();
    this.buffers = [];
    this.indexes = null;
    this.weightProxy = null;
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryAnimation.js":
/*!***********************************************!*\
  !*** ./core/geometry/Tw2GeometryAnimation.js ***!
  \***********************************************/
/*! exports provided: Tw2GeometryAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryAnimation", function() { return Tw2GeometryAnimation; });
/**
 * Tw2GeometryAnimation
 *
 * @property {String} name
 * @property {Number} duration
 * @property {Array.<Tw2GeometryTrackGroup>} trackGroups
 */
class Tw2GeometryAnimation {
  constructor() {
    this.name = "";
    this.duration = 0;
    this.trackGroups = [];
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryBone.js":
/*!******************************************!*\
  !*** ./core/geometry/Tw2GeometryBone.js ***!
  \******************************************/
/*! exports provided: Tw2GeometryBone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryBone", function() { return Tw2GeometryBone; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2GeometryBone
 *
 * @property {String} name
 * @property {Number} parentIndex
 * @property {vec3} position
 * @property {quat} orientation
 * @property {mat3} scaleShear
 * @property {mat4} localTransform
 * @property {mat4} worldTransform
 * @property {mat4} worldTransformInv
 */

class Tw2GeometryBone {
  constructor() {
    this.name = "";
    this.parentIndex = -1;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.orientation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaleShear = global__WEBPACK_IMPORTED_MODULE_0__["mat3"].create();
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.worldTransformInv = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Updates the Bone's transform
   * @returns {mat4}
   */
  UpdateTransform() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromMat3(this.localTransform, this.scaleShear);
    global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(this.orientation, this.orientation);
    let rm = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromQuat(Tw2GeometryBone.global.mat4_0, this.orientation);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.localTransform, this.localTransform, rm);
    this.localTransform[12] = this.position[0];
    this.localTransform[13] = this.position[1];
    this.localTransform[14] = this.position[2];
    return this.localTransform;
  }
  /**
   * Global and scratch variables
   */


}
Tw2GeometryBone.global = {
  mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
};

/***/ }),

/***/ "./core/geometry/Tw2GeometryCurve.js":
/*!*******************************************!*\
  !*** ./core/geometry/Tw2GeometryCurve.js ***!
  \*******************************************/
/*! exports provided: Tw2GeometryCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryCurve", function() { return Tw2GeometryCurve; });
/**
 * Tw2GeometryCurve
 *
 * @property {Number} dimension
 * @property {Number} degree
 * @property {Float32Array} knots
 * @property {Float32Array} controls
 */
class Tw2GeometryCurve {
  constructor() {
    this.dimension = 0;
    this.degree = 0;
    this.knots = null;
    this.controls = null;
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryMesh.js":
/*!******************************************!*\
  !*** ./core/geometry/Tw2GeometryMesh.js ***!
  \******************************************/
/*! exports provided: Tw2GeometryMesh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMesh", function() { return Tw2GeometryMesh; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _vertex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vertex */ "./core/vertex/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var _Tw2GeometryMeshArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2GeometryMeshArea */ "./core/geometry/Tw2GeometryMeshArea.js");




/**
 * Tw2GeometryMesh
 *
 * @property {String} name
 * @property {Tw2VertexDeclaration} declaration
 * @property {Array.<Tw2GeometryMeshArea>} areas
 * @property {WebGLBuffer} buffer
 * @property {Number} bufferLength
 * @property bufferData
 * @property {WebGLBuffer} indexes
 * @property indexData
 * @property {Number} indexType
 * @property {vec3} minBounds
 * @property {vec3} maxBounds
 * @property {vec3} boundsSpherePosition
 * @property {Number} boundsSphereRadius
 * @property {Array} bones
 * @property {Array.<string>} boneBindings
 */

class Tw2GeometryMesh {
  constructor() {
    this.name = "";
    this.declaration = new _vertex__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"]();
    this.areas = [];
    this.buffer = null;
    this.bufferLength = 0;
    this.bufferData = null;
    this.indexes = null;
    this.indexData = null;
    this.indexType = 0;
    this.minBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 0);
    this.maxBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 0);
    this.boundsSpherePosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundsSphereRadius = 0;
    this.bones = [];
    this.boneBindings = [];
    this._faces = 0;
    this._vertices = 0;
    this._areas = 0;
  }

  /**
   * Gets the object's bounding box
   * @param {box3} out
   * @param {mat4} [parentTransform]
   * @returns {Boolean} True if bounds are valid
   */
  GetBoundingBox(out, parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].fromBounds(out, this.minBounds, this.maxBounds);
    if (parentTransform) global__WEBPACK_IMPORTED_MODULE_0__["box3"].transformMat4(out, out, parentTransform);
    return true;
  }
  /**
   * Gets the object's bounding sphere
   * @param {sph3} out
   * @param {mat4} [parentTransform]
   * @returns {Boolean} True if bounds are valid
   */


  GetBoundingSphere(out, parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["sph3"].fromPositionRadius(out, this.boundsSpherePosition, this.boundsSphereRadius);
    if (parentTransform) global__WEBPACK_IMPORTED_MODULE_0__["sph3"].transformMat4(out, out, parentTransform);
    return true;
  }
  /**
   * Rebuilds bounds
   * @param {Boolean} [fromVertex]
   */


  RebuildBounds(fromVertex) {
    const min = this.minBounds,
          max = this.maxBounds;
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.empty(min, max);

    for (let i = 0; i < this.areas.length; i++) {
      const area = this.areas[i];
      this.RebuildAreaBounds(area, this.bufferData, this.indexData, fromVertex);
      global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.union(min, max, min, max, area.minBounds, area.maxBounds);
    }

    this.boundsSphereRadius = global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.toPositionRadius(min, max, this.boundsSpherePosition);
  }
  /**
   * Rebuilds an area's bounds
   * @param {Tw2GeometryMeshArea} area
   * @param {*} bufferData
   * @param {*} indexData
   * @param {Boolean} [fromVertex]
   */


  RebuildAreaBounds(area, bufferData, indexData, fromVertex) {
    if (!fromVertex || !bufferData || !indexData) return false;
    const pDecl = this.declaration.FindUsage(0, 0);
    if (!pDecl) return false;
    const stride = this.declaration.stride / 4,
          pOffset = pDecl.offset;
    const box = Tw2GeometryMesh.GetBoundsFromVertices(global__WEBPACK_IMPORTED_MODULE_0__["box3"].create(), area.start, area.count, stride, pOffset, bufferData, indexData);
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].toObjectBounds(box, area);
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].toObjectPositionRadius(box, area);
    return true;
  }
  /**
   * Gets a face's vertex indices
   * @param {vec3} out
   * @param {Number} index
   * @param {*} indexData
   * @returns {vec3}
   */


  static GetFaceVertexIndices(out, index, indexData) {
    if (index >= indexData.length / 3) {
      throw new Error("Invalid index: " + index);
    }

    for (let i = 0; i < 3; i++) {
      out[i] = indexData[index * 3 + i];
    }

    return out;
  }
  /**
   * Gets a vertices's position
   * @param {vec3} out
   * @param {Number} index
   * @param {Number} stride
   * @param {Number} offset
   * @param {*} bufferData
   * @returns {vec3}
   */


  static GetVertexPosition(out, index, stride, offset, bufferData) {
    if (!Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(index) || index > bufferData.length / stride) {
      throw new Error("Invalid vertex index: " + index);
    }

    const ix = index * stride;
    return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(out, bufferData[ix + offset], bufferData[ix + offset + 1], bufferData[ix + offset + 2]);
  }
  /**
   * Updates an area's bounds
   * @param {box3} out
   * @param {Number} start
   * @param {Number} count
   * @param {Number} stride
   * @param {Number} pOffset
   * @param {*} bufferData
   * @param {*} indexData
   */


  static GetBoundsFromVertices(out, start, count, stride, pOffset, bufferData, indexData) {
    count = count / 3;
    start = start / 2 / 3;
    const vertexIndices = [],
          indices = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
          position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].empty(out);

    for (let i = 0; i < count; i++) {
      this.GetFaceVertexIndices(indices, i + start, indexData);

      for (let x = 0; x < 3; x++) {
        if (!vertexIndices.includes(indices[x])) {
          vertexIndices.push(indices[x]);
          this.GetVertexPosition(position, indices[x], stride, pOffset, bufferData);
          global__WEBPACK_IMPORTED_MODULE_0__["box3"].addPoint(out, out, position);
        }
      }
    }

    return out;
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryMeshArea.js":
/*!**********************************************!*\
  !*** ./core/geometry/Tw2GeometryMeshArea.js ***!
  \**********************************************/
/*! exports provided: Tw2GeometryMeshArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMeshArea", function() { return Tw2GeometryMeshArea; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2GeometryMeshArea
 *
 * @property {String} name
 * @property {Number} start
 * @property {Number} count
 * @property {vec3} minBounds
 * @property {vec3} maxBounds
 * @property {vec3} boundsSpherePosition
 * @property {Number} boundsSphereRadius
 */

class Tw2GeometryMeshArea {
  constructor() {
    this.name = "";
    this.start = 0;
    this.count = 0;
    this.minBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 0);
    this.maxBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 0);
    this.boundsSpherePosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundsSphereRadius = 0;
  }

  /**
   * Gets the object's bounding box
   * @param {box3} out
   * @param {mat4} [parentTransform]
   * @returns {Boolean} True if bounds are valid
   */
  GetBoundingBox(out, parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].fromBounds(out, this.minBounds, this.maxBounds);
    if (parentTransform) global__WEBPACK_IMPORTED_MODULE_0__["box3"].transformMat4(out, out, parentTransform);
    return true;
  }
  /**
   * Gets the object's bounding sphere
   * @param {sph3} out
   * @param {mat4} [parentTransform]
   * @returns {Boolean} True if bounds are valid
   */


  GetBoundingSphere(out, parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["sph3"].fromPositionRadius(out, this.boundsSpherePosition, this.boundsSphereRadius);
    if (parentTransform) global__WEBPACK_IMPORTED_MODULE_0__["sph3"].transformMat4(out, out, parentTransform);
    return true;
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryMeshBinding.js":
/*!*************************************************!*\
  !*** ./core/geometry/Tw2GeometryMeshBinding.js ***!
  \*************************************************/
/*! exports provided: Tw2GeometryMeshBinding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMeshBinding", function() { return Tw2GeometryMeshBinding; });
/**
 * Tw2GeometryMeshBinding
 *
 * @property {Tw2GeometryMesh} mesh
 * @property {Array.<Tw2GeometryBone>} bones
 */
class Tw2GeometryMeshBinding {
  constructor() {
    this.mesh = null;
    this.bones = [];
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryModel.js":
/*!*******************************************!*\
  !*** ./core/geometry/Tw2GeometryModel.js ***!
  \*******************************************/
/*! exports provided: Tw2GeometryModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryModel", function() { return Tw2GeometryModel; });
/**
 * Tw2GeometryModel
 *
 * @property {String} name
 * @property {Array.<Tw2GeometryMeshBinding>} meshBindings
 * @property {Tw2GeometrySkeleton} skeleton
 */
class Tw2GeometryModel {
  constructor() {
    this.name = "";
    this.meshBindings = [];
    this.skeleton = null;
  }

  /**
   * Finds a bone by it's name
   * @param {String} name
   * @returns {Tw2GeometryBone|null}
   */
  FindBoneByName(name) {
    if (!this.skeleton) {
      return null;
    }

    for (let i = 0; i < this.skeleton.bones.length; ++i) {
      if (this.skeleton.bones[i].name === name) {
        return this.skeleton.bones[i];
      }
    }

    return null;
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometrySkeleton.js":
/*!**********************************************!*\
  !*** ./core/geometry/Tw2GeometrySkeleton.js ***!
  \**********************************************/
/*! exports provided: Tw2GeometrySkeleton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometrySkeleton", function() { return Tw2GeometrySkeleton; });
/**
 * Tw2GeometrySkeleton
 *
 * @property {Array.<Tw2GeometryBone>} bones
 */
class Tw2GeometrySkeleton {
  constructor() {
    this.bones = [];
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryTrackGroup.js":
/*!************************************************!*\
  !*** ./core/geometry/Tw2GeometryTrackGroup.js ***!
  \************************************************/
/*! exports provided: Tw2GeometryTrackGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryTrackGroup", function() { return Tw2GeometryTrackGroup; });
/**
 * Tw2GeometryTrackGroup
 *
 * @property {String} name
 * @property {Tw2GeometryModel} model
 * @property {Array.<Tw2GeometryTransformTrack>} transformTracks
 */
class Tw2GeometryTrackGroup {
  constructor() {
    this.name = "";
    this.model = null;
    this.transformTracks = [];
  }

}

/***/ }),

/***/ "./core/geometry/Tw2GeometryTransformTrack.js":
/*!****************************************************!*\
  !*** ./core/geometry/Tw2GeometryTransformTrack.js ***!
  \****************************************************/
/*! exports provided: Tw2GeometryTransformTrack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryTransformTrack", function() { return Tw2GeometryTransformTrack; });
/**
 * Tw2GeometryTransformTrack
 *
 * @property {String} name
 * @property {Tw2GeometryCurve} position
 * @property {Tw2GeometryCurve} orientation
 * @property scaleShear
 */
class Tw2GeometryTransformTrack {
  constructor() {
    this.name = "";
    this.position = null;
    this.orientation = null;
    this.scaleShear = null;
  }

}

/***/ }),

/***/ "./core/geometry/index.js":
/*!********************************!*\
  !*** ./core/geometry/index.js ***!
  \********************************/
/*! exports provided: Tw2BlendShapeData, Tw2GeometryAnimation, Tw2GeometryBone, Tw2GeometryCurve, Tw2GeometryMesh, Tw2GeometryMeshArea, Tw2GeometryMeshBinding, Tw2GeometryModel, Tw2GeometrySkeleton, Tw2GeometryTrackGroup, Tw2GeometryTransformTrack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2BlendShapeData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2BlendShapeData */ "./core/geometry/Tw2BlendShapeData.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BlendShapeData", function() { return _Tw2BlendShapeData__WEBPACK_IMPORTED_MODULE_0__["Tw2BlendShapeData"]; });

/* harmony import */ var _Tw2GeometryAnimation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2GeometryAnimation */ "./core/geometry/Tw2GeometryAnimation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryAnimation", function() { return _Tw2GeometryAnimation__WEBPACK_IMPORTED_MODULE_1__["Tw2GeometryAnimation"]; });

/* harmony import */ var _Tw2GeometryBone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2GeometryBone */ "./core/geometry/Tw2GeometryBone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryBone", function() { return _Tw2GeometryBone__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryBone"]; });

/* harmony import */ var _Tw2GeometryCurve__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2GeometryCurve */ "./core/geometry/Tw2GeometryCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryCurve", function() { return _Tw2GeometryCurve__WEBPACK_IMPORTED_MODULE_3__["Tw2GeometryCurve"]; });

/* harmony import */ var _Tw2GeometryMesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2GeometryMesh */ "./core/geometry/Tw2GeometryMesh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMesh", function() { return _Tw2GeometryMesh__WEBPACK_IMPORTED_MODULE_4__["Tw2GeometryMesh"]; });

/* harmony import */ var _Tw2GeometryMeshArea__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2GeometryMeshArea */ "./core/geometry/Tw2GeometryMeshArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMeshArea", function() { return _Tw2GeometryMeshArea__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryMeshArea"]; });

/* harmony import */ var _Tw2GeometryMeshBinding__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2GeometryMeshBinding */ "./core/geometry/Tw2GeometryMeshBinding.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMeshBinding", function() { return _Tw2GeometryMeshBinding__WEBPACK_IMPORTED_MODULE_6__["Tw2GeometryMeshBinding"]; });

/* harmony import */ var _Tw2GeometryModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2GeometryModel */ "./core/geometry/Tw2GeometryModel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryModel", function() { return _Tw2GeometryModel__WEBPACK_IMPORTED_MODULE_7__["Tw2GeometryModel"]; });

/* harmony import */ var _Tw2GeometrySkeleton__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Tw2GeometrySkeleton */ "./core/geometry/Tw2GeometrySkeleton.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometrySkeleton", function() { return _Tw2GeometrySkeleton__WEBPACK_IMPORTED_MODULE_8__["Tw2GeometrySkeleton"]; });

/* harmony import */ var _Tw2GeometryTrackGroup__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Tw2GeometryTrackGroup */ "./core/geometry/Tw2GeometryTrackGroup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryTrackGroup", function() { return _Tw2GeometryTrackGroup__WEBPACK_IMPORTED_MODULE_9__["Tw2GeometryTrackGroup"]; });

/* harmony import */ var _Tw2GeometryTransformTrack__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Tw2GeometryTransformTrack */ "./core/geometry/Tw2GeometryTransformTrack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryTransformTrack", function() { return _Tw2GeometryTransformTrack__WEBPACK_IMPORTED_MODULE_10__["Tw2GeometryTransformTrack"]; });













/***/ }),

/***/ "./core/index.js":
/*!***********************!*\
  !*** ./core/index.js ***!
  \***********************/
/*! exports provided: Tw2TextureRes, Tr2DistanceTracker, Tr2RuntimeInstanceData, TriObserverLocal, Tw2Error, ErrWebglContext, ErrWebxrNotSupported, ErrWebxrDeviceNotFound, ErrWebxrRequestFailed, ErrWebxrSessionNotSupported, ErrStoreKeyReserved, ErrStoreValueInvalid, ErrStoreValueMissing, ErrStoreInvalid, ErrHTTPRequest, ErrHTTPStatus, ErrBinaryFormat, ErrBinaryReaderReadError, ErrBinaryObjectTypeNotFound, ErrGeometryMeshMissingParticleElement, ErrGeometryMeshElementComponentsMissing, ErrGeometryMeshAreaMissing, ErrGeometryMeshBoneNameInvalid, ErrGeometryMeshEffectBinding, ErrGeometryFileType, ErrResourcePrefixUnregistered, ErrResourcePrefixUndefined, ErrResourceExtensionUnregistered, ErrResourceExtensionUndefined, ErrResourceFormat, ErrShaderVersion, ErrShaderHeaderSize, ErrShaderPermutationValue, ErrShaderCompile, ErrShaderLink, ErrDeclarationValueType, ErrSingletonInstantiation, ErrInvalidDecoratorUsage, ErrAbstractClass, ErrAbstractMethod, ErrFeatureNotImplemented, ErrIndexBounds, ErrBindingValueUndefined, ErrBindingType, ErrBindingReference, ErrSOFHullNotFound, ErrSOFFactionNotFound, ErrSOFRaceNotFound, ErrSOFMaterialNotFound, ErrSOFPatternNotFound, ErrWrapped, Tw2Frustum, Tw2RenderTarget, Tw2BatchAccumulator, Tw2ForwardingRenderBatch, Tw2GeometryBatch, Tw2GeometryLineBatch, Tw2RenderBatch, Tw2InstancedMeshBatch, Tw2PerObjectData, Tw2RawData, Tw2BlendShapeData, Tw2GeometryAnimation, Tw2GeometryBone, Tw2GeometryCurve, Tw2GeometryMesh, Tw2GeometryMeshArea, Tw2GeometryMeshBinding, Tw2GeometryModel, Tw2GeometrySkeleton, Tw2GeometryTrackGroup, Tw2GeometryTransformTrack, Tr2PointLight, Tr2ShLightingManager, Tr2MeshLod, Tw2Effect, Tw2InstancedMesh, Tw2Mesh, Tw2MeshArea, Tw2MeshLineArea, Tw2Animation, Tw2AnimationController, Tw2Bone, Tw2BoneBinding, Tw2MeshBinding, Tw2Model, Tw2Track, Tw2TrackGroup, Tw2Parameter, Tw2FloatParameter, Tw2Matrix4Parameter, Tw2MatrixParameter, Tw2TransformParameter, Tw2VariableParameter, Tw2Vector2Parameter, Tw2Vector3Parameter, Tw2Vector4Parameter, Tw2TextureParameter, Tw2PostEffect, Tw2PostEffectManager, Tw2PostEffectStep, Tr2PostProcess, Tw2BinaryReader, Tw2BlackReader, Tw2ObjectReader, Tw2EffectRes, Tw2GeometryRes, Tw2LoadingObject, Tw2LodResource, Tw2Resource, Tw2Shader, Tw2VideoRes, Tw2SamplerState, Tw2SamplerOverride, Tw2Float, TriMatrix, Tw2VertexDeclaration, Tw2VertexElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ "./core/batch/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BatchAccumulator", function() { return _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2BatchAccumulator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ForwardingRenderBatch", function() { return _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2ForwardingRenderBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryBatch", function() { return _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryLineBatch", function() { return _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryLineBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RenderBatch", function() { return _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2RenderBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2InstancedMeshBatch", function() { return _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2InstancedMeshBatch"]; });

/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ "./core/data/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PerObjectData", function() { return _data__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RawData", function() { return _data__WEBPACK_IMPORTED_MODULE_1__["Tw2RawData"]; });

/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./geometry */ "./core/geometry/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BlendShapeData", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2BlendShapeData"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryAnimation", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryAnimation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryBone", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryBone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryCurve", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMesh", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryMesh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMeshArea", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryMeshArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryMeshBinding", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryMeshBinding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryModel", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryModel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometrySkeleton", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometrySkeleton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryTrackGroup", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryTrackGroup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryTransformTrack", function() { return _geometry__WEBPACK_IMPORTED_MODULE_2__["Tw2GeometryTransformTrack"]; });

/* harmony import */ var _lighting__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lighting */ "./core/lighting/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2PointLight", function() { return _lighting__WEBPACK_IMPORTED_MODULE_3__["Tr2PointLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ShLightingManager", function() { return _lighting__WEBPACK_IMPORTED_MODULE_3__["Tr2ShLightingManager"]; });

/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mesh */ "./core/mesh/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2MeshLod", function() { return _mesh__WEBPACK_IMPORTED_MODULE_4__["Tr2MeshLod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Effect", function() { return _mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2Effect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2InstancedMesh", function() { return _mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2InstancedMesh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Mesh", function() { return _mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2Mesh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshArea", function() { return _mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2MeshArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshLineArea", function() { return _mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2MeshLineArea"]; });

/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./model */ "./core/model/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Animation", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2AnimationController", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2AnimationController"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Bone", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2Bone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BoneBinding", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2BoneBinding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshBinding", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2MeshBinding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Model", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2Model"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Track", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2Track"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TrackGroup", function() { return _model__WEBPACK_IMPORTED_MODULE_5__["Tw2TrackGroup"]; });

/* harmony import */ var _parameter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parameter */ "./core/parameter/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Parameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2Parameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2FloatParameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2FloatParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Matrix4Parameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2Matrix4Parameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MatrixParameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2MatrixParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TransformParameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2TransformParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VariableParameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2VariableParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Parameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2Vector2Parameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Parameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2Vector3Parameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector4Parameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2Vector4Parameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TextureParameter", function() { return _parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2TextureParameter"]; });

/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./post */ "./core/post/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffect", function() { return _post__WEBPACK_IMPORTED_MODULE_7__["Tw2PostEffect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffectManager", function() { return _post__WEBPACK_IMPORTED_MODULE_7__["Tw2PostEffectManager"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffectStep", function() { return _post__WEBPACK_IMPORTED_MODULE_7__["Tw2PostEffectStep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2PostProcess", function() { return _post__WEBPACK_IMPORTED_MODULE_7__["Tr2PostProcess"]; });

/* harmony import */ var _reader__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./reader */ "./core/reader/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BinaryReader", function() { return _reader__WEBPACK_IMPORTED_MODULE_8__["Tw2BinaryReader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BlackReader", function() { return _reader__WEBPACK_IMPORTED_MODULE_8__["Tw2BlackReader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ObjectReader", function() { return _reader__WEBPACK_IMPORTED_MODULE_8__["Tw2ObjectReader"]; });

/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resource */ "./core/resource/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TextureRes", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2TextureRes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EffectRes", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2EffectRes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryRes", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2GeometryRes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2LoadingObject", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2LoadingObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2LodResource", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2LodResource"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Resource", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2Resource"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Shader", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2Shader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VideoRes", function() { return _resource__WEBPACK_IMPORTED_MODULE_9__["Tw2VideoRes"]; });

/* harmony import */ var _sampler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sampler */ "./core/sampler/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SamplerState", function() { return _sampler__WEBPACK_IMPORTED_MODULE_10__["Tw2SamplerState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SamplerOverride", function() { return _sampler__WEBPACK_IMPORTED_MODULE_10__["Tw2SamplerOverride"]; });

/* harmony import */ var _value__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./value */ "./core/value/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Float", function() { return _value__WEBPACK_IMPORTED_MODULE_11__["Tw2Float"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TriMatrix", function() { return _value__WEBPACK_IMPORTED_MODULE_11__["TriMatrix"]; });

/* harmony import */ var _vertex__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./vertex */ "./core/vertex/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VertexDeclaration", function() { return _vertex__WEBPACK_IMPORTED_MODULE_12__["Tw2VertexDeclaration"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VertexElement", function() { return _vertex__WEBPACK_IMPORTED_MODULE_12__["Tw2VertexElement"]; });

/* harmony import */ var _Tr2DistanceTracker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Tr2DistanceTracker */ "./core/Tr2DistanceTracker.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2DistanceTracker", function() { return _Tr2DistanceTracker__WEBPACK_IMPORTED_MODULE_13__["Tr2DistanceTracker"]; });

/* harmony import */ var _Tr2RuntimeInstanceData__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Tr2RuntimeInstanceData */ "./core/Tr2RuntimeInstanceData.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2RuntimeInstanceData", function() { return _Tr2RuntimeInstanceData__WEBPACK_IMPORTED_MODULE_14__["Tr2RuntimeInstanceData"]; });

/* harmony import */ var _TriObserverLocal__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./TriObserverLocal */ "./core/TriObserverLocal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TriObserverLocal", function() { return _TriObserverLocal__WEBPACK_IMPORTED_MODULE_15__["TriObserverLocal"]; });

/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Tw2Error */ "./core/Tw2Error.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Error", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["Tw2Error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrWebglContext", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrWebglContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrNotSupported", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrWebxrNotSupported"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrDeviceNotFound", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrWebxrDeviceNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrRequestFailed", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrWebxrRequestFailed"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrWebxrSessionNotSupported", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrWebxrSessionNotSupported"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrStoreKeyReserved", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrStoreKeyReserved"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrStoreValueInvalid", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrStoreValueInvalid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrStoreValueMissing", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrStoreValueMissing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrStoreInvalid", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrStoreInvalid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrHTTPRequest", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrHTTPRequest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrHTTPStatus", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrHTTPStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrBinaryFormat", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrBinaryFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrBinaryReaderReadError", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrBinaryReaderReadError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrBinaryObjectTypeNotFound", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrBinaryObjectTypeNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshMissingParticleElement", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrGeometryMeshMissingParticleElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshElementComponentsMissing", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrGeometryMeshElementComponentsMissing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshAreaMissing", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrGeometryMeshAreaMissing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshBoneNameInvalid", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrGeometryMeshBoneNameInvalid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryMeshEffectBinding", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrGeometryMeshEffectBinding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrGeometryFileType", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrGeometryFileType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrResourcePrefixUnregistered", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrResourcePrefixUnregistered"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrResourcePrefixUndefined", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrResourcePrefixUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrResourceExtensionUnregistered", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrResourceExtensionUnregistered"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrResourceExtensionUndefined", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrResourceExtensionUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrResourceFormat", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrResourceFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrShaderVersion", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrShaderVersion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrShaderHeaderSize", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrShaderHeaderSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrShaderPermutationValue", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrShaderPermutationValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrShaderCompile", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrShaderCompile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrShaderLink", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrShaderLink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrDeclarationValueType", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrDeclarationValueType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSingletonInstantiation", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrSingletonInstantiation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrInvalidDecoratorUsage", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrInvalidDecoratorUsage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrAbstractClass", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrAbstractClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrAbstractMethod", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrAbstractMethod"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrFeatureNotImplemented", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrFeatureNotImplemented"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrIndexBounds", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrIndexBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrBindingValueUndefined", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrBindingValueUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrBindingType", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrBindingType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrBindingReference", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrBindingReference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFHullNotFound", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrSOFHullNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFFactionNotFound", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrSOFFactionNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFRaceNotFound", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrSOFRaceNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFMaterialNotFound", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrSOFMaterialNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFPatternNotFound", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrSOFPatternNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrWrapped", function() { return _Tw2Error__WEBPACK_IMPORTED_MODULE_16__["ErrWrapped"]; });

/* harmony import */ var _Tw2Frustum__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Tw2Frustum */ "./core/Tw2Frustum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Frustum", function() { return _Tw2Frustum__WEBPACK_IMPORTED_MODULE_17__["Tw2Frustum"]; });

/* harmony import */ var _Tw2RenderTarget__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Tw2RenderTarget */ "./core/Tw2RenderTarget.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RenderTarget", function() { return _Tw2RenderTarget__WEBPACK_IMPORTED_MODULE_18__["Tw2RenderTarget"]; });





















/***/ }),

/***/ "./core/lighting/Tr2PointLight.js":
/*!****************************************!*\
  !*** ./core/lighting/Tr2PointLight.js ***!
  \****************************************/
/*! exports provided: Tr2PointLight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2PointLight", function() { return Tr2PointLight; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2PointLight
 * TODO: Implement
 *
 * @property {String} name           -
 * @property {Number} brightness     -
 * @property {vec4} color            -
 * @property {Number} noiseAmplitude -
 * @property {Number} noiseFrequency -
 * @property {Number} noiseOctaves   -
 * @property {vec3} position         -
 * @property {Number} radius         -
 */

class Tr2PointLight extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.brightness = 0;
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.innerRadius = 0;
    this.noiseAmplitude = 0;
    this.noiseFrequency = 0;
    this.noiseOctaves = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radius = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["brightness", r.float], ["color", r.vector4], ["innerRadius", r.float], ["noiseAmplitude", r.float], ["noiseFrequency", r.float], ["noiseOctaves", r.float], ["position", r.vector3], ["radius", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2PointLight.__isStaging = 4;

/***/ }),

/***/ "./core/lighting/Tr2ShLightingManager.js":
/*!***********************************************!*\
  !*** ./core/lighting/Tr2ShLightingManager.js ***!
  \***********************************************/
/*! exports provided: Tr2ShLightingManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ShLightingManager", function() { return Tr2ShLightingManager; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ShLightingManager
 * TODO: Implement
 *
 * @property {Number} primaryIntensity   -
 * @property {Number} secondaryIntensity -
 */

class Tr2ShLightingManager extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.primaryIntensity = 0;
    this.secondaryIntensity = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["primaryIntensity", r.float], ["secondaryIntensity", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ShLightingManager.__isStaging = 4;

/***/ }),

/***/ "./core/lighting/index.js":
/*!********************************!*\
  !*** ./core/lighting/index.js ***!
  \********************************/
/*! exports provided: Tr2PointLight, Tr2ShLightingManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2PointLight__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2PointLight */ "./core/lighting/Tr2PointLight.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2PointLight", function() { return _Tr2PointLight__WEBPACK_IMPORTED_MODULE_0__["Tr2PointLight"]; });

/* harmony import */ var _Tr2ShLightingManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2ShLightingManager */ "./core/lighting/Tr2ShLightingManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ShLightingManager", function() { return _Tr2ShLightingManager__WEBPACK_IMPORTED_MODULE_1__["Tr2ShLightingManager"]; });




/***/ }),

/***/ "./core/mesh/Tr2MeshLod.js":
/*!*********************************!*\
  !*** ./core/mesh/Tr2MeshLod.js ***!
  \*********************************/
/*! exports provided: Tr2MeshLod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2MeshLod", function() { return Tr2MeshLod; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var global_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/engine */ "./global/engine/index.js");


/**
 * Tr2MeshLod
 * TODO: Implement "depthAreas"
 * TODO: Implement "geometryRes"
 * TODO: Implement LOD
 * TODO: What should the mesh index be for it's render batch?
 * TODO: Confirm "associatedResources" is geometryRes cache
 * @ccp Tr2MeshLod
 *
 * @property {Array.<Tw2MeshArea>} additiveAreas         -
 * @property {Array<Tw2GeometryRes>} associatedResources -
 * @property {Array.<Tw2MeshArea>} decalAreas            -
 * @property {Array.<Tw2MeshArea>} depthAreas            -
 * @property {Array.<Tw2MeshArea>} distortionAreas       0
 * @property {Boolean} display                           -
 * @property {Tw2LodResource} geometryRes                -
 * @property {Tw2GeometryRes} geometryResource           -
 * @property {Array.<Tw2MeshArea>} opaqueAreas           -
 * @property {Array.<Tw2MeshArea>} pickableAreas         -
 * @property {Array.<Tw2MeshArea>} transparentAreas      -
 * @property {null|Tw2GeometryRes} _geometryPending      -
 * @property {null|Tw2GeometryRes} _geometryQuality      -
 */

class Tr2MeshLod extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.additiveAreas = [];
    this.associatedResources = [];
    this.decalAreas = [];
    this.depthAreas = [];
    this.distortionAreas = [];
    this.geometryRes = null;
    this.opaqueAreas = [];
    this.pickableAreas = [];
    this.transparentAreas = [];
    this.display = true;
    this.geometryResource = null;
    this.visible = {
      opaqueAreas: true,
      transparentAreas: true,
      additiveAreas: true,
      pickableAreas: true,
      distortionAreas: true,
      decalAreas: true,
      depthAreas: true
    };
  }

  /**
   * Initializes the object
   */
  Initialize() {} // TODO Implement Initialize

  /**
   * Rebuilds cached data
   * @param {Tw2GeometryRes} res
   */


  OnResPrepared(res) {
    this.geometryResource = res;
  }
  /**
   * Checks if the mesh's resource is good
   * @returns {Boolean}
   */


  IsGood() {
    return this.geometryResource && this.geometryResource.IsGood();
  }
  /**
   * Gets mesh resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    for (let i = 0; i < this.associatedResources; i++) {
      if (out[i] && !out.includes(this.associatedResources[i])) {
        out.push(this.associatedResources[i]);
      }
    } //return super.GetResources(out);


    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.additiveAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.decalAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.depthAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.distortionAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.opaqueAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.pickableAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.transparentAreas, "GetResources", out);
    return out;
  }
  /**
   * Gets render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.IsGood() || !this.display) return false;
    const getBatches = this.constructor.GetAreaBatches;

    switch (mode) {
      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_ADDITIVE"]:
        if (this.visible.additiveAreas) {
          getBatches(this, this.additiveAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_DECAL"]:
        if (this.visible.decalAreas) {
          getBatches(this, this.opaqueAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_DEPTH"]:
        /*
        if (this.visible.depthAreas)
        {
            getBatches(this, this.depthAreas, mode, accumulator, perObjectData);
        }
        */
        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_DISTORTION"]:
        /*
        if (this.visible.distortionAreas)
        {
            getBatches(this, this.distortionAreas, mode, accumulator, perObjectData);
        }
        */
        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_OPAQUE"]:
        if (this.visible.opaqueAreas) {
          getBatches(this, this.opaqueAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_PICKABLE"]:
        if (this.visible.pickableAreas) {
          getBatches(this, this.pickableAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_TRANSPARENT"]:
        if (this.visible.transparentAreas) {
          getBatches(this, this.transparentAreas, mode, accumulator, perObjectData);
        }

        return;
    }
  }
  /**
   * Todo: Remove when sof can figure out what areas to update
   */


  EmptyAreas() {
    this.additiveAreas.splice(0);
    this.decalAreas.splice(0);
    this.depthAreas.splice(0);
    this.distortionAreas.splice(0);
    this.opaqueAreas.splice(0);
    this.pickableAreas.splice(0);
    this.transparentAreas.splice(0);
  }
  /**
   * Gets render batches from a mesh area array and commits them to an accumulator
   * @param {Tr2MeshLod} mesh
   * @param {Array.<Tw2MeshArea>} areas
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  static GetAreaBatches(mesh, areas, mode, accumulator, perObjectData) {
    for (let i = 0; i < areas.length; ++i) {
      const area = areas[i];

      if (area.effect && area.display) {
        const batch = new area.constructor.batchType();
        batch.renderMode = mode;
        batch.perObjectData = perObjectData;
        batch.geometryRes = mesh.geometryResource;
        batch.meshIx = 0; // Why no mesh index?

        batch.start = area.index;
        batch.count = area.count;
        batch.effect = area.effect;
        accumulator.Commit(batch);
      }
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["additiveAreas", r.array], ["associatedResources", r.array], ["decalAreas", r.array], ["depthAreas", r.array], ["distortionAreas", r.array], ["geometryRes", r.object], ["opaqueAreas", r.array], ["pickableAreas", r.array], ["transparentAreas", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2MeshLod.__isStaging = 3;

/***/ }),

/***/ "./core/mesh/Tw2Effect.js":
/*!********************************!*\
  !*** ./core/mesh/Tw2Effect.js ***!
  \********************************/
/*! exports provided: Tw2Effect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Effect", function() { return Tw2Effect; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parameter/Tw2TextureParameter */ "./core/parameter/Tw2TextureParameter.js");
/* harmony import */ var _parameter_Tw2Vector4Parameter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parameter/Tw2Vector4Parameter */ "./core/parameter/Tw2Vector4Parameter.js");



/**
 * Tw2Effect
 *
 * @property {String} name                              - The effect's name
 * @property {String} effectFilePath                    - The effect's resource file path
 * @property {Tw2EffectRes|null} effectRes              - The effect's resource
 * @property {Object.<string, Tw2Parameter>} parameters - Effect parameters
 * @property {Object.<string, Array>} techniques        - Shader techniques
 * @property {Object.<string, string>} options          - Shader options
 * @property {Tw2Shader|null} shader                    - The effect's shader
 * @property {Object} samplerOverrides                  - Sampler overrides (not used yet)
 * @property {Boolean} autoParameter                   - Identifies if the effect should automatically generate parameters
 */

class Tw2Effect extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.effectFilePath = "";
    this.effectRes = null;
    this.parameters = {};
    this.techniques = {};
    this.samplerOverrides = {};
    this.options = {};
    this.shader = null;
    this.autoParameter = false;
  }

  //resources
  //constParameters

  /**
   * Initializes the Tw2Effect
   */
  Initialize() {
    if (this.effectFilePath !== "") {
      this.effectFilePath = this.effectFilePath.toLowerCase();
      const path = Tw2Effect.ToEffectResPath(this.effectFilePath);
      this.effectRes = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetResource(path, res => this.OnResPrepared(res));
    }
  }
  /**
   * Fires on value changes
   * @param {*} opt
   */


  OnValueChanged(opt) {
    this.BindParameters();
  }
  /**
   * Checks if the effect's resource is good
   * @returns {Boolean}
   */


  IsGood() {
    this.KeepAlive();
    return this.shader !== null;
  }
  /**
   * Keeps the effect and it's parameters alive
   */


  KeepAlive() {
    const res = this.GetResources();

    for (let i = 0; i < res.length; i++) res[i].KeepAlive();
  }
  /**
   * Gets effect resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.effectRes && !out.includes(this.effectRes)) {
      out.push(this.effectRes);
    }

    for (let param in this.parameters) {
      if (this.parameters.hasOwnProperty(param)) {
        if ("GetResources" in this.parameters[param]) {
          this.parameters[param].GetResources(out);
        }
      }
    }

    return out;
  }
  /**
   * Rebuilds Cached Data
   * @param {Tw2EffectRes} res
   */


  OnResPrepared(res) {
    this.shader = res.GetShader(this.options);
    this.BindParameters();
    return true;
  }
  /**
   * Unbinds parameters
   * @returns {Boolean}
   */


  UnBindParameters() {
    for (let t in this.techniques) {
      if (this.techniques.hasOwnProperty(t)) {
        let technique = this.techniques[t];

        for (let i = 0; i < technique.length; ++i) {
          for (let j = 0; j < technique[i].stages.length; ++j) {
            for (let k = 0; k < technique[i].stages[j].reroutedParameters.length; ++k) {
              technique[i].stages[j].reroutedParameters[k].Unbind();
            }
          }
        }
      }
    }

    this.techniques = {};
  }
  /**
   * Binds parameters
   * @returns {Boolean}
   */


  BindParameters() {
    this.UnBindParameters();
    if (!this.IsGood()) return false;

    for (let techniqueName in this.shader.techniques) {
      if (this.shader.techniques.hasOwnProperty(techniqueName)) {
        let technique = this.shader.techniques[techniqueName];
        let passes = [];

        for (let i = 0; i < technique.passes.length; ++i) {
          const pass = [];
          pass.stages = [];

          for (let j = 0; j < technique.passes[i].stages.length; ++j) {
            const stageRes = technique.passes[i].stages[j],
                  stage = {};
            stage.constantBuffer = new Float32Array(stageRes.constantSize);
            stage.reroutedParameters = [];
            stage.parameters = [];
            stage.textures = [];
            stage.constantBuffer.set(stageRes.constantValues);

            for (let k = 0; k < stageRes.constants.length; ++k) {
              const constant = stageRes.constants[k],
                    name = constant.name,
                    Type = constant.Type;
              if (Tw2Effect.ConstantIgnore.includes(name)) continue;

              if (name in this.parameters) {
                const param = this.parameters[name];

                if (param.Bind(stage.constantBuffer, constant.offset, constant.size)) {
                  stage.reroutedParameters.push(param);
                } else {
                  stage.parameters.push({
                    parameter: param,
                    constantBuffer: stage.constantBuffer,
                    offset: constant.offset,
                    size: constant.size
                  });
                }
              } else if (global__WEBPACK_IMPORTED_MODULE_0__["tw2"].HasVariable(name)) {
                stage.parameters.push({
                  parameter: global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetVariable(name),
                  constantBuffer: stage.constantBuffer,
                  offset: constant.offset,
                  size: constant.size
                });
              } else if (constant.isAutoregister && Type) {
                const variable = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].CreateVariable(name, undefined, Type);

                if (variable) {
                  stage.parameters.push({
                    parameter: variable,
                    constantBuffer: stage.constantBuffer,
                    offset: constant.offset,
                    size: constant.size
                  });
                }
              } else if (this.autoParameter && constant.elements === 1) {
                let value = stage.constantBuffer.subarray(constant.offset, constant.offset + constant.size);

                if (value.length === 0) {
                  value = undefined;
                } else if (value.length === 1) {
                  value = value[0];
                }

                const param = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].CreateVariable(name, value, Type);

                if (param) {
                  this.parameters[name] = param;

                  if (param.Bind(stage.constantBuffer, constant.offset, constant.size)) {
                    stage.reroutedParameters.push(param);
                  } else {
                    stage.parameter.push({
                      parameter: param,
                      constantBuffer: stage.constantBuffer,
                      offset: constant.offset,
                      size: constant.size
                    });
                  }
                }
              }
            }

            for (let k = 0; k < stageRes.textures.length; ++k) {
              const name = stageRes.textures[k].name;
              let param = null;

              if (name in this.parameters) {
                param = this.parameters[name];
              } else if (global__WEBPACK_IMPORTED_MODULE_0__["tw2"].HasVariable(name)) {
                param = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetVariable(name);
              } else if (stageRes.textures[k].isAutoregister) {
                param = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].CreateVariable(name, undefined, _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"]);
              } else if (this.autoParameter) {
                param = this.parameters[name] = new _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"](name);
              } else {
                continue;
              }

              const p = {
                parameter: param,
                slot: stageRes.textures[k].registerIndex,
                sampler: null
              };

              for (let n = 0; n < stageRes.samplers.length; ++n) {
                if (stageRes.samplers[n].registerIndex === p.slot) {
                  if (stageRes.samplers[n].name in this.samplerOverrides) {
                    p.sampler = this.samplerOverrides[stageRes.samplers[n].name].GetSampler(global__WEBPACK_IMPORTED_MODULE_0__["device"], stageRes.samplers[n]);
                  } else {
                    p.sampler = stageRes.samplers[n];
                  }

                  break;
                }
              }

              if (j === 0) p.slot += 12;
              stage.textures.push(p);
            }

            pass.stages.push(stage);
          }

          passes.push(pass);
        }

        this.techniques[techniqueName] = passes;
      }
    }

    if (global__WEBPACK_IMPORTED_MODULE_0__["device"]["effectObserver"]) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"]["effectObserver"]["OnEffectChanged"](this);
    }

    this.autoParameter = false;
    return true;
  }
  /**
   * ApplyPass
   * @param technique {String} - technique name
   * @param pass {Number}
   */


  ApplyPass(technique, pass) {
    if (!this.IsGood() || !(technique in this.techniques) || pass >= this.techniques[technique].length) {
      return;
    }

    this.shader.ApplyPass(technique, pass);
    const p = this.techniques[technique][pass],
          rp = this.shader.techniques[technique].passes[pass],
          d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl;
    const program = d.IsAlphaTestEnabled() && rp.shadowShaderProgram ? rp.shadowShaderProgram : rp.shaderProgram;

    for (let i = 0; i < 2; ++i) {
      const stages = p.stages[i];

      for (let j = 0; j < stages.parameters.length; ++j) {
        let pp = stages.parameters[j];
        pp.parameter.Apply(pp.constantBuffer, pp.offset, pp.size);
      }

      for (let j = 0; j < stages.textures.length; ++j) {
        let tex = stages.textures[j];
        tex.parameter.Apply(tex.slot, tex.sampler, program.volumeSlices[tex.sampler.registerIndex]);
      }
    }

    const cbh = program.constantBufferHandles;
    if (cbh[0]) gl.uniform4fv(cbh[0], p.stages[0].constantBuffer);
    if (cbh[7]) gl.uniform4fv(cbh[7], p.stages[1].constantBuffer);
    if (d.perFrameVSData && cbh[1]) gl.uniform4fv(cbh[1], d.perFrameVSData.data);
    if (d.perFramePSData && cbh[2]) gl.uniform4fv(cbh[2], d.perFramePSData.data);
    const pod = d.perObjectData;

    if (pod) {
      if (pod.vs && cbh[3]) gl.uniform4fv(cbh[3], pod.vs.data);
      if (pod.ps && cbh[4]) gl.uniform4fv(cbh[4], pod.ps.data);
      if (pod.ffe && cbh[5]) gl.uniform4fv(cbh[5], pod.ffe.data);
    }
  }
  /**
   * GetPassCount
   * @param technique {String} - technique name
   * @returns {Number}
   */


  GetPassCount(technique) {
    if (this.shader === null || !(technique in this.techniques)) return 0;
    return this.techniques[technique].length;
  }
  /**
   * GetPassInput
   * @param technique {String} - technique name
   * @param {Number} pass
   * @returns {*}
   */


  GetPassInput(technique, pass) {
    if (this.shader === null || !(technique in this.techniques) || pass >= this.techniques[technique].length) {
      return null;
    }

    if (global__WEBPACK_IMPORTED_MODULE_0__["device"].IsAlphaTestEnabled() && this.shader.techniques[technique].passes[pass].shadowShaderProgram) {
      return this.shader.techniques[technique].passes[pass].shadowShaderProgram.input;
    } else {
      return this.shader.techniques[technique].passes[pass].shaderProgram.input;
    }
  }
  /**
   * Render
   * @param {function} cb - callback
   */


  Render(cb) {
    const count = this.GetPassCount("Main");

    for (let i = 0; i < count; ++i) {
      this.ApplyPass("Main", i);
      cb(this, i);
    }
  }
  /**
   * Gets an object containing the textures currently set in the Tw2Effect
   * @param {{}} [out={}]
   * @returns {Object.<string, string>} out
   */


  GetTextures(out = {}) {
    for (let key in this.parameters) {
      if (this.parameters.hasOwnProperty(key) && this.parameters[key] instanceof _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"]) {
        let resourcePath = this.parameters[key].GetValue();
        if (resourcePath) out[key] = resourcePath;
      }
    }

    return out;
  }
  /**
   * Sets textures from an object
   * @param {{string:string}} options
   * @param {Boolean} [skipUpdate]
   * @returns {Boolean} true if updated
   */


  SetTextures(options = {}, skipUpdate) {
    let updated = false;

    for (let key in options) {
      if (options.hasOwnProperty(key) && options[key] !== undefined) {
        const value = options[key],
              param = this.parameters[key];

        if (_parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"].isValue(value)) {
          if (param) {
            if (!param.EqualsValue(value)) {
              param.SetValue(value);
              updated = true;
            }
          } else {
            this.parameters[key] = new _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"](key, value);
            updated = true;
          }
        }
      }
    }

    if (updated && !skipUpdate) this.UpdateValues();
    return updated;
  }
  /**
   * Gets an object containing all non texture parameters currently set in the Tw2Effect
   * - Matches sof parameter object
   * @param {{}} [out={}]
   * @returns {Object.<string, *>}
   */


  GetParameters(out = {}) {
    for (let key in this.parameters) {
      if (this.parameters.hasOwnProperty(key) && !(this.parameters[key] instanceof _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"])) {
        out[key] = this.parameters[key].GetValue();
      }
    }

    return out;
  }
  /**
   * Sets parameters from an object
   * @param {{string:*}} [options={}]
   * @param {Boolean} [skipUpdate]
   * @returns {Boolean} true if updated
   */


  SetParameters(options = {}, skipUpdate) {
    let updated = false;

    for (let key in options) {
      if (options.hasOwnProperty(key) && options[key] !== undefined) {
        const value = options[key],
              param = this.parameters[key];

        if (param) {
          if (param.constructor.isValue(value) && !param.EqualsValue(value)) {
            if (this.parameters[key].SetValue(value)) {
              updated = true;
            }
          }
        } else {
          const parameter = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].CreateVariable(key, value);

          if (parameter) {
            this.parameters[key] = parameter;
            updated = true;
          }
        }
      }
    }

    if (updated && !skipUpdate) this.UpdateValues();
    return updated;
  }
  /**
   * Sets texture overrides
   * @param {*} [options={}]
   * @param {Boolean} [skipUpdate]
   * @returns {Boolean} true if updated
   */


  SetOverrides(options = {}, skipUpdate) {
    let updated = false;

    for (let key in options) {
      if (options.hasOwnProperty(key) && options[key] !== undefined) {
        let param = this.parameters[key]; // Allow creating of parameter from overrides incase method is
        // called before SetTextures.
        // Todo: Remove this once proper sampler overrides are implemented

        if (!param) {
          param = this.parameters[key] = new _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"](key);
          updated = true;
        }

        if (param instanceof _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"]) {
          let doUpdate = false;
          const overrides = options[key];

          for (let prop in overrides) {
            if (overrides.hasOwnProperty(prop) && _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"].overrideProperties.includes(prop)) {
              if (overrides[prop] !== param[prop]) {
                doUpdate = true;
                break;
              }
            }
          }

          if (doUpdate) {
            param.SetOverrides(options[key]);
            updated = true;
          }
        }
      }
    }

    if (updated && !skipUpdate) this.UpdateValues();
    return updated;
  }
  /**
   * Gets texture overrides
   * @param {{ string: {}}} [out={}]
   */


  GetOverrides(out = {}) {
    for (let key in this.parameters) {
      if (this.parameters.hasOwnProperty(key)) {
        const param = this.parameters[key];

        if (param && param instanceof _parameter_Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"] && param.useAllOverrides) {
          out[key] = this.parameters[key].GetOverrides();
        }
      }
    }

    return out;
  }
  /**
   * Adds effect parameters automatically
   * @returns {Boolean} true if updated
   */


  PopulateParameters() {
    this.autoParameter = true;
    return this.BindParameters();
  }
  /**
   * Converts an effect file path into one suitable for an effect resource
   * @param {String} path
   * @returns {String}
   */


  static ToEffectResPath(path) {
    path = path ? path.substr(0, path.lastIndexOf(".")).replace("/effect/", global__WEBPACK_IMPORTED_MODULE_0__["device"].effectDir) + ".sm_" + global__WEBPACK_IMPORTED_MODULE_0__["device"].shaderModel : "";
    return path.toLowerCase();
  }
  /**
   * Converts an effect resource path back into a normal effect file path
   * @param {String} path
   * @param {String} [ext='fx']
   * @returns {String}
   */


  static FromEffectResPath(path, ext = "fx") {
    path = path.substr(0, path.lastIndexOf(".")).replace(global__WEBPACK_IMPORTED_MODULE_0__["device"].effectDir, "/effect/") + "." + ext;
    return path.toLowerCase();
  }
  /**
   * Sets an effect from a plain object
   * @param {Tw2Effect} a
   * @param {Tw2EffectRes} a.effectRes
   * @param {Object} [values]
   * @param {Object} [opt={}]
   * @returns {boolean} true if updated
   */


  static set(a, values, opt = {}) {
    if (!values) return false;
    const {
      parameters,
      textures,
      overrides,
      options,
      effectFilePath = ""
    } = values;
    let updated = global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(a, values, ["name", "display", "autoParameter"]);
    if (parameters && a.SetParameters(parameters, true)) updated = true;
    if (overrides && a.SetOverrides(overrides, true)) updated = true;
    if (textures && a.SetTextures(textures, true)) updated = true;

    if (options) {
      // TODO: Check if options and current options are the same
      a.options = Object.assign(options);
      if (a.effectRes) a.shader = a.effectRes.GetShader(options);
      updated = true;
    } // Only allow setting of effectFilePath on creation


    if (opt.verb === "create" && effectFilePath) {
      a.effectFilePath = effectFilePath.toLowerCase(); // Initialize is handled in Tw2BaseClass.from
      // updated = true;
    }

    if (updated && !opt.skipUpdate) a.UpdateValues(opt);
    return updated;
  }
  /**
   * Serializes a effect
   * @param {Tw2Effect} a
   * @param {Object} [out={}]
   * @returns {Object} out
   */


  static get(a, out = {}) {
    global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(out, a, ["name", "display", "effectFilePath"]);
    out.parameters = a.GetParameters();
    out.textures = a.GetTextures();
    out.overrides = a.GetOverrides();
    out.options = Object.assign(a.options);
    return out;
  }
  /**
   * Constant parameters which are ignored when creating an effect
   * @type {String[]}
   */


  /**
   * Black definition
   * @param r
   * @returns {*[]}
   */
  static black(r) {
    return [["effectFilePath", r.path], ["name", r.string], ["parameters", r.fromList({
      key: "name"
    })], // Reroute resources to parameters for now
    ["resources", r.fromList({
      key: "name",
      reroute: "parameters"
    })], // Reroute constant parameters for now
    ["constParameters", r.fromList({
      key: "name",
      reroute: "parameters",
      struct: Tw2ConstantParameter
    })], ["options", r.notImplemented], ["samplerOverrides", r.notImplemented]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2Effect.ConstantIgnore = ["PerFrameVS", "PerObjectVS", "PerFramePS", "PerObjectPS", "PerObjectPSInt"];
Tw2Effect.__isStaging = 1;

class Tw2ConstantParameter {
  /**
   * Black reader
   * @param {Tw2BlackBinaryReader} r
   * @returns {Tw2Vector4Parameter}
   */
  static blackStruct(r) {
    const item = new _parameter_Tw2Vector4Parameter__WEBPACK_IMPORTED_MODULE_2__["Tw2Vector4Parameter"](); // Temporary

    Object.defineProperty(item, "isConstant", {
      value: true,
      writable: false
    });
    item.name = r.ReadStringU16();
    r.ExpectU16(0, "unknown content");
    r.ExpectU16(0, "unknown content");
    r.ExpectU16(0, "unknown content");
    item.SetValue(new Float32Array([r.ReadF32(), r.ReadF32(), r.ReadF32(), r.ReadF32()]));
    return item;
  }

}

/***/ }),

/***/ "./core/mesh/Tw2InstancedMesh.js":
/*!***************************************!*\
  !*** ./core/mesh/Tw2InstancedMesh.js ***!
  \***************************************/
/*! exports provided: Tw2InstancedMesh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2InstancedMesh", function() { return Tw2InstancedMesh; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../batch */ "./core/batch/index.js");
/* harmony import */ var global_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/engine */ "./global/engine/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var _Tw2MeshArea__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2MeshArea */ "./core/mesh/Tw2MeshArea.js");
/* harmony import */ var _Tw2Mesh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2Mesh */ "./core/mesh/Tw2Mesh.js");






/**
 * Tw2InstancedMesh
 * TODO: Implement "distortionAreas"
 * TODO: Implement "depthAreas"
 * Todo: Handle "reversed" meshAreas
 * Todo: Handle "useSHLighting" meshAreas
 * @ccp Tr2InstancedMesh
 *
 * @property {Array.<Tw2MeshArea>} additiveAreas                                       -
 * @property {Array.<Tw2MeshArea>} decalAreas                                          -
 * @property {Array.<Tw2MeshArea>} depthAreas                                          -
 * @property {Boolean} display                                                         -
 * @property {Array.<Tw2MeshArea>} distortionAreas                                     -
 * @property {Tw2GeometryRes} geometryRes                                              -
 * @property {String} geometryResPath                                                  -
 * @property {String} instanceGeometryResPath                                          -
 * @property {ParticleSystem|Tr2RuntimeInstanceData|Resource} instanceGeometryResource -
 * @property {Number} instanceMeshIndex                                                -
 * @property {vec3} maxBounds                                                          -
 * @property {vec3} minBounds                                                          -
 * @property {String} name                                                             -
 * @property {Array.<Tw2MeshArea>} opaqueAreas                                         -
 * @property {Array.<Tw2MeshArea>} transparentAreas                                    -
 * @property {*} visible                                                               -
 */

class Tw2InstancedMesh extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.additiveAreas = [];
    this.decalAreas = [];
    this.depthAreas = [];
    this.distortionAreas = [];
    this.geometryResPath = "";
    this.instanceGeometryResPath = "";
    this.instanceGeometryResource = null;
    this.instanceMeshIndex = 0;
    this.maxBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.minBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.opaqueAreas = [];
    this.transparentAreas = [];
    this.name = "";
    this.display = true;
    this.geometryResource = null;
    this.pickableAreas = [];
    this.visible = {
      additiveAreas: true,
      decalAreas: true,
      depthAreas: true,
      distortionAreas: true,
      opaqueAreas: true,
      pickableAreas: true,
      transparentAreas: true
    };
  }

  /**
   * Initializes the instanced mesh
   */
  Initialize() {
    if (this.geometryResPath !== "") {
      this.geometryResource = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.geometryResPath);
    }

    if (this.instanceGeometryResPath !== "") {
      this.instanceGeometryResource = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.instanceGeometryResPath);
    }
  }
  /**
   * Checks if the instances meshes' resources are good
   * @returns {Boolean}
   */


  IsGood() {
    const instanced = this.instanceGeometryResource,
          isResGood = this.geometryResource && this.geometryResource.IsGood(),
          isInstancedResGood = !instanced ? false : instanced.IsGood ? instanced.IsGood() : true;
    return isResGood && isInstancedResGood;
  }
  /**
   * Gets mesh resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.geometryResource && !out.includes(this.geometryResource)) {
      out.push(this.geometryResource);
    }

    if (this.instanceGeometryResource && "GetResources" in this.instanceGeometryResource) {
      this.instanceGeometryResource.GetResources(out);
    } //return super.GetResources(out);


    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.additiveAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.decalAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.depthAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.distortionAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.opaqueAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.pickableAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.transparentAreas, "GetResources", out);
    return out;
  }
  /**
   * Gets render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.IsGood() || !this.display) return false;
    const getBatches = this.constructor.GetAreaBatches;

    switch (mode) {
      case global_engine__WEBPACK_IMPORTED_MODULE_2__["RM_ADDITIVE"]:
        if (this.visible.additiveAreas) {
          getBatches(this, this.additiveAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_2__["RM_DECAL"]:
        if (this.visible.decalAreas) {
          getBatches(this, this.opaqueAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_2__["RM_DEPTH"]:
        /*
        if (this.visible.depthAreas)
        {
            getBatches(this, this.depthAreas, mode, accumulator, perObjectData);
        }
        */
        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_2__["RM_DISTORTION"]:
        /*
        if (this.visible.distortionAreas)
        {
            getBatches(this, this.distortionAreas, mode, accumulator, perObjectData);
        }
        */
        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_2__["RM_OPAQUE"]:
        if (this.visible.opaqueAreas) {
          getBatches(this, this.opaqueAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_2__["RM_PICKABLE"]:
        if (this.visible.pickableAreas) {
          getBatches(this, this.pickableAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_2__["RM_TRANSPARENT"]:
        if (this.visible.transparentAreas) {
          getBatches(this, this.transparentAreas, mode, accumulator, perObjectData);
        }

        return;
    }
  }
  /**
   * RenderAreas
   * @param {Number} meshIx
   * @param {Number} start
   * @param {Number} count
   * @param {Tw2Effect} effect
   * @param {String} technique
   */


  RenderAreas(meshIx, start, count, effect, technique) {
    if (!this.IsGood()) return;
    const buffer = this.instanceGeometryResource.GetInstanceBuffer(this.instanceMeshIndex);

    if (buffer) {
      this.geometryResource.RenderAreasInstanced(meshIx, start, count, effect, technique, buffer, this.instanceGeometryResource.GetInstanceDeclaration(this.instanceMeshIndex), this.instanceGeometryResource.GetInstanceStride(this.instanceMeshIndex), this.instanceGeometryResource.GetInstanceCount(this.instanceMeshIndex));
    }
  }
  /**
   * Todo: Remove when sof can figure out what areas to update
   */


  EmptyAreas() {
    this.additiveAreas.splice(0);
    this.decalAreas.splice(0);
    this.depthAreas.splice(0);
    this.distortionAreas.splice(0);
    this.opaqueAreas.splice(0);
    this.pickableAreas.splice(0);
    this.transparentAreas.splice(0);
  }
  /**
   * Creates an instanced mesh from a plain object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {Tw2InstancedMesh}
   */


  static from(values, options) {
    const item = new Tw2InstancedMesh();
    item.meshIndex = Object(global_util__WEBPACK_IMPORTED_MODULE_3__["get"])(options, "index", 0);

    if (values) {
      /*
      if (values.instanceGeometryResource)
      {
          item.instanceGeometryResource = values.instanceGeometryResource;
      }
      */
      Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item, values, ["name", "display", "geometryResPath", "instanceGeometryResPath", "instanceMeshIndex"]);
      const areaNames = ["additiveAreas", "decalAreas", "depthAreas", "distortionAreas", "opaqueAreas", "pickableAreas", "transparentAreas"];
      Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item.visible, values.visible, areaNames);
      _Tw2Mesh__WEBPACK_IMPORTED_MODULE_5__["Tw2Mesh"].createAreaIfExists(item, values, areaNames);
    }

    if (!options || !options.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * Gets area batches
   * @param {Tw2InstancedMesh} mesh
   * @param {Array.<Tw2MeshArea>} areas
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  static GetAreaBatches(mesh, areas, mode, accumulator, perObjectData) {
    for (let i = 0; i < areas.length; ++i) {
      const area = areas[i];

      if (area.effect && area.display) {
        const batch = new _batch__WEBPACK_IMPORTED_MODULE_1__["Tw2InstancedMeshBatch"]();
        batch.renderMode = mode;
        batch.perObjectData = perObjectData;
        batch.instanceMesh = mesh;
        batch.meshIx = area.meshIndex;
        batch.start = area.index;
        batch.count = area.count;
        batch.effect = area.effect;
        accumulator.Commit(batch);
      }
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["additiveAreas", r.array], ["decalAreas", r.array], ["depthAreas", r.array], ["distortionAreas", r.array], ["geometryResPath", r.path], ["instanceGeometryResPath", r.path], ["instanceGeometryResource", r.object], ["instanceMeshIndex", r.uint], ["minBounds", r.vector3], ["maxBounds", r.vector3], ["opaqueAreas", r.array], ["transparentAreas", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2InstancedMesh.__isStaging = 1;

/***/ }),

/***/ "./core/mesh/Tw2Mesh.js":
/*!******************************!*\
  !*** ./core/mesh/Tw2Mesh.js ***!
  \******************************/
/*! exports provided: Tw2Mesh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Mesh", function() { return Tw2Mesh; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var global_engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/engine */ "./global/engine/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/util */ "./global/util/index.js");



/**
 * Tw2Mesh
 * Todo: Implement "deferGeometryLoad"
 * Todo: Implement "depthNormalAreas"
 * Todo: Implement "distortionAreas"
 * Todo: Implement "depthAreas"
 * Todo: Implement "opaquePrepassAreas"
 * Todo: Handle "reversed" meshAreas
 * Todo: Handle "useSHLighting" meshAreas
 * @ccp Tr2Mesh
 *
 * @property {String} name                            -
 * @property {Array.<Tw2MeshArea>} additiveAreas      -
 * @property {Array.<Tw2MeshArea>} decalAreas         -
 * @property {Boolean} deferGeometryLoad              -
 * @property {Array.<Tw2MeshArea>} depthAreas         -
 * @property {Array.<Tw2MeshArea>} depthNormalAreas   -
 * @property {Boolean} display                        -
 * @property {Array.<Tw2MeshArea>} distortionAreas    -
 * @property {String} geometryResPath                 -
 * @property {Number} meshIndex                       -
 * @property {Array.<Tw2MeshArea>} opaqueAreas        -
 * @property {Array.<Tw2MeshArea>} opaquePrepassAreas -
 * @property {Array.<Tw2MeshArea>} pickableAreas      -
 * @property {Array.<Tw2MeshArea>} transparentAreas   -
 * @property {Tw2GeometryRes} geometryResource        -
 * @parameter {*} visible                            -

 */

class Tw2Mesh extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.additiveAreas = [];
    this.decalAreas = [];
    this.deferGeometryLoad = false;
    this.depthAreas = [];
    this.depthNormalAreas = [];
    this.distortionAreas = [];
    this.geometryResPath = "";
    this.meshIndex = 0;
    this.opaqueAreas = [];
    this.opaquePrepassAreas = [];
    this.pickableAreas = [];
    this.transparentAreas = [];
    this.display = true;
    this.geometryResource = null;
    this.visible = {
      additiveAreas: true,
      decalAreas: true,
      depthAreas: true,
      depthNormalAreas: true,
      distortionAreas: true,
      opaqueAreas: true,
      opaquePrepassAreas: true,
      pickableAreas: true,
      transparentAreas: true
    };
  }

  /**
   * Initializes the mesh
   */
  Initialize() {
    if (this.geometryResPath !== "") {
      this.geometryResource = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.geometryResPath);
    }
  }
  /**
   * Checks if the mesh's resource is good
   * @returns {Boolean}
   */


  IsGood() {
    return this.geometryResource && this.geometryResource.IsGood();
  }
  /**
   * Gets mesh resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.geometryResource && !out.includes(this.geometryResource)) {
      out.push(this.geometryResource);
    } //return super.GetResources(out);


    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.additiveAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.decalAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.depthAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.distortionAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.opaqueAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.pickableAreas, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.transparentAreas, "GetResources", out);
    return out;
  }
  /**
   * Gets render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.IsGood() || !this.display) return false;
    const getBatches = this.constructor.GetAreaBatches;

    switch (mode) {
      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_ADDITIVE"]:
        if (this.visible.additiveAreas) {
          getBatches(this, this.additiveAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_DECAL"]:
        if (this.visible.decalAreas) {
          getBatches(this, this.opaqueAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_DEPTH"]:
        /*
        if (this.visible.depthAreas)
        {
            getBatches(this, this.depthAreas, mode, accumulator, perObjectData);
        }
        */
        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_DISTORTION"]:
        /*
        if (this.visible.distortionAreas)
        {
            getBatches(this, this.distortionAreas, mode, accumulator, perObjectData);
        }
        */
        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_OPAQUE"]:
        if (this.visible.opaqueAreas) {
          getBatches(this, this.opaqueAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_PICKABLE"]:
        if (this.visible.pickableAreas) {
          getBatches(this, this.pickableAreas, mode, accumulator, perObjectData);
        }

        return;

      case global_engine__WEBPACK_IMPORTED_MODULE_1__["RM_TRANSPARENT"]:
        if (this.visible.transparentAreas) {
          getBatches(this, this.transparentAreas, mode, accumulator, perObjectData);
        }

        return;
    }
  }
  /**
   * Todo: Remove when sof can figure out what areas to update
   */


  EmptyAreas() {
    this.additiveAreas.splice(0);
    this.decalAreas.splice(0);
    this.depthAreas.splice(0);
    this.depthNormalAreas.splice(0);
    this.distortionAreas.splice(0);
    this.opaqueAreas.splice(0);
    this.opaquePrepassAreas.splice(0);
    this.pickableAreas.splice(0);
    this.transparentAreas.splice(0);
  }
  /**
   * Gets render batches from a mesh area array and commits them to an accumulator
   * @param {Tw2Mesh} mesh
   * @param {Array.<Tw2MeshArea>} areas
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  static GetAreaBatches(mesh, areas, mode, accumulator, perObjectData) {
    for (let i = 0; i < areas.length; ++i) {
      const area = areas[i];

      if (area.effect && area.display) {
        const batch = new area.constructor.batchType();
        batch.renderMode = mode;
        batch.perObjectData = perObjectData;
        batch.geometryRes = mesh.geometryResource;
        batch.meshIx = mesh.meshIndex;
        batch.start = area.index;
        batch.count = area.count;
        batch.effect = area.effect;
        accumulator.Commit(batch);
      }
    }
  }
  /**
   * Creates an area if it exists
   * @param {*} dest
   * @param {*} src
   * @param {String|String[]} names
   */


  static createAreaIfExists(dest, src, names) {
    names = Object(global_util__WEBPACK_IMPORTED_MODULE_2__["toArray"])(names);

    for (let i = 0; i < names.length; i++) {
      const name = names[i];

      if (name in src && name in dest) {
        for (let i = 0; i < src[name].length; i++) {
          const type = src[name][i].__type || "Tw2MeshArea",
                Constructor = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetClass(type);
          dest[name].push(Constructor.from(src[name][i], {
            index: i
          }));
        }
      }
    }
  }
  /**
   * Creates a mesh from a plain object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {Tw2Mesh}
   */


  static from(values, options) {
    const item = new Tw2Mesh();
    item.index = Object(global_util__WEBPACK_IMPORTED_MODULE_2__["get"])(options, "index", 0);

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_2__["assignIfExists"])(item, values, ["name", "display", "deferGeometryLoad", "geometryResPath", "meshIndex"]);
      const areaNames = ["additiveAreas", "decalAreas", "depthAreas", "depthNormalAreas", "distortionAreas", "opaqueAreas", "opaquePrepassAreas", "pickableAreas", "transparentAreas"];
      Object(global_util__WEBPACK_IMPORTED_MODULE_2__["assignIfExists"])(item.visible, values.visible, areaNames);
      this.createAreaIfExists(item, values, areaNames);
    }

    if (!options || !options.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["additiveAreas", r.array], ["decalAreas", r.array], ["deferGeometryLoad", r.boolean], ["depthAreas", r.array], ["depthNormalAreas", r.array], ["distortionAreas", r.array], ["geometryResPath", r.path], ["meshIndex", r.uint], ["name", r.string], ["opaqueAreas", r.array], ["opaquePrepassAreas", r.array], ["pickableAreas", r.array], ["transparentAreas", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2Mesh.__isStaging = 1;

/***/ }),

/***/ "./core/mesh/Tw2MeshArea.js":
/*!**********************************!*\
  !*** ./core/mesh/Tw2MeshArea.js ***!
  \**********************************/
/*! exports provided: Tw2MeshArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshArea", function() { return Tw2MeshArea; });
/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../batch */ "./core/batch/index.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var _Tw2Effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2Effect */ "./core/mesh/Tw2Effect.js");




/**
 * Tw2MeshArea
 * TODO: Implement "reversed" - in RenderBatch or Mesh?
 * TODO: Implement "useSHLighting" - in RenderBatch or Mesh?
 * @ccp Tr2MeshArea
 *
 * @property {String} name           -
 * @property {Number} count          -
 * @property {Tr2Effect} effect      -
 * @property {Number} index          -
 * @property {Boolean} reversed      -
 * @property {Boolean} useSHLighting -
 */

class Tw2MeshArea extends global__WEBPACK_IMPORTED_MODULE_1__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.count = 1;
    this.effect = null;
    this.index = 0;
    this.reversed = false;
    this.useSHLighting = false;
    this.display = true;
  }

  /**
   * Alias for index
   * @returns {Number}
   */
  get meshIndex() {
    return this.index;
  }
  /**
   * Alias for index
   * @param {Number} val
   */


  set meshIndex(val) {
    this.index = val;
  }
  /**
   * Creates a mesh area from a plain object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {Tw2MeshArea}
   */


  static from(values, options) {
    const item = new this();
    Object(global_util__WEBPACK_IMPORTED_MODULE_2__["assignIfExists"])(item, options, "index");

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_2__["assignIfExists"])(item, values, ["name", "display", "count", "index", "reversed", "useSHLighting"]);

      if (values.effect) {
        item.effect = _Tw2Effect__WEBPACK_IMPORTED_MODULE_3__["Tw2Effect"].from(values.effect);
      }
    }

    return item;
  }
  /**
   * Render Batch Constructor
   * @type {Tw2RenderBatch}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["count", r.uint], ["effect", r.object], ["index", r.uint], ["name", r.string], ["reversed", r.boolean], ["useSHLighting", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2MeshArea.batchType = _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryBatch"];
Tw2MeshArea.__isStaging = 1;

/***/ }),

/***/ "./core/mesh/Tw2MeshLineArea.js":
/*!**************************************!*\
  !*** ./core/mesh/Tw2MeshLineArea.js ***!
  \**************************************/
/*! exports provided: Tw2MeshLineArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshLineArea", function() { return Tw2MeshLineArea; });
/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../batch */ "./core/batch/index.js");
/* harmony import */ var _Tw2MeshArea__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2MeshArea */ "./core/mesh/Tw2MeshArea.js");


/**
 * Tw2MeshLineArea
 * TODO: Is this deprecated?
 * @ccp N/A
 */

class Tw2MeshLineArea extends _Tw2MeshArea__WEBPACK_IMPORTED_MODULE_1__["Tw2MeshArea"] {}
Tw2MeshLineArea.batchType = _batch__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryLineBatch"];

/***/ }),

/***/ "./core/mesh/index.js":
/*!****************************!*\
  !*** ./core/mesh/index.js ***!
  \****************************/
/*! exports provided: Tr2MeshLod, Tw2Effect, Tw2InstancedMesh, Tw2Mesh, Tw2MeshArea, Tw2MeshLineArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2MeshLod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2MeshLod */ "./core/mesh/Tr2MeshLod.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2MeshLod", function() { return _Tr2MeshLod__WEBPACK_IMPORTED_MODULE_0__["Tr2MeshLod"]; });

/* harmony import */ var _Tw2Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2Effect */ "./core/mesh/Tw2Effect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Effect", function() { return _Tw2Effect__WEBPACK_IMPORTED_MODULE_1__["Tw2Effect"]; });

/* harmony import */ var _Tw2InstancedMesh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2InstancedMesh */ "./core/mesh/Tw2InstancedMesh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2InstancedMesh", function() { return _Tw2InstancedMesh__WEBPACK_IMPORTED_MODULE_2__["Tw2InstancedMesh"]; });

/* harmony import */ var _Tw2Mesh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2Mesh */ "./core/mesh/Tw2Mesh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Mesh", function() { return _Tw2Mesh__WEBPACK_IMPORTED_MODULE_3__["Tw2Mesh"]; });

/* harmony import */ var _Tw2MeshArea__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2MeshArea */ "./core/mesh/Tw2MeshArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshArea", function() { return _Tw2MeshArea__WEBPACK_IMPORTED_MODULE_4__["Tw2MeshArea"]; });

/* harmony import */ var _Tw2MeshLineArea__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2MeshLineArea */ "./core/mesh/Tw2MeshLineArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshLineArea", function() { return _Tw2MeshLineArea__WEBPACK_IMPORTED_MODULE_5__["Tw2MeshLineArea"]; });








/***/ }),

/***/ "./core/model/Tw2Animation.js":
/*!************************************!*\
  !*** ./core/model/Tw2Animation.js ***!
  \************************************/
/*! exports provided: Tw2Animation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Animation", function() { return Tw2Animation; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2Animation
 *
 * @property {Tw2GeometryAnimation} animationRes - The animation's resource
 * @property {Number} time                       - The current animation time
 * @property {Number} timeScale                  - The animation's time scale
 * @property {Boolean} cycle                     - identifies if the animation will cycle
 * @property {Array<Tw2TrackGroup>} trackGroups  - Track groups
 * @property {Function} _callback                - Optional callback fired when an animation ends
 * @property {Function} _controller              - The animation's controller
 */

class Tw2Animation extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2EventEmitter"] {
  /**
   * Constructor
   * @param animationController
   */
  constructor(animationController) {
    super();
    this.animationRes = null;
    this.time = 0;
    this.timeScale = 1.0;
    this.cycle = false;
    this.trackGroups = [];
    this._callback = null;
    this._controller = null;
    this._state = Tw2Animation.State.FINISHED;
    this._controller = animationController;
  }
  /**
   * Gets the animation's name
   * @returns {null|string}
   */


  get name() {
    return this.animationRes ? this.animationRes.name : null;
  }
  /**
   * Gets the animation's duration
   * @returns {number}
   */


  get duration() {
    return this.animationRes ? this.animationRes.duration : 0;
  }
  /**
   * Gets current percentage of duration
   * @returns {number}
   */


  get percent() {
    return this.animationRes ? Math.min(this.time, this.duration) / this.duration : 0;
  }
  /**
   * Adds a callback
   * - Provided for backwards compatibility
   * - If the callback returns true it will be removed once fired
   * @param {Function} callback
   */


  AddCallback(callback) {
    this._callback = callback;
  }
  /**
   * Fires the stored callback
   * - Provided for backwards compatibility
   */


  UpdateCallback() {
    if (this._callback) {
      if (this._callback(this, this._controller)) {
        this._callback = null;
      }
    }
  }
  /**
   * Starts playing the animation
   * @param {Object} [options={}]
   * @param {Number} [options.time=0]             - the time to play from
   * @param {Number} [options.percent]            - the percentage of the duration to play from (overrides time)
   * @param {Boolean} [options.cycle=this.cycle]  - identifies if the animation should cycle
   * @param {Number} [options.timeScale]          - the time scale
   * @param {Object} [options.events]             - events to add to the animation
   * @param {Function} [options.callback]         - a callback which is fired when the animation ends
   */


  Play(options = {}) {
    let wasPaused = this.IsPaused();
    let {
      time = wasPaused ? this.time : 0,
      cycle = this.cycle,
      timeScale = this.timeScale,
      callback,
      events,
      percent
    } = options;

    if (percent !== undefined) {
      time = this.duration * percent;
    }

    this.time = Math.max(Math.min(time, this.duration), 0);
    this.timeScale = timeScale;
    this.cycle = cycle;
    this._state = Tw2Animation.State.PLAYING;
    if (events) this.add(events);
    if (callback) this.AddCallback(callback);

    if (wasPaused) {
      /**
       * Fires when the animation plays after being paused
       * @event Tw2Animation#unpause
       * @type {Object}
       * @property {Tw2Animation} animation
       * @property {Tw2AnimationController} controller
       */
      this.emit("unpause", {
        animation: this,
        controller: this._controller
      });
    } else {
      /**
       * Fires when the animation is playing
       * @event Tw2Animation#play
       * @type {Object}
       * @property {Tw2Animation} animation
       * @property {Tw2AnimationController} controller
       */
      this.emit("play", {
        animation: this,
        controller: this._controller
      });
    }
  }
  /**
   * Pauses the animation at the current time
   */


  Pause() {
    if (this.IsPlaying()) {
      this._state = Tw2Animation.State.PAUSED;
      /** Fires when the animation pauses
       * @event Tw2Animation#pause
       * @type {Object}
       * @property {Tw2Animation} animation
       * @property {Tw2AnimationController} controller
       */

      this.emit("pause", {
        animation: this,
        controller: this._controller
      });
    }
  }
  /**
   * Stops the animation
   */


  Stop() {
    if (!this.IsFinished()) {
      this._state = Tw2Animation.State.FINISHED;
      this.time = this.duration;
      /**
       * Fires when the animation ends
       * @event Tw2Animation#end
       * @type {Object}
       * @property {Tw2Animation} animation
       * @property {Tw2AnimationController} controller
       */

      this.emit("end", {
        animation: this,
        controller: this._controller
      });
      this.UpdateCallback();
    }
  }
  /**
   * Checks if the animation is good
   * @returns {boolean}
   */


  IsGood() {
    return !!this.animationRes;
  }
  /**
   * Checks if the animation is playing
   * @returns {boolean}
   */


  IsPlaying() {
    return this._state === Tw2Animation.State.PLAYING || this._state === Tw2Animation.State.CYCLING;
  }
  /**
   * Checks if the animation is stopped
   * @returns {boolean}
   */


  IsPaused() {
    return this._state === Tw2Animation.State.PAUSED;
  }
  /**
   * Checks to see if the animation has finished playing
   * @return {Boolean}
   */


  IsFinished() {
    return this._state === Tw2Animation.State.FINISHED;
  }
  /**
   * Per frame update
   * @param {Number} dt
   * @returns {Boolean} true to keep animating
   */


  Update(dt) {
    if (this.IsFinished()) return false; // Keep calculating bone positions when paused

    if (this.IsPaused()) return true;
    this.time += dt * this.timeScale;

    if (this.time >= this.duration) {
      if (this.cycle) {
        this._state = Tw2Animation.State.CYCLING;
        this.time = this.time % this.duration;
        /**
         * Fires when the animation starts a new animation cycle
         * @event Tw2Animation#cycle
         * @type {Object}
         * @property {Tw2Animation} animation
         * @property {Tw2AnimationController} controller
         */

        this.emit("cycle", {
          animation: this,
          controller: this._controller
        });
        this.UpdateCallback();
      } else {
        this.Stop();
      }
    }

    return true;
  }
  /**
   * Animation state
   * @type {{PAUSED: number, CYCLING: number, FINISHED: number, PLAYING: number}}
   */


}
Tw2Animation.State = {
  PAUSED: 0,
  PLAYING: 1,
  CYCLING: 2,
  FINISHED: 3
};

/***/ }),

/***/ "./core/model/Tw2AnimationController.js":
/*!**********************************************!*\
  !*** ./core/model/Tw2AnimationController.js ***!
  \**********************************************/
/*! exports provided: Tw2AnimationController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2AnimationController", function() { return Tw2AnimationController; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resource */ "./core/resource/index.js");
/* harmony import */ var _Tw2Animation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2Animation */ "./core/model/Tw2Animation.js");
/* harmony import */ var _Tw2Bone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2Bone */ "./core/model/Tw2Bone.js");
/* harmony import */ var _Tw2BoneBinding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2BoneBinding */ "./core/model/Tw2BoneBinding.js");
/* harmony import */ var _Tw2Model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2Model */ "./core/model/Tw2Model.js");
/* harmony import */ var _Tw2Track__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2Track */ "./core/model/Tw2Track.js");
/* harmony import */ var _Tw2TrackGroup__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2TrackGroup */ "./core/model/Tw2TrackGroup.js");
/* harmony import */ var _Tw2MeshBinding__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Tw2MeshBinding */ "./core/model/Tw2MeshBinding.js");









/**
 * Tw2AnimationController
 * TODO: Handle bounds in the update function
 *
 * @property {Array.<Tw2GeometryRes>} geometryResources
 * @property {Array.<Tw2Model>} models
 * @property {Array.<Tw2Animation>} animations
 * @property {Array.<Tw2MeshBinding>} meshBindings
 * @property {Boolean} update
 * @property {Boolean} _isLoaded
 * @property {Boolean} _isPlaying
 * @property {Boolean} _boundsDirty
 * @property {Array} _pendingCommands
 */

class Tw2AnimationController extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Constructor
   * @param {Tw2GeometryRes} [geometryResource]
   */
  constructor(geometryResource) {
    super();
    this.geometryResources = [];
    this.models = [];
    this.animations = [];
    this.meshBindings = [];
    this.update = true;
    this._isLoaded = false;
    this._isPlaying = false;
    this._boundsDirty = false;
    this._pendingCommands = [];

    if (geometryResource) {
      this.SetGeometryResource(geometryResource);
    }
  }
  /**
   * Checks if the animation is good
   * @returns {boolean}
   */


  IsGood() {
    let isGood = this.geometryResources.length > 0; // Cycle through geometry to keep alive

    for (let i = 0; i < this.geometryResources.length; i++) {
      if (!this.geometryResources[i] || !this.geometryResources[i].IsGood()) {
        isGood = false;
      }
    }

    if (!isGood || !this.animations.length) return false;

    for (let i = 0; i < this.animations.length; i++) {
      if (!this.animations[i].IsGood()) {
        return false;
      }
    }

    return true;
  }
  /**
   * Checks if any animations are playing
   * @returns {boolean}
   */


  IsPlaying() {
    return this._isPlaying;
  }
  /**
   * Checks if the animations are loaded
   * @returns {boolean}
   */


  IsLoaded() {
    return this._isLoaded;
  }
  /**
   * Gets a loaded Tw2Animation by it's name
   * @param {Object} [out={}]
   * @returns {?{String:Tw2Animation}} an object containing animation names and animations, or null if not loaded
   */


  GetAnimationsByName(out = {}) {
    if (!this.IsLoaded()) return null;

    for (let i = 0; i < this.animations.length; i++) {
      out[this.animations[i].name] = this.animations[i];
    }

    return out;
  }
  /**
   * Gets a loaded Tw2Animation by it's name
   * @param {String} name
   * @returns {?Tw2Animation} Returns the animation if found
   */


  GetAnimation(name) {
    for (let i = 0; i < this.animations.length; i++) {
      if (this.animations[i].name === name) {
        return this.animations[i];
      }
    }

    return null;
  }
  /**
   * Plays a specific animation by it's name
   * @param {String} name - Animation's Name
   * @param {Object} options
   * @param {Boolean} [options.cycle]
   * @param {Number} [options.time]
   * @param {Function} [options.callback]
   * @param {Object} [options.events]
   */


  PlayAnimation(name, options) {
    if (this.animations.length === 0) {
      this._pendingCommands.push({
        "func": this.PlayAnimation,
        "args": [name, options]
      });

      return;
    }

    const animation = this.GetAnimation(name);

    if (animation) {
      animation.Play(options);
    }
  }
  /**
   * Gets an array of all the currently playing animations by name
   * @returns {Array}
   */


  GetPlayingAnimations() {
    const result = [];

    for (let i = 0; i < this.animations.length; i++) {
      if (this.animations[i].IsPlaying()) {
        result.push(this.animations[i].name);
      }
    }

    return result;
  }
  /**
   * Stops an animation or an array of animations from playing
   * @param {String| Array.<string>} names - Animation Name, or Array of Animation Names
   */


  StopAnimation(names) {
    if (this.animations.length === 0) {
      this._pendingCommands.push({
        "func": this.StopAnimation,
        "args": names
      });

      return;
    }

    names = global__WEBPACK_IMPORTED_MODULE_0__["util"].toArray(names);

    for (let i = 0; i < this.animations.length; ++i) {
      if (names.includes(this.animations[i].name)) {
        this.animations[i].Stop();
      }
    }
  }
  /**
   * Stops all animations from playing
   */


  StopAllAnimations() {
    if (this.animations.length === 0) {
      this._pendingCommands.push({
        "func": this.StopAllAnimations,
        "args": null
      });

      return;
    }

    for (let i = 0; i < this.animations.length; ++i) {
      this.animations[i].Stop();
    }
  }
  /**
   * Stops all but the supplied list of animations
   * @param {String| Array.<string>} names - Animation Names
   */


  StopAllAnimationsExcept(names) {
    if (this.animations.length === 0) {
      this._pendingCommands.push({
        "func": this.StopAllAnimationsExcept,
        "args": names
      });

      return;
    }

    names = global__WEBPACK_IMPORTED_MODULE_0__["util"].toArray(names);

    for (let i = 0; i < this.animations.length; ++i) {
      if (!names.includes(this.animations[i].name)) {
        this.animations[i].Stop();
      }
    }
  }
  /**
   * Clears any existing resources and loads the supplied geometry resource
   * @param {Tw2GeometryRes} geometryResource
   */


  SetGeometryResource(geometryResource) {
    this.models.splice(0);

    for (let i = 0; i < this.animations.length; i++) {
      const animation = this.animations[i];
      this.animations.splice(i, 1);
      i--;
      /**
       * Fires when an animation has been removed
       * @event Tw2AnimationController#removed
       * @type {Object}
       * @property {Tw2Animation} animation
       * @property {Tw2AnimationController} controller
       */

      this.emit("removed", {
        animation,
        controller: this
      });
      animation.OnDestroy();
    }

    this.meshBindings.splice(0);

    for (let i = 0; i < this.geometryResources.length; ++i) {
      this.geometryResources[i].UnregisterNotification(this);
    }

    this._isLoaded = false;
    this.geometryResources.splice(0);

    if (geometryResource) {
      this.geometryResources.push(geometryResource);
      geometryResource.RegisterNotification(this);
    }
  }
  /**
   * Adds a Geometry Resource
   * @param {Tw2GeometryRes} geometryResource
   */


  AddGeometryResource(geometryResource) {
    if (!this.geometryResources.includes(geometryResource)) {
      this.geometryResources.push(geometryResource);
      geometryResource.RegisterNotification(this);
    }
  }
  /**
   * Resets the bone transforms
   */


  ResetBoneTransforms() {
    for (let i = 0; i < this.models.length; ++i) {
      for (let j = 0; j < this.models[i].bones.length; ++j) {
        const bone = this.models[i].bones[j],
              boneRes = bone.boneRes;
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(bone.localTransform, boneRes.localTransform);

        if (boneRes.parentIndex !== -1) {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(bone.worldTransform, bone.localTransform, this.models[i].bones[bone.boneRes.parentIndex].worldTransform);
        } else {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].set(bone.worldTransform, bone.localTransform);
        }

        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(bone.offsetTransform);
      }
    }

    const id = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(Tw2AnimationController.global.mat4_0);

    for (let i = 0; i < this.meshBindings.length; ++i) {
      for (let j = 0; j < this.meshBindings[i].meshIndex.length; ++j) {
        for (let k = 0; k * 16 < this.meshBindings[i].meshIndex[j].length; ++k) {
          for (let m = 0; m < 16; ++m) {
            this.meshBindings[i].meshIndex[j][k * 16 + m] = id[m];
          }
        }
      }
    }
  }
  /**
   * GetBoneMatrices
   * @param {Number} meshIndex
   * @param {Tw2GeometryRes} [geometryResource=this.geometryResources[0]]
   * @returns {Float32Array}
   */


  GetBoneMatrices(meshIndex, geometryResource) {
    if (this.geometryResources.length === 0) {
      return new Float32Array();
    }

    if (!geometryResource) {
      geometryResource = this.geometryResources[0];
    }

    const meshBindings = Tw2AnimationController.FindMeshBindings(this, geometryResource);

    if (meshBindings && meshBindings.meshIndex[meshIndex] !== undefined) {
      return meshBindings.meshIndex[meshIndex];
    }

    return new Float32Array();
  }
  /**
   * Finds a bone for a mesh by it's name
   * @param {String} name
   * @param {Number} meshIndex
   * @returns {null|Tw2Bone}
   */


  FindBoneForMesh(name, meshIndex) {
    const model = this.FindModelForMesh(meshIndex);

    if (model) {
      for (let i = 0; i < model.bones.length; i++) {
        if (model.bones[i].boneRes.name === name) {
          return model.bones[i];
        }
      }
    }

    return null;
  }
  /**
   * FindModelForMesh
   * @param {Number} meshIndex
   * @param {Tw2GeometryRes} [geometryResource=this.geometryResources[0]]
   * @returns {Tw2Model|null} Returns the Tw2Model for the mesh if found and is good, else returns null
   */


  FindModelForMesh(meshIndex, geometryResource) {
    if (this.geometryResources.length === 0) {
      return null;
    }

    if (!geometryResource) {
      geometryResource = this.geometryResources[0];
    }

    if (!geometryResource.IsGood()) {
      return null;
    }

    const mesh = geometryResource.meshes[meshIndex];

    for (let i = 0; i < this.models.length; ++i) {
      for (let j = 0; j < this.models[i].modelRes.meshBindings.length; ++i) {
        if (this.models[i].modelRes.meshBindings[j].mesh === mesh) {
          return this.models[i];
        }
      }
    }

    return null;
  }
  /**
   * Gets all animation controller res objects
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    for (let i = 0; i < this.geometryResources.length; i++) {
      if (!out.includes(this.geometryResources[i])) {
        out.push(this.geometryResources[i]);
      }
    }

    return out;
  }
  /**
   * Rebuilds the cached data for a resource (unless it doesn't exist or is already good)
   * @param {Tw2GeometryRes} res
   */


  OnResPrepared(res) {
    res.UnregisterNotification(this);
    let found = this.geometryResources.includes(res); // Unknown resource ignore

    if (!found) {
      return;
    }

    for (let i = 0; i < this.geometryResources.length; ++i) {
      if (!this.geometryResources[i].IsGood()) {
        return;
      }
    }

    for (let i = 0; i < this.geometryResources.length; ++i) {
      Tw2AnimationController.DoRebuildCachedData(this, this.geometryResources[i]);
    }
  }
  /**
   * Internal render/update function which is called every frame
   * @param {Number} dt - Delta Time
   */


  Update(dt) {
    let wasPlaying = this._isPlaying;
    this._isPlaying = false;

    if (!this.models || !this.update) {
      return;
    }

    for (let i = 0; i < this.geometryResources.length; ++i) {
      this.geometryResources[i].KeepAlive();
    }

    const g = Tw2AnimationController.global,
          rotationMat = g.mat4_0,
          orientation = g.quat_0,
          position = g.vec3_0,
          scale = g.mat3_0; //var updateBones = false;

    for (let i = 0; i < this.animations.length; ++i) {
      const animation = this.animations[i];

      if (animation.Update(dt)) {
        this._isPlaying = true;
        const res = animation.animationRes;

        for (let j = 0; j < animation.trackGroups.length; ++j) {
          for (let k = 0; k < animation.trackGroups[j].transformTracks.length; ++k) {
            const track = animation.trackGroups[j].transformTracks[k];

            if (track.trackRes.position) {
              global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(track.trackRes.position, animation.time, position, animation.cycle, res.duration);
            } else {
              position[0] = position[1] = position[2] = 0;
            }

            if (track.trackRes.orientation) {
              global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(track.trackRes.orientation, animation.time, orientation, animation.cycle, res.duration);
              global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(orientation, orientation);
            } else {
              global__WEBPACK_IMPORTED_MODULE_0__["quat"].identity(orientation);
            }

            if (track.trackRes.scaleShear) {
              global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(track.trackRes.scaleShear, animation.time, scale, animation.cycle, res.duration);
            } else {
              global__WEBPACK_IMPORTED_MODULE_0__["mat3"].identity(scale);
            }

            global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromMat3(track.bone.localTransform, scale);
            global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(track.bone.localTransform, track.bone.localTransform, global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromQuat(rotationMat, orientation));
            track.bone.localTransform[12] = position[0];
            track.bone.localTransform[13] = position[1];
            track.bone.localTransform[14] = position[2];
          }
        }
      }
    }

    for (let i = 0; i < this.models.length; ++i) {
      for (let j = 0; j < this.models[i].bones.length; ++j) {
        const bone = this.models[i].bones[j];

        if (bone.boneRes.parentIndex !== -1) {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(bone.worldTransform, this.models[i].bones[bone.boneRes.parentIndex].worldTransform, bone.localTransform);
        } else {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(bone.worldTransform, bone.localTransform);
        }

        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(bone.offsetTransform, bone.worldTransform, bone.boneRes.worldTransformInv);

        for (let a = 0; a < bone.bindingArrays.length; ++a) {
          const ba = bone.bindingArrays[a],
                tr = bone.offsetTransform;
          ba.array[ba.offset + 0] = tr[0];
          ba.array[ba.offset + 1] = tr[4];
          ba.array[ba.offset + 2] = tr[8];
          ba.array[ba.offset + 3] = tr[12];
          ba.array[ba.offset + 4] = tr[1];
          ba.array[ba.offset + 5] = tr[5];
          ba.array[ba.offset + 6] = tr[9];
          ba.array[ba.offset + 7] = tr[13];
          ba.array[ba.offset + 8] = tr[2];
          ba.array[ba.offset + 9] = tr[6];
          ba.array[ba.offset + 10] = tr[10];
          ba.array[ba.offset + 11] = tr[14];
        }
      }
    }

    if (this._isPlaying || this._isPlaying !== wasPlaying) {
      this._boundsDirty = true;
    }
  }
  /**
   * RenderDebugInfo
   * TODO: Fix commented out code
   * @param {function} debugHelper
   */


  RenderDebugInfo(debugHelper) {
    /*for (var i = 0; i < this.geometryResources.length; ++i)
     {
     this.geometryResources[i].RenderDebugInfo(debugHelper);
     }*/
    for (let i = 0; i < this.models.length; ++i) {
      for (let j = 0; j < this.models[i].bones.length; ++j) {
        const b0 = this.models[i].bones[j];

        if (b0.boneRes.parentIndex >= 0) {
          const b1 = this.models[i].bones[b0.boneRes.parentIndex];
          debugHelper["AddLine"]([b0.worldTransform[12], b0.worldTransform[13], b0.worldTransform[14]], [b1.worldTransform[12], b1.worldTransform[13], b1.worldTransform[14]]);
        }
      }
    }
  }
  /**
   * Adds animations from a resource
   * @param {Tw2AnimationController} controller
   * @param {Tw2GeometryRes} resource
   */


  static AddAnimationsFromRes(controller, resource) {
    for (let i = 0; i < resource.animations.length; ++i) {
      let animation = null;
      let added;

      for (let j = 0; j < controller.animations.length; ++j) {
        if (controller.animations[j].animationRes === resource.animations[i]) {
          animation = controller.animations[i];
          break;
        }
      }

      if (!animation) {
        animation = new _Tw2Animation__WEBPACK_IMPORTED_MODULE_2__["Tw2Animation"](controller);
        animation.animationRes = resource.animations[i];
        controller.animations.push(animation);
        added = true;
      }

      for (let j = 0; j < animation.animationRes.trackGroups.length; ++j) {
        let found = false;

        for (let k = 0; k < animation.trackGroups.length; ++k) {
          if (animation.trackGroups[k].trackGroupRes === animation.animationRes.trackGroups[j]) {
            found = true;
            break;
          }
        }

        if (found) {
          continue;
        }

        let model = null;

        for (let k = 0; k < controller.models.length; ++k) {
          if (controller.models[k].modelRes.name === animation.animationRes.trackGroups[j].name) {
            model = controller.models[k];
            break;
          }
        }

        if (model !== null) {
          const group = new _Tw2TrackGroup__WEBPACK_IMPORTED_MODULE_7__["Tw2TrackGroup"]();
          group.trackGroupRes = animation.animationRes.trackGroups[j];

          for (let k = 0; k < group.trackGroupRes.transformTracks.length; ++k) {
            for (let m = 0; m < model.bones.length; ++m) {
              if (model.bones[m].boneRes.name === group.trackGroupRes.transformTracks[k].name) {
                const track = new _Tw2Track__WEBPACK_IMPORTED_MODULE_6__["Tw2Track"]();
                track.trackRes = group.trackGroupRes.transformTracks[k];
                track.bone = model.bones[m];
                group.transformTracks.push(track);
                break;
              }
            }
          }

          animation.trackGroups.push(group);
        }
      }

      if (added) {
        /**
         * Fires when an animation is added
         * @event Tw2AnimationController#added
         * @type {Object}
         * @property {Tw2Animation} animation
         * @property {Tw2AnimationController} controller
         */
        controller.emit("added", {
          controller,
          animation
        });
      }
    }
  }
  /**
   * Adds a model resource to an animation controller
   * @param {Tw2AnimationController} controller
   * @param {Tw2GeometryModel} modelRes
   * @returns {null|Tw2Model} Returns a newly created Tw2Model if the model resource doesn't already exist, and null if it does
   */


  static AddModel(controller, modelRes) {
    for (let i = 0; i < controller.models.length; ++i) {
      if (controller.models[i].modelRes.name === modelRes.name) {
        return null;
      }
    }

    const model = new _Tw2Model__WEBPACK_IMPORTED_MODULE_5__["Tw2Model"]();
    model.modelRes = modelRes;
    const skeleton = modelRes.skeleton;

    if (skeleton !== null) {
      for (let j = 0; j < skeleton.bones.length; ++j) {
        const bone = new _Tw2Bone__WEBPACK_IMPORTED_MODULE_3__["Tw2Bone"]();
        bone.boneRes = skeleton.bones[j];
        model.bones.push(bone);
        model.bonesByName[bone.boneRes.name] = bone;
      }
    }

    controller.models.push(model);
    return model;
  }
  /**
   * Finds a mesh binding for a supplied resource
   * @param {Tw2AnimationController} controller
   * @param {Tw2GeometryRes} resource
   * @returns {Object|null} Returns the mesh binding of a resource if it exists, null if it doesn't
   * @private
   */


  static FindMeshBindings(controller, resource) {
    for (let i = 0; i < controller.meshBindings.length; ++i) {
      if (controller.meshBindings[i].resource === resource) {
        return controller.meshBindings[i];
      }
    }

    return null;
  }
  /**
   * DoRebuildCachedData
   * @param {Tw2AnimationController} controller
   * @param {Tw2GeometryRes} resource
   */


  static DoRebuildCachedData(controller, resource) {
    if (resource.meshes.length) {
      for (let i = 0; i < resource.models.length; ++i) {
        Tw2AnimationController.AddModel(controller, resource.models[i]);
      }
    }

    for (let i = 0; i < controller.geometryResources.length; ++i) {
      this.AddAnimationsFromRes(controller, controller.geometryResources[i]);
    }

    if (resource.models.length === 0) {
      for (let i = 0; i < resource.meshes.length; ++i) {
        _resource__WEBPACK_IMPORTED_MODULE_1__["Tw2GeometryRes"].BindMeshToModel(resource.meshes[i], controller.geometryResources[0].models[0], resource);
      }

      resource.models.push(controller.geometryResources[0].models[0]);
    }

    for (let i = 0; i < resource.models.length; ++i) {
      let model = null;

      for (let j = 0; j < controller.models.length; ++j) {
        if (controller.models[j].modelRes.name === resource.models[i].name) {
          model = controller.models[j];
          break;
        }
      }

      if (model === null) {
        continue;
      }

      for (let j = 0; j < resource.models[i].meshBindings.length; ++j) {
        const meshIx = resource.meshes.indexOf(resource.models[i].meshBindings[j].mesh);
        let meshBindings = Tw2AnimationController.FindMeshBindings(controller, resource);

        if (meshBindings === null) {
          meshBindings = new _Tw2MeshBinding__WEBPACK_IMPORTED_MODULE_8__["Tw2MeshBinding"]();
          meshBindings.resource = resource;
          controller.meshBindings.push(meshBindings);
        }

        meshBindings.meshIndex[meshIx] = new Float32Array(resource.models[i].meshBindings[j].bones.length * 12);

        for (let k = 0; k < resource.models[i].meshBindings[j].bones.length; ++k) {
          for (let n = 0; n < model.bones.length; ++n) {
            if (model.bones[n].boneRes.name === resource.models[i].meshBindings[j].bones[k].name) {
              const boneBinding = new _Tw2BoneBinding__WEBPACK_IMPORTED_MODULE_4__["Tw2BoneBinding"]();
              boneBinding.array = meshBindings.meshIndex[meshIx];
              boneBinding.offset = k * 12;
              model.bones[n].bindingArrays.push(boneBinding); //meshBindings.meshIndex[meshIx][k] = model.bones[n].offsetTransform;

              break;
            }
          }
        }
      }
    }

    if (resource.meshes.length && resource.models.length) {
      controller.ResetBoneTransforms();
    }

    controller._isLoaded = true;
    /**
     * Fires when the animation controller has loaded
     * @event Tw2AnimationController#loaded
     * @type {Object}
     * @property {Tw2Animation} animation
     * @property {Tw2AnimationController} controller
     */

    controller.emit("loaded", {
      controller
    });

    if (controller.animations.length) {
      if (controller._pendingCommands.length) {
        for (let i = 0; i < controller._pendingCommands.length; ++i) {
          if (!controller._pendingCommands[i].args) {
            controller._pendingCommands[i].func.apply(controller);
          } else {
            controller._pendingCommands[i].func.apply(controller, controller._pendingCommands[i].args);
          }
        }
      }

      controller._pendingCommands.splice(0);
    }
  }
  /**
   * Global and Scratch variables
   */


}
Tw2AnimationController.global = {
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  quat_0: global__WEBPACK_IMPORTED_MODULE_0__["quat"].create(),
  mat3_0: global__WEBPACK_IMPORTED_MODULE_0__["mat3"].create(),
  mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
};
Tw2AnimationController.keys = {
  primary: ["update"]
};

/***/ }),

/***/ "./core/model/Tw2Bone.js":
/*!*******************************!*\
  !*** ./core/model/Tw2Bone.js ***!
  \*******************************/
/*! exports provided: Tw2Bone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Bone", function() { return Tw2Bone; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2Bone
 *
 * @property {Tw2GeometryBone} boneRes
 * @property {Array<Tw2BoneBinding>} bindingArrays
 * @property {mat4} localTransform
 * @property {mat4} worldTransform
 * @property {mat4} offsetTransform
 */

class Tw2Bone {
  constructor() {
    this.boneRes = null;
    this.bindingArrays = [];
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.offsetTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

}

/***/ }),

/***/ "./core/model/Tw2BoneBinding.js":
/*!**************************************!*\
  !*** ./core/model/Tw2BoneBinding.js ***!
  \**************************************/
/*! exports provided: Tw2BoneBinding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2BoneBinding", function() { return Tw2BoneBinding; });
/**
 * Bone binding
 * @param {Float32Array} array
 * @param {Number} offset
 */
class Tw2BoneBinding {
  constructor() {
    this.array = null;
    this.offset = 0;
  }

}

/***/ }),

/***/ "./core/model/Tw2MeshBinding.js":
/*!**************************************!*\
  !*** ./core/model/Tw2MeshBinding.js ***!
  \**************************************/
/*! exports provided: Tw2MeshBinding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshBinding", function() { return Tw2MeshBinding; });
/**
 * Tw2MeshBinding
 * @param {Array<Float32Array>} meshIndex
 * @param {*} resource
 */
class Tw2MeshBinding {
  constructor() {
    this.meshIndex = [];
    this.resource = null;
  }

}

/***/ }),

/***/ "./core/model/Tw2Model.js":
/*!********************************!*\
  !*** ./core/model/Tw2Model.js ***!
  \********************************/
/*! exports provided: Tw2Model */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Model", function() { return Tw2Model; });
/**
 * Tw2Model
 *
 * @property {Tw2GeometryModel} modelRes
 * @property {Array.<Tw2Bone>} bones
 * @property {Object.<string, Tw2Bone>} bonesByName - An object containing every Tw2Bone name and it's object
 */
class Tw2Model {
  constructor() {
    this.modelRes = null;
    this.bones = [];
    this.bonesByName = {};
  }

}

/***/ }),

/***/ "./core/model/Tw2Track.js":
/*!********************************!*\
  !*** ./core/model/Tw2Track.js ***!
  \********************************/
/*! exports provided: Tw2Track */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Track", function() { return Tw2Track; });
/**
 * Tw2Track
 *
 * @property {Tw2GeometryTransformTrack} trackRes
 * @property {Tw2Bone} bone
 */
class Tw2Track {
  constructor() {
    this.trackRes = null;
    this.bone = null;
  }

}

/***/ }),

/***/ "./core/model/Tw2TrackGroup.js":
/*!*************************************!*\
  !*** ./core/model/Tw2TrackGroup.js ***!
  \*************************************/
/*! exports provided: Tw2TrackGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2TrackGroup", function() { return Tw2TrackGroup; });
/**
 * Tw2TrackGroup
 *
 * @property {Tw2GeometryTrackGroup} trackGroupRes
 * @property {Tw2GeometryModel} model
 * @property {Array.<Tw2Track>} transformTracks
 */
class Tw2TrackGroup {
  constructor() {
    this.trackGroupRes = null;
    this.model = null;
    this.transformTracks = [];
  }

}

/***/ }),

/***/ "./core/model/index.js":
/*!*****************************!*\
  !*** ./core/model/index.js ***!
  \*****************************/
/*! exports provided: Tw2Animation, Tw2AnimationController, Tw2Bone, Tw2BoneBinding, Tw2MeshBinding, Tw2Model, Tw2Track, Tw2TrackGroup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2Animation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Animation */ "./core/model/Tw2Animation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Animation", function() { return _Tw2Animation__WEBPACK_IMPORTED_MODULE_0__["Tw2Animation"]; });

/* harmony import */ var _Tw2AnimationController__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2AnimationController */ "./core/model/Tw2AnimationController.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2AnimationController", function() { return _Tw2AnimationController__WEBPACK_IMPORTED_MODULE_1__["Tw2AnimationController"]; });

/* harmony import */ var _Tw2Bone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2Bone */ "./core/model/Tw2Bone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Bone", function() { return _Tw2Bone__WEBPACK_IMPORTED_MODULE_2__["Tw2Bone"]; });

/* harmony import */ var _Tw2BoneBinding__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2BoneBinding */ "./core/model/Tw2BoneBinding.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BoneBinding", function() { return _Tw2BoneBinding__WEBPACK_IMPORTED_MODULE_3__["Tw2BoneBinding"]; });

/* harmony import */ var _Tw2MeshBinding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2MeshBinding */ "./core/model/Tw2MeshBinding.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MeshBinding", function() { return _Tw2MeshBinding__WEBPACK_IMPORTED_MODULE_4__["Tw2MeshBinding"]; });

/* harmony import */ var _Tw2Model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2Model */ "./core/model/Tw2Model.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Model", function() { return _Tw2Model__WEBPACK_IMPORTED_MODULE_5__["Tw2Model"]; });

/* harmony import */ var _Tw2Track__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2Track */ "./core/model/Tw2Track.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Track", function() { return _Tw2Track__WEBPACK_IMPORTED_MODULE_6__["Tw2Track"]; });

/* harmony import */ var _Tw2TrackGroup__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2TrackGroup */ "./core/model/Tw2TrackGroup.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TrackGroup", function() { return _Tw2TrackGroup__WEBPACK_IMPORTED_MODULE_7__["Tw2TrackGroup"]; });










/***/ }),

/***/ "./core/parameter/Tw2FloatParameter.js":
/*!*********************************************!*\
  !*** ./core/parameter/Tw2FloatParameter.js ***!
  \*********************************************/
/*! exports provided: Tw2FloatParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2FloatParameter", function() { return Tw2FloatParameter; });
/* harmony import */ var _Tw2Parameter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Parameter */ "./core/parameter/Tw2Parameter.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Tw2FloatParameter
 * @ccp Tr2FloatParameter
 *
 * @property {String} name
 * @property {Number} value
 * @property {?Float32Array} _constantBuffer
 * @property {?Number} _offset
 */

class Tw2FloatParameter extends _Tw2Parameter__WEBPACK_IMPORTED_MODULE_0__["Tw2Parameter"] {
  //_constantBuffer = null;
  //_offset = null;

  /**
   * Constructor
   * @param {String} [name='']
   * @param {Number} [value=1]
   */
  constructor(name = "", value = 1) {
    super(name);
    this.value = 1;
    this.value = global__WEBPACK_IMPORTED_MODULE_1__["util"].isArrayLike(value) ? value[0] : value;
  }
  /**
   * Sets the parameter's value
   * @param {Number} value
   * @param {*} [opt]
   * @returns {Boolean}
   */


  SetValue(value, opt) {
    if (!this.EqualsValue(value)) {
      this.value = value;
      this.UpdateValues(opt);
      return true;
    }

    return false;
  }
  /**
   * Gets the parameter's value
   * @returns {Number}
   */


  GetValue() {
    return this.value;
  }
  /**
   * Applies the parameter's value to a constant buffer
   * @param {Float32Array} constantBuffer
   * @param {Number} offset
   */


  Apply(constantBuffer, offset) {
    constantBuffer[offset] = this.value;
  }
  /**
   * Binds the parameter to a constant buffer
   * @param constantBuffer
   * @param offset
   * @param size
   * @returns {Boolean} true if bound
   */


  Bind(constantBuffer, offset, size) {
    if (!this._constantBuffer) {
      this._constantBuffer = constantBuffer;
      this._offset = offset;
      this.Apply(constantBuffer, offset);
      return true;
    }

    return false;
  }
  /**
   * Unbinds the parameter from a constant buffer
   */


  Unbind() {
    this._constantBuffer = null;
  }
  /**
   * Checks if a value equals the parameter's value
   * @param {Number} value
   * @returns {Boolean}
   */


  EqualsValue(value) {
    return this.value === value;
  }
  /**
   * Checks if a value is a valid parameter value
   * @param {Number} a
   * @returns {Boolean}
   */


  static isValue(a) {
    return global__WEBPACK_IMPORTED_MODULE_1__["util"].isNumber(a);
  }
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["value", r.float]];
  }

}
Tw2FloatParameter.constantBufferSize = 1;

/***/ }),

/***/ "./core/parameter/Tw2Matrix4Parameter.js":
/*!***********************************************!*\
  !*** ./core/parameter/Tw2Matrix4Parameter.js ***!
  \***********************************************/
/*! exports provided: Tw2Matrix4Parameter, Tw2MatrixParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Matrix4Parameter", function() { return Tw2Matrix4Parameter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MatrixParameter", function() { return Tw2MatrixParameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2VectorParameter */ "./core/parameter/Tw2VectorParameter.js");


/**
 * Tw2Matrix4Parameter
 */

class Tw2Matrix4Parameter extends _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2VectorParameter"] {
  /**
   * Constructor
   * @param {String} [name='']
   * @param {mat4|Float32Array} [value=mat4.create()]
   */
  constructor(name = "", value = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()) {
    super(name, value);
  }
  /**
   * Composes the parameter's value from components
   * @param {Tw2Vector4Parameter|quat} rotation
   * @param {Tw2Vector3Parameter|vec3} translation
   * @param {Tw2Vector3Parameter|vec3} scaling
   */


  Compose(rotation, translation, scaling) {
    if ("value" in rotation) rotation = rotation["value"];
    if ("value" in translation) translation = translation["value"];
    if ("value" in scaling) scaling = scaling["value"];
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.value, rotation, translation, scaling);
    this.UpdateValues();
  }
  /**
   * Decomposes the parameter's value to components
   * @param {Tw2Vector4Parameter|quat} rotation
   * @param {Tw2Vector3Parameter|vec3} translation
   * @param {Tw2Vector3Parameter|vec3} scaling
   */


  Decompose(rotation, translation, scaling) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation("value" in rotation ? rotation.value : rotation, this.value);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getTranslation("value" in translation ? translation.value : translation, this.value);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getScaling("value" in scaling ? scaling.value : scaling, this.value);
    if ("UpdateValues" in rotation) rotation.UpdateValues();
    if ("UpdateValues" in translation) translation.UpdateValues();
    if ("UpdateValues" in scaling) scaling.UpdateValues();
  }
  /**
   * Gets the matrices' translation x value
   * @returns {Number}
   */


  get x() {
    return this.GetIndexValue(12);
  }
  /**
   * Sets the matrices' translation x value
   * @param {Number} val
   */


  set x(val) {
    this.SetIndexValue(12, val);
  }
  /**
   * Gets the matrices' translation y value
   * @returns {Number}
   */


  get y() {
    return this.GetIndexValue(13);
  }
  /**
   * Sets the matrices' translation y value
   * @param {Number} val
   */


  set y(val) {
    this.SetIndexValue(13, val);
  }
  /**
   * Gets the matrices' translation z value
   * @returns {Number}
   */


  get z() {
    return this.GetIndexValue(14);
  }
  /**
   * Sets the matrices' translation z value
   * @param {Number} val
   */


  set z(val) {
    this.SetIndexValue(14, val);
  }
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["value", r.matrix]];
  }

}
Tw2Matrix4Parameter.constantBufferSize = 16;
function Tw2MatrixParameter(name, value) {
  console.warn("Tw2MatrixParameter is deprecated, use Tw2Matrix4Parameter instead");
  return new Tw2Matrix4Parameter(name, value);
}

/***/ }),

/***/ "./core/parameter/Tw2Parameter.js":
/*!****************************************!*\
  !*** ./core/parameter/Tw2Parameter.js ***!
  \****************************************/
/*! exports provided: Tw2Parameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Parameter", function() { return Tw2Parameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _class3, _temp;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

/**
 * Tw2Parameter base class
 * * TODO: Remove constructor parameters
 * @ccp N/A
 */

let Tw2Parameter = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec3 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec4 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec5 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_class2 = (_temp = _class3 = class Tw2Parameter extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Gets the parameter's constant buffer size
   * @returns {Number} 0 if invalid
   */
  get size() {
    return this.constructor.constantBufferSize;
  }
  /**
   * Constructor
   * @param {String} [name='']
   */


  constructor(name = "") {
    super();
    this.name = name;
  }
  /**
   * Gets the parameter's value
   * @returns {*}
   */


  GetValue() {}
  /**
   * Binds the parameter
   * @param {*} a
   * @param {*} b
   * @param {*} c
   * @returns {Boolean} false if not bound
   */


  Bind(a, b, c) {}
  /**
   * Unbinds the parameter
   */


  Unbind() {}
  /**
   * Applies the parameter to a constant buffer
   * @param {*} a
   * @param {*} b
   * @param {*} c
   */


  Apply(a, b, c) {}
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


}, _class3.constantBufferSize = 0, _temp), (_applyDecoratedDescriptor(_class2.prototype, "GetValue", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "GetValue"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "Bind", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "Bind"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "Unbind", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "Unbind"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "Apply", [_dec5], Object.getOwnPropertyDescriptor(_class2.prototype, "Apply"), _class2.prototype)), _class2)) || _class);

/***/ }),

/***/ "./core/parameter/Tw2TextureParameter.js":
/*!***********************************************!*\
  !*** ./core/parameter/Tw2TextureParameter.js ***!
  \***********************************************/
/*! exports provided: Tw2TextureParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2TextureParameter", function() { return Tw2TextureParameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _sampler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sampler */ "./core/sampler/index.js");
/* harmony import */ var _Tw2Parameter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2Parameter */ "./core/parameter/Tw2Parameter.js");
/* harmony import */ var _resource_Tw2TextureRes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../resource/Tw2TextureRes */ "./core/resource/Tw2TextureRes.js");




/**
 * Tw2TextureParameter
 * TODO: Remove constructor parameters
 * TODO: Identify if override samplers are handled differently for TriTextureParameter (e.g. directly on effects)
 * TODO: Make textureRes private
 * TODO: Remove Override methods once utility functions working
 * @ccp TriTextureParameter
 *
 * @property {Boolean} useAllOverrides
 * @property {Number} addressUMode
 * @property {Number} addressVMode
 * @property {Number} addressWMode
 * @property {Number} filterMode
 * @property {Number} mapFilterMode
 * @property {Number} maxAnisotropy
 * @property {Tw2TextureRes} textureRes
 * @property {Tw2SamplerState} _sampler
 */

class Tw2TextureParameter extends _Tw2Parameter__WEBPACK_IMPORTED_MODULE_2__["Tw2Parameter"] {
  // ccp
  // ccpwgl

  /**
   * Constructor
   * @param {String} [name]        - Name of the texture parameter
   * @param {String} [texturePath] - The texture's resource path
   */
  constructor(name, texturePath) {
    super(name);
    this.resourcePath = "";
    this.addressUMode = 1;
    this.addressVMode = 1;
    this.addressWMode = 1;
    this.filterMode = 2;
    this.maxAnisotropy = 4;
    this.mipFilterMode = 2;
    this.textureRes = null;
    this.useAllOverrides = false;
    this.forceAddressMode = false;
    this._sampler = null;

    if (texturePath) {
      this.resourcePath = texturePath;
      this.Initialize();
    }
  }
  /**
   * Checks if the parameter has a texture that was attached
   * @returns {Boolean}
   */


  get isTextureAttached() {
    return this.textureRes && this.textureRes._isAttached;
  }
  /**
   * Initializes the texture
   */


  Initialize() {
    this.UpdateValues();
  }
  /**
   * Sets the texture path
   * @param {String} value
   * @returns {Boolean} true if changed
   */


  SetValue(value) {
    this.resourcePath = value;
    this.UpdateValues();
  }
  /**
   * Returns the texture's resource path
   * @returns {?String}
   */


  GetValue() {
    return this.isTextureAttached ? null : this.resourcePath;
  }
  /**
   * Sets the texture's resource manually
   * @param {Tw2TextureRes} res
   * @returns {Boolean}
   */


  SetTextureRes(res) {
    if (this.textureRes === res) return false;
    this.resourcePath = "";
    this.textureRes = res;
    if (this.textureRes) this.textureRes._isAttached = true;
    return true;
  }
  /**
   * Fire on value changes
   * @param {*} [controller]        - An optional parameter for tracking the object that called this function
   * @param {String[]} [skipUpdate] -
   */


  OnValueChanged(controller, skipUpdate) {
    this.resourcePath = this.resourcePath.toLowerCase();

    if (this.resourcePath !== "") {
      if (this.resourcePath.indexOf("rgba:/") === 0) {
        if (!this.textureRes || this.textureRes.path !== this.resourcePath) {
          const color = this.resourcePath.replace("rgba:/", "").split(","),
                texture = global__WEBPACK_IMPORTED_MODULE_0__["device"].CreateSolidTexture([parseFloat(color[0]), parseFloat(color[1]), parseFloat(color[2]), color[3] !== undefined ? parseFloat(color[3]) : 255]);
          this.textureRes = new _resource_Tw2TextureRes__WEBPACK_IMPORTED_MODULE_3__["Tw2TextureRes"]();
          this.textureRes.path = this.resourcePath;
          this.textureRes.Attach(texture);
        }
      } else {
        this.textureRes = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.resourcePath);
      }
    } else {
      this.textureRes = null;
    }

    this.UpdateOverrides();
  }
  /**
   * Apply
   * @param {Number} stage
   * @param {Tw2SamplerState} sampler
   * @param {Number} slices
   */


  Apply(stage, sampler, slices) {
    if (this.textureRes) {
      if (this.useAllOverrides && this._sampler) {
        this._sampler.samplerType = sampler.samplerType;
        this._sampler.isVolume = sampler.isVolume;
        this._sampler.registerIndex = sampler.registerIndex;
        sampler = this._sampler;
      }

      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.activeTexture(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.TEXTURE0 + stage);
      this.textureRes.Bind(sampler, slices);
    }
  }
  /**
   * Sets the textures overrides
   * TODO: Remove once utility functions working
   * @param {{}} [opt={}] - An object containing the override options to set
   * @returns {Boolean} true if updated
   */


  SetOverrides(opt = {}) {
    if (global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(this, opt, Tw2TextureParameter.overrideProperties)) {
      this.UpdateValues();
      return true;
    }
  }
  /**
   * Gets the texture's overrides
   * TODO: Remove once utility functions working
   * @returns {{}}
   */


  GetOverrides(out = {}) {
    global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(out, this, Tw2TextureParameter.overrideProperties);
    return out;
  }
  /**
   * Updates the parameter's overrides
   * TODO: Move to OnValueChanged
   */


  UpdateOverrides() {
    if (this.useAllOverrides) {
      this._sampler = this._sampler || new _sampler__WEBPACK_IMPORTED_MODULE_1__["Tw2SamplerState"]();
      this._sampler.forceAddressModes = this.forceAddressModes;
      const {
        wrapModes,
        gl
      } = global__WEBPACK_IMPORTED_MODULE_0__["device"],
            sampler = this._sampler;

      if (this.filterMode === 1) {
        switch (this.mipFilterMode) {
          case 0:
            sampler.minFilter = gl.NEAREST;
            break;

          case 1:
            sampler.minFilter = gl.NEAREST_MIPMAP_NEAREST;
            break;

          default:
            sampler.minFilter = gl.NEAREST_MIPMAP_LINEAR;
        }

        sampler.minFilterNoMips = gl.NEAREST;
        sampler.magFilter = gl.NEAREST;
      } else {
        switch (this.mipFilterMode) {
          case 0:
            sampler.minFilter = gl.LINEAR;
            break;

          case 1:
            sampler.minFilter = gl.LINEAR_MIPMAP_NEAREST;
            break;

          default:
            sampler.minFilter = gl.LINEAR_MIPMAP_LINEAR;
        }

        sampler.minFilterNoMips = gl.LINEAR;
        sampler.magFilter = gl.LINEAR;
      }

      sampler.addressU = wrapModes[this.addressUMode];
      sampler.addressV = wrapModes[this.addressVMode];
      sampler.addressW = wrapModes[this.addressWMode];
      sampler.anisotropy = this.maxAnisotropy;
      sampler.ComputeHash();
    } else if (this._sampler) {
      this._sampler = null;
    }
  }
  /**
   * Checks if a value is equal to the parameter's resource path
   * @param {*} value
   * @returns {Boolean}
   */


  EqualsValue(value) {
    return value.toLowerCase() === this.GetValue();
  }
  /**
   * Gets the texture's resources
   * @param {Array} [out=[]]
   * @returns {Array.<Tw2Resource>}
   */


  GetResources(out = []) {
    if (this.textureRes && !out.includes(this.textureRes)) {
      out.push(this.textureRes);
    }

    return out;
  }
  /**
   * Checks if a value is a valid parameter value
   * @param {*} a
   * @returns {Boolean}
   */


  static isValue(a) {
    return global__WEBPACK_IMPORTED_MODULE_0__["util"].isString(a);
  }
  /**
   * The texture parameter's override properties
   * @type {String[]}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["resourcePath", r.path]];
  }

}
Tw2TextureParameter.overrideProperties = ["useAllOverrides", "addressUMode", "addressVMode", "addressWMode", "filterMode", "mipFilterMode", "maxAnisotropy", "forceAddressModes"];

/***/ }),

/***/ "./core/parameter/Tw2TransformParameter.js":
/*!*************************************************!*\
  !*** ./core/parameter/Tw2TransformParameter.js ***!
  \*************************************************/
/*! exports provided: Tw2TransformParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2TransformParameter", function() { return Tw2TransformParameter; });
/* harmony import */ var _Tw2Parameter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Parameter */ "./core/parameter/Tw2Parameter.js");
/* harmony import */ var global_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/math */ "./global/math/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/util */ "./global/util/index.js");



/**
 * Tw2TransformParameter
 * @ccp Tr2TransformParameter
 *
 * @property {quat} rotation
 * @property {vec3} translation
 * @property {vec3} scaling
 * @property {mat4} _localTransform
 * @property {mat4} _worldTransform
 * @property {mat4} _parentTransform
 * @property {mat4|undefined} _worldTranspose
 * @property {mat4|undefined} _worldInverse
 * @property {mat4|undefined} _worldInverseTranspose
 * @property {Boolean} _rebuildLocal
 * @property {Boolean} _rebuildWorldTransform
 */

class Tw2TransformParameter extends _Tw2Parameter__WEBPACK_IMPORTED_MODULE_0__["Tw2Parameter"] {
  // ccp
  // ccpwgl
  //_parentTransform = null;
  //_worldTranspose = null;
  //_worldInverse = null;
  //_worldInverseTranspose = null;

  /**
   * Constructor
   * @param {String} [name]
   * @param {quat|mat4} [value]
   */
  constructor(name, value) {
    Tw2TransformParameter.init();
    super();
    this.name = "";
    this.rotation = global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].create();
    this.translation = global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].create();
    this.scaling = global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].fromValues(1, 1, 1);
    this._localTransform = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].create();
    this._worldTransform = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].create();
    this._rebuildLocal = true;
    this._rebuildWorld = true;
    if (name) this.name = name;

    if (value) {
      if (value.length === 4) {
        this.SetRotation(value);
      } else {
        this.SetTransform(value);
      }

      this.RebuildTransforms();
    }
  }
  /**
   * Initializes the transform parameter
   */


  Initialize() {
    this.UpdateValues();
  }
  /**
   * Fires on value changes
   * @param {*} opt
   */


  OnValueChanged(opt) {
    if (!opt || !opt.skipRebuild) {
      this.RebuildTransforms({
        force: true,
        skipUpdate: true
      });
    }
  }
  /**
   * Rebuilds transforms
   * @param {Object} [opt]
   * @param {Boolean} [opt.force]      - Forces transforms to be updated
   * @param {Boolean} [opt.skipUpdate] - Skips updating the object if there's a change
   * @returns {Boolean} true if updated
   */


  RebuildTransforms(opt) {
    let force = opt ? opt.force : false,
        skipUpdate = opt ? opt.skipUpdate : false;

    if (force || this._rebuildLocal) {
      global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].fromRotationTranslationScale(this._localTransform, this.rotation, this.translation, this.scaling);
      this._rebuildLocal = false;
      force = true;
    }

    if (force || this._rebuildWorld) {
      if (this._parentTransform) {
        global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].multiply(this._worldTransform, this._parentTransform, this._localTransform);
      } else {
        global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(this._worldTransform, this._localTransform);
      }

      if (this._worldInverse) {
        global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].invert(this._worldInverse, this._worldTransform);
      }

      if (this._worldTranspose) {
        global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(this._worldTranspose, this._worldTransform);
      }

      if (this._worldInverseTranspose) {
        if (this._worldInverse) {
          global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(this._worldInverseTranspose, this._worldInverse);
        } else {
          global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].invert(this._worldInverseTranspose, this._worldTransform);
          global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(this._worldInverseTranspose, this._worldInverseTranspose);
        }
      }

      if (this._constantBuffer) {
        this.Apply(this._constantBuffer, this._offset, this.size);
      }

      this._rebuildWorld = false;

      if (!skipUpdate) {
        this.UpdateValues({
          skipRebuild: true
        });
      }

      force = true;
    }

    return force;
  }
  /**
   * Binds the parameter to a constant buffer
   * @param {Float32Array} constantBuffer
   * @param {Number} offset
   * @param {Number} size
   * @returns {Boolean}
   */


  Bind(constantBuffer, offset, size) {
    if (!this._constantBuffer && size >= this.size) {
      this._constantBuffer = constantBuffer;
      this._offset = offset;
      this.Apply(constantBuffer, offset, size);
      return true;
    }

    return false;
  }
  /**
   * Applies the parameter's value to a constant buffer
   * @param {Float32Array} constantBuffer
   * @param {Number} offset
   * @param {Number} size
   */


  Apply(constantBuffer, offset, size) {
    if (!this._worldTranspose) {
      this.RebuildTransforms();
      this._worldTranspose = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].create();
      global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(this._worldTranspose, this._worldTransform);
    }

    if (size >= this.constructor.constantBufferSize) {
      constantBuffer.set(this._worldTranspose, offset);
    } else {
      constantBuffer.set(this._worldTranspose.subarray(0, size), offset);
    }
  }
  /**
   * Gets the world transpose
   * @param {mat4} out
   * @returns {mat4}
   */


  GetValue(out) {
    this.RebuildTransforms();

    if (!this._worldTranspose) {
      this._worldTranspose = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].create();
      global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].transpose(this._worldTranspose, this._worldTransform);
    }

    return global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(out, this._worldTranspose);
  }
  /**
   * Sets the parent transform
   * @param {null|mat4} m
   * @returns {Tw2TransformParameter}
   */


  SetParentTransform(m) {
    // Clear
    if (!m && this._parentTransform) {
      this._parentTransform = null;
      this._rebuildWorld = true;
    } // Set new parent
    else if (!this._parentTransform) {
        this._parentTransform = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].clone(m);
        this._rebuildWorld = true;
      } // Update parent
      else if (!global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].equals(m, this._parentTransform)) {
          global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(this._parentTransform, m);
          this._rebuildWorld = true;
        }

    return this;
  }
  /**
   * Gets the world transform
   * @param {mat4} out
   * @returns {mat4}
   */


  GetWorldTransform(out) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(out, this._worldTransform);
  }
  /**
   * Decomposes the world transform
   * @param {quat} rotation
   * @param {vec3} translation
   * @param {vec3} scaling
   * @returns {Tw2TransformParameter}
   */


  DecomposeWorld(rotation, translation, scaling) {
    this.RebuildTransforms();
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getRotation(rotation, this._worldTransform);
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getTranslation(translation, this._worldTransform);
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getScaling(scaling, this._worldTransform);
    return this;
  }
  /**
   * Gets the world rotation
   * @param {quat} out
   * @returns {quat}
   */


  GetWorldRotation(out) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getRotation(out, this._worldTransform);
  }
  /**
   * Gets world direction
   * @param {vec3} out
   * @returns {vec3} out
   */


  GetWorldDirection(out) {
    this.RebuildTransforms();
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(out, this._worldTransform[8], this._worldTransform[9], this._worldTransform[10]);
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].normalize(out, out);
  }
  /**
   * Gets the world rotation as a euler
   * @param {vec3} out
   * @returns {vec3} out
   */


  GetWorldEuler(out) {
    const {
      quat_0
    } = Tw2TransformParameter.global;
    this.GetWorldRotation(quat_0);
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].euler.fromQuat(out, quat_0);
  }
  /**
   * Gets the world axis angle
   * @param {vec3} axis
   * @returns {Number}
   */


  GetWorldAxisAngle(axis) {
    const {
      quat_0
    } = Tw2TransformParameter.global;
    this.RebuildTransforms();
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getRotation(quat_0, this._worldTransform);
    return global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].getAxisAngle(axis, quat_0);
  }
  /**
   * Gets the world translation
   * @param {vec3} out
   * @returns {vec3} out
   */


  GetWorldTranslation(out) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getTranslation(out, this._worldTransform);
  }
  /**
   * Gets the world scaling
   * @param {vec3} out
   * @returns {vec3} out
   */


  GetWorldScaling(out) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getScaling(out, this._worldTransform);
  }
  /**
   * Gets the world max scale
   * @returns {number}
   */


  GetWorldMaxScale() {
    const {
      vec3_0
    } = Tw2TransformParameter.global;
    this.GetWorldScaling(vec3_0);
    return Math.max(vec3_0[0], vec3_0[1], vec3_0[2]);
  }
  /**
   * Converts a world coordinate to local co-ordinate
   * @param {vec3} out
   * @param {vec3} v
   * @returns {vec3} out
   */


  GetWorldToLocal(out, v) {
    this.RebuildTransforms();

    if (this._worldInverse) {
      return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(out, v, this._worldInverse);
    }

    const {
      mat4_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].invert(mat4_0, this._worldTransform);
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(out, v, mat4_0);
  }
  /**
   * Gets the local transform
   * @param {mat4} out
   * @returns {mat4}
   */


  GetTransform(out) {
    return global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(out, this._localTransform);
  }
  /**
   * Sets the local transform
   * @param {mat4} m
   * @returns {Tw2TransformParameter}
   */


  SetTransform(m) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getRotation(this.rotation, m);
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getScaling(this.scaling, m);
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getTranslation(this.translation, m);
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(this._localTransform, m);
    this._rebuildWorld = true;
    return this;
  }
  /**
   * Composes the local transform from rotation, translation and scaling
   * @param {quat} rotation
   * @param {vec3} translation
   * @param {vec3} scaling
   * @returns {Tw2TransformParameter}
   */


  Compose(rotation, translation, scaling) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].copy(this.rotation, rotation);
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(this.translation, translation);
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(this.scaling, scaling);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Decomposes the local transform to rotation, translation and scaling
   * @param {quat} rotation
   * @param {vec3} translation
   * @param {vec3} scaling
   * @returns {Tw2TransformParameter}
   */


  Decompose(rotation, translation, scaling) {
    this.RebuildTransforms();
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].copy(rotation, this.rotation);
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(translation, this.translation);
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(scaling, this.scaling);
    return this;
  }
  /**
   * Converts local coordinate to world co-ordinate
   * @param {vec3} out
   * @param {vec3} v
   * @returns {vec3} out
   */


  GetLocalToWorld(out, v) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(out, v, this._worldTransform);
  }
  /**
   * Gets local direction
   * @param {vec3} out
   * @returns {vec3} out
   */


  GetDirection(out) {
    this.RebuildTransforms();
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(out, this._localTransform[8], this._localTransform[9], this._localTransform[10]);
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].normalize(out, out);
  }
  /**
   * Gets the local rotation
   * @param {quat} out
   * @returns {quat}
   */


  GetRotation(out) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].copy(out, this.rotation);
  }
  /**
   * Gets the local rotation as a euler
   * @param {vec3} out
   * @returns {vec3}
   */


  GetEuler(out) {
    const {
      quat_0
    } = Tw2TransformParameter.global;
    this.GetRotation(quat_0);
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].euler.fromQuat(out, quat_0);
  }
  /**
   * Gets a matrix from the local rotation
   * @param {mat4} out
   * @return {mat4} out
   */


  GetRotationMatrix(out) {
    return global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].fromRotation(out, this.rotation);
  }
  /**
   * Sets the the local rotation from a quat
   * @param {quat} q
   * @returns {Tw2TransformParameter}
   */


  SetRotation(q) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].copy(this.rotation, q);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Sets the local rotation from values
   * @param {Number} x
   * @param {Number} y
   * @param {Number} z
   * @param {Number} w
   * @returns {Tw2TransformParameter}
   */


  SetRotationFromValues(x, y, z, w) {
    const {
      quat_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].set(quat_0, x, y, z, w);
    return this.SetRotation(quat_0);
  }
  /**
   * Sets the local rotation from axes
   * @param {vec3} view
   * @param {vec3} right
   * @param {vec3} up
   * @returns {Tw2TransformParameter}
   */


  SetRotationFromAxes(view, right, up) {
    const {
      quat_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].setAxes(quat_0, view, right, up);
    return this.SetRotation(quat_0);
  }
  /**
   * Sets the local rotation from an axis and angle
   * @param {vec3} axis
   * @param {Number} radians
   * @returns {Tw2TransformParameter}
   */


  SetRotationFromAxisAngle(axis, radians) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].setAxisAngle(this.rotation, axis, radians);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Sets the local rotation from a euler
   * @param {vec3} e
   * @returns {Tw2TransformParameter}
   */


  SetRotationFromEuler(e) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].euler.getQuat(this.rotation, e);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Sets the local rotation from euler values
   * @param {Number} x
   * @param {Number} y
   * @param {Number} z
   * @returns {Tw2TransformParameter}
   */


  SetRotationFromEulerValues(x, y, z) {
    const {
      vec3_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(vec3_0, x, y, z);
    return this.SetRotationFromEuler(vec3_0);
  }
  /**
   * Sets the local rotation from a mat4
   * @param {mat4} m
   * @returns {Tw2TransformParameter}
   */


  SetRotationFromMat4(m) {
    const {
      quat_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getRotation(quat_0, m);
    return this.SetRotation(quat_0);
  }
  /**
   * Local rotation on the x axis
   * @param {Number} radians
   * @returns {Tw2TransformParameter}
   */


  RotateX(radians) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].rotateX(this.rotation, this.rotation, radians);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Local rotation on the y axis
   * @param {Number} radians
   * @returns {Tw2TransformParameter}
   */


  RotateY(radians) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].rotateY(this.rotation, this.rotation, radians);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Local rotation on the z axis
   * @param {Number} radians
   * @returns {Tw2TransformParameter}
   */


  RotateZ(radians) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].rotateZ(this.rotation, this.rotation, radians);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Local rotation on an axis angle
   * @param {vec3} axis
   * @param {Number} radians
   * @returns {Tw2TransformParameter}
   */


  RotateOnAxisAngle(axis, radians) {
    const {
      quat_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].setAxisAngle(quat_0, axis, radians);
    global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].multiply(this.rotation, this.rotation, quat_0);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Gets the local axis angle
   * @param {quat} out
   * @returns {Number}
   */


  GetAxisAngle(out) {
    return global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].getAxisAngle(out, this.rotation);
  }
  /**
   * Local rotation to look at a local coordinate
   * @param {vec3} v
   * @param {Boolean} [flip]
   * @returns {Tw2TransformParameter}
   */


  LookAt(v, flip) {
    this.RebuildTransforms();
    const {
      mat4_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(mat4_0, this._localTransform);

    if (flip) {
      global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].lookAtGL(mat4_0, this.translation, v, global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].Y_AXIS);
    } else {
      global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].lookAtGL(mat4_0, v, this.translation, global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].Y_AXIS);
    }

    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getRotation(this.rotation, mat4_0);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Local rotation to look at a world coordinate
   * @param {vec3} v
   * @param {Boolean} [flip]
   * @returns {Tw2TransformParameter}
   */


  LookAtWorld(v, flip) {
    const {
      vec3_0
    } = Tw2TransformParameter.global;
    this.GetWorldToLocal(vec3_0, v);
    return this.LookAt(vec3_0, flip);
  }
  /**
   * Gets the local translation
   * @param {vec3} out
   * @returns {vec3}
   */


  GetTranslation(out) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(out, this.translation);
  }
  /**
   * Sets the local translation from a vector
   * @param {vec3} v
   * @returns {Tw2TransformParameter}
   */


  SetTranslation(v) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(this.translation, v);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Sets the local translation from values
   * @param {Number} x
   * @param {Number} y
   * @param {Number} z
   * @returns {Tw2TransformParameter}
   */


  SetTranslationFromValues(x, y, z) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(this.translation, x, y, z);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Sets the local translation from a mat4's translation
   * @param {mat4} m
   * @returns {Tw2TransformParameter}
   */


  SetTranslationFromMat4(m) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getTranslation(this.translation, m);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Local translation on an axis
   * @param {vec3} axis
   * @param {Number} distance
   * @returns {Tw2TransformParameter}
   */


  TranslateOnAxis(axis, distance) {
    const {
      vec3_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformQuat(vec3_0, axis, this.rotation);
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].scaleAndAdd(this.translation, this.translation, vec3_0, distance);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Local translation on the x axis
   * @param {Number} distance
   * @returns {Tw2TransformParameter}
   */


  TranslateX(distance) {
    return this.TranslateOnAxis(global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].X_AXIS, distance);
  }
  /**
   * Local translation on the y axis
   * @param {Number} distance
   * @returns {Tw2TransformParameter}
   */


  TranslateY(distance) {
    return this.TranslateOnAxis(global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].Y_AXIS, distance);
  }
  /**
   * Local translation on the z axis
   * @param {Number} distance
   * @returns {Tw2TransformParameter}
   */


  TranslateZ(distance) {
    return this.TranslateOnAxis(global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].Z_AXIS, distance);
  }
  /**
   * Gets the local scaling
   * @param {vec3} out
   * @returns {vec3}
   */


  GetScale(out) {
    this.RebuildTransforms();
    return global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(out, this.scaling);
  }
  /**
   * Gets the maximum local scale
   * @returns {Number}
   */


  GetMaxScale() {
    return Math.max(this.scaling[0], this.scaling[1], this.scaling[2]);
  }
  /**
   * Sets local scaling from a vector
   * @param {vec3} v
   * @returns {Tw2TransformParameter}
   */


  SetScale(v) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(this.scaling, v);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Sets local scaling from values
   * @param {Number} x
   * @param {Number}  y
   * @param {Number}  z
   * @returns {Tw2TransformParameter}
   */


  SetScaleFromValues(x, y, z) {
    const {
      vec3_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(vec3_0, x, y, z);
    return this.SetScale(vec3_0);
  }
  /**
   * Sets the local x axis scale
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  SetScaleX(s) {
    return this.SetScaleFromValues(s, this.scaling[1], this.scaling[2]);
  }
  /**
   * Sets the local y axis scale
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  SetScaleY(s) {
    return this.SetScaleFromValues(this.scaling[0], s, this.scaling[2]);
  }
  /**
   * Sets the local z axis scale
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  SetScaleZ(s) {
    return this.SetScaleFromValues(this.scaling[0], this.scaling[1], s);
  }
  /**
   * Sets local scaling from a scalar
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  SetScaleUniform(s) {
    return this.SetScaleFromValues(s, s, s);
  }
  /**
   * Sets local scaling from a mat4's scale
   * @param {mat4} m
   * @returns {Tw2TransformParameter}
   */


  SetScaleFromMat4(m) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getScaling(this.scaling, m);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Scales the local scale by a vector
   * @param {vec3} v
   * @returns {Tw2TransformParameter}
   */


  Scale(v) {
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].multiply(this.scaling, this.scaling, v);
    this._rebuildLocal = true;
    return this;
  }
  /**
   * Scales the local scale by values
   * @param {Number} x
   * @param {Number} y
   * @param {Number} z
   * @returns {Tw2TransformParameter}
   */


  ScaleValues(x, y, z) {
    const {
      vec3_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(vec3_0, x, y, z);
    return this.Scale(vec3_0);
  }
  /**
   * Scales the local scale by a mat4's scale
   * @param {mat4} m
   * @returns {Tw2TransformParameter}
   */


  ScaleMat4(m) {
    const {
      vec3_0
    } = Tw2TransformParameter.global;
    global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getScaling(vec3_0, m);
    return this.Scale(vec3_0);
  }
  /**
   * Scales the local scale by a scalar
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  ScaleUniform(s) {
    return this.ScaleValues(s, s, s);
  }
  /**
   * Scales the local x axis
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  ScaleX(s) {
    return this.ScaleValues(s, 1, 1);
  }
  /**
   * Scales the local y axis
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  ScaleY(s) {
    return this.ScaleValues(1, s, 1);
  }
  /**
   * Scales the local z axis
   * @param {Number} s
   * @returns {Tw2TransformParameter}
   */


  ScaleZ(s) {
    return this.ScaleValues(1, 1, s);
  }
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


  /**
   * Sets the parameter's values from a plain object
   * @param {Tw2TransformParameter} a
   * @param {Object} [values]
   * @param {Object} [opt]
   */
  static set(a, values, opt = {}) {
    if (!values) {
      return false;
    }

    this.init();
    const {
      vec3_0,
      vec3_1,
      quat_0
    } = this.global;
    let rotation,
        translation,
        scaling,
        updated = false; // Transform has precedence to any other property

    if (values.transform) {
      rotation = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getRotation(quat_0, values.transform);
      translation = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getTranslation(vec3_0, values.transform);
      scaling = global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].getScaling(vec3_1, values.transform);
    } else {
      rotation = values.rotation || values.orientation;
      translation = values.position || values.translation;
      scaling = values.scale || values.scaling || values.radius;
    }

    if (rotation || translation || scaling !== undefined) {
      if (rotation) {
        if (rotation.length === 3) {
          rotation = global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].euler.getQuat(quat_0, rotation);
        }

        if (!global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].equals(a.rotation, rotation)) {
          global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].copy(a.rotation, rotation);
          updated = true;
        }
      }

      if (translation && !global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].equals(a.translation, translation)) {
        global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(a.translation, translation);
        updated = true;
      }

      if (scaling !== undefined) {
        if (Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(scaling)) {
          scaling = global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].set(vec3_1, scaling, scaling, scaling);
        }

        if (!global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].equals(a.scaling, scaling)) {
          global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy(a.scaling, scaling);
          updated = true;
        }
      }

      if (updated && !opt.skipUpdate) {
        a.RebuildTransforms({
          force: true
        });
      }
    }

    if (values.name && a.name !== values.name) {
      a.name = values.name;
      updated = true;
    }

    return updated;
  }
  /**
   * Gets the object's values as a plain object
   * @param {Tw2TransformParameter} a
   * @param {Object} [out={}]
   */


  static get(a, out = {}) {
    out.rotation = a.GetRotation([]);
    out.translation = a.GetTranslation([]);
    out.scaling = a.GetScale([]);
    return out;
  }
  /**
   * Global and scratch parameters
   * @type {null|Object}
   */


  /**
   * Initializes global and scratch parameters
   */
  static init() {
    if (this.global) return;
    this.global = {
      vec3_0: global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(),
      vec3_1: global_math__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(),
      quat_0: global_math__WEBPACK_IMPORTED_MODULE_1__["quat"].create(),
      mat4_0: global_math__WEBPACK_IMPORTED_MODULE_1__["mat4"].create()
    };
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["rotation", r.vector4]];
  }

}
Tw2TransformParameter.constantBufferSize = 16;
Tw2TransformParameter.global = null;

/***/ }),

/***/ "./core/parameter/Tw2VariableParameter.js":
/*!************************************************!*\
  !*** ./core/parameter/Tw2VariableParameter.js ***!
  \************************************************/
/*! exports provided: Tw2VariableParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VariableParameter", function() { return Tw2VariableParameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Parameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2Parameter */ "./core/parameter/Tw2Parameter.js");


/**
 * Tw2VariableParameter
 *
 * @property {String} variableName
 */

class Tw2VariableParameter extends _Tw2Parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Parameter"] {
  /**
   * Constructor
   * @param {String} [name='']
   * @param {String} [variableName='']
   */
  constructor(name = "", variableName = "") {
    super(name);
    this.variableName = "";
    this.variableName = variableName;
  }
  /**
   * Gets the linked variable
   * @returns {Tw2Parameter}
   */


  get variable() {
    return global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetVariable(this.variableName);
  }
  /**
   * Gets the linked variable's size
   * @returns {Number}
   */


  get size() {
    return this.variable ? this.variable.size : 0;
  }
  /**
   * Sets the variable's value
   * @param {*} value
   * @param {*} [opt]
   * @returns {Boolean}
   */


  SetValue(value, opt) {
    return global__WEBPACK_IMPORTED_MODULE_0__["tw2"].SetVariableValue(this.variableName, value, opt);
  }
  /**
   * Gets the variable's value
   * @param {*} [out=[]]
   * @returns {?*}
   */


  GetValue(out = []) {
    return global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetVariableValue(this.variableName, out);
  }
  /**
   * Apply
   * @param {*} a
   * @param {*} b
   * @param {*} c
   */


  Apply(a, b, c) {
    if (this.variable) {
      this.variable.Apply(a, b, c);
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["variableName", r.string]];
  }

}

/***/ }),

/***/ "./core/parameter/Tw2Vector2Parameter.js":
/*!***********************************************!*\
  !*** ./core/parameter/Tw2Vector2Parameter.js ***!
  \***********************************************/
/*! exports provided: Tw2Vector2Parameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Parameter", function() { return Tw2Vector2Parameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2VectorParameter */ "./core/parameter/Tw2VectorParameter.js");


/**
 * Tw2Vector2Parameter
 * TODO: Is this deprecated?
 * @ccp N/A
 */

class Tw2Vector2Parameter extends _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2VectorParameter"] {
  /**
   * Constructor
   * @param {String} [name='']
   * @param {vec2|Array|Float32Array} [value=vec2.fromValues(1,1)]
   */
  constructor(name = "", value = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].fromValues(1, 1)) {
    super(name, value);
  }
  /**
   * Gets the first value index
   * @returns {Number}
   */


  get x() {
    return this.GetIndexValue(0);
  }
  /**
   * Sets the first value index
   * @param {Number} val
   */


  set x(val) {
    this.SetIndexValue(0, val);
  }
  /**
   * Gets the second value index
   * @returns {Number}
   */


  get y() {
    return this.GetIndexValue(1);
  }
  /**
   * Sets the second value index
   * @param {Number} val
   */


  set y(val) {
    this.SetIndexValue(1, val);
  }
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


}
Tw2Vector2Parameter.constantBufferSize = 2;

/***/ }),

/***/ "./core/parameter/Tw2Vector3Parameter.js":
/*!***********************************************!*\
  !*** ./core/parameter/Tw2Vector3Parameter.js ***!
  \***********************************************/
/*! exports provided: Tw2Vector3Parameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Parameter", function() { return Tw2Vector3Parameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2VectorParameter */ "./core/parameter/Tw2VectorParameter.js");


/**
 * Tw2Vector3Parameter
 * TODO: Is this deprecated?
 * @ccp N/A
 */

class Tw2Vector3Parameter extends _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2VectorParameter"] {
  /**
   * Constructor
   * @param {String} [name='']
   * @param {vec3|Array|Float32Array} [value=vec3.fromValues(1,1,1)]
   */
  constructor(name = "", value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1)) {
    super(name, value);
  }
  /**
   * Gets the first value index
   * @returns {Number}
   */


  get x() {
    return this.GetIndexValue(0);
  }
  /**
   * Sets the first value index
   * @param {Number} val
   */


  set x(val) {
    this.SetIndexValue(0, val);
  }
  /**
   * Gets the second value index
   * @returns {Number}
   */


  get y() {
    return this.GetIndexValue(1);
  }
  /**
   * Sets the second value index
   * @param {Number} val
   */


  set y(val) {
    this.SetIndexValue(1, val);
  }
  /**
   * Gets the third value index
   * @returns {Number}
   */


  get z() {
    return this.GetIndexValue(2);
  }
  /**
   * Sets the third value index
   * @param {Number} val
   */


  set z(val) {
    this.SetIndexValue(2, val);
  }
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


}
Tw2Vector3Parameter.constantBufferSize = 3;

/***/ }),

/***/ "./core/parameter/Tw2Vector4Parameter.js":
/*!***********************************************!*\
  !*** ./core/parameter/Tw2Vector4Parameter.js ***!
  \***********************************************/
/*! exports provided: Tw2Vector4Parameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector4Parameter", function() { return Tw2Vector4Parameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2VectorParameter */ "./core/parameter/Tw2VectorParameter.js");


/**
 * Tw2Vector4Parameter
 * @ccp TriVector4Parameter
 */

class Tw2Vector4Parameter extends _Tw2VectorParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2VectorParameter"] {
  /**
   * Constructor
   * @param {String} [name='']
   * @param {vec4|Array|Float32Array} [value=vec4.fromValues(1,1,1,1)]
   */
  constructor(name = "", value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(1, 1, 1, 1)) {
    super(name, value);
  }
  /**
   * Gets the first value index
   * @returns {Number}
   */


  get x() {
    return this.GetIndexValue(0);
  }
  /**
   * Sets the first value index
   * @param {Number} val
   */


  set x(val) {
    this.SetIndexValue(0, val);
  }
  /**
   * Gets the second value index
   * @returns {Number}
   */


  get y() {
    return this.GetIndexValue(1);
  }
  /**
   * Sets the second value index
   * @param {Number} val
   */


  set y(val) {
    this.SetIndexValue(1, val);
  }
  /**
   * Gets the third value index
   * @returns {Number}
   */


  get z() {
    return this.GetIndexValue(2);
  }
  /**
   * Sets the third value index
   * @param {Number} val
   */


  set z(val) {
    this.SetIndexValue(2, val);
  }
  /**
   * Gets the fourth value index
   * @returns {Number}
   */


  get w() {
    return this.GetIndexValue(3);
  }
  /**
   * Sets the fourth value index
   * @param {Number} val
   */


  set w(val) {
    this.SetIndexValue(3, val);
  }
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["value", r.vector4]];
  }

}
Tw2Vector4Parameter.constantBufferSize = 4;

/***/ }),

/***/ "./core/parameter/Tw2VectorParameter.js":
/*!**********************************************!*\
  !*** ./core/parameter/Tw2VectorParameter.js ***!
  \**********************************************/
/*! exports provided: Tw2VectorParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorParameter", function() { return Tw2VectorParameter; });
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Tw2VectorParameter base class
 *
 * @property {Float32Array} value
 * @property {?Float32Array} _constantBuffer
 * @property {?Number} _offset
 */

class Tw2VectorParameter extends global__WEBPACK_IMPORTED_MODULE_1__["Tw2BaseClass"] {
  //_constantBuffer = null;
  //_offset = null;

  /**
   * Gets the parameter's constant buffer size
   * @returns {Number} 0 if invalid
   */
  get size() {
    return this.constructor.constantBufferSize;
  }
  /**
   * Constructor
   * @param {String} [name='']
   * @param {Float32Array|Array} [value]
   */


  constructor(name, value) {
    super();
    this.value = new Float32Array(this.size);
    this.name = name;
    if (value) this.value.set(value);
  }
  /**
   * Sets the parameter's value
   * @param {Float32Array} value   - The value to set
   * @param {*} [opt]
   * @returns {Boolean}
   */


  SetValue(value, opt) {
    if (!this.EqualsValue(value)) {
      this.value.set(value);
      this.UpdateValues(opt);
      return true;
    }

    return false;
  }
  /**
   * Sets a parameter's value at a given index
   * @param {Number} index         - the parameter's value index to change
   * @param {Number} value         - the value to set
   * @param {*} [opt]              - the object that is setting the value
   * @throw Index Error
   */


  SetIndexValue(index, value, opt) {
    if (this.value[index] !== undefined) {
      if (this.value[index] !== value) {
        this.value[index] = value;
        this.UpdateValues(opt);
      }

      return;
    }

    throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrIndexBounds"]();
  }
  /**
   * Gets the parameter's value
   * @param {TypedArray|Array} [out=[]]
   * @returns {Array|Float32Array}
   */


  GetValue(out = []) {
    const value = this._constantBuffer ? this._constantBuffer.subarray(this._offset, this._offset + this.size) : this.value;

    for (let i = 0; i < value.length; i++) out[i] = value[i];

    return out;
  }
  /**
   * Gets a parameter's value at a given index
   * @param index
   * @returns {Number}
   * @throw Index Error
   */


  GetIndexValue(index) {
    if (this.value[index] !== undefined) {
      return this.value[index];
    }

    throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrIndexBounds"]();
  }
  /**
   * Fires on value changes
   * @param {*} [controller]- An optional parameter for tracking the object that called the function
   * @param {Boolean} [skipUpdate] - An optional parameter to skip updates
   */


  OnValueChanged(controller, skipUpdate) {
    if (this._constantBuffer) {
      this.Apply(this._constantBuffer, this._offset);
    }
  }
  /**
   * Binds the parameter to a constant buffer
   * @param {Float32Array} constantBuffer
   * @param {Number} offset
   * @param {Number} size
   * @returns {Boolean} true if bound
   */


  Bind(constantBuffer, offset, size) {
    if (!this._constantBuffer && size >= this.size) {
      this._constantBuffer = constantBuffer;
      this._offset = offset;
      this.Apply(constantBuffer, offset, size);
      return true;
    }

    return false;
  }
  /**
   * Unbinds the parameter from a constant buffer
   */


  Unbind() {
    this._constantBuffer = null;
  }
  /**
   * Applies the parameter's value to it's constant buffer
   * @param {Float32Array} constantBuffer
   * @param {Number} offset
   * @param {Number} [size]
   */


  Apply(constantBuffer, offset, size) {
    constantBuffer.set(this.value, offset);
  }
  /**
   * Checks if a value equals the parameter's value
   * - Assumes the correct length array or typed array is passed
   * @param {Array|Float32Array} value
   * @returns {Boolean}
   */


  EqualsValue(value) {
    for (let i = 0; i < this.size; i++) {
      if (this.value[i] !== value[i]) {
        return false;
      }
    }

    return true;
  }
  /**
   * Checks if a value is a valid parameter input
   * @param {Float32Array|Array} value
   * @returns {Boolean}
   */


  static isValue(value) {
    return global__WEBPACK_IMPORTED_MODULE_1__["util"].isArrayLike(value) && value.length === this.constantBufferSize;
  }
  /**
   * The parameter's constant buffer size
   * @type {Number}
   */


}
Tw2VectorParameter.constantBufferSize = 0;

/***/ }),

/***/ "./core/parameter/index.js":
/*!*********************************!*\
  !*** ./core/parameter/index.js ***!
  \*********************************/
/*! exports provided: Tw2Parameter, Tw2FloatParameter, Tw2Matrix4Parameter, Tw2MatrixParameter, Tw2TransformParameter, Tw2VariableParameter, Tw2Vector2Parameter, Tw2Vector3Parameter, Tw2Vector4Parameter, Tw2TextureParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2Parameter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Parameter */ "./core/parameter/Tw2Parameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Parameter", function() { return _Tw2Parameter__WEBPACK_IMPORTED_MODULE_0__["Tw2Parameter"]; });

/* harmony import */ var _Tw2FloatParameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2FloatParameter */ "./core/parameter/Tw2FloatParameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2FloatParameter", function() { return _Tw2FloatParameter__WEBPACK_IMPORTED_MODULE_1__["Tw2FloatParameter"]; });

/* harmony import */ var _Tw2Matrix4Parameter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2Matrix4Parameter */ "./core/parameter/Tw2Matrix4Parameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Matrix4Parameter", function() { return _Tw2Matrix4Parameter__WEBPACK_IMPORTED_MODULE_2__["Tw2Matrix4Parameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MatrixParameter", function() { return _Tw2Matrix4Parameter__WEBPACK_IMPORTED_MODULE_2__["Tw2MatrixParameter"]; });

/* harmony import */ var _Tw2TransformParameter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2TransformParameter */ "./core/parameter/Tw2TransformParameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TransformParameter", function() { return _Tw2TransformParameter__WEBPACK_IMPORTED_MODULE_3__["Tw2TransformParameter"]; });

/* harmony import */ var _Tw2VariableParameter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2VariableParameter */ "./core/parameter/Tw2VariableParameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VariableParameter", function() { return _Tw2VariableParameter__WEBPACK_IMPORTED_MODULE_4__["Tw2VariableParameter"]; });

/* harmony import */ var _Tw2Vector2Parameter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2Vector2Parameter */ "./core/parameter/Tw2Vector2Parameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Parameter", function() { return _Tw2Vector2Parameter__WEBPACK_IMPORTED_MODULE_5__["Tw2Vector2Parameter"]; });

/* harmony import */ var _Tw2Vector3Parameter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2Vector3Parameter */ "./core/parameter/Tw2Vector3Parameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Parameter", function() { return _Tw2Vector3Parameter__WEBPACK_IMPORTED_MODULE_6__["Tw2Vector3Parameter"]; });

/* harmony import */ var _Tw2Vector4Parameter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2Vector4Parameter */ "./core/parameter/Tw2Vector4Parameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector4Parameter", function() { return _Tw2Vector4Parameter__WEBPACK_IMPORTED_MODULE_7__["Tw2Vector4Parameter"]; });

/* harmony import */ var _Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Tw2TextureParameter */ "./core/parameter/Tw2TextureParameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TextureParameter", function() { return _Tw2TextureParameter__WEBPACK_IMPORTED_MODULE_8__["Tw2TextureParameter"]; });











/***/ }),

/***/ "./core/post/Tr2PostProcess.js":
/*!*************************************!*\
  !*** ./core/post/Tr2PostProcess.js ***!
  \*************************************/
/*! exports provided: Tr2PostProcess */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2PostProcess", function() { return Tr2PostProcess; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2PostProcess
 * TODO: Implement
 *
 * @property {Array.<Tr2Effect>} stages -
 */

class Tr2PostProcess extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.stages = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["stages", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2PostProcess.__isStaging = 4;

/***/ }),

/***/ "./core/post/Tw2PostEffect.js":
/*!************************************!*\
  !*** ./core/post/Tw2PostEffect.js ***!
  \************************************/
/*! exports provided: Tw2PostEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffect", function() { return Tw2PostEffect; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2RenderTarget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2RenderTarget */ "./core/Tw2RenderTarget.js");
/* harmony import */ var _resource_Tw2TextureRes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../resource/Tw2TextureRes */ "./core/resource/Tw2TextureRes.js");
/* harmony import */ var _parameter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parameter */ "./core/parameter/index.js");
/* harmony import */ var _Tw2PostEffectStep__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2PostEffectStep */ "./core/post/Tw2PostEffectStep.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! global/util */ "./global/util/index.js");






/**
 * Tw2PostEffect
 *
 * @property {Boolean} display                        - toggles rendering
 * @property {Number} [index=-1]                      - the post effect's render order (defaults to the order the effect is added)
 * @property {Number} _width                          - the post effect's width
 * @property {Number} _height                         - the post effect's height
 * @property {Tw2TextureRes} _texture                 - the output texture
 * @property {?Tw2CurveSet} curveSet                  - optional curve set
 * @property {Array<Tw2PostEffectStep>} steps         - post effect steps
 * @property {Array<Tw2PostEffectStep>} _visibleSteps - visible and ordered post effect steps
 * @property {Boolean} _dirty                         - identifies if the post is pending a rebuild
 * @property {Function} _onChildModified              - a function called when a child step is modified
 */

class Tw2PostEffect extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.display = true;
    this.index = -1;
    this.curveSet = null;
    this.steps = [];
    this._width = 0;
    this._height = 0;
    this._targets = {};
    this._texture = null;
    this._visibleSteps = [];
    this._dirty = true;

    this._onChildModified = item => this.UpdateValues({
      controller: item
    });
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    this._dirty = true;
  }
  /**
   * Checks if the post effect is good
   * @returns {Boolean}
   */


  IsGood() {
    let IsGood = 0;

    for (let i = 0; i < this.steps.length; i++) {
      if (this.steps[i].IsGood()) {
        IsGood++;
      }
    }

    return IsGood === this.steps.length;
  }
  /**
   * Keeps the post effect alive
   */


  KeepAlive() {
    for (let i = 0; i < this.steps.length; i++) {
      this.steps[i].KeepAlive();
    }
  }
  /**
   * Gets resources
   * @param {Array} [out=[]]
   * @returns {Array<Tw2Resource>} out
   */


  GetResources(out = []) {
    for (let i = 0; i < this.steps.length; i++) {
      this.steps[i].GetResources(out);
    }

    return out;
  }
  /**
   * Creates an item
   * @param {*} [opt={}]
   * @returns {Tw2PostEffectStep}
   */


  CreateItem(opt = {}) {
    const item = _Tw2PostEffectStep__WEBPACK_IMPORTED_MODULE_4__["Tw2PostEffectStep"].from(opt);
    this.AddItem(item);
    return item;
  }
  /**
   * Adds an item
   * @param {Tw2PostEffectStep} item
   */


  AddItem(item) {
    if (!this.steps.includes(item)) {
      if (item.index === -1) {
        item.index = this.steps.length;
      }

      item._onModified = this._onChildModified;
      this.steps.push(item);
      this.UpdateValues();
    }
  }
  /**
   * Removes an item
   * @param {Tw2PostEffectStep} item
   */


  RemoveItem(item) {
    const index = this.steps.indexOf(item);

    if (index !== -1) {
      item._onModified = null;
      this.steps.splice(index, 1);
      this.UpdateValues();
    }
  }
  /**
   * Clears all items
   */


  ClearItems() {
    for (let i = 0; i < this.steps.length; i++) {
      this.steps[i]._onModified = null;
    }

    this.steps = [];
    this.UpdateValues();
  }
  /**
   * Gets a render target by it's name
   * @param {?String} name
   * @returns {?Tw2RenderTarget}
   */


  GetTarget(name) {
    return name && name in this._targets ? this._targets[name] : null;
  }
  /**
   * Checks if a render target exists
   * @param {String} name
   * @returns {Boolean}
   * @constructor
   */


  HasTarget(name) {
    return !!(name && this._targets[name]);
  }
  /**
   * Creates a render target
   * - If the render target doesn't exist it will be created
   * @param {String} name
   * @param {Number} [width=device.viewportWidth]
   * @param {Number} [height=device.viewportHeight]
   * @returns {Tw2RenderTarget}
   */


  CreateTarget(name, width = global__WEBPACK_IMPORTED_MODULE_0__["device"].viewportWidth, height = global__WEBPACK_IMPORTED_MODULE_0__["device"].viewportHeight) {
    if (!this._targets[name]) {
      this._targets[name] = new _Tw2RenderTarget__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderTarget"]();
      this._targets[name].name = name;
    }

    this._targets[name].Create(width, height, false);

    return this._targets[name];
  }
  /**
   * Per frame update
   * @param {Number} dt
   */


  Update(dt) {
    if (this.curveSet) {
      this.curveSet.Update(dt);
    }
  }
  /**
   * Per frame update
   * @returns {Boolean}
   */


  Render() {
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          width = d.viewportWidth,
          height = d.viewportHeight;

    if (!this.IsGood() || !this.display || width <= 0 || height <= 0) {
      return false;
    }

    if (width !== this._width || height !== this._height || this._dirty || !this._texture) {
      if (!this._texture) {
        this._texture = new _resource_Tw2TextureRes__WEBPACK_IMPORTED_MODULE_2__["Tw2TextureRes"]();

        this._texture.Attach(gl.createTexture());
      }

      gl.bindTexture(gl.TEXTURE_2D, this._texture.texture);
      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
      gl.bindTexture(gl.TEXTURE_2D, null);
      this._width = width;
      this._height = height; // Rebuild items

      this._visibleSteps = [];

      for (let i = 0; i < this.steps.length; ++i) {
        const item = this.steps[i],
              inputs = item.inputs,
              effect = item.effect,
              shader = effect.shader,
              parameters = effect.parameters; // Auto create current blit

        if (shader.HasTexture("BlitCurrent") && !parameters.BlitCurrent) {
          parameters["BlitCurrent"] = new _parameter__WEBPACK_IMPORTED_MODULE_3__["Tw2TextureParameter"]("BlitCurrent", "rgba:/0,0,0,255");
        } // Auto create original blit


        if (shader.HasTexture("BlitOriginal") && !parameters.BlitOriginal) {
          parameters["BlitOriginal"] = new _parameter__WEBPACK_IMPORTED_MODULE_3__["Tw2TextureParameter"]("BlitOriginal", "rgba:/0,0,0,255");
        } // Setup step render target


        if (item.target) {
          item._renderTarget = this.CreateTarget(item.target, width, height);
        } else {
          item._renderTarget = null;
        } // Assign render targets to textures


        for (let texture in inputs) {
          if (inputs.hasOwnProperty(texture)) {
            // Ensure input is supported
            if (!shader.HasTexture(texture)) {
              console.warn("Invalid input parameter ".concat(texture));
              delete inputs[texture];
            } else {
              // Ensure step texture exists
              if (!parameters[texture]) {
                parameters[texture] = new _parameter__WEBPACK_IMPORTED_MODULE_3__["Tw2TextureParameter"](texture);
              }

              const parameter = parameters[texture],
                    target = inputs[texture];

              if (target) {
                parameter.SetTextureRes(this.CreateTarget(target, width, height).texture);
              } else {
                parameter.SetTextureRes(this._texture);
              }
            }
          }
        } // Update texel size if required


        if ("BlitCurrent" in inputs && shader.HasConstant("g_texelSize")) {
          // Auto create parameter if required
          if (!parameters["g_texelSize"]) {
            parameters["g_texelSize"] = new _parameter__WEBPACK_IMPORTED_MODULE_3__["Tw2Vector4Parameter"]("g_texelSize", [1, 1, 1, 1]);
          }

          const size = parameters["g_texelSize"],
                renderTarget = this.GetTarget(inputs.BlitCurrent);

          if (renderTarget) {
            size.value[0] = 1.0 / renderTarget.width;
            size.value[1] = 1.0 / renderTarget.width;
          } else {
            size.value[0] = 1.0 / width;
            size.value[1] = 1.0 / width;
          }

          size.UpdateValues(this);
        }

        if (item.display) {
          this._visibleSteps.push(item);
        }

        item._dirty = false;
      } // Update item sort order


      this._visibleSteps.sort((a, b) => {
        return a.index - b.index;
      });

      this._dirty = false;
    }

    gl.bindTexture(gl.TEXTURE_2D, this._texture.texture);
    gl.copyTexImage2D(gl.TEXTURE_2D, 0, d.alphaBlendBackBuffer ? gl.RGBA : gl.RGB, 0, 0, width, height, 0);
    gl.bindTexture(gl.TEXTURE_2D, null);
    d.SetStandardStates(global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_OPAQUE);
    let didPost = 0;

    for (let i = 0; i < this._visibleSteps.length; ++i) {
      const item = this._visibleSteps[i];

      if (item.display) {
        if (item._renderTarget) {
          item._renderTarget.Set();
        } else {
          gl.bindFramebuffer(gl.FRAMEBUFFER, null);
          gl.viewport(0, 0, width, height);
        }

        d.RenderFullScreenQuad(item.effect);
        didPost++;
      }
    }

    return !!didPost;
  }
  /**
   * Creates a post effect from an object
   * @param {*} [opt={}]
   * @returns {Tw2PostEffect}
   */


  static from(opt = {}) {
    const postEffect = new this();
    Object(global_util__WEBPACK_IMPORTED_MODULE_5__["assignIfExists"])(postEffect, opt, ["name", "display", "index"]);

    if (opt.steps) {
      for (let i = 0; i < opt.steps.length; i++) {
        postEffect.CreateItem(opt.steps[i]);
      }
    }

    return postEffect;
  }
  /**
   * Child constructor
   * @type {Tw2PostEffectStep}
   */


}
Tw2PostEffect.Item = _Tw2PostEffectStep__WEBPACK_IMPORTED_MODULE_4__["Tw2PostEffectStep"];

/***/ }),

/***/ "./core/post/Tw2PostEffectManager.js":
/*!*******************************************!*\
  !*** ./core/post/Tw2PostEffectManager.js ***!
  \*******************************************/
/*! exports provided: Tw2PostEffectManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffectManager", function() { return Tw2PostEffectManager; });
/* harmony import */ var _Tw2PostEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2PostEffect */ "./core/post/Tw2PostEffect.js");
/* harmony import */ var global_class_Tw2BaseClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/class/Tw2BaseClass */ "./global/class/Tw2BaseClass.js");


/**
 * Tw2PostEffectManager
 *
 * @property {String} name
 * @property {Boolean} display
 * @property {Array<Tw2PostEffect>} items
 */

class Tw2PostEffectManager extends global_class_Tw2BaseClass__WEBPACK_IMPORTED_MODULE_1__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "Post manager";
    this.display = true;
    this.effects = [];
    this._dirty = true;

    this._onChildValueChanged = item => this.UpdateValues({
      controller: item
    });

    this._visibleEffects = [];
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    this._dirty = true;
  }
  /**
   * Checks if all post effects are good
   * @returns {Boolean}
   */


  IsGood() {
    let IsGood = 0;

    for (let i = 0; i < this.effects.length; i++) {
      if (this.effects[i].IsGood()) {
        IsGood++;
      }
    }

    return IsGood === this.effects.length;
  }
  /**
   * Keeps the post effects alive
   */


  KeepAlive() {
    for (let i = 0; i < this.effects.length; i++) {
      this.effects[i].KeepAlive();
    }
  }
  /**
   * Gets resources
   * @param {Array} [out=[]]
   * @returns {Array<Tw2Resource>} out
   */


  GetResources(out = []) {
    for (let i = 0; i < this.effects.length; i++) {
      this.effects[i].GetResources(out);
    }

    return out;
  }
  /**
   * Creates an item from an object
   * @param {*} [opt={}]
   * @returns {Tw2PostEffect}
   */


  CreateItem(opt = {}) {
    const item = _Tw2PostEffect__WEBPACK_IMPORTED_MODULE_0__["Tw2PostEffect"].from(opt);
    this.AddItem(item);
    return item;
  }
  /**
   * Adds a post effect
   * @param {Tw2PostEffect} item
   */


  AddItem(item) {
    if (!this.effects.includes(item)) {
      if (item.index === -1) {
        item.index = this.effects.length;
      }

      item._onModified = this._onChildValueChanged;
      this.effects.push(item);
      this.UpdateValues();
    }
  }
  /**
   * Removes a post effect
   * @param {Tw2PostEffect} item
   */


  RemoveItem(item) {
    const index = this.effects.indexOf(item);

    if (index !== -1) {
      item._onModified = null;
      this.effects.splice(index, 1);
      this.UpdateValues();
    }
  }
  /**
   * Clears all post effects
   */


  ClearItems() {
    for (let i = 0; i < this.effects.length; i++) {
      this.effects[i]._onModified = null;
      this.effects[i].ClearItems();
    }

    this.effects = [];
    this.UpdateValues();
  }
  /**
   * Per frame update
   * @param {Number} dt - delta time
   */


  Update(dt) {
    if (this._dirty) {
      this._visibleEffects = [];

      for (let i = 0; i < this.effects.length; i++) {
        if (this.effects[i].display) {
          this._visibleEffects.push(this.effects[i]);
        }
      }

      this._visibleEffects.sort((a, b) => {
        return a.index - b.index;
      });

      this._dirty = false;
    }

    for (let i = 0; i < this.effects.length; i++) {
      this.effects[i].Update(dt);
    }
  }
  /**
   * Per frame update
   * @returns {Boolean} true if post was rendered
   */


  Render() {
    if (!this.display) {
      this.KeepAlive();
      return false;
    }

    let rendered = 0;

    for (let i = 0; i < this._visibleEffects.length; i++) {
      if (this._visibleEffects[i].Render()) {
        rendered++;
      }
    }

    return !!rendered;
  }
  /**
   * Child constructor
   * @type {Tw2PostEffect}
   */


}
Tw2PostEffectManager.Item = _Tw2PostEffect__WEBPACK_IMPORTED_MODULE_0__["Tw2PostEffect"];

/***/ }),

/***/ "./core/post/Tw2PostEffectStep.js":
/*!****************************************!*\
  !*** ./core/post/Tw2PostEffectStep.js ***!
  \****************************************/
/*! exports provided: Tw2PostEffectStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffectStep", function() { return Tw2PostEffectStep; });
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var _mesh_Tw2Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mesh/Tw2Effect */ "./core/mesh/Tw2Effect.js");
/* harmony import */ var global_class_Tw2BaseClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/class/Tw2BaseClass */ "./global/class/Tw2BaseClass.js");



/**
 * Post effect step
 *
 * @property {String} name                      - the step's name
 * @property {Boolean} display                  - toggles rendering
 * @property {Number} [index=-1]                - the step's render order (defaults to the order it was added)
 * @property {Tw2Effect} effect                 - the step's effect
 * @property {?String} [target]                 - the step's render target name
 * @property {{string:string}} inputs           - the step's input render targets
 * @property {?Tw2RenderTarget} [_renderTarget] - the step's render target (if none is defined the current target is used)
 * @property {Boolean} _dirty                   - identifies if the post is pending a rebuild
 * @property {?Function} _onModified            - a function which is called when the step is modified
 */

class Tw2PostEffectStep extends global_class_Tw2BaseClass__WEBPACK_IMPORTED_MODULE_2__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.index = -1;
    this.display = true;
    this.effect = null;
    this.target = null;
    this.inputs = {};
    this._renderTarget = null;
    this._dirty = true;
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    this._dirty = true;
  }
  /**
   * Checks if the step is good
   * @returns {Boolean}
   */


  IsGood() {
    return this.effect ? this.effect.IsGood() : false;
  }
  /**
   * Keeps the step alive
   */


  KeepAlive() {
    if (this.effect) {
      this.effect.KeepAlive();
    }
  }
  /**
   * Gets resources
   * @param {Array} [out=[]]
   * @returns {Array<Tw2Resource>} out
   */


  GetResources(out = []) {
    if (this.effect) {
      this.effect.GetResources(out);
    }

    return out;
  }
  /**
   * Creates a post effect step from an object
   * @param {*} [opt={}]
   * @returns {Tw2PostEffectStep}
   */


  static from(opt = {}) {
    const item = new this();
    Object(global_util__WEBPACK_IMPORTED_MODULE_0__["assignIfExists"])(item, opt, ["name", "display", "target", "index"]);

    if (opt.inputs) {
      Object.assign(item.inputs, opt.inputs);
    }

    item.effect = _mesh_Tw2Effect__WEBPACK_IMPORTED_MODULE_1__["Tw2Effect"].from({
      name: opt.name,
      autoParameter: true,
      effectFilePath: opt.effectFilePath,
      parameters: opt.parameters,
      textures: opt.textures,
      overrides: opt.overrides
    });
    return item;
  }

}

/***/ }),

/***/ "./core/post/index.js":
/*!****************************!*\
  !*** ./core/post/index.js ***!
  \****************************/
/*! exports provided: Tw2PostEffect, Tw2PostEffectManager, Tw2PostEffectStep, Tr2PostProcess */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2PostEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2PostEffect */ "./core/post/Tw2PostEffect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffect", function() { return _Tw2PostEffect__WEBPACK_IMPORTED_MODULE_0__["Tw2PostEffect"]; });

/* harmony import */ var _Tw2PostEffectManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2PostEffectManager */ "./core/post/Tw2PostEffectManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffectManager", function() { return _Tw2PostEffectManager__WEBPACK_IMPORTED_MODULE_1__["Tw2PostEffectManager"]; });

/* harmony import */ var _Tw2PostEffectStep__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2PostEffectStep */ "./core/post/Tw2PostEffectStep.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PostEffectStep", function() { return _Tw2PostEffectStep__WEBPACK_IMPORTED_MODULE_2__["Tw2PostEffectStep"]; });

/* harmony import */ var _Tr2PostProcess__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tr2PostProcess */ "./core/post/Tr2PostProcess.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2PostProcess", function() { return _Tr2PostProcess__WEBPACK_IMPORTED_MODULE_3__["Tr2PostProcess"]; });






/***/ }),

/***/ "./core/reader/Tw2BinaryReader.js":
/*!****************************************!*\
  !*** ./core/reader/Tw2BinaryReader.js ***!
  \****************************************/
/*! exports provided: Tw2BinaryReader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2BinaryReader", function() { return Tw2BinaryReader; });
/**
 * Tw2BinaryReader
 *
 * @property {*} data
 * @property {Number} cursor
 */
class Tw2BinaryReader {
  /**
   * Constructor
   * @param {*} data
   */
  constructor(data) {
    this.data = null;
    this.cursor = 0;
    this.data = data;
  }
  /**
   * ReadUInt8
   * @returns {*}
   */


  ReadUInt8() {
    return this.data[this.cursor++];
  }
  /**
   * ReadInt8
   * @returns {*}
   */


  ReadInt8() {
    let val = this.data[this.cursor++];
    if (val > 0x7F) val = val - 0xff - 1;
    return val;
  }
  /**
   * ReadUInt16
   * @returns {*}
   */


  ReadUInt16() {
    return this.data[this.cursor++] + (this.data[this.cursor++] << 8);
  }
  /**
   * ReadInt16
   * @returns {*}
   */


  ReadInt16() {
    let val = this.data[this.cursor++] + (this.data[this.cursor++] << 8);
    if (val > 0x7FFF) val = val - 0xffff - 1;
    return val;
  }
  /**
   * ReadUInt32
   * @returns {*}
   */


  ReadUInt32() {
    return this.data[this.cursor++] + (this.data[this.cursor++] << 8) + (this.data[this.cursor++] << 16) + (this.data[this.cursor++] << 24 >>> 0);
  }
  /**
   * ReadInt32
   * @returns {*}
   */


  ReadInt32() {
    let val = this.data[this.cursor++] + (this.data[this.cursor++] << 8) + (this.data[this.cursor++] << 16) + (this.data[this.cursor++] << 24 >>> 0);
    if (val > 0x7FFFFFFF) val = val - 0xffffffff - 1;
    return val;
  }
  /**
   * ReadFloat16
   * @returns {Number}
   */


  ReadFloat16() {
    let b2 = this.data[this.cursor++],
        b1 = this.data[this.cursor++];
    const sign = 1 - 2 * (b1 >> 7); // sign = bit 0

    const exp = (b1 >> 2 & 0x1f) - 15; // exponent = bits 1..5

    const sig = (b1 & 3) << 8 | b2; // significand = bits 6..15

    if (sig === 0 && exp === -15) return 0.0;
    return sign * (1 + sig * Math.pow(2, -10)) * Math.pow(2, exp);
  }
  /**
   * ReadFloat32
   * @returns {Number}
   */


  ReadFloat32() {
    let b4 = this.data[this.cursor++],
        b3 = this.data[this.cursor++],
        b2 = this.data[this.cursor++],
        b1 = this.data[this.cursor++];
    const sign = 1 - 2 * (b1 >> 7); // sign = bit 0

    const exp = (b1 << 1 & 0xff | b2 >> 7) - 127; // exponent = bits 1..8

    const sig = (b2 & 0x7f) << 16 | b3 << 8 | b4; // significand = bits 9..31

    if (sig === 0 && exp === -127) return 0.0;
    return sign * (1 + sig * Math.pow(2, -23)) * Math.pow(2, exp);
  }
  /**
   * ReadString
   * @returns {String}
   */


  ReadString() {
    const length = this.data[this.cursor++];
    let str = "";

    for (let i = 0; i < length; ++i) {
      str += String.fromCharCode(this.data[this.cursor++]);
    }

    return str;
  }

}

/***/ }),

/***/ "./core/reader/Tw2BlackBinaryReader.js":
/*!*********************************************!*\
  !*** ./core/reader/Tw2BlackBinaryReader.js ***!
  \*********************************************/
/*! exports provided: Tw2BlackBinaryReader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2BlackBinaryReader", function() { return Tw2BlackBinaryReader; });
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");

/**
 * Tw2BlackBinaryReader
 * @ccp N/A
 *
 * @author aurora
 * @property {DataView} data
 * @property {Tw2BlackReader} context
 * @property {Number} cursor
 */

class Tw2BlackBinaryReader {
  /**
   * Constructor
   * @param {DataView} data
   * @param {Tw2BlackReader} context
   */
  constructor(data, context) {
    this.data = null;
    this.context = null;
    this.cursor = 0;
    this.data = data;
    this.context = context;
    this.cursor = 0;
  }
  /**
   * Gets the data length
   * @returns {number}
   */


  get length() {
    return this.data.byteLength - this.cursor;
  }
  /**
   * Gets the string table
   */


  get stringTable() {
    return this.context._stringTable;
  }
  /**
   * Gets references
   */


  get references() {
    return this.context._ids;
  }
  /**
   * Checks if the reader is at the end of the data
   * @returns {boolean}
   */


  AtEnd() {
    return this.length === 0;
  }
  /**
   *
   * @param n
   * @returns {Tw2BlackBinaryReader}
   */


  ReadBinaryReader(n) {
    return new Tw2BlackBinaryReader(this.ReadDataView(n), this.context);
  }
  /**
   *
   * @returns {*}
   */


  ReadCString() {
    const data = this.data,
          startOffset = this.cursor;

    while (this.ReadU8() !== 0) {// NO OPERATION
    }

    const arrayOffset = data.byteOffset + startOffset,
          arrayLength = this.cursor - startOffset - 1,
          array = new Uint8Array(data.buffer, arrayOffset, arrayLength);
    return Tw2BlackBinaryReader.stringDecoder.decode(array);
  }
  /**
   *
   * @returns {*}
   */


  ReadCWString() {
    const data = this.data,
          startOffset = this.cursor;

    while (this.ReadU16() !== 0) {// NO OPERATION
    }

    const arrayOffset = data.byteOffset + startOffset,
          arrayLength = this.cursor - startOffset - 2,
          array = new Uint8Array(data.buffer, arrayOffset, arrayLength);
    return Tw2BlackBinaryReader.wstringDecoder.decode(array);
  }
  /**
   *
   * @param n
   * @returns {DataView}
   */


  ReadDataView(n) {
    if (n < 0) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrBinaryReaderReadError"]({
        readError: "Argument should be positive: got \"".concat(n, "\"")
      });
    }

    if (this.length < n) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrBinaryReaderReadError"]({
        readError: "Argument is too big: remaining ".concat(this.length, ", got \"").concat(n, "\"")
      });
    }

    const data = this.data,
          value = new DataView(data.buffer, data.byteOffset + this.cursor, n);
    this.cursor += n;
    return value;
  }
  /**
   *
   * @returns {number}
   */


  ReadF32() {
    const value = this.data.getFloat32(this.cursor, true);
    this.cursor += 4;
    return value;
  }
  /**
   *
   * @returns {number}
   */


  ReadF64() {
    const value = this.data.getFloat64(this.cursor, true);
    this.cursor += 8;
    return value;
  }
  /**
   *
   * @returns {*}
   */


  ReadStringU16() {
    let value = this.ReadU16();

    if (value > this.stringTable.length) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrBinaryReaderReadError"]({
        readError: "Reading string \"".concat(value, "\" but only ").concat(this.stringTable.length, " exist")
      });
    }

    return this.stringTable[value];
  }
  /**
   *
   * @returns {number}
   */


  ReadU8() {
    let value = this.data.getUint8(this.cursor);
    this.cursor += 1;
    return value;
  }
  /**
   *
   * @returns {number}
   */


  ReadU16() {
    let value = this.data.getUint16(this.cursor, true);
    this.cursor += 2;
    return value;
  }
  /**
   *
   * @param n
   * @returns {Uint16Array}
   */


  ReadU16Array(n) {
    if (n < 0) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrBinaryReaderReadError"]({
        readError: "Argument should be positive but got \"".concat(n, "\"")
      });
    }

    let value = new Uint16Array(n);

    for (let i = 0; i < n; i++) {
      value[i] = this.ReadU16();
    }

    return value;
  }
  /**
   *
   * @returns {number}
   */


  ReadU32() {
    let value = this.data.getUint32(this.cursor, true);
    this.cursor += 4;
    return value;
  }
  /**
   *
   * @param n
   * @returns {Uint32Array}
   */


  ReadU32Array(n) {
    if (n < 0) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrBinaryReaderReadError"]({
        readError: "Argument should be positive: got ".concat(n)
      });
    }

    let value = new Uint32Array(n);

    for (let i = 0; i < n; i++) {
      value[i] = this.ReadU32();
    }

    return value;
  }
  /**
   *
   * @param message
   */


  ExpectEnd(message) {
    if (this.length !== 0) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrBinaryReaderReadError"]({
        readError: "".concat(message, ": expected 0 bytes remaining, got ").concat(this.length)
      });
    }
  }
  /**
   *
   * @param expected
   * @param message
   */


  ExpectU8(expected, message) {
    Tw2BlackBinaryReader.expect(this.ReadU8(), expected, message);
  }
  /**
   *
   * @param expected
   * @param message
   */


  ExpectU16(expected, message) {
    Tw2BlackBinaryReader.expect(this.ReadU16(), expected, message);
  }
  /**
   *
   * @param expected
   * @param message
   */


  ExpectU32(expected, message) {
    Tw2BlackBinaryReader.expect(this.ReadU32(), expected, message);
  }
  /**
   *
   * @param actual
   * @param expected
   * @param message
   */


  static expect(actual, expected, message) {
    if (actual !== expected) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrBinaryReaderReadError"]({
        readError: "".concat(message, ": expected ").concat(expected, ", got ").concat(actual)
      });
    }
  }
  /**
   *
   * @type {TextDecoder}
   */


}
Tw2BlackBinaryReader.stringDecoder = new TextDecoder("utf-8");
Tw2BlackBinaryReader.wstringDecoder = new TextDecoder("utf-16le");

/***/ }),

/***/ "./core/reader/Tw2BlackPropertyReaders.js":
/*!************************************************!*\
  !*** ./core/reader/Tw2BlackPropertyReaders.js ***!
  \************************************************/
/*! exports provided: path, object, rawObject, array, boolean, string, enums, float, ushort, uint, byte, vector2, vector3, color, vector4, matrix, indexBuffer, struct, structList, fromList, notImplemented */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "path", function() { return path; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rawObject", function() { return rawObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array", function() { return array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return boolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "string", function() { return string; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enums", function() { return enums; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "float", function() { return float; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ushort", function() { return ushort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uint", function() { return uint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "byte", function() { return byte; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vector2", function() { return vector2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vector3", function() { return vector3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "color", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vector4", function() { return vector4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrix", function() { return matrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexBuffer", function() { return indexBuffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "struct", function() { return struct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "structList", function() { return structList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromList", function() { return fromList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notImplemented", function() { return notImplemented; });
/* harmony import */ var global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global/engine/Tw2Constant */ "./global/engine/Tw2Constant.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/util */ "./global/util/index.js");




const TypeReader = {
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].UNKNOWN]: notImplemented,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].BOOLEAN]: boolean,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].PATH]: path,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].STRING]: string,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].BYTE]: byte,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].UINT]: uint,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].USHORT]: ushort,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].FLOAT]: float,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].VECTOR2]: vector2,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].VECTOR3]: vector3,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].VECTOR4]: vector4,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].QUATERNION]: vector4,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].COLOR]: color,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].OBJECT]: object,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].RAW]: rawObject,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].LIST]: array,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].PLAIN]: rawObject,
  [global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].INDEX_BUFFER]: indexBuffer
};
/**
 * Gets a black reader from a property type
 * @param {Number|String} type
 * @returns {Function}
 */

function getReaderFromType(type) {
  if (Object(global_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(type)) type = global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"][type.toUpperCase()];
  if (type === undefined || TypeReader[type] === undefined) type = global_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].UNKNOWN;
  return TypeReader[type];
}
/**
 * Reads a path
 * - Handles compatibilities so ccpwgl can either load newer files or try to fail gracefully
 * @param {Tw2BlackBinaryReader} reader
 * @returns {String}
 */


function path(reader) {
  let path = reader.ReadStringU16(); // Because there are two sources for "res:" now we need to replace
  // any references from the eve cdn with a new res path mapping

  if (path.indexOf("res:") === 0) {
    path = "cdn:" + path.substring(4);
  }

  let ext = "";
  const dot = path.lastIndexOf(".");
  if (dot !== -1) ext = path.substr(dot + 1).toLowerCase();

  switch (ext) {
    case "dds":
    case "png":
      // TODO: Remove the need to do this in Tw2TextureRes
      // Will need to provide all quality versions of these files in the cdn even if they
      // don't exist as ccpwgl will have no idea if they exist or not, and so we'd get
      // errors when changing texture qualities in the ccpwgl_int.device
      path = path.replace("_lowdetail", ""); // Shouldn't exist

      path = path.replace("_mediumdetail", ""); // Shouldn't exist

      path = path.replace(ext, "0.".concat(ext));
      break;

    case "gr2":
      // TODO: Add support for these files
      // Temporarily use ccpwgl resources (this won't always work but will do for now)
      path = path.replace(ext, "wbg").replace("cdn:", "res:");
      break;

    case "red":
      // TODO: Handle red files
      // There may still be legit .red files some of which we won't be able to read
      // (Some are in .black format so we'll just rename for now...)
      path = path.replace(ext, "black");
      break;

    case "sm_hi":
    case "sm_lo":
      path = path.replace(ext, "fx");
      break;

    case "sm_depth":
      // TODO: Add support for depth shaders
      path = "";
      break;
  }

  return path;
}
/**
 * Reads objects
 * @param {Tw2BlackBinaryReader} reader
 * @param {undefined|Number} [id]
 * @returns {*|Object} out
 */

function object(reader, id) {
  const context = reader.context,
        givenId = id !== undefined,
        debugEnabled = global__WEBPACK_IMPORTED_MODULE_1__["tw2"].constructor.DEBUG_ENABLED;

  if (!givenId) {
    id = reader.ReadU32();

    if (id === 0) {
      return null;
    } else if (reader.references.has(id)) {
      return reader.references.get(id);
    }
  }

  const objectReader = reader.ReadBinaryReader(reader.ReadU32()),
        type = objectReader.ReadStringU16(),
        result = context.ConstructType(type);

  if (!givenId) {
    reader.references.set(id, result);
  }

  if (!global__WEBPACK_IMPORTED_MODULE_1__["tw2"].HasBlack(type)) {
    throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryObjectTypeNotFound"]({
      type
    });
  }

  let properties = global__WEBPACK_IMPORTED_MODULE_1__["tw2"].GetBlack(type);

  while (!objectReader.AtEnd()) {
    let propertyName = objectReader.ReadStringU16();

    if (properties.has(propertyName)) {
      try {
        const reader = properties.get(propertyName);

        if (reader.custom) {
          reader(objectReader, result, propertyName);
        } else {
          // Ensure property is defined on object
          if (!(propertyName in result) && debugEnabled) {
            console.log("'".concat(type, "' missing property: '").concat(propertyName, "'"));
          }

          result[propertyName] = reader(objectReader);
        }
      } catch (err) {
        if (debugEnabled) {
          console.dir(result);
        }

        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryReaderReadError"]({
          message: "".concat(propertyName, " > ") + err.message
        });
      }
    } else {
      if (debugEnabled) {
        console.dir(result);
      }

      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryReaderReadError"]({
        readError: "Unknown property \"".concat(propertyName, "\" for \"").concat(type, "\"")
      });
    }
  }

  objectReader.ExpectEnd("object did not read to end");

  if ("Initialize" in result) {
    result.Initialize();
  }

  return result;
}
/**
 * Reads a rawObject object
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Object} out
 */

function rawObject(reader) {
  return object(reader, null);
}
/**
 * Reads an array
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Array} out
 */

function array(reader) {
  const result = [],
        count = reader.ReadU32();

  for (let i = 0; i < count; i++) {
    result[i] = object(reader);
  }

  return result;
}
/**
 * Reads a boolean
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Boolean}
 */

function boolean(reader) {
  return reader.ReadU8() !== 0;
}
/**
 * Reads a string
 * @param {Tw2BlackBinaryReader} reader
 * @returns {String}
 */

function string(reader) {
  return reader.ReadStringU16();
}
/**
 * Creates an enum object from a string
 * @param {Tw2BlackReader} reader
 * @returns {Object}
 */

function enums(reader) {
  const value = reader.ReadStringU16();
  const entry = value.split(",");
  const out = {};

  for (let i = 0; i < entry.length; i++) {
    const split = entry[i].split("=");
    out[split[0]] = Number(split[1]);
  }

  return out;
}
/**
 * Reads a float
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Number}
 */

function float(reader) {
  return reader.ReadF32();
}
/**
 * Reads a ushort
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Number}
 */

function ushort(reader) {
  return reader.ReadU16();
}
/**
 * Reads a uint
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Number}
 */

function uint(reader) {
  return reader.ReadU32();
}
/**
 * Reads a byte
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Number}
 */

function byte(reader) {
  return reader.ReadU8();
}
/**
 * Reads a vector2
 * @param {Tw2BlackBinaryReader} reader
 * @returns {vec2}
 */

function vector2(reader) {
  return global__WEBPACK_IMPORTED_MODULE_1__["vec2"].fromValues(reader.ReadF32(), reader.ReadF32());
}
/**
 * Reads a vector3
 * @param {Tw2BlackBinaryReader} reader
 * @returns {vec3}
 */

function vector3(reader) {
  return global__WEBPACK_IMPORTED_MODULE_1__["vec3"].fromValues(reader.ReadF32(), reader.ReadF32(), reader.ReadF32());
}
/**
 * Reads a color
 * @param {Tw2BlackBinaryReader} reader
 * @returns {vec4}
 */

function color(reader) {
  return global__WEBPACK_IMPORTED_MODULE_1__["vec4"].fromValues(reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32());
}
/**
 * Reads a vector4
 * @param {Tw2BlackBinaryReader} reader
 * @returns {vec4}
 */

function vector4(reader) {
  return global__WEBPACK_IMPORTED_MODULE_1__["vec4"].fromValues(reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32());
}
/**
 * Reads a matrix with 16 elements
 * @param {Tw2BlackBinaryReader} reader
 * @returns {mat4}
 */

function matrix(reader) {
  return global__WEBPACK_IMPORTED_MODULE_1__["mat4"].fromValues(reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32());
}
/**
 * Reads an index buffer
 * @param {Tw2BlackBinaryReader} reader
 * @returns {Uint32Array}
 */

function indexBuffer(reader) {
  const count = reader.ReadU32(),
        byteSize = reader.ReadU16();

  if (byteSize === 4) {
    return reader.ReadU32Array(count);
  } else {
    throw "unsupported for now";
  }
}
/**
 * Reads a struct
 * @param {*} struct
 * @returns {Function}
 */

function struct(struct) {
  return function (reader) {
    return struct.blackStruct(reader);
  };
}
/**
 * Reads a struct list
 * @param {*} struct
 * @returns {Function}
 */

function structList(struct) {
  return function (reader) {
    let count = reader.ReadU32(),
        byteSize = reader.ReadU16(),
        result = [];

    for (let i = 0; i < count; i++) {
      const structReader = reader.ReadBinaryReader(byteSize);
      result[i] = struct.blackStruct(structReader);
      structReader.ExpectEnd("struct read to end");
    }

    return result;
  };
}
/**
 * Gets a plain object from an array, using the supplied key as the property for each item
 * @param {String|Object} options
 * @param {String} options.key         - The element key to use as a property key
 * @param {?Function} [options.struct] - The optional struct to use (will use array reader by default)
 * @param {?String} [options.reroute]  - The optional property to reroute the results to
 * @returns {function(*=)}
 */

function fromList(options) {
  if (Object(global_util__WEBPACK_IMPORTED_MODULE_3__["isString"])(options)) {
    options = {
      key: options
    };
  }

  const {
    key,
    struct,
    reroute
  } = options;

  const handler = function (reader, parent, property) {
    // Allows rerouting of results to a new target property
    const target = parent[reroute ? reroute : property]; // Target must be a plain object

    if (!Object(global_util__WEBPACK_IMPORTED_MODULE_3__["isPlain"])(target)) {
      throw new Error("Target is not a plain object");
    }

    const result = struct ? structList(struct)(reader) : array(reader);

    for (let i = 0; i < result.length; i++) {
      const item = result[i],
            prop = result[i][key];

      if (prop === undefined) {
        throw new Error("Array element property '".concat(key, "' is undefined"));
      }

      if (prop in target) {
        console.warn("Property '".concat(prop, "' already defined"));
      }

      target[prop] = item;
    }
  };

  handler.custom = true;
  return handler;
}
/**
 * Throws an error when the reader is called
 * @param {Tw2BlackBinaryReader} reader
 * @param {*} target
 * @param {String} property
 */

function notImplemented(reader, target, property) {
  throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrFeatureNotImplemented"]({
    feature: "Black reader for property '".concat(property, "'")
  });
}
notImplemented.custom = true;

/***/ }),

/***/ "./core/reader/Tw2BlackReader.js":
/*!***************************************!*\
  !*** ./core/reader/Tw2BlackReader.js ***!
  \***************************************/
/*! exports provided: Tw2BlackReader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2BlackReader", function() { return Tw2BlackReader; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2BlackBinaryReader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2BlackBinaryReader */ "./core/reader/Tw2BlackBinaryReader.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var _Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2BlackPropertyReaders */ "./core/reader/Tw2BlackPropertyReaders.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! global/util */ "./global/util/index.js");





/**
 * Tw2BlackReader
 * @ccp N/A
 *
 * @author aurora
 * @parameter {DataView} data
 * @parameter {Map} _ids
 * @parameter {String[]} _comments
 * @parameter {Tw2BlackBinaryReader} _reader
 * @parameter {Number} _start
 * @parameter {String[]} _stringTable
 */

class Tw2BlackReader {
  /**
   * Constructor
   * @param {DataView|ArrayBuffer} buffer
   */
  constructor(buffer) {
    this.data = null;
    this._ids = null;
    this._comments = null;
    this._reader = null;
    this._start = 0;
    this._stringTable = null;

    if (buffer) {
      this.data = buffer instanceof ArrayBuffer ? new DataView(buffer) : buffer;
      this.Initialize();
    }
  }
  /**
   * Initializes the reader
   */


  Initialize() {
    // Validate binary
    if (!this.data || !(this.data instanceof DataView)) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryFormat"]({
        formatError: "expected DataView"
      });
    }

    const reader = new _Tw2BlackBinaryReader__WEBPACK_IMPORTED_MODULE_1__["Tw2BlackBinaryReader"](this.data, this);
    if (reader.ReadU32() !== 0xB1ACF11E) throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryFormat"]({
      formatError: "wrong FOURCC"
    });
    if (reader.ReadU32() !== 1) throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryFormat"]({
      formatError: "wrong version"
    }); // String table

    const stringsReader = reader.ReadBinaryReader(reader.ReadU32()),
          stringsCount = stringsReader.ReadU16();
    this._stringTable = [];

    for (let i = 0; i < stringsCount; i++) {
      this._stringTable[i] = stringsReader.ReadCString();
    }

    stringsReader.ExpectEnd(); // Comments

    const commentReader = reader.ReadBinaryReader(reader.ReadU32()),
          commentCount = commentReader.ReadU16();
    this._comments = [];

    for (let i = 0; i < commentCount; i++) {
      this._comments[i] = commentReader.ReadCWString();
    }

    commentReader.ExpectEnd();
    this._ids = new Map();
    this._reader = reader;
    this._start = reader.cursor;
  }
  /**
   * Constructs a new object
   * @returns {*}
   */


  Construct() {
    this._reader.cursor = this._start;
    return Object(_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_3__["object"])(this._reader);
  }
  /**
   * Constructs a type
   * @param type
   * @returns {{_type: *}}
   * @constructor
   */


  ConstructType(type) {
    if (global__WEBPACK_IMPORTED_MODULE_0__["tw2"].HasClass(type)) {
      const Constructor = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetClass(type);
      return new Constructor();
    } else if (Tw2BlackReader.DEBUG_ENABLED) {
      return {
        _type: type
      };
    } else {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryObjectTypeNotFound"]({
        type
      });
    }
  }
  /**
   * Enables debug mode
   * @type {boolean}
   */


}
Tw2BlackReader.DEBUG_ENABLED = true;

/***/ }),

/***/ "./core/reader/Tw2ObjectReader.js":
/*!****************************************!*\
  !*** ./core/reader/Tw2ObjectReader.js ***!
  \****************************************/
/*! exports provided: Tw2ObjectReader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ObjectReader", function() { return Tw2ObjectReader; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2BinaryReader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2BinaryReader */ "./core/reader/Tw2BinaryReader.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");



/**
 * Tw2ObjectReader
 *
 * @property {String} xmlNode
 * @property {?Array} _inputStack
 * @property {?Array} _initializeObjects
 * @property {?Object} _ids
 * @property {Tw2BinaryReader} _reader
 * @property {?Array} _stringTable
 * @property {?Number} _start
 * @class
 */

class Tw2ObjectReader {
  /**
   * Constructor
   * @param {String} xmlNode
   */
  constructor(xmlNode) {
    this.xmlNode = null;
    this._inputStack = null;
    this._initializeObjects = null;
    this._ids = {};
    this._reader = null;
    this._stringTable = null;
    this._start = null;

    if (xmlNode) {
      this.xmlNode = xmlNode;
      if (xmlNode) this.Initialize();
    }
  }
  /**
   * Initializes the object reader
   */


  Initialize() {
    if (!Tw2ObjectReader.IsValidXML(this.xmlNode)) {
      throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryFormat"]({
        formatError: "Invalid binary, expected binred"
      });
    }

    this._reader = new _Tw2BinaryReader__WEBPACK_IMPORTED_MODULE_1__["Tw2BinaryReader"](new Uint8Array(this.xmlNode));
    this._reader.cursor += 6;
    this._stringTable = [];

    const count = this._reader.ReadUInt32();

    for (let i = 0; i < count; ++i) {
      const len = this._reader.ReadUInt16();

      this._stringTable.push(String.fromCharCode.apply(null, this._reader.data.subarray(this._reader.cursor, this._reader.cursor + len)));

      this._reader.cursor += len;
    }

    this._start = this._reader.cursor;
  }
  /**
   * Constructs the loaded xml
   * @returns {*}
   */


  Construct() {
    this._reader.cursor = this._start;
    return Tw2ObjectReader.ReadElement(this);
  }
  /**
   * Checks that the passed xml is valid
   * @param {*} xmlNode
   * @returns {Boolean}
   */


  static IsValidXML(xmlNode) {
    return xmlNode && String.fromCharCode.apply(null, new Uint8Array(xmlNode).subarray(0, 6)) === "binred";
  }
  /**
   * Constructs an object
   * @param {*} data
   * @returns {*}
   */


  static ConstructObject(data) {
    if (data.type === "json") {
      return data;
    }

    let Constructor;

    if (!global__WEBPACK_IMPORTED_MODULE_0__["tw2"].HasClass(data.type)) {
      if (Tw2ObjectReader.DEBUG_ENABLED) {
        Constructor = Object;
      } else {
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrBinaryObjectTypeNotFound"]({
          type: data.type
        });
      }
    } else {
      Constructor = global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetClass(data.type);
    }

    const object = new Constructor();

    for (let k in data) {
      if (data.hasOwnProperty(k) && k !== "type") {
        if (data[k].constructor === Object) {
          if (this.DEBUG_ENABLED) {
            object[k] = object[k] || {};
          }

          if (object[k]) {
            for (let key in data[k]) {
              if (data[k].hasOwnProperty(key)) {
                object[k][key] = data[k][key];
              }
            }
          }
        } else {
          object[k] = data[k];
        }
      }
    }

    if ("Initialize" in object) {
      object.Initialize();
    }

    return object;
  }
  /**
   * Reads a Uint
   * @param {Tw2ObjectReader} objReader
   * @param {Number} type
   * @returns {*}
   */


  static ReadUint(objReader, type) {
    switch (type & 0x30) {
      case this.ElementSize.SMALL:
        return objReader._reader.ReadUInt8();

      case this.ElementSize.MEDIUM:
        return objReader._reader.ReadUInt16();

      default:
        return objReader._reader.ReadUInt32();
    }
  }
  /**
   * Reads element data
   * @param {Tw2ObjectReader} objReader
   * @param {Number} type
   * @returns {*}
   */


  static ReadElementData(objReader, type) {
    let offset, i, result, count, elementType;

    switch (type & 0xf) {
      case this.ElementRawType.NULL:
        return null;

      case this.ElementRawType.BOOL:
        switch (type & 0x30) {
          case this.ElementSize.SMALL:
            return objReader._reader.ReadUInt8() !== 0;

          case this.ElementSize.MEDIUM:
            return false;

          default:
            return true;
        }

      case this.ElementRawType.INT:
        switch (type & 0x30) {
          case this.ElementSize.SMALL:
            return objReader._reader.ReadInt8();

          case this.ElementSize.MEDIUM:
            return objReader._reader.ReadInt16();

          default:
            return objReader._reader.ReadInt32();
        }

      case this.ElementRawType.UINT:
        return this.ReadUint(objReader, type);

      case this.ElementRawType.FLOAT:
        switch (type & 0x30) {
          case this.ElementSize.SMALL:
            return objReader._reader.ReadFloat16();

          case this.ElementSize.MEDIUM:
            return objReader._reader.ReadFloat32();

          default:
            throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrFeatureNotImplemented"]({
              feature: "Element raw type Float64"
            });
        }

      case this.ElementRawType.STRING:
        offset = this.ReadUint(objReader, type);
        return objReader._stringTable[offset];

      case this.ElementRawType.ARRAY:
        count = this.ReadUint(objReader, type);
        result = [];

        for (i = 0; i < count; ++i) {
          result.push(this.ReadElement(objReader));
        }

        return result;

      case this.ElementRawType.MAPPING:
        count = this.ReadUint(objReader, type);
        result = {};

        for (i = 0; i < count; ++i) {
          result[objReader._stringTable[this.ReadUint(objReader, type)]] = this.ReadElement(objReader);
        }

        return result;

      case this.ElementRawType.OBJECT:
        count = this.ReadUint(objReader, type);
        result = {};

        for (i = 0; i < count; ++i) {
          result[objReader._stringTable[this.ReadUint(objReader, type)]] = this.ReadElement(objReader);
        }

        return this.ConstructObject(result);

      case this.ElementRawType.TYPED_ARRAY:
        count = this.ReadUint(objReader, type);
        elementType = objReader._reader.ReadUInt8();
        result = [];

        for (i = 0; i < count; ++i) {
          result.push(this.ReadElementData(objReader, elementType));
        }

        if (elementType in this.TypedArrays) {
          result = new this.TypedArrays[elementType](result);
        }

        return result;

      case this.ElementRawType.TYPED_MAPPING:
        count = this.ReadUint(objReader, type);
        elementType = objReader._reader.ReadUInt8();
        result = {};

        for (i = 0; i < count; ++i) {
          result[objReader._stringTable[this.ReadUint(objReader, type)]] = this.ReadElementData(objReader, elementType);
        }

        return result;
    }
  }
  /**
   * Reads an element
   * @property {Tw2ObjectReader} objReader
   * @returns {*}
   */


  static ReadElement(objReader) {
    const type = objReader._reader.ReadUInt8();

    if (type === this.REFERENCE_BIT) {
      return objReader._ids[objReader._reader.ReadUInt16()];
    }

    let id;

    if ((type & this.ID_BIT) !== 0) {
      id = objReader._reader.ReadUInt16();
    }

    const result = this.ReadElementData(objReader, type & 0x3F);

    if ((type & this.ID_BIT) !== 0) {
      objReader._ids[id] = result;
    }

    return result;
  }
  /**
   * Enables debug mode
   * @type {Boolean}
   */


}
Tw2ObjectReader.DEBUG_ENABLED = false;
Tw2ObjectReader.ID_BIT = 1 << 6;
Tw2ObjectReader.REFERENCE_BIT = 1 << 7;
Tw2ObjectReader.ElementRawType = {
  "NULL": 0,
  "BOOL": 1,
  "INT": 2,
  "UINT": 3,
  "FLOAT": 4,
  "STRING": 5,
  "ARRAY": 6,
  "MAPPING": 7,
  "OBJECT": 8,
  "TYPED_ARRAY": 9,
  "TYPED_MAPPING": 10
};
Tw2ObjectReader.ElementSize = {
  "SMALL": 0,
  "MEDIUM": 1 << 4,
  "LARGE": 2 << 4
};
Tw2ObjectReader.TypedArrays = {
  2: Int8Array,
  3: Uint8Array,
  18: Int16Array,
  19: Uint16Array,
  34: Int32Array,
  35: Uint32Array,
  4: Float32Array,
  20: Float32Array,
  36: Float64Array
};
const Raw = Tw2ObjectReader.ElementRawType,
      Size = Tw2ObjectReader.ElementSize;
/**
 * Element types
 * @type {{}}
 */

Tw2ObjectReader.ElementTypes = {
  "NULL": Raw.NULL | Size.SMALL,
  "BOOL": Raw.BOOL | Size.SMALL,
  "FALSE": Raw.BOOL | Size.MEDIUM,
  "TRUE": Raw.BOOL | Size.LARGE,
  "INT8": Raw.INT | Size.SMALL,
  "UINT8": Raw.UINT | Size.SMALL,
  "INT16": Raw.INT | Size.MEDIUM,
  "UINT16": Raw.UINT | Size.MEDIUM,
  "INT32": Raw.INT | Size.LARGE,
  "UINT32": Raw.UINT | Size.LARGE,
  "FLOAT16": Raw.FLOAT | Size.SMALL,
  "FLOAT32": Raw.FLOAT | Size.MEDIUM,
  "FLOAT64": Raw.FLOAT | Size.LARGE,
  "SHORT_STRING": Raw.STRING | Size.SMALL,
  "MEDIUM_STRING": Raw.STRING | Size.MEDIUM,
  "LARGE_STRING": Raw.STRING | Size.LARGE,
  "SHORT_ARRAY": Raw.ARRAY | Size.SMALL,
  "MEDIUM_ARRAY": Raw.ARRAY | Size.MEDIUM,
  "LARGE_ARRAY": Raw.ARRAY | Size.LARGE,
  "SHORT_MAPPING": Raw.MAPPING | Size.SMALL,
  "MEDIUM_MAPPING": Raw.MAPPING | Size.MEDIUM,
  "LARGE_MAPPING": Raw.MAPPING | Size.LARGE,
  "SHORT_OBJECT": Raw.OBJECT | Size.SMALL,
  "MEDIUM_OBJECT": Raw.OBJECT | Size.MEDIUM,
  "LARGE_OBJECT": Raw.OBJECT | Size.LARGE,
  "SHORT_TYPED_ARRAY": Raw.TYPED_ARRAY | Size.SMALL,
  "MEDIUM_TYPED_ARRAY": Raw.TYPED_ARRAY | Size.MEDIUM,
  "LARGE_TYPED_ARRAY": Raw.TYPED_ARRAY | Size.LARGE,
  "SHORT_TYPED_MAPPING": Raw.TYPED_MAPPING | Size.SMALL,
  "MEDIUM_TYPED_MAPPING": Raw.TYPED_MAPPING | Size.MEDIUM,
  "LARGE_TYPED_MAPPING": Raw.TYPED_MAPPING | Size.LARGE
};

/***/ }),

/***/ "./core/reader/index.js":
/*!******************************!*\
  !*** ./core/reader/index.js ***!
  \******************************/
/*! exports provided: Tw2BinaryReader, Tw2BlackReader, Tw2ObjectReader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2BinaryReader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2BinaryReader */ "./core/reader/Tw2BinaryReader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BinaryReader", function() { return _Tw2BinaryReader__WEBPACK_IMPORTED_MODULE_0__["Tw2BinaryReader"]; });

/* harmony import */ var _Tw2BlackReader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2BlackReader */ "./core/reader/Tw2BlackReader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BlackReader", function() { return _Tw2BlackReader__WEBPACK_IMPORTED_MODULE_1__["Tw2BlackReader"]; });

/* harmony import */ var _Tw2ObjectReader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2ObjectReader */ "./core/reader/Tw2ObjectReader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ObjectReader", function() { return _Tw2ObjectReader__WEBPACK_IMPORTED_MODULE_2__["Tw2ObjectReader"]; });





/***/ }),

/***/ "./core/resource/Tw2EffectRes.js":
/*!***************************************!*\
  !*** ./core/resource/Tw2EffectRes.js ***!
  \***************************************/
/*! exports provided: Tw2EffectRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2EffectRes", function() { return Tw2EffectRes; });
/* harmony import */ var _reader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../reader */ "./core/reader/index.js");
/* harmony import */ var _Tw2Resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2Resource */ "./core/resource/Tw2Resource.js");
/* harmony import */ var _Tw2Shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2Shader */ "./core/resource/Tw2Shader.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");




/**
 * Tw2EffectRes
 *
 * @property {Array} passes
 * @property {*} annotation
 * @property {Array} permutations
 * @property {Array} offsets
 * @property {*} reader
 * @property {Number} version
 * @property {String} stringTable
 * @property {*} shaders
 * @inherits Tw2Resource
 */

class Tw2EffectRes extends _Tw2Resource__WEBPACK_IMPORTED_MODULE_1__["Tw2Resource"] {
  constructor(...args) {
    super(...args);
    this.passes = [];
    this.annotations = {};
    this.permutations = [];
    this.offsets = [];
    this.reader = null;
    this.version = 0;
    this.stringTable = "";
    this.shaders = {};
  }

  /**
   * Prepares the effect
   * - Creates Shaders
   * - Sets shadow states for shaders
   * - Parses Jessica shader annotations
   * @param data
   */
  Prepare(data) {
    this.permutations = [];
    this.offsets = [];
    this.passes = [];
    this.annotations = {};
    this.reader = null;
    this.version = 0;
    this.stringTable = "";
    this.shaders = {};
    const reader = new _reader__WEBPACK_IMPORTED_MODULE_0__["Tw2BinaryReader"](new Uint8Array(data));
    let stringTable = "";
    /**
     * ReadString
     * @returns {String}
     * @private
     */

    function ReadString() {
      const offset = reader.ReadUInt32();
      let end = offset;

      while (stringTable.charCodeAt(end)) {
        ++end;
      }

      return stringTable.substr(offset, end - offset);
    }

    const version = reader.ReadUInt32();

    if (version < 2 || version > 8) {
      this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrShaderVersion"]({
        path: this.path,
        version
      }));
      return;
    }

    let headerSize, stringTableSize;

    if (version < 5) {
      headerSize = reader.ReadUInt32();

      if (headerSize === 0) {
        this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrShaderHeaderSize"]({
          path: this.path
        }));
        return;
      }
      /* let permutation = */


      reader.ReadUInt32();
      const offset = reader.ReadUInt32();
      reader.cursor = 2 * 4 + headerSize * 3 * 4;
      stringTableSize = reader.ReadUInt32();
      this.stringTableOffset = reader.cursor;
      stringTable = String.fromCharCode.apply(null, reader.data.subarray(reader.cursor, reader.cursor + stringTableSize));
      reader.cursor = offset;
    } else {
      stringTableSize = reader.ReadUInt32();
      this.stringTableOffset = reader.cursor;
      stringTable = String.fromCharCode.apply(null, reader.data.subarray(reader.cursor, reader.cursor + stringTableSize));
      reader.cursor += stringTableSize;
      const permutationCount = reader.ReadUInt8();

      for (let perm = 0; perm < permutationCount; ++perm) {
        let permutation = {
          name: ReadString(),
          defaultOption: reader.ReadUInt8(),
          description: ReadString(),
          type: reader.ReadUInt8(),
          options: {},
          optionCount: reader.ReadUInt8()
        };

        for (let j = 0; j < permutation.optionCount; ++j) {
          permutation.options[ReadString()] = j;
        }

        this.permutations.push(permutation);
      }

      headerSize = reader.ReadUInt32();

      if (headerSize === 0) {
        this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrShaderHeaderSize"]({
          path: this.path
        }));
        return;
      }

      for (let i = 0; i < headerSize; ++i) {
        this.offsets.push({
          index: reader.ReadUInt32(),
          offset: reader.ReadUInt32(),
          size: reader.ReadUInt32()
        });
      }

      reader.ReadUInt32();
      reader.cursor = reader.ReadUInt32();
    }

    this.reader = reader;
    this.version = version;
    this.stringTable = stringTable;
    this.OnPrepared();
  }
  /**
   * Gets/creates a shader for the given permutation options
   *
   * @param {Object.<string, string>} options - Permutation options
   * @returns {Tw2Shader|null}
   */


  GetShader(options) {
    if (!this.IsGood()) {
      return null;
    }

    let index = 0;
    let multiplier = 1;

    for (let i = 0; i < this.permutations.length; ++i) {
      let permutation = this.permutations[i];
      let value = permutation.defaultOption;

      if (options.hasOwnProperty(permutation.name)) {
        let valueName = options[permutation.name];

        if (!permutation.options.hasOwnProperty(valueName)) {
          this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrShaderPermutationValue"]({
            path: this.path,
            permutation: permutation.name,
            valueName: valueName
          }));
          return null;
        }

        value = permutation.options[valueName];
      }

      index += value * multiplier;
      multiplier *= permutation.optionCount;
    }

    if (this.shaders.hasOwnProperty(index)) {
      return this.shaders[index];
    }

    this.reader.cursor = this.offsets[index].offset;
    let shader = null;

    try {
      shader = new _Tw2Shader__WEBPACK_IMPORTED_MODULE_2__["Tw2Shader"](this.reader, this.version, this.stringTable, this.stringTableOffset, this.path);
    } catch (error) {
      this.OnError(error);
      return null;
    }

    this.shaders[index] = shader;
    return shader;
  }

}
/**
 * Request Response Type
 * @type {String}
 */

Tw2EffectRes.prototype.requestResponseType = "arraybuffer";

/***/ }),

/***/ "./core/resource/Tw2GeometryRes.js":
/*!*****************************************!*\
  !*** ./core/resource/Tw2GeometryRes.js ***!
  \*****************************************/
/*! exports provided: Tw2GeometryRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryRes", function() { return Tw2GeometryRes; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _reader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../reader */ "./core/reader/index.js");
/* harmony import */ var _vertex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vertex */ "./core/vertex/index.js");
/* harmony import */ var _Tw2Resource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2Resource */ "./core/resource/Tw2Resource.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../geometry */ "./core/geometry/index.js");






/**
 * Tw2GeometryRes
 *
 * @property {Array} meshes
 * @property {vec3} minBounds
 * @property {vec3} maxBounds
 * @property {vec3} boundsSpherePosition
 * @property {Number} boundsSphereRadius
 * @property {Array} models
 * @property {Array} animations
 * @property {Boolean} systemMirror
 * @inherit Tw2Resource
 */

class Tw2GeometryRes extends _Tw2Resource__WEBPACK_IMPORTED_MODULE_3__["Tw2Resource"] {
  constructor(...args) {
    super(...args);
    this.meshes = [];
    this.minBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 0);
    this.maxBounds = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 0);
    this.boundsSpherePosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundsSphereRadius = 0;
    this.models = [];
    this.animations = [];
    this.systemMirror = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].systemMirror;
  }

  /**
   * Gets the object's bounding box
   * @param {box3} out
   * @param {mat4} [parentTransform]
   * @returns {Boolean} True if bounds are valid
   */
  GetBoundingBox(out, parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].fromBounds(out, this.minBounds, this.maxBounds);
    if (parentTransform) global__WEBPACK_IMPORTED_MODULE_0__["box3"].transformMat4(out, out, parentTransform);
    return true;
  }
  /**
   * Gets the object's bounding sphere
   * @param {sph3} out
   * @param {mat4} [parentTransform]
   * @returns {Boolean} True if bounds are valid
   */


  GetBoundingSphere(out, parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["sph3"].fromPositionRadius(out, this.boundsSpherePosition, this.boundsSphereRadius);
    if (parentTransform) global__WEBPACK_IMPORTED_MODULE_0__["sph3"].transformMat4(out, out, parentTransform);
    return true;
  }
  /**
   * Rebuilds bounds
   * @returns {Boolean} [fromVertex]
   */


  RebuildBounds(fromVertex) {
    const min = this.minBounds,
          max = this.maxBounds;
    global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.empty(min, max);

    for (let i = 0; i < this.meshes.length; i++) {
      const mesh = this.meshes[i];
      mesh.RebuildBounds(fromVertex);
      global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.union(min, max, min, max, mesh.minBounds, mesh.maxBounds);
    }

    this.boundsSphereRadius = global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.toPositionRadius(min, max, this.boundsSpherePosition);
  }
  /**
   * GetInstanceBuffer
   * @param {Number} meshIndex
   * @returns {*}
   */


  GetInstanceBuffer(meshIndex) {
    return meshIndex < this.meshes.length ? this.meshes[meshIndex].buffer : undefined;
  }
  /**
   * GetInstanceDeclaration
   * @param {Number} meshIndex
   * @returns {Tw2VertexDeclaration}
   */


  GetInstanceDeclaration(meshIndex) {
    return this.meshes[meshIndex].declaration;
  }
  /**
   * GetInstanceStride
   * @param {Number} meshIndex
   * @returns {Number}
   */


  GetInstanceStride(meshIndex) {
    return this.meshes[meshIndex].declaration.stride;
  }
  /**
   * GetInstanceCount
   * @param {Number} meshIndex
   * @returns {Number}
   */


  GetInstanceCount(meshIndex) {
    return this.meshes[meshIndex].bufferLength * 4 / this.meshes[meshIndex].declaration.stride;
  }
  /**
   * Prepare
   * @param data
   */


  Prepare(data) {
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl,
          reader = new _reader__WEBPACK_IMPORTED_MODULE_1__["Tw2BinaryReader"](new Uint8Array(data));
    /* let fileVersion = */

    reader.ReadUInt8();
    const meshCount = reader.ReadUInt8();

    for (let meshIx = 0; meshIx < meshCount; ++meshIx) {
      const mesh = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryMesh"]();
      mesh.name = reader.ReadString();
      const buffer = Tw2GeometryRes.ReadVertexBuffer(reader, mesh.declaration, this.path);

      if (buffer) {
        mesh.bufferLength = buffer.length;
        mesh.buffer = gl.createBuffer();
        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.buffer);
        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);
      } else {
        mesh.buffer = null;
      }

      const indexes = Tw2GeometryRes.ReadIndexBuffer(reader);

      if (indexes) {
        mesh.indexes = gl.createBuffer();
        mesh.indexType = indexes.BYTES_PER_ELEMENT === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;
        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.indexes);
        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexes, gl.STATIC_DRAW);
      } else {
        mesh.indexes = null;
      }

      const areaCount = reader.ReadUInt8();

      for (let i = 0; i < areaCount; ++i) {
        const area = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryMeshArea"]();
        mesh.areas.push(area);
        area.name = reader.ReadString();
        area.start = reader.ReadUInt32() * indexes.BYTES_PER_ELEMENT;
        area.count = reader.ReadUInt32() * 3;
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(area.minBounds, reader.ReadFloat32(), reader.ReadFloat32(), reader.ReadFloat32());
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(area.maxBounds, reader.ReadFloat32(), reader.ReadFloat32(), reader.ReadFloat32());
        area.boundsSphereRadius = global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.toPositionRadius(area.minBounds, area.maxBounds, area.boundsSpherePosition); // Recalculate bounds if missing

        if (global__WEBPACK_IMPORTED_MODULE_0__["box3"].bounds.isEmpty(area.minBounds, area.maxBounds)) {
          if (!mesh.RebuildAreaBounds(area, buffer, indexes, true)) {
            console.log("Could not generate bounds for area: " + area.name || false);
          }
        }
      }

      const boneBindingCount = reader.ReadUInt8();
      mesh.boneBindings = [];

      for (let i = 0; i < boneBindingCount; ++i) {
        mesh.boneBindings[i] = reader.ReadString();
      }

      const annotationSetCount = reader.ReadUInt16();

      if (annotationSetCount || this.systemMirror) {
        mesh.bufferData = buffer;
        mesh.indexData = indexes;
      }

      if (annotationSetCount) {
        mesh.blendShapes = [];

        for (let i = 0; i < annotationSetCount; ++i) {
          mesh.blendShapes[i] = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2BlendShapeData"]();
          mesh.blendShapes[i].name = reader.ReadString();
          mesh.blendShapes[i].buffer = Tw2GeometryRes.ReadVertexBuffer(reader, mesh.blendShapes[i].declaration, this.path);
          mesh.blendShapes[i].indexes = Tw2GeometryRes.ReadIndexBuffer(reader);
        }
      }

      mesh._areas = areaCount;
      mesh._faces = indexes.length / 3;
      mesh._vertices = buffer.length / (mesh.declaration.stride / 4);
      /*
        // Reduce memory footprint of vertices
        const stride = mesh.declaration.stride / 4;
      const vertCount = buffer.length / stride;
      const position = mesh.declaration.FindUsage(0, 0);
        mesh._vertices = new Float32Array(vertCount * 3);
      for (let i = 0; i < mesh._vertices.length; i+=3)
      {
          const index = i * stride + position.offset;
          for (let x = 0; x < 3; x ++)
          {
              mesh._vertices[i + x] = buffer[index + x];
          }
      }
        */

      this.meshes[meshIx] = mesh;
    } // Rebuilds all bounds


    this.RebuildBounds();
    const modelCount = reader.ReadUInt8();

    for (let modelIx = 0; modelIx < modelCount; ++modelIx) {
      const model = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryModel"]();
      model.name = reader.ReadString();
      model.skeleton = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometrySkeleton"]();
      const boneCount = reader.ReadUInt8();

      for (let i = 0; i < boneCount; ++i) {
        const bone = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryBone"]();
        bone.name = reader.ReadString();
        const flags = reader.ReadUInt8();
        bone.parentIndex = reader.ReadUInt8();
        if (bone.parentIndex === 255) bone.parentIndex = -1;

        if ((flags & 1) !== 0) {
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(bone.position, reader.ReadFloat32(), reader.ReadFloat32(), reader.ReadFloat32());
        } else {
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(bone.position, 0, 0, 0);
        }

        if ((flags & 2) !== 0) {
          global__WEBPACK_IMPORTED_MODULE_0__["quat"].set(bone.orientation, reader.ReadFloat32(), reader.ReadFloat32(), reader.ReadFloat32(), reader.ReadFloat32());
        } else {
          global__WEBPACK_IMPORTED_MODULE_0__["quat"].identity(bone.orientation);
        }

        if ((flags & 4) !== 0) {
          for (let k = 0; k < 9; ++k) {
            bone.scaleShear[k] = reader.ReadFloat32();
          }
        } else {
          global__WEBPACK_IMPORTED_MODULE_0__["mat3"].identity(bone.scaleShear);
        }

        model.skeleton.bones[i] = bone;
      }

      for (let i = 0; i < model.skeleton.bones.length; ++i) {
        model.skeleton.bones[i].UpdateTransform();

        if (model.skeleton.bones[i].parentIndex !== -1) {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(model.skeleton.bones[i].worldTransform, model.skeleton.bones[model.skeleton.bones[i].parentIndex].worldTransform, model.skeleton.bones[i].localTransform);
        } else {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(model.skeleton.bones[i].worldTransform, model.skeleton.bones[i].localTransform);
        }

        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(model.skeleton.bones[i].worldTransformInv, model.skeleton.bones[i].worldTransform);
      }

      const meshBindingCount = reader.ReadUInt8();

      for (let i = 0; i < meshBindingCount; ++i) {
        const mesh = reader.ReadUInt8();

        if (mesh < this.meshes.length) {
          Tw2GeometryRes.BindMeshToModel(this.meshes[mesh], model, this);
        }
      }

      this.models[this.models.length] = model;
    }

    const animationCount = reader.ReadUInt8();

    for (let i = 0; i < animationCount; ++i) {
      const animation = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryAnimation"]();
      animation.name = reader.ReadString();
      animation.duration = reader.ReadFloat32();
      const groupCount = reader.ReadUInt8();

      for (let j = 0; j < groupCount; ++j) {
        const group = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryTrackGroup"]();
        group.name = reader.ReadString();

        for (let m = 0; m < this.models.length; ++m) {
          if (this.models[m].name === group.name) {
            group.model = this.models[m];
            break;
          }
        }

        const transformTrackCount = reader.ReadUInt8();

        for (let k = 0; k < transformTrackCount; ++k) {
          const track = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryTransformTrack"]();
          track.name = reader.ReadString();
          track.orientation = Tw2GeometryRes.ReadCurve(reader);
          track.position = Tw2GeometryRes.ReadCurve(reader);
          track.scaleShear = Tw2GeometryRes.ReadCurve(reader);

          if (track.orientation) {
            let lastX = 0;
            let lastY = 0;
            let lastZ = 0;
            let lastW = 0;

            for (let n = 0; n < track.orientation.controls.length; n += 4) {
              let x = track.orientation.controls[n];
              let y = track.orientation.controls[n + 1];
              let z = track.orientation.controls[n + 2];
              let w = track.orientation.controls[n + 3];

              if (lastX * x + lastY * y + lastZ * z + lastW * w < 0) {
                track.orientation.controls[n] = -x;
                track.orientation.controls[n + 1] = -y;
                track.orientation.controls[n + 2] = -z;
                track.orientation.controls[n + 3] = -w;
              }

              lastX = x;
              lastY = y;
              lastZ = z;
              lastW = w;
            }
          }

          group.transformTracks[group.transformTracks.length] = track;
        }

        animation.trackGroups[animation.trackGroups.length] = group;
      }

      this.animations[this.animations.length] = animation;
    }

    this.OnPrepared();
  }
  /**
   * BindMeshToModel
   * @param {Tw2GeometryMesh} mesh
   * @param {Tw2GeometryModel} model
   * @param {Tw2GeometryRes} res
   */


  static BindMeshToModel(mesh, model, res) {
    const binding = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryMeshBinding"]();
    binding.mesh = mesh;

    for (let b = 0; b < binding.mesh.boneBindings.length; ++b) {
      const name = binding.mesh.boneBindings[b],
            bone = model.FindBoneByName(name);

      if (!bone) {
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrGeometryMeshBoneNameInvalid"]({
          path: res.path,
          mesh: binding.mesh.name,
          bone: name,
          model: model.name
        });
      } else {
        binding.bones[binding.bones.length] = bone;
      }
    }

    model.meshBindings[model.meshBindings.length] = binding;
  }
  /**
   * RenderAreasInstanced
   * @param {Number} meshIx
   * @param {Number} start
   * @param {Number} count
   * @param {Tw2Effect} effect
   * @param {String} technique
   * @param instanceVB
   * @param instanceDecl
   * @param instanceStride
   * @param instanceCount
   * @returns {Boolean}
   */


  RenderAreasInstanced(meshIx, start, count, effect, technique, instanceVB, instanceDecl, instanceStride, instanceCount) {
    this.KeepAlive();
    if (!this.IsGood() || !effect.IsGood() || meshIx >= this.meshes.length) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          mesh = this.meshes[meshIx],
          passCount = effect.GetPassCount(technique);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.indexes);

    for (let pass = 0; pass < passCount; ++pass) {
      effect.ApplyPass(technique, pass);
      const passInput = effect.GetPassInput(technique, pass);
      if (passInput.elements.length === 0) continue;
      gl.bindBuffer(gl.ARRAY_BUFFER, mesh.buffer);
      mesh.declaration.SetPartialDeclaration(d, passInput, mesh.declaration.stride);
      gl.bindBuffer(gl.ARRAY_BUFFER, instanceVB);
      const resetData = instanceDecl.SetPartialDeclaration(d, passInput, instanceStride, 8, 1);
      d.ApplyShadowState();

      for (let i = 0; i < count; ++i) {
        if (i + start < mesh.areas.length) {
          let area = mesh.areas[i + start],
              areaStart = area.start,
              areaCount = area.count;

          while (i + 1 < count) {
            area = mesh.areas[i + 1 + start];

            if (!area) {
              this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrGeometryMeshAreaMissing"]({
                path: this.path,
                areaIndex: i + 1 + start
              }));
              return false;
            }

            if (area.start !== areaStart + areaCount * 2) break;
            areaCount += area.count;
            ++i;
          }

          gl.drawElementsInstanced(gl.TRIANGLES, areaCount, mesh.indexType, areaStart, instanceCount);
        }
      }

      instanceDecl.ResetInstanceDivisors(d, resetData);
    }

    return true;
  }
  /**
   * RenderAreas
   * @param {Number} meshIx
   * @param {Number} start
   * @param {Number} count
   * @param {Tw2Effect} effect
   * @param {String} technique
   * @returns {Boolean}
   */


  RenderAreas(meshIx, start, count, effect, technique) {
    this.KeepAlive();
    if (!this.IsGood() || !effect.IsGood() || meshIx >= this.meshes.length) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          mesh = this.meshes[meshIx] || this.meshes[0],
          passCount = effect.GetPassCount(technique);
    gl.bindBuffer(gl.ARRAY_BUFFER, mesh.buffer);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.indexes);

    for (let pass = 0; pass < passCount; ++pass) {
      effect.ApplyPass(technique, pass);
      const passInput = effect.GetPassInput(technique, pass);

      if (!mesh.declaration.SetDeclaration(d, passInput, mesh.declaration.stride)) {
        this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrGeometryMeshEffectBinding"]({
          path: this.path,
          pass: pass,
          passInput: passInput,
          meshStride: mesh.declaration.stride
        }));
        return false;
      }

      d.ApplyShadowState();

      for (let i = 0; i < count; ++i) {
        if (i + start < mesh.areas.length) {
          let area = mesh.areas[i + start],
              areaStart = area.start,
              areaCount = area.count;

          while (i + 1 < count) {
            area = mesh.areas[i + 1 + start];

            if (!area) {
              this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrGeometryMeshAreaMissing"]({
                path: this.path,
                areaIndex: i + 1 + start
              }));
              return false;
            }

            if (area.start !== areaStart + areaCount * 2) break;
            areaCount += area.count;
            ++i;
          }

          gl.drawElements(gl.TRIANGLES, areaCount, mesh.indexType, areaStart);
        }
      }
    }

    return true;
  }
  /**
   * RenderLines
   * @param {Number} meshIx
   * @param {Number} start
   * @param {Number} count
   * @param {Tw2Effect} effect
   * @param {String} technique
   * @returns {Boolean}
   */


  RenderLines(meshIx, start, count, effect, technique) {
    this.KeepAlive();
    if (!this.IsGood() || !effect.IsGood() || meshIx >= this.meshes.length) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          mesh = this.meshes[meshIx],
          passCount = effect.GetPassCount(technique);
    gl.bindBuffer(gl.ARRAY_BUFFER, mesh.buffer);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.indexes);

    for (let pass = 0; pass < passCount; ++pass) {
      effect.ApplyPass(technique, pass);
      const passInput = effect.GetPassInput(technique, pass);

      if (!mesh.declaration.SetDeclaration(d, passInput, mesh.declaration.stride)) {
        this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrGeometryMeshEffectBinding"]({
          path: this.path,
          pass: pass,
          passInput: passInput,
          meshStride: mesh.declaration.stride
        }));
        return false;
      }

      d.ApplyShadowState();

      for (let i = 0; i < count; ++i) {
        if (i + start < mesh.areas.length) {
          let area = mesh.areas[i + start],
              areaStart = area.start,
              areaCount = area.count;

          while (i + 1 < count) {
            area = mesh.areas[i + 1 + start];

            if (!area) {
              this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrGeometryMeshAreaMissing"]({
                path: this.path,
                areaIndex: i + 1 + start
              }));
              return false;
            }

            if (area.start !== areaStart + areaCount * 2) break;
            areaCount += area.count;
            ++i;
          }

          gl.drawElements(gl.LINES, areaCount, mesh.indexType, areaStart);
        }
      }
    }

    return true;
  }
  /**
   * RenderDebugInfo
   * @param {function} debugHelper
   * @returns {Boolean}
   */


  RenderDebugInfo(debugHelper) {
    if (!this.IsGood()) return false;

    for (let i = 0; i < this.models.length; ++i) {
      if (this.models[i].skeleton) {
        for (let j = 0; j < this.models[i].skeleton.bones.length; ++j) {
          const b0 = this.models[i].skeleton.bones[j];

          if (b0.parentIndex >= 0) {
            const b1 = this.models[i].skeleton.bones[b0.parentIndex];
            debugHelper["AddLine"]([b0.worldTransform[12], b0.worldTransform[13], b0.worldTransform[14]], [b1.worldTransform[12], b1.worldTransform[13], b1.worldTransform[14]], [0, 0.7, 0, 1], [0, 0.7, 0, 1]);
          }
        }
      }
    }
  }
  /**
   * Unloads webgl and javascript resources
   * @param {eventLog} eventLog
   * @returns {Boolean}
   */


  Unload(eventLog) {
    for (let i = 0; i < this.meshes.length; ++i) {
      const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;

      if (this.meshes[i].buffer) {
        gl.deleteBuffer(this.meshes[i].buffer);
        this.meshes[i].buffer = null;
      }

      if (this.meshes[i].indexes) {
        gl.deleteBuffer(this.meshes[i].indexes);
        this.meshes[i].indexes = null;
      }
    }

    this.OnUnloaded(eventLog);
    return true;
  }
  /**
   * ReadVertexBuffer
   * @param {Tw2BinaryReader} reader
   * @param {Tw2VertexDeclaration} declaration
   * @param {String} path
   * @returns {?Float32Array}
   */


  static ReadVertexBuffer(reader, declaration, path) {
    const declCount = reader.ReadUInt8();
    let vertexSize = 0;

    for (let declIx = 0; declIx < declCount; ++declIx) {
      let element = new _vertex__WEBPACK_IMPORTED_MODULE_2__["Tw2VertexElement"]();
      element.usage = reader.ReadUInt8();
      element.usageIndex = reader.ReadUInt8();
      element.fileType = reader.ReadUInt8();
      element.type = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.FLOAT;
      element.elements = (element.fileType >> 5) + 1;
      element.offset = vertexSize * 4;
      declaration.elements[declIx] = element;
      vertexSize += element.elements;
    }

    declaration.RebuildHash();
    declaration.stride = vertexSize * 4;
    const vertexCount = reader.ReadUInt32();
    if (vertexCount === 0) return null;
    const buffer = new Float32Array(vertexSize * vertexCount);
    let index = 0;

    for (let vtxIx = 0; vtxIx < vertexCount; ++vtxIx) {
      for (let declIx = 0; declIx < declCount; ++declIx) {
        let el = declaration.elements[declIx];

        switch (el.fileType & 0xf) {
          case 0:
            if ((el.fileType & 0x10) !== 0) {
              for (let i = 0; i < el.elements; ++i) {
                buffer[index++] = reader.ReadInt8() / 127.0;
              }
            } else {
              for (let i = 0; i < el.elements; ++i) {
                buffer[index++] = reader.ReadInt8();
              }
            }

            break;

          case 1:
            if ((el.fileType & 0x10) !== 0) {
              for (let i = 0; i < el.elements; ++i) {
                buffer[index++] = reader.ReadInt8() / 32767.0;
              }
            } else {
              for (let i = 0; i < el.elements; ++i) {
                buffer[index++] = reader.ReadInt16();
              }
            }

            break;

          case 2:
            for (let i = 0; i < el.elements; ++i) {
              buffer[index++] = reader.ReadInt32();
            }

            break;

          case 3:
            for (let i = 0; i < el.elements; ++i) {
              buffer[index++] = reader.ReadFloat16();
            }

            break;

          case 4:
            for (let i = 0; i < el.elements; ++i) {
              buffer[index++] = reader.ReadFloat32();
            }

            break;

          case 8:
            if ((el.fileType & 0x10) !== 0) {
              for (let i = 0; i < el.elements; ++i) {
                buffer[index++] = reader.ReadUInt8() / 255.0;
              }
            } else {
              for (let i = 0; i < el.elements; ++i) {
                buffer[index++] = reader.ReadUInt8();
              }
            }

            break;

          case 9:
            if ((el.fileType & 0x10) !== 0) {
              for (let i = 0; i < declaration.elements[declIx].elements; ++i) {
                buffer[index++] = reader.ReadUInt8() / 65535.0;
              }
            } else {
              for (let i = 0; i < el.elements; ++i) {
                buffer[index++] = reader.ReadUInt16();
              }
            }

            break;

          case 10:
            for (let i = 0; i < el.elements; ++i) {
              buffer[index++] = reader.ReadUInt32();
            }

            break;

          default:
            throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrGeometryFileType"]({
              path: path,
              key: "fileType",
              value: el.fileType & 0xf
            });
        }
      }
    }

    return buffer;
  }
  /**
   * ReadIndexBuffer
   * @property {Tw2BinaryReader}
   * @returns {Uint16Array|Uint32Array}
   * @private
   */


  static ReadIndexBuffer(reader) {
    const ibType = reader.ReadUInt8(),
          indexCount = reader.ReadUInt32();

    if (ibType === 0) {
      const indexes = new Uint16Array(indexCount);

      for (let i = 0; i < indexCount; ++i) {
        indexes[i] = reader.ReadUInt16();
      }

      return indexes;
    } else {
      const indexes = new Uint32Array(indexCount);

      for (let i = 0; i < indexCount; ++i) {
        indexes[i] = reader.ReadUInt32();
      }

      return indexes;
    }
  }
  /**
   * ReadCurve
   * @returns {Tw2GeometryCurve}
   */


  static ReadCurve(reader) {
    const type = reader.ReadUInt8();
    if (type === 0) return null;
    const curve = new _geometry__WEBPACK_IMPORTED_MODULE_5__["Tw2GeometryCurve"]();
    curve.dimension = reader.ReadUInt8();
    curve.degree = reader.ReadUInt8();
    const knotCount = reader.ReadUInt32();
    curve.knots = new Float32Array(knotCount);

    for (let i = 0; i < knotCount; ++i) {
      curve.knots[i] = reader.ReadFloat32();
    }

    const controlCount = reader.ReadUInt32();
    curve.controls = new Float32Array(controlCount);

    for (let i = 0; i < controlCount; ++i) {
      curve.controls[i] = reader.ReadFloat32();
    }

    return curve;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [];
  }

}
/**
 * Request Response Type
 * @type {String}
 */

Tw2GeometryRes.prototype.requestResponseType = "arraybuffer";

/***/ }),

/***/ "./core/resource/Tw2LoadingObject.js":
/*!*******************************************!*\
  !*** ./core/resource/Tw2LoadingObject.js ***!
  \*******************************************/
/*! exports provided: Tw2LoadingObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2LoadingObject", function() { return Tw2LoadingObject; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2Resource */ "./core/resource/Tw2Resource.js");
/* harmony import */ var _reader_Tw2ObjectReader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reader/Tw2ObjectReader */ "./core/reader/Tw2ObjectReader.js");
/* harmony import */ var _reader_Tw2BlackReader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reader/Tw2BlackReader */ "./core/reader/Tw2BlackReader.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");





/**
 * Tw2LoadingObject
 *
 * @property {?String} _view                - object's .red file xml contents
 * @property {Number} _inPrepare            - the amount of child objects to prepare
 * @property {Array.<Object>} _objects      - the child objects to prepare
 * @property {Tw2ObjectReader} _constructor - A function for constructing child objects
 * @inheritDoc {Tw2Resource}
 * @class
 */

class Tw2LoadingObject extends _Tw2Resource__WEBPACK_IMPORTED_MODULE_1__["Tw2Resource"] {
  constructor(...args) {
    super(...args);
    this.path = "";
    this._view = null;
    this._inPrepare = null;
    this._objects = [];
    this._constructor = null;
  }

  /**
   * Adds a child object
   * @param {Function} onResolved
   * @param {Function} onRejected
   * @returns {Object}
   */
  AddObject(onResolved, onRejected) {
    const err = this.GetLastError();

    if (err) {
      if (onRejected) {
        onRejected(err);
      }
    } else {
      this._objects.push({
        onResolved,
        onRejected
      });
    }
  }
  /**
   * Prepare
   * @param response
   */


  Prepare(response) {
    const dot = this.path.lastIndexOf(".");
    if (dot === -1) return null;
    const ext = this.path.substr(dot + 1);
    let first;

    if (this._inPrepare === null) {
      this._view = response;

      switch (ext) {
        case "red":
          this._constructor = new _reader_Tw2ObjectReader__WEBPACK_IMPORTED_MODULE_2__["Tw2ObjectReader"](response);
          break;

        case "black":
          this._constructor = new _reader_Tw2BlackReader__WEBPACK_IMPORTED_MODULE_3__["Tw2BlackReader"](response);
          break;

        default:
          throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_4__["ErrResourceExtensionUnregistered"]({
            extension: ext
          });
      }

      this._inPrepare = 0; // Test construction once for errors??

      first = this._constructor.Construct();
    }

    while (this._inPrepare < this._objects.length) {
      const object = this._objects[this._inPrepare];

      try {
        if (first) {
          object.onResolved(first);
          first = null;
        } else {
          object.onResolved(this._constructor.Construct());
        }
      } catch (err) {
        if (object.onRejected) {
          object.onRejected(err);
          object.onRejected = null; // Only fire once
        }

        this.OnWarning({
          err,
          message: "Error preparing child object"
        });
      }

      this._inPrepare++;
    }

    this.OnPrepared();
  }
  /**
   * Fires on errors
   * @param {Error} err
   * @returns {Error}
   */


  OnError(err) {
    super.OnError(err);

    for (let i = 0; i < this._objects.length; i++) {
      if (this._objects[i].onRejected) {
        this._objects[i].onRejected(err);
      }
    }

    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].motherLode.Remove(this.path);

    this._objects.splice(0);

    return err;
  }
  /**
   * Fires when prepared
   * @param {eventLog} eventLog
   */


  OnPrepared(eventLog) {
    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].motherLode.Remove(this.path);

    this._objects.splice(0);

    super.OnPrepared(eventLog);
  }

}
/**
 * HTTP request response type
 * @type {String}
 */

Tw2LoadingObject.prototype.requestResponseType = "arraybuffer";

/***/ }),

/***/ "./core/resource/Tw2LodResource.js":
/*!*****************************************!*\
  !*** ./core/resource/Tw2LodResource.js ***!
  \*****************************************/
/*! exports provided: Tw2LodResource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2LodResource", function() { return Tw2LodResource; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2LodResource
 * @ccp Tr2LodResource
 *
 * @property {String} name                -
 * @property {String} highDetailResPath   -
 * @property {String} lowDetailResPath    -
 * @property {String} mediumDetailResPath -
 */

class Tw2LodResource extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Gets the high detail resource
   * @returns {null|Tw2TextureRes}
   */
  get highDetailRes() {
    return this.GetLODResource(3);
  }
  /**
   * Gets the medium detail resource
   * @returns {null|Tw2TextureRes}
   */


  get mediumDetailRes() {
    return this.GetLODResource(2);
  }
  /**
   * Gets the low detail resource
   * @returns {null|Tw2TextureRes}
   */


  get lowDetailRes() {
    return this.GetLODResource(1);
  }
  /**
   * Constructor
   * @param {String} [name]
   * @param {String|Array<String>} [resourcePaths]
   */


  constructor(name = "", resourcePaths) {
    super();
    this.name = "";
    this.highDetailResPath = "";
    this.lowDetailResPath = "";
    this.mediumDetailResPath = "";
    this.name = name;

    if (resourcePaths) {
      this.SetPaths(...resourcePaths);
    }
  }
  /**
   * Sets resource paths
   * @param {String} [highDetail]
   * @param {String} [mediumDetail]
   * @param {String} [lowDetail]
   * @returns {boolean} true if updated
   */


  SetPaths(highDetail = "", mediumDetail = "", lowDetail = "") {
    let updated = false;

    if (highDetail !== this.highDetailResPath) {
      this.highDetailResPath = highDetail;
      updated = true;
    }

    if (mediumDetail !== this.mediumDetailResPath) {
      this.mediumDetailResPath = mediumDetail;
      updated = true;
    }

    if (lowDetail !== this.lowDetailResPath) {
      this.lowDetailResPath = lowDetail;
      updated = true;
    }

    return updated;
  }
  /**
   * Requests a resource at the given LOD level
   * @param {Number} lod
   */


  GetLODResource(lod = 3) {
    const high = this.highDetailResPath,
          med = this.mediumDetailResPath,
          low = this.lowDetailResPath;
    let path;

    if (lod > 2) {
      if (high) path = high;else if (med) path = med;else if (low) path = low;
    } else if (lod === 2) {
      if (med) path = med;else if (high) path = high;else if (low) path = low;
    } else {
      if (low) path = low;else if (med) path = med;else if (high) path = high;
    }

    return path ? global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(path) : null;
  }
  /**
   * Creates a lod resource from a plain object
   * @param {*} values
   * @returns {Tw2LodResource}
   */


  static from(values) {
    const item = new Tw2LodResource();

    if (values) {
      item.name = values.name || "";
      item.SetPaths(values.highDetailResPath, values.mediumDetailResPath, values.lowDetailResPath);
    }

    return item;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["highDetailResPath", r.path], ["lowDetailResPath", r.path], ["mediumDetailResPath", r.path]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2LodResource.__isStaging = 2;

/***/ }),

/***/ "./core/resource/Tw2Resource.js":
/*!**************************************!*\
  !*** ./core/resource/Tw2Resource.js ***!
  \**************************************/
/*! exports provided: Tw2Resource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Resource", function() { return Tw2Resource; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var global_class_Tw2Notifications__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/class/Tw2Notifications */ "./global/class/Tw2Notifications.js");




/**
 * Tw2Resource base class
 *
 * @property {Number} activeFrame
 * @property {String} path
 * @property {Number} doNotPurge
 * @property {Set} _notifications
 * @property {Number} _state
 * @property {Array<Error>} _errors
 * @property {Set} _watchers
 */

class Tw2Resource extends global_class_Tw2Notifications__WEBPACK_IMPORTED_MODULE_3__["Tw2Notifications"] {
  constructor(...args) {
    super(...args);
    this.path = "";
    this.activeFrame = 0;
    this.doNotPurge = 0;
    this._state = Tw2Resource.State.NO_INIT;
    this._errors = [];
    this._requested = 0;
  }

  /**
   * Checks if the resource is good and keeps it alive
   * @returns {boolean}
   */
  IsGood() {
    this.KeepAlive();
    return this.IsPrepared() || this.IsLoaded();
  }
  /**
   * Checks to see if the resource is loading
   * @returns {Boolean}
   */


  IsRequested() {
    return this._state === Tw2Resource.State.REQUESTED;
  }
  /**
   * Checks if the resource has been loaded
   * @returns {boolean}
   */


  IsLoaded() {
    return this._state === Tw2Resource.State.LOADED;
  }
  /**
   * Checks if the resource has been prepared
   * @returns {boolean}
   */


  IsPrepared() {
    return this._state === Tw2Resource.State.PREPARED;
  }
  /**
   * Checks if the resource has been unloaded
   * @returns {boolean}
   */


  IsUnloaded() {
    return this._state === Tw2Resource.State.UNLOADED;
  }
  /**
   * Checks to see if the resource has been purged
   * @returns {Boolean}
   */


  IsPurged() {
    return this._state === Tw2Resource.State.PURGED;
  }
  /**
   * Checks if the resource has errors
   * @returns {Boolean}
   */


  HasErrors() {
    return this._state === Tw2Resource.State.ERROR;
  }
  /**
   * Checks if the resource has completed all processing
   * @returns {Boolean}
   */


  HasCompleted() {
    return this.HasErrors() || this.IsPurged() || this.IsPrepared();
  }
  /**
   * Unloads the resource
   * @param {*} [log]
   * @returns {Boolean}
   */


  Unload(log) {
    return false;
  }
  /**
   * Reloads the resource
   * @param {*} [log]
   */


  Reload(log) {
    if (this.IsLoaded() || this.IsPrepared()) {
      this.Unload({
        hide: true,
        detail: "reloading"
      });
    }

    if (this.IsPurged() || this.IsUnloaded()) {
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].LoadResource(this, log);
    }
  }
  /**
   * Keeps the resource from being purged
   */


  KeepAlive() {
    this.activeFrame = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].activeFrame;

    if (this.IsPurged() || this.IsUnloaded()) {
      this.Reload({
        hide: true,
        detail: "inuse"
      });
    }
  }
  /**
   * Gets the resource's errors
   * @returns {?Array<Tw2Error|Error>}
   */


  GetErrors() {
    return Array.from(this._errors);
  }
  /**
   * Gets the resource's last error
   * @returns {undefined|Tw2Error|Error}
   */


  GetLastError() {
    return this._errors[0];
  }
  /**
   * Fires on warnings
   * @param {*} [log]
   */


  OnWarning(log) {
    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, "warning", log);
    this.UpdateNotifications(Tw2Resource.Callback.WARNING);
  }
  /**
   * Fires on debugs
   * @param {*} [log]
   */


  OnDebug(log) {
    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, "debug", log);
    this.UpdateNotifications(Tw2Resource.Callback.DEBUG);
  }
  /**
   * Fires on errors
   * @param {Error} err
   * @returns {Error}
   */


  OnError(err = new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["Tw2Error"]()) {
    let wasGood = this.IsLoaded() || this.IsPrepared();

    if (!this._errors.includes(err)) {
      this._errors.unshift(err);
    }

    this._SetState(Tw2Resource.State.ERROR);

    if (wasGood) {
      this.Unload({
        hide: true,
        detail: "errored"
      });
    }

    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, "error", err);
    this.UpdateNotifications(Tw2Resource.Callback.ERROR, err);
    return err;
  }
  /**
   * LoadStarted
   * @param {*} [log]
   */


  OnRequested(log) {
    const stateName = this._state === Tw2Resource.State.NO_INIT ? "REQUESTED" : "RELOADING";

    if (this._SetState(Tw2Resource.State.REQUESTED)) {
      this._requested = Date.now();
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, stateName.toLowerCase(), log);
      this.UpdateNotifications(Tw2Resource.Callback[stateName]);
    }
  }
  /**
   * LoadFinished
   * @param {*} [log]
   */


  OnLoaded(log = {}) {
    if (this._SetState(Tw2Resource.State.LOADED)) {
      log.time = (Date.now() - this._requested) * 0.001;
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, "loaded", log);
      this.UpdateNotifications(Tw2Resource.Callback.LOADED);
    }
  }
  /**
   * PrepareFinished
   * @param {*} [log]
   */


  OnPrepared(log = {}) {
    if (this._SetState(Tw2Resource.State.PREPARED)) {
      log.time = (Date.now() - this._requested) * 0.001;
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, "prepared", log);
      this.UpdateNotifications(Tw2Resource.Callback.PREPARED);
    }
  }
  /**
   * Fires when the resource has been unloads
   * @param {*} [log]
   */


  OnUnloaded(log) {
    if (this._SetState(Tw2Resource.State.UNLOADED)) {
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, "unloaded", log);
      this.UpdateNotifications(Tw2Resource.Callback.UNLOADED);
    }
  }
  /**
   * Fires when the resource is purged
   * @param {*} [log]
   */


  OnPurged(log) {
    this._SetState(Tw2Resource.State.PURGED);

    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].OnPathEvent(this.path, "purged", log);
    this.UpdateNotifications(Tw2Resource.Callback.PURGED, this.GetLastError());
  }
  /**
   * Sets state
   * @param state
   * @returns {boolean}
   */


  _SetState(state) {
    if (this._state !== Tw2Resource.State.ERROR) {
      //this._lastState = this._state;
      this._state = state;
      return true;
    }

    return false;
  }
  /**
   * Wraps callbacks as a notification
   * - The notification is removed as soon as the resource is prepared or errored
   * @param {Function} [onResolved] - Callback fired when prepared or purged
   * @param {Function} [onRejected] - Callback fired when errored
   */


  RegisterCallbacks(onResolved, onRejected) {
    this.KeepAlive();
    if (!onResolved && !onRejected) return;
    /**
     * Handles resource events
     * @param {Tw2Resource} res
     * @param {Tw2Error} err
     * @returns {Boolean}
     */

    const handler = function (res, err) {
      if (res.HasCompleted()) {
        if (err) {
          if (onRejected) onRejected(err);
        } else {
          if (onResolved) onResolved(res);
        }

        return true;
      }

      return false;
    };

    this.RegisterNotification(handler);
  }
  /**
   * Registers a notification
   * @param {Tw2Resource} resource
   * @param {*} notification
   */


  static onNotification(resource, notification) {
    let funcName, err;

    switch (resource._state) {
      case Tw2Resource.State.ERROR:
        funcName = Tw2Resource.Callback.ERROR;
        err = resource.GetLastError();
        break;

      case Tw2Resource.State.REQUESTED:
        funcName = Tw2Resource.Callback.REQUESTED;
        break;

      case Tw2Resource.State.LOADED:
        funcName = Tw2Resource.Callback.LOADED;
        break;

      case Tw2Resource.State.PREPARED:
        funcName = Tw2Resource.Callback.PREPARED;
        break;

      case Tw2Resource.State.UNLOADED:
        funcName = Tw2Resource.Callback.UNLOADED;
        break;

      case Tw2Resource.State.PURGED:
        funcName = Tw2Resource.Callback.PURGED;
        err = resource.GetLastError();
        break;
    } // Don't add notification if it returns true


    if (Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isFunction"])(notification)) {
      return !!notification(resource, err, funcName);
    } else if (funcName && funcName in notification) {
      return !!notification[funcName](resource, err);
    }

    return false;
  }
  /**
   * Identifies that this object is a resource
   * @type {boolean}
   * @private
   */


}
/**
 * An optional function for when the resource handles it's own loading
 * -  If the method returns false then the resource manager will handle the http request
 * @type {?Function}
 * @returns {Boolean}
 */

Tw2Resource.__isResource = true;
Tw2Resource.State = {
  ERROR: -3,
  PURGED: -2,
  UNLOADED: -1,
  NO_INIT: 0,
  REQUESTED: 1,
  LOADED: 2,
  PREPARED: 3
};
Tw2Resource.Callback = {
  ERROR: "OnResError",
  PURGED: "OnResPurged",
  UNLOADED: "OnResUnloaded",
  REQUESTED: "OnResRequested",
  LOADED: "OnResLoaded",
  PREPARED: "OnResPrepared",
  WARNING: "OnResWarning",
  DEBUG: "OnResDebug"
};
Tw2Resource.prototype.DoCustomLoad = null;
/**
 * HTTP request response type
 * @type {null}
 */

Tw2Resource.prototype.requestResponseType = null;

/***/ }),

/***/ "./core/resource/Tw2Shader.js":
/*!************************************!*\
  !*** ./core/resource/Tw2Shader.js ***!
  \************************************/
/*! exports provided: Tw2Shader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Shader", function() { return Tw2Shader; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _vertex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vertex */ "./core/vertex/index.js");
/* harmony import */ var _sampler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sampler */ "./core/sampler/index.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var _shaderOverrides_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shaderOverrides.json */ "./core/resource/shaderOverrides.json");
var _shaderOverrides_json__WEBPACK_IMPORTED_MODULE_4___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./shaderOverrides.json */ "./core/resource/shaderOverrides.json", 1);





/**
 * Tw2Shader
 *
 * @property {Object.<string, Object>} techniques
 * @property {Object.<string, Array>} annotations
 * @class
 */

class Tw2Shader {
  /**
   * Constructor
   * @param reader
   * @param version
   * @param stringTable
   * @param stringTableOffset
   * @param path
   */
  constructor(reader, version, stringTable, stringTableOffset, path) {
    this.techniques = {};
    this.annotations = {};

    /**
     * ReadString
     * @returns {String}
     * @private
     */
    function ReadString() {
      const offset = reader.ReadUInt32();
      let end = offset;

      while (stringTable.charCodeAt(end)) {
        ++end;
      }

      return stringTable.substr(offset, end - offset);
    }

    const {
      wrapModes,
      gl
    } = global__WEBPACK_IMPORTED_MODULE_0__["device"];
    let techniqueCount = 1;

    if (version > 6) {
      techniqueCount = reader.ReadUInt8();
    }

    for (let t = 0; t < techniqueCount; ++t) {
      let technique = {
        name: "Main",
        passes: []
      };

      if (version > 6) {
        technique.name = ReadString();
      }

      this.techniques[technique.name] = technique;
      const passCount = reader.ReadUInt8();

      for (let passIx = 0; passIx < passCount; ++passIx) {
        const pass = {};
        pass.stages = [{}, {}];
        const stageCount = reader.ReadUInt8();
        let validShadowShader = true;

        for (let stageIx = 0; stageIx < stageCount; ++stageIx) {
          const stage = {};
          stage.inputDefinition = new _vertex__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"]();
          stage.constants = [];
          stage.textures = [];
          stage.samplers = [];
          const stageType = reader.ReadUInt8(),
                inputCount = reader.ReadUInt8();
          stage.stageType = stageType === 0 ? "vertex" : "fragment";

          for (let inputIx = 0; inputIx < inputCount; ++inputIx) {
            const usage = reader.ReadUInt8(),
                  registerIndex = reader.ReadUInt8(),
                  // unused
            usageIndex = reader.ReadUInt8(),
                  usedMask = reader.ReadUInt8(); // unused

            stage.inputDefinition.elements[inputIx] = _vertex__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexElement"].from({
              usage,
              usageIndex,
              type: 0,
              registerIndex,
              usedMask
            });
          }

          stage.inputDefinition.RebuildHash();
          let shaderSize, shaderCode, shadowShaderSize, shadowShaderCode;

          if (version < 5) {
            shaderSize = reader.ReadUInt32();
            shaderCode = reader.data.subarray(reader.cursor, reader.cursor + shaderSize);
            reader.cursor += shaderSize;
            shadowShaderSize = reader.ReadUInt32();
            shadowShaderCode = reader.data.subarray(reader.cursor, reader.cursor + shadowShaderSize);
            reader.cursor += shadowShaderSize;
          } else {
            shaderSize = reader.ReadUInt32();
            let so = reader.ReadUInt32();
            shaderCode = Tw2Shader.InspectShaderCode(stringTable.substr(so, shaderSize), path);
            shadowShaderSize = reader.ReadUInt32();
            so = reader.ReadUInt32();
            shadowShaderCode = Tw2Shader.InspectShaderCode(stringTable.substr(so, shadowShaderSize), path);

            if (Tw2Shader.DEBUG_ENABLED) {
              stage.shaderCode = shaderCode;
              stage.shadowShaderCode = shadowShaderCode;
            }
          }

          try {
            stage.shader = Tw2Shader.CompileShader(stageType, "", shaderCode, path);
          } catch (err) {
            console.group();
            console.error(err.message);
            console.dir(stage);
            console.groupEnd();
            throw err;
          }

          if (validShadowShader) {
            if (shadowShaderSize === 0) {
              stage.shadowShader = Tw2Shader.CompileShader(stageType, "\n#define PS\n", shaderCode, path, true);
            } else {
              stage.shadowShader = Tw2Shader.CompileShader(stageType, "", shadowShaderCode, path, true);
            }

            if (stage.shadowShader === null) {
              validShadowShader = false;
            }
          } else {
            stage.shadowShader = null;
          }

          if (version >= 3) {
            reader.ReadUInt32();
            reader.ReadUInt32();
            reader.ReadUInt32();
          }

          stage.constantSize = 0;
          const constantCount = reader.ReadUInt32();

          for (let constantIx = 0; constantIx < constantCount; ++constantIx) {
            const constant = {};
            constant.name = ReadString();
            constant.offset = reader.ReadUInt32() / 4;
            constant.size = reader.ReadUInt32() / 4;
            constant.type = reader.ReadUInt8();
            constant.dimension = reader.ReadUInt8();
            constant.elements = reader.ReadUInt32();
            constant.isSRGB = reader.ReadUInt8();
            constant.isAutoregister = reader.ReadUInt8();
            stage.constants[constantIx] = constant;
            if (Tw2Shader.ConstantIgnore.includes(constant.name)) continue;
            const last = constant.offset + constant.size;
            if (last > stage.constantSize) stage.constantSize = last;
          }

          const constantValueSize = reader.ReadUInt32() / 4;
          stage.constantValues = new Float32Array(constantValueSize);

          if (version < 5) {
            for (let i = 0; i < constantValueSize; ++i) {
              stage.constantValues[i] = reader.ReadFloat32();
            }
          } else {
            const co = reader.ReadUInt32(),
                  bo = reader.cursor;
            reader.cursor = stringTableOffset + co;

            for (let i = 0; i < constantValueSize; ++i) {
              stage.constantValues[i] = reader.ReadFloat32();
            }

            reader.cursor = bo;
          }

          stage.constantSize = Math.max(stage.constantSize, constantValueSize);
          let textureCount = reader.ReadUInt8();

          for (let textureIx = 0; textureIx < textureCount; ++textureIx) {
            const texture = {};
            texture.registerIndex = reader.ReadUInt8();
            texture.name = ReadString();
            texture.type = reader.ReadUInt8();
            texture.isSRGB = reader.ReadUInt8();
            texture.isAutoregister = reader.ReadUInt8();
            stage.textures.push(texture);
          }

          const samplerCount = reader.ReadUInt8();

          for (let samplerIx = 0; samplerIx < samplerCount; ++samplerIx) {
            const s = new _sampler__WEBPACK_IMPORTED_MODULE_2__["Tw2SamplerState"]();
            s.registerIndex = reader.ReadUInt8();
            s.name = version >= 4 ? ReadString() : "";
            s._comparison = reader.ReadUInt8(); // not used

            s.minFilter = reader.ReadUInt8();
            s.magFilter = reader.ReadUInt8();
            s.mipFilter = reader.ReadUInt8();
            s.addressU = reader.ReadUInt8();
            s.addressV = reader.ReadUInt8();
            s.addressW = reader.ReadUInt8();
            s.mipLODBias = reader.ReadFloat32(); // not used

            s._maxAnisotropy = reader.ReadUInt8();
            s._comparisonFunc = reader.ReadUInt8(); // not used

            s._borderColor = global__WEBPACK_IMPORTED_MODULE_0__["quat"].fromValues(reader.ReadFloat32(), reader.ReadFloat32(), reader.ReadFloat32(), reader.ReadFloat32());
            s._minLOD = reader.ReadFloat32(); // not used

            s._maxLOD = reader.ReadFloat32(); // not used

            if (version < 4) reader.ReadUInt8();

            if (s.minFilter === 1) {
              switch (s.mipFilter) {
                case 0:
                  s.minFilter = gl.NEAREST;
                  break;

                case 1:
                  s.minFilter = gl.NEAREST_MIPMAP_NEAREST;
                  break;

                default:
                  s.minFilter = gl.NEAREST_MIPMAP_LINEAR;
              }

              s.minFilterNoMips = gl.NEAREST;
            } else {
              switch (s.mipFilter) {
                case 0:
                  s.minFilter = gl.LINEAR;
                  break;

                case 1:
                  s.minFilter = gl.LINEAR_MIPMAP_NEAREST;
                  break;

                default:
                  s.minFilter = gl.LINEAR_MIPMAP_LINEAR;
              }

              s.minFilterNoMips = gl.LINEAR;
            }

            s.magFilter = s.magFilter === 1 ? gl.NEAREST : gl.LINEAR;
            s.addressU = wrapModes[s.addressU];
            s.addressV = wrapModes[s.addressV];
            s.addressW = wrapModes[s.addressW];

            if (s.minFilter === 3 || s.magFilter === 3 || s.mipFilter === 3) {
              s.anisotropy = Math.max(s.maxAnisotropy, 1);
            }

            for (let n = 0; n < stage.textures.length; ++n) {
              if (stage.textures[n].registerIndex === s.registerIndex) {
                s.samplerType = stage.textures[n].type === 4 ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;
                s.isVolume = stage.textures[n].type === 3;
                break;
              }
            }

            s.ComputeHash();
            stage.samplers.push(s);
          }

          if (version >= 3) reader.ReadUInt8();
          if (version > 7) reader.ReadUInt8();
          pass.stages[stageType] = stage;
        }

        pass.states = [];
        const stateCount = reader.ReadUInt8();

        for (let stateIx = 0; stateIx < stateCount; ++stateIx) {
          const state = reader.ReadUInt32(),
                value = reader.ReadUInt32();
          pass.states.push({
            "state": state,
            "value": value
          });
        }

        pass.shaderProgram = Tw2Shader.CreateProgram(pass.stages[0].shader, pass.stages[1].shader, pass, path);

        if (validShadowShader) {
          pass.shadowShaderProgram = Tw2Shader.CreateProgram(pass.stages[0].shadowShader, pass.stages[1].shadowShader, pass, path, true);

          if (pass.shadowShaderProgram === null) {
            pass.shadowShaderProgram = pass.shaderProgram;
          }
        } else {
          pass.shadowShaderProgram = pass.shaderProgram;
        }

        technique.passes[passIx] = pass;
      }
    }

    const parameterCount = reader.ReadUInt16();

    for (let paramIx = 0; paramIx < parameterCount; ++paramIx) {
      const name = ReadString(),
            annotations = [],
            annotationCount = reader.ReadUInt8();

      for (let annotationIx = 0; annotationIx < annotationCount; ++annotationIx) {
        annotations[annotationIx] = {};
        annotations[annotationIx].name = ReadString();
        annotations[annotationIx].type = reader.ReadUInt8();

        switch (annotations[annotationIx].type) {
          case 0:
            annotations[annotationIx].value = reader.ReadUInt32() !== 0;
            break;

          case 1:
            annotations[annotationIx].value = reader.ReadInt32();
            break;

          case 2:
            annotations[annotationIx].value = reader.ReadFloat32();
            break;

          default:
            annotations[annotationIx].value = ReadString();
        }
      }

      this.annotations[name] = annotations;
    }
  }
  /**
   * Applies an Effect Pass
   * @param {String} technique - technique name
   * @param {Number} pass - effect.passes index
   */


  ApplyPass(technique, pass) {
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl;
    pass = this.techniques[technique].passes[pass];

    for (let i = 0; i < pass.states.length; ++i) {
      d.SetRenderState(pass.states[i].state, pass.states[i].value);
    }

    if (d.IsAlphaTestEnabled()) {
      gl.useProgram(pass.shadowShaderProgram.program);
      d.shadowHandles = pass.shadowShaderProgram;
    } else {
      gl.useProgram(pass.shaderProgram.program);
      d.shadowHandles = null;
    }
  }
  /**
   * Checks if a constant is supported
   * @param {String} name
   * @returns {Boolean}
   */


  HasConstant(name) {
    return this.constructor.Has(this.techniques, "constants", name);
  }
  /**
   * Checks if a texture is supported
   * @param {String} name
   * @returns {Boolean}
   */


  HasTexture(name) {
    return this.constructor.Has(this.techniques, "textures", name);
  }
  /**
   * Checks if a sampler is supported
   * @param {String} name
   * @returns {Boolean}
   */


  HasSampler(name) {
    return this.constructor.Has(this.techniques, "samplers", name);
  }
  /**
   * Checks if any techniques have a value with a given name for a specific type
   * @param {*} techniques
   * @param {String} type
   * @param {String} name
   * @returns {?*}
   */


  static Has(techniques, type, name) {
    for (const t in techniques) {
      if (techniques.hasOwnProperty(t)) {
        const technique = techniques[t];

        for (let p = 0; p < technique.passes.length; p++) {
          const pass = technique.passes[p];

          for (let s = 0; s < pass.stages.length; s++) {
            const stage = pass.stages[s];

            for (let i = 0; i < stage[type].length; i++) {
              if (stage[type][i].name === name) {
                return true;
              }
            }
          }
        }
      }
    }

    return false;
  }
  /**
   * Compiles shader
   * @param {Number} stageType
   * @param {String} prefix
   * @param shaderCode
   * @param {String} path
   * @param {Boolean} [skipError]
   * @returns {*}
   */


  static CompileShader(stageType, prefix, shaderCode, path, skipError) {
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl,
          shader = gl.createShader(stageType === 0 ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER),
          ccpShaderBinary = global__WEBPACK_IMPORTED_MODULE_0__["device"].GetExtension("CCP_shader_binary");

    if (ccpShaderBinary) {
      ccpShaderBinary["shaderBinary"](shader, shaderCode);
    } else {
      let source = prefix + (global__WEBPACK_IMPORTED_MODULE_0__["util"].isString(shaderCode) ? shaderCode : String.fromCharCode.apply(null, shaderCode));
      source = source.substr(0, source.length - 1);
      gl.shaderSource(shader, source);
      gl.compileShader(shader);
    }

    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
      if (!skipError) {
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrShaderCompile"]({
          path: path,
          shaderType: stageType === 0 ? "vertex" : "fragment",
          infoLog: gl.getShaderInfoLog(shader)
        });
      }

      return null;
    }

    return shader;
  }
  /**
   * Creates shader program
   * @param vertexShader
   * @param fragmentShader
   * @param pass
   * @param {String} path
   * @param {Boolean} [skipError]
   * @returns {*}
   */


  static CreateProgram(vertexShader, fragmentShader, pass, path, skipError) {
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl,
          program = {};
    program.program = gl.createProgram();
    gl.attachShader(program.program, vertexShader);
    gl.attachShader(program.program, fragmentShader);
    gl.linkProgram(program.program);

    if (!gl.getProgramParameter(program.program, gl.LINK_STATUS)) {
      if (!skipError) {
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrShaderLink"]({
          path: path,
          infoLog: gl.getProgramInfoLog(program.program)
        });
      }

      return null;
    }

    gl.useProgram(program.program);
    program.constantBufferHandles = [];

    for (let j = 0; j < 16; ++j) {
      program.constantBufferHandles[j] = gl.getUniformLocation(program.program, "cb" + j);
    }

    program.samplerHandles = [];

    for (let j = 0; j < 16; ++j) {
      program.samplerHandles[j] = gl.getUniformLocation(program.program, "s" + j);
      gl.uniform1i(program.samplerHandles[j], j);
    }

    for (let j = 0; j < 16; ++j) {
      program.samplerHandles[j + 12] = gl.getUniformLocation(program.program, "vs" + j);
      gl.uniform1i(program.samplerHandles[j + 12], j + 12);
    }

    program.input = new _vertex__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"]();

    for (let j = 0; j < pass.stages[0].inputDefinition.elements.length; ++j) {
      const attr = "attr" + j;
      let location = gl.getAttribLocation(program.program, attr);

      if (location >= 0) {
        const el = _vertex__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexElement"].from({
          usage: pass.stages[0].inputDefinition.elements[j].usage,
          usageIndex: pass.stages[0].inputDefinition.elements[j].usageIndex,
          location,
          attr
        });
        program.input.elements.push(el);
      }
    }

    program.input.RebuildHash();
    program.shadowStateInt = gl.getUniformLocation(program.program, "ssi");
    program.shadowStateFloat = gl.getUniformLocation(program.program, "ssf");
    program.shadowStateYFlip = gl.getUniformLocation(program.program, "ssyf");
    gl.uniform3f(program.shadowStateYFlip, 0, 0, 1);
    program.volumeSlices = [];

    for (let j = 0; j < pass.stages[1].samplers.length; ++j) {
      if (pass.stages[1].samplers[j].isVolume) {
        program.volumeSlices[pass.stages[1].samplers[j].registerIndex] = gl.getUniformLocation(program.program, "s" + pass.stages[1].samplers[j].registerIndex + "sl");
      }
    }

    return program;
  }
  /**
   * Inspects shader code for a path and fixes any known errors
   * TODO: Fix source files
   * @param {String} code
   * @param {String} path
   * @returns {String}
   */


  static InspectShaderCode(code, path) {
    const fileName = path.substring(path.lastIndexOf("/") + 1, path.lastIndexOf(".")).toLowerCase(),
          overrides = _shaderOverrides_json__WEBPACK_IMPORTED_MODULE_4__[fileName];
    if (!overrides) return code;

    for (const key in overrides) {
      if (overrides.hasOwnProperty(key)) {
        code = code.replace(key, overrides[key]);
      }
    }

    return code;
  }
  /**
   * Constant names that are ignored
   * @type {String[]}
   */


}
Tw2Shader.ConstantIgnore = ["PerFrameVS", "PerObjectVS", "PerFramePS", "PerObjectPS"];
Tw2Shader.DEBUG_ENABLED = false;

/***/ }),

/***/ "./core/resource/Tw2TextureRes.js":
/*!****************************************!*\
  !*** ./core/resource/Tw2TextureRes.js ***!
  \****************************************/
/*! exports provided: Tw2TextureRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2TextureRes", function() { return Tw2TextureRes; });
/* harmony import */ var _Tw2Resource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Resource */ "./core/resource/Tw2Resource.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global */ "./global/index.js");



/**
 * Tw2TextureRes
 *
 * @property {WebGLTexture} texture        - The texture
 * @property {Boolean} isCube              - Identifies if the texture is a cube map
 * @property {Number} width                - The texture's width
 * @property {Number} height               - The texture's height
 * @property {Boolean} hasMipMaps          - Identifies if the texture has mip maps
 * @property {?String} requestResponseType - Request response type for the resource
 * @property {Number} _currentSampler      - The current sampler
 * @property {Boolean} _isAttached         - identifies if the texture was attached rather than loaded
 * @property {?String} _extension          - loading file extension
 */

class Tw2TextureRes extends _Tw2Resource__WEBPACK_IMPORTED_MODULE_0__["Tw2Resource"] {
  constructor(...args) {
    super(...args);
    this.texture = null;
    this.isCube = false;
    this.width = 0;
    this.height = 0;
    this.hasMipMaps = false;
    this._currentSampler = 0;
    this._isAttached = false;
    this._extension = "";
  }

  /**
   * Prepares the resource
   * @param {*|Image|arrayBuffer} data
   */
  Prepare(data) {
    const gl = global__WEBPACK_IMPORTED_MODULE_2__["device"].gl;
    const format = "ccpGLFormat" in data ? data["ccpGLFormat"] : gl.RGBA;

    switch (this._extension) {
      case "cube":
        this.texture = gl.createTexture();
        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture);
        const canvas = document.createElement("canvas");
        canvas.width = canvas.height = data.height;
        const ctx = canvas.getContext("2d");

        for (let j = 0; j < 6; ++j) {
          ctx.drawImage(data, j * canvas.width, 0, canvas.width, canvas.height, 0, 0, canvas.width, canvas.height);
          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + j, 0, format, format, gl.UNSIGNED_BYTE, canvas);
        }

        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);
        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);
        this.width = canvas.width;
        this.height = canvas.height;
        this.hasMipMaps = true;
        break;

      case "png":
        this.texture = gl.createTexture();
        gl.bindTexture(gl.TEXTURE_2D, this.texture);
        gl.texImage2D(gl.TEXTURE_2D, 0, format, format, gl.UNSIGNED_BYTE, data);
        this.hasMipMaps = Tw2TextureRes.IsPowerOfTwo(data.width) && Tw2TextureRes.IsPowerOfTwo(data.height);
        if (this.hasMipMaps) gl.generateMipmap(gl.TEXTURE_2D);
        gl.bindTexture(gl.TEXTURE_2D, null);
        this.width = data.width;
        this.height = data.height;
        break;

      /*
        DDS methods based off work by Brandon Jones and Babylon
      -----------------------------------------------------------------------
      Copyright (c) 2012 Brandon Jones
        This software is provided 'as-is', without any express or implied
      warranty. In no event will the authors be held liable for any damages
      arising from the use of this software.
        Permission is granted to anyone to use this software for any purpose,
      including commercial applications, and to alter it and redistribute it
      freely, subject to the following restrictions:
        1. The origin of this software must not be misrepresented; you must not
      claim that you wrote the original software. If you use this software
      in a product, an acknowledgment in the product documentation would be
      appreciated but is not required.
        2. Altered source versions must be plainly marked as such, and must not
      be misrepresented as being the original software.
        3. This notice may not be removed or altered from any source
      distribution.
        */

      case "dds":
        const ext = global__WEBPACK_IMPORTED_MODULE_2__["device"].GetExtension("compressed_texture_s3tc"),
              header = new Int32Array(data, 0, global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_LENGTH_INT"]),
              isFourCC = header[global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_OFFSET_PF_FOURCC"]],
              isMagic = header[global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_OFFSET_MAGIC"]] === global__WEBPACK_IMPORTED_MODULE_2__["DDS_MAGIC"],
              isCube = (header[global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_OFFSET_CAPS2"]] & global__WEBPACK_IMPORTED_MODULE_2__["DDSCAPS2_CUBEMAP"]) === global__WEBPACK_IMPORTED_MODULE_2__["DDSCAPS2_CUBEMAP"],
              fourCC = header[global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_OFFSET_PF_FOURCC"]],
              mipmaps = 1; //(header[DDS_HEADER_OFFSET_FLAGS] & DDSD_MIPMAPCOUNT) ?
        //Math.max(1, header[DDS_HEADER_OFFSET_MIPMAP_COUNT]) : 1;
        // Check compatibility

        if (!ext) throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrResourceFormat"]("Compressed textures not supported by your device");
        if (!isMagic) throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrResourceFormat"]("Invalid DDS, missing magic number");
        if (!isFourCC) throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrResourceFormat"]("Invalid DDS, missing FourCC code");
        let width = header[global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_OFFSET_WIDTH"]],
            height = header[global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_OFFSET_HEIGHT"]],
            dataOffset = header[global__WEBPACK_IMPORTED_MODULE_2__["DDS_HEADER_OFFSET_SIZE"]] + 4,
            blockBytes,
            internalFormat;

        switch (fourCC) {
          case global__WEBPACK_IMPORTED_MODULE_2__["FOURCC_DXT1"]:
            blockBytes = 8;
            internalFormat = ext.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            break;

          case global__WEBPACK_IMPORTED_MODULE_2__["FOURCC_DXT3"]:
            blockBytes = 16;
            internalFormat = ext.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            break;

          case global__WEBPACK_IMPORTED_MODULE_2__["FOURCC_DXT5"]:
            blockBytes = 16;
            internalFormat = ext.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            break;

          default:
            const code = Tw2TextureRes.Int32ToFourCC(fourCC);
            throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrResourceFormat"]("Invalid DDS, ".concat(code, " unsupported"));
        }

        this.hasMipMaps = mipmaps > 1;
        this.isCube = isCube;
        this.width = width;
        this.height = height;

        if (this.isCube) {
          // TODO: Add dds cube map support
          throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrFeatureNotImplemented"]({
            feature: "DDS cube maps"
          });
        } else {
          this.texture = gl.createTexture();
          gl.bindTexture(gl.TEXTURE_2D, this.texture);

          for (let i = 0; i < mipmaps; ++i) {
            const dataLength = Math.max(4, width) / 4 * Math.max(4, height) / 4 * blockBytes;
            const byteArray = new Uint8Array(data, dataOffset, dataLength);
            gl.compressedTexImage2D(gl.TEXTURE_2D, i, internalFormat, width, height, 0, byteArray);
            dataOffset += dataLength;
            width *= 0.5;
            height *= 0.5;
          }

          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mipmaps > 1 ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);
          gl.bindTexture(gl.TEXTURE_2D, null);
        }

        break;

      default:
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrResourceFormat"]("Invalid format, ".concat(this._extension, " unsupported"));
    }

    this._isAttached = false;
    this.OnPrepared();
  }
  /**
   * An optional method resources can have that allows them to take over loading their resources
   * @param {String} path - texture resource path
   * @param {String} extension - the texture extension
   * @returns {Boolean} returns true to tell the resMan not to handle http requests
   */


  DoCustomLoad(path, extension) {
    switch (extension) {
      case "cube":
        this._extension = extension;
        this.isCube = true;
        path = path.substr(0, path.length - 5) + ".png";
        break;

      case "png":
        this._extension = extension;
        this.isCube = false;
        break;

      case "dds":
        this._extension = extension;
        global__WEBPACK_IMPORTED_MODULE_2__["resMan"].Fetch(Tw2TextureRes.AddMipLevelSkipCount(path), "arraybuffer").then(response => {
          this.OnLoaded();
          global__WEBPACK_IMPORTED_MODULE_2__["resMan"].Queue(this, response);
        }).catch(err => {
          this.OnError(err);
        });
        return true;

      default:
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrResourceExtensionUnregistered"]({
          path,
          extension
        });
    }

    global__WEBPACK_IMPORTED_MODULE_2__["resMan"].AddPendingLoad(path);
    const image = new Image();
    image.crossOrigin = "anonymous";
    /**
     * Fires on errors
     */

    image.onerror = () => {
      global__WEBPACK_IMPORTED_MODULE_2__["resMan"].RemovePendingLoad(path);
      this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrHTTPRequest"]({
        path
      }));
    };
    /**
     * Fires when loaded
     */


    image.onload = () => {
      global__WEBPACK_IMPORTED_MODULE_2__["resMan"].RemovePendingLoad(path);
      global__WEBPACK_IMPORTED_MODULE_2__["resMan"].Queue(this, image);
      this.OnLoaded();
    };

    image.src = Tw2TextureRes.AddMipLevelSkipCount(path);
    return true;
  }
  /**
   * Unloads the texture from memory
   * @param {*} [log]
   * @returns {Boolean}
   */


  Unload(log) {
    if (this.texture) {
      global__WEBPACK_IMPORTED_MODULE_2__["device"].gl.deleteTexture(this.texture);
      this.texture = null;
    }

    this._extension = null;
    this._isAttached = false;
    this.OnUnloaded(log);
    return true;
  }
  /**
   * Attaches a texture
   * @param {WebGLTexture} texture
   */


  Attach(texture) {
    this.path = "";
    this.texture = texture;
    this._extension = null;
    this._isAttached = true;
    this.OnLoaded({
      hide: true,
      path: "attachment"
    });
    this.OnPrepared({
      hide: true,
      path: "attachment"
    });
  }
  /**
   * Reloads the texture
   * @param {eventLog} [eventLog]
   */


  Reload(eventLog) {
    if (!this._isAttached) {
      return super.Reload(eventLog);
    }
  }
  /**
   * Bind
   * @param sampler
   * @param slices
   */


  Bind(sampler, slices) {
    const d = global__WEBPACK_IMPORTED_MODULE_2__["device"],
          gl = d.gl;
    this.KeepAlive();
    let targetType = sampler.samplerType;
    if (targetType !== (this.isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D)) return;

    if (!this.texture) {
      const texture = targetType === gl.TEXTURE_2D ? d.GetFallbackTexture() : d.GetFallbackCubeMap();
      gl.bindTexture(targetType, texture);
      return;
    }

    if (sampler.isVolume) {
      gl.uniform1f(slices, this.height / this.width);
    }

    gl.bindTexture(targetType, this.texture);

    if (sampler.hash !== this._currentSampler) {
      sampler.Apply(d, this.hasMipMaps);
      this._currentSampler = sampler.hash;
    }
  }
  /**
   * Finds out if a number is to the power of 2
   * @param {Number} a
   * @returns {Boolean}
   */


  static IsPowerOfTwo(a) {
    return (a & a - 1) === 0;
  }
  /**
   * Adds mip levels to a path
   * @param {String} path
   * @returns {String}}
   */


  static AddMipLevelSkipCount(path) {
    const d = global__WEBPACK_IMPORTED_MODULE_2__["device"];

    if (d.mipLevelSkipCount > 0) {
      const index = path.lastIndexOf(".");

      if (index >= 0) {
        path = path.substr(0, index - 2) + "." + d.mipLevelSkipCount.toString() + path.substr(index);
      }
    }

    return path;
  }
  /**
   * Converts an int32 into FourCC format
   * @param {Number} value
   * @returns {String}
   */


  static Int32ToFourCC(value) {
    return String.fromCharCode(value & 0xff, value >> 8 & 0xff, value >> 16 & 0xff, value >> 24 & 0xff);
  }
  /**
   * Creates an image from a 2d texture
   * @param texture
   * @param width
   * @param height
   * @param format
   * @returns {HTMLImageElement}
   * @constructor
   */


  static CreateImageFrom2DTexture(texture, width = 512, height = 512, format = global__WEBPACK_IMPORTED_MODULE_2__["device"].gl.RGBA) {
    const gl = global__WEBPACK_IMPORTED_MODULE_2__["device"].gl;
    const fb = gl.createFramebuffer();
    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);
    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);
    const data = new Uint8Array(width * height * 4);
    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data);
    gl.deleteFramebuffer(fb);
    const canvas = document.createElement("canvas");
    canvas.width = width;
    canvas.height = height;
    const context = canvas.getContext("2d");
    const imageData = context.createImageData(width, height);
    imageData.data.set(data);
    context.putImageData(imageData, 0, 0);
    const img = new Image();
    img.src = canvas.toDataURL();
    return img;
  }

}

/***/ }),

/***/ "./core/resource/Tw2VideoRes.js":
/*!**************************************!*\
  !*** ./core/resource/Tw2VideoRes.js ***!
  \**************************************/
/*! exports provided: Tw2VideoRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VideoRes", function() { return Tw2VideoRes; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2Resource */ "./core/resource/Tw2Resource.js");
/* harmony import */ var _Tw2Error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Tw2Error */ "./core/Tw2Error.js");



/**
 * Tw2VideoRes
 *
 * @property {?WebGLTexture} texture     - The video's webgl texture
 * @property {?HTMLVideoElement} video   - The video
 * @property {Number} width              - The texture's width
 * @property {Number} height             - The texture's height
 * @property {Boolean} cycle             - Enables video looping
 * @property {Boolean} playOnLoad        - Plays the video as soon as it is able to
 * @property {Number} _currentSampler    - The current sampler's hash
 * @property {Number} _currentTime       - The video's current time
 * @property {Boolean} _playable         - Identifies if the video is playable
 * @property {Boolean} _isPlaying        - Identifies if the video is playing
 * @property {?Function} _onPlaying      - An optional callback which is fired when the video is playing
 * @property {?Function} _onPause        - An optional callback which is fired when the video is paused
 * @property {?Function} _onEnded        - An optional callback which is fired when the video has ended
 */

class Tw2VideoRes extends _Tw2Resource__WEBPACK_IMPORTED_MODULE_1__["Tw2Resource"] {
  constructor(...args) {
    super(...args);
    this.texture = null;
    this.video = null;
    this.width = 0;
    this.height = 0;
    this.cycle = true;
    this.playOnLoad = true;
    this._currentSampler = 0;
    this._currentTime = -1;
    this._playable = false;
    this._isPlaying = false;
    this._onPlaying = null;
    this._onPause = null;
    this._onEnded = null;
  }

  /**
   * Checks if the resource is good
   * @returns {Boolean}
   */
  IsGood() {
    this.KeepAlive();
    return super.IsGood() && this.video && this._playable;
  }
  /**
   * Keeps the resource alive
   */


  KeepAlive() {
    this.activeFrame = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].activeFrame;
  }
  /**
   * Plays the animation
   * @param {Boolean} [cycle] Sets playing to loop
   * @param {Function|null} [onFinished=null] Optional callback to fire when the video has finished
   */


  Play(cycle = false, onFinished = null) {
    this.cycle = cycle;
    this._onEnded = onFinished;

    if (this.video && this._playable) {
      this.video.loop = this.cycle;
      this.video.play();
    } else {
      this.playOnLoad = true;
    }
  }
  /**
   * Pauses the video
   */


  Pause() {
    if (this.video) {
      this.video.pause();
    } else {
      this.playOnLoad = false;
    }
  }
  /**
   * Prepares the resource
   * @param {undefined} response
   */


  Prepare(response) {
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;

    switch (this._extension) {
      case "mp4":
      case "webm":
      case "ogg":
        this.texture = gl.createTexture();
        gl.bindTexture(gl.TEXTURE_2D, this.texture);
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.video);
        gl.bindTexture(gl.TEXTURE_2D, null);
        this.width = this.video.width;
        this.height = this.video.height;
        this.video.loop = this.cycle;
        if (this.playOnLoad) this.video.play();
        break;

      default:
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrResourceExtensionUnregistered"]({
          path: this.path,
          extension: this._extension
        });
    }

    this.OnPrepared();
  }
  /**
   * Loads the resource from a path
   *
   * @param {String} path
   * @param {String} extension
   * @returns {Boolean} returns true to tell the resMan not to handle http requests
   */


  DoCustomLoad(path, extension) {
    switch (extension) {
      case "mp4":
      case "webm":
      case "ogg":
        this._extension = extension;
        break;

      default:
        throw new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrResourceExtensionUnregistered"]({
          path,
          extension
        });
    }

    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].AddPendingLoad(path);
    this.video = document.createElement("video");
    this.video.crossOrigin = "anonymous";
    this.video.muted = true;
    /**
     * Fires on errors
     */

    this.video.onerror = () => {
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].RemovePendingLoad(path);
      this.video = null;
      this.OnError(new _Tw2Error__WEBPACK_IMPORTED_MODULE_2__["ErrHTTPRequest"]({
        path
      }));
    };
    /**
     * Fires when the video is playable
     */


    this.video.oncanplay = () => {
      this._playable = true;
      this.video.oncanplay = null;
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].RemovePendingLoad(path);
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].Queue(this, undefined, extension);
      this.OnLoaded();
    };
    /**
     * Fires when the video has ended
     */


    this.video.onended = () => {
      this._isPlaying = false;
      if (this._onEnded) this._onEnded(this);
    };
    /**
     * Fires when the video is paused
     */


    this.video.onpause = () => {
      this._isPlaying = false;
      if (this._onPause) this._onPause(this);
    };
    /**
     * Fires when the video is playing
     */


    this.video.onplaying = () => {
      this._isPlaying = true;
      if (this._onPlaying) this._onPlaying(this);
    };

    this.video.src = path;
    return true;
  }
  /**
   * Unloads the video and texture from memory
   * @param {*} log
   */


  Unload(log) {
    if (this.texture) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteTexture(this.texture);
      this.texture = null;
    }

    this._extension = null;
    this._isPlaying = false;
    this._playable = false;
    this.playOnLoad = true;
    this.video = null;
    this.OnUnloaded(log);
    return true;
  }
  /**
   * Bind
   * @param {Tw2SamplerState} sampler
   */


  Bind(sampler) {
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl;
    this.KeepAlive();
    const targetType = sampler.samplerType;
    if (targetType !== gl.TEXTURE_2D) return;

    if (!this.texture) {
      gl.bindTexture(gl.TEXTURE_2D, d.GetFallbackTexture());
      return;
    }

    this._currentTime = this.video.currentTime;
    gl.bindTexture(gl.TEXTURE_2D, this.texture);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.video);
    gl.bindTexture(gl.TEXTURE_2D, null);
    gl.bindTexture(targetType, this.texture);

    if (sampler.hash !== this._currentSampler) {
      sampler.Apply(d, false);
      this._currentSampler = sampler.hash;
    }
  }

}

/***/ }),

/***/ "./core/resource/index.js":
/*!********************************!*\
  !*** ./core/resource/index.js ***!
  \********************************/
/*! exports provided: Tw2TextureRes, Tw2EffectRes, Tw2GeometryRes, Tw2LoadingObject, Tw2LodResource, Tw2Resource, Tw2Shader, Tw2VideoRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2EffectRes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2EffectRes */ "./core/resource/Tw2EffectRes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EffectRes", function() { return _Tw2EffectRes__WEBPACK_IMPORTED_MODULE_0__["Tw2EffectRes"]; });

/* harmony import */ var _Tw2GeometryRes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2GeometryRes */ "./core/resource/Tw2GeometryRes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2GeometryRes", function() { return _Tw2GeometryRes__WEBPACK_IMPORTED_MODULE_1__["Tw2GeometryRes"]; });

/* harmony import */ var _Tw2LoadingObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2LoadingObject */ "./core/resource/Tw2LoadingObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2LoadingObject", function() { return _Tw2LoadingObject__WEBPACK_IMPORTED_MODULE_2__["Tw2LoadingObject"]; });

/* harmony import */ var _Tw2LodResource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2LodResource */ "./core/resource/Tw2LodResource.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2LodResource", function() { return _Tw2LodResource__WEBPACK_IMPORTED_MODULE_3__["Tw2LodResource"]; });

/* harmony import */ var _Tw2Resource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2Resource */ "./core/resource/Tw2Resource.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Resource", function() { return _Tw2Resource__WEBPACK_IMPORTED_MODULE_4__["Tw2Resource"]; });

/* harmony import */ var _Tw2Shader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2Shader */ "./core/resource/Tw2Shader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Shader", function() { return _Tw2Shader__WEBPACK_IMPORTED_MODULE_5__["Tw2Shader"]; });

/* harmony import */ var _Tw2TextureRes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2TextureRes */ "./core/resource/Tw2TextureRes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TextureRes", function() { return _Tw2TextureRes__WEBPACK_IMPORTED_MODULE_6__["Tw2TextureRes"]; });

/* harmony import */ var _Tw2VideoRes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2VideoRes */ "./core/resource/Tw2VideoRes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VideoRes", function() { return _Tw2VideoRes__WEBPACK_IMPORTED_MODULE_7__["Tw2VideoRes"]; });










/***/ }),

/***/ "./core/resource/shaderOverrides.json":
/*!********************************************!*\
  !*** ./core/resource/shaderOverrides.json ***!
  \********************************************/
/*! exports provided: blinkinglightspool, boostervolumetric, fxarmorimpactv5, flarequad, default */
/***/ (function(module) {

module.exports = {"blinkinglightspool":{"r0.xy=r0.xx*c[0+a0.x].xy;":"if(a0.x==0){r0.xy=r0.xx*c[0].xy;}else if(a0.x==1){r0.xy=r0.xx*c[1].xy;}else if(a0.x==2){r0.xy=r0.xx*c[2].xy;}else if(a0.x==3){r0.xy=r0.xx*c[3].xy;}else if(a0.x==4){r0.xy=r0.xx*c[4].xy;}","texcoord=r3.zzww*c[0+a0.x].zwzz;":"if(a0.x==0){texcoord=r3.zzww*c[0].zwzz;}else if(a0.x==1){texcoord=r3.zzww*c[1].zwzz;}else if(a0.x==2){texcoord=r3.zzww*c[2].zwzz;}else if(a0.x==3){texcoord=r3.zzww*c[3].zwzz;}else if(a0.x==4){texcoord=r3.zzww*c[4].zwzz;}"},"boostervolumetric":{"for(int i=0;i<i0.x;++i){":"for(int i=0;i<12;++i){"},"fxarmorimpactv5":{"for(int i=0;i<i0.x;++i){":"for(int i=0;i<255;++i){"},"flarequad":{"r1.xyz=r0.zzw*c[0+a0.x].xyx;":"if(a0.x==0){r1.xyz=r0.zzw*c[0].xyx;}else if(a0.x==1){r1.xyz=r0.zzw*c[1].xyx;}else if(a0.x==2){r1.xyz=r0.zzw*c[2].xyx;}else if (a0.x==3){r1.xyz=r0.zzw*c[3].xyx;}else if(a0.x==4){r1.xyz=r0.zzw*c[4].xyx;}else if(a0.x==5){r1.xyz=r0.zzw*c[5].xyx;}","texcoord.xyw=r0.zzw*c[0+a0.x].zwz;":"if(a0.x==0){texcoord.xyw=r0.zzw*c[0].zwz;}else if(a0.x==1){texcoord.xyw=r0.zzw*c[1].zwz;}else if(a0.x==2){texcoord.xyw=r0.zzw*c[2].zwz;}else if(a0.x==3){texcoord.xyw=r0.zzw*c[3].zwz;}else if(a0.x==4){texcoord.xyw=r0.zzw*c[4].zwz;}else if(a0.x==5){texcoord.xyw=r0.zzw*c[5].zwz;}","r0.x=saturate(sqrt(abs(r0.x)));":"r0.x=clamp(sqrt(abs(r0.x)),0.0,1.0);"}};

/***/ }),

/***/ "./core/sampler/Tw2SamplerOverride.js":
/*!********************************************!*\
  !*** ./core/sampler/Tw2SamplerOverride.js ***!
  \********************************************/
/*! exports provided: Tw2SamplerOverride */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2SamplerOverride", function() { return Tw2SamplerOverride; });
/* harmony import */ var _Tw2SamplerState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2SamplerState */ "./core/sampler/Tw2SamplerState.js");

/**
 * Tw2SamplerOverride
 *
 * @property {Number} addressU
 * @property {Number} addressV
 * @property {Number} addressW
 * @property {Number} filter
 * @property {Number} mipFilter
 * @property {Number} lodBias
 * @property {Number} maxMipLevel
 * @property {Number} maxAnisotropy
 * @property {Boolean} forceAddressModes
 * @property {Tw2SamplerState} _sampler
 */

class Tw2SamplerOverride {
  constructor() {
    this.name = "";
    this.addressU = 0;
    this.addressV = 0;
    this.addressW = 0;
    this.filter = 0;
    this.mipFilter = 0;
    this.lodBias = 0;
    this.maxMipLevel = 0;
    this.maxAnisotropy = 0;
    this.forceAddressModes = false;
    this._sampler = null;
  }

  /**
   * Gets the sampler
   * @param {Tw2Device} device
   * @param {Tw2SamplerState} originalSampler
   * @returns {Tw2SamplerState}
   */
  GetSampler(device, originalSampler) {
    if (this._sampler) {
      return this._sampler;
    }

    this._sampler = new _Tw2SamplerState__WEBPACK_IMPORTED_MODULE_0__["Tw2SamplerState"]();
    const sampler = this._sampler;
    sampler.registerIndex = originalSampler.registerIndex;
    sampler.name = originalSampler.name;
    sampler.forceAddressModes = this.forceAddressModes;
    const {
      wrapModes,
      gl
    } = device;

    if (this.filter === 1) {
      switch (this.mipFilter) {
        case 0:
          sampler.minFilter = gl.NEAREST;
          break;

        case 1:
          sampler.minFilter = gl.NEAREST_MIPMAP_NEAREST;
          break;

        default:
          sampler.minFilter = gl.NEAREST_MIPMAP_LINEAR;
      }

      sampler.minFilterNoMips = gl.NEAREST;
      sampler.magFilter = gl.NEAREST;
    } else {
      switch (this.mipFilter) {
        case 0:
          sampler.minFilter = gl.LINEAR;
          break;

        case 1:
          sampler.minFilter = gl.LINEAR_MIPMAP_NEAREST;
          break;

        default:
          sampler.minFilter = gl.LINEAR_MIPMAP_LINEAR;
      }

      sampler.minFilterNoMips = gl.LINEAR;
      sampler.magFilter = gl.LINEAR;
    }

    if (this.filter === 3 || this.mipFilter === 3) {
      sampler.anisotropy = Math.max(this.maxAnisotropy, 1);
    }

    sampler.addressU = wrapModes[this.addressU];
    sampler.addressV = wrapModes[this.addressV];
    sampler.addressW = wrapModes[this.addressW];
    sampler.samplerType = originalSampler.samplerType;
    sampler.isVolume = originalSampler.isVolume;
    sampler.ComputeHash();
    return sampler;
  }

}

/***/ }),

/***/ "./core/sampler/Tw2SamplerState.js":
/*!*****************************************!*\
  !*** ./core/sampler/Tw2SamplerState.js ***!
  \*****************************************/
/*! exports provided: Tw2SamplerState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2SamplerState", function() { return Tw2SamplerState; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2SamplerState
 *
 * @property {String} name
 * @property {Number} registerIndex
 * @property {Number} minFilter
 * @property {Number} maxFilter
 * @property {Number} magFilter
 * @property {Number} minFilterNoMips
 * @property {Number} addressU
 * @property {Number} addressV
 * @property {Number} addressW
 * @property {Number} anisotropy
 * @property {Number} samplerType
 * @property {Boolean} isVolume
 * @property {Number} hash
 * @property {Boolean} forceAddressModes
 */

class Tw2SamplerState {
  constructor() {
    this.name = "";
    this.registerIndex = 0;
    this.minFilter = global__WEBPACK_IMPORTED_MODULE_0__["GL_LINEAR"];
    this.maxFilter = global__WEBPACK_IMPORTED_MODULE_0__["GL_LINEAR"];
    this.magFilter = global__WEBPACK_IMPORTED_MODULE_0__["GL_LINEAR"];
    this.minFilterNoMips = global__WEBPACK_IMPORTED_MODULE_0__["GL_LINEAR"];
    this.addressU = global__WEBPACK_IMPORTED_MODULE_0__["GL_REPEAT"];
    this.addressV = global__WEBPACK_IMPORTED_MODULE_0__["GL_REPEAT"];
    this.addressW = global__WEBPACK_IMPORTED_MODULE_0__["GL_REPEAT"];
    this.anisotropy = 1;
    this.samplerType = global__WEBPACK_IMPORTED_MODULE_0__["GL_TEXTURE_2D"];
    this.isVolume = false;
    this.hash = 0;
    this.forceAddressModes = false;
    this._borderColor = null;
    this._comparison = null;
    this._comparisonFunc = null;
    this._mipLODBias = null;
    this._minLOD = null;
    this._maxLOD = null;
  }

  /**
   * Gets the current filter mode
   * @returns {Number}
   */
  get filterMode() {
    return this.minFilterNoMips in global__WEBPACK_IMPORTED_MODULE_0__["FilterMode"] ? global__WEBPACK_IMPORTED_MODULE_0__["FilterMode"][this.minFilterNoMips] : 2;
  }
  /**
   * Gets the current mip filter mode
   * @returns {Number}
   */


  get mipFilterMode() {
    return this.minFilter in global__WEBPACK_IMPORTED_MODULE_0__["MipFilterMode"] ? global__WEBPACK_IMPORTED_MODULE_0__["MipFilterMode"][this.minFilter] : 2;
  }
  /**
   * Computes the sampler hash
   */


  ComputeHash() {
    this.hash = 2166136261;
    this.hash *= 16777619;
    this.hash ^= this.minFilter;
    this.hash *= 16777619;
    this.hash ^= this.maxFilter;
    this.hash *= 16777619;
    this.hash ^= this.addressU;
    this.hash *= 16777619;
    this.hash ^= this.addressV;
    this.hash *= 16777619;
    this.hash ^= this.anisotropy;
    this.hash += this.forceAddressModes ? 1 : 0;
  }
  /**
   * Apply
   * @param {Tw2Device} device
   * @param {Boolean} hasMipMaps
   */


  Apply(device, hasMipMaps) {
    const targetType = this.samplerType,
          gl = device.gl,
          ext = device.GetExtension("EXT_texture_filter_anisotropic"),
          useAddress = hasMipMaps || this.forceAddressModes;
    gl.texParameteri(targetType, gl.TEXTURE_WRAP_S, useAddress ? this.addressU : gl.CLAMP_TO_EDGE);
    gl.texParameteri(targetType, gl.TEXTURE_WRAP_T, useAddress ? this.addressV : gl.CLAMP_TO_EDGE);
    gl.texParameteri(targetType, gl.TEXTURE_MIN_FILTER, hasMipMaps ? this.minFilter : this.minFilterNoMips);
    gl.texParameteri(targetType, gl.TEXTURE_MAG_FILTER, this.magFilter);

    if (ext && device.enableAnisotropicFiltering) {
      gl.texParameterf(targetType, ext.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(this.anisotropy, ext.maxAnisotropy));
    }
  }

}

/***/ }),

/***/ "./core/sampler/index.js":
/*!*******************************!*\
  !*** ./core/sampler/index.js ***!
  \*******************************/
/*! exports provided: Tw2SamplerState, Tw2SamplerOverride */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2SamplerState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2SamplerState */ "./core/sampler/Tw2SamplerState.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SamplerState", function() { return _Tw2SamplerState__WEBPACK_IMPORTED_MODULE_0__["Tw2SamplerState"]; });

/* harmony import */ var _Tw2SamplerOverride__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2SamplerOverride */ "./core/sampler/Tw2SamplerOverride.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SamplerOverride", function() { return _Tw2SamplerOverride__WEBPACK_IMPORTED_MODULE_1__["Tw2SamplerOverride"]; });




/***/ }),

/***/ "./core/value/TriMatrix.js":
/*!*********************************!*\
  !*** ./core/value/TriMatrix.js ***!
  \*********************************/
/*! exports provided: TriMatrix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TriMatrix", function() { return TriMatrix; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * TriMatrix
 * TODO: Implement
 * TODO: Identify if this defaults to an identity matrix
 *
 * @property {Number} _11 -
 * @property {Number} _12 -
 * @property {Number} _13 -
 * @property {Number} _14 -
 * @property {Number} _21 -
 * @property {Number} _22 -
 * @property {Number} _23 -
 * @property {Number} _24 -
 * @property {Number} _31 -
 * @property {Number} _32 -
 * @property {Number} _33 -
 * @property {Number} _34 -
 * @property {Number} _41 -
 * @property {Number} _42 -
 * @property {Number} _43 -
 * @property {Number} _44 -
 */

class TriMatrix extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this._11 = 0;
    this._12 = 0;
    this._13 = 0;
    this._14 = 0;
    this._21 = 0;
    this._22 = 0;
    this._23 = 0;
    this._24 = 0;
    this._31 = 0;
    this._32 = 0;
    this._33 = 0;
    this._34 = 0;
    this._41 = 0;
    this._42 = 0;
    this._43 = 0;
    this._44 = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["_11", r.float], ["_12", r.float], ["_13", r.float], ["_14", r.float], ["_21", r.float], ["_22", r.float], ["_23", r.float], ["_24", r.float], ["_31", r.float], ["_32", r.float], ["_33", r.float], ["_34", r.float], ["_41", r.float], ["_42", r.float], ["_43", r.float], ["_44", r.float]];
  }

}

/***/ }),

/***/ "./core/value/Tw2Float.js":
/*!********************************!*\
  !*** ./core/value/Tw2Float.js ***!
  \********************************/
/*! exports provided: Tw2Float */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Float", function() { return Tw2Float; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2Float
 * @ccp Tw2Float
 *
 * @property {Number} value -
 */

class Tw2Float extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.value = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["value", r.float]];
  }

}

/***/ }),

/***/ "./core/value/index.js":
/*!*****************************!*\
  !*** ./core/value/index.js ***!
  \*****************************/
/*! exports provided: Tw2Float, TriMatrix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2Float__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Float */ "./core/value/Tw2Float.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Float", function() { return _Tw2Float__WEBPACK_IMPORTED_MODULE_0__["Tw2Float"]; });

/* harmony import */ var _TriMatrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TriMatrix */ "./core/value/TriMatrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TriMatrix", function() { return _TriMatrix__WEBPACK_IMPORTED_MODULE_1__["TriMatrix"]; });




/***/ }),

/***/ "./core/vertex/Tw2VertexDeclaration.js":
/*!*********************************************!*\
  !*** ./core/vertex/Tw2VertexDeclaration.js ***!
  \*********************************************/
/*! exports provided: Tw2VertexDeclaration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VertexDeclaration", function() { return Tw2VertexDeclaration; });
/* harmony import */ var _Tw2VertexElement__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2VertexElement */ "./core/vertex/Tw2VertexElement.js");

/**
 * Tw2VertexDeclaration
 *
 * @property {Array.<Tw2VertexElement>} elements
 * @property {Array.<Tw2VertexElement>} elementsSorted
 * @property {?Number} stride
 * @property {?Number} vertexSize
 */

class Tw2VertexDeclaration {
  constructor() {
    this.elements = [];
    this.elementsSorted = [];
    this.stride = null;
  }

  /**
   * Clears the declaration
   */
  Clear() {
    this.elements.splice(0, this.elements.length);
    this.RebuildHash();
  }
  /**
   * Sets the vertex stride
   * @param {Number} val
   * @returns {Tw2VertexDeclaration}
   */


  SetStride(val) {
    this.stride = val;
    return this;
  }
  /**
   * Rebuilds the declaration
   */


  RebuildHash() {
    this.elementsSorted.splice(0, this.elementsSorted.length);

    for (let i = 0; i < this.elements.length; ++i) {
      this.elementsSorted.push(this.elements[i]);
    }

    this.elementsSorted.sort(Tw2VertexDeclaration.CompareDeclarationElements);
  }
  /**
   * Finds an element by it's usage type and usage index
   * @param {Number} usage
   * @param {Number} usageIndex
   * @returns {?Tw2VertexElement}
   */


  FindUsage(usage, usageIndex) {
    for (let i = 0; i < this.elementsSorted.length; ++i) {
      const e = this.elementsSorted[i];

      if (e.usage === usage) {
        if (e.usageIndex === usageIndex) return e;else if (e.usageIndex > usageIndex) return null;
      }

      if (e.usage > usage) return null;
    }

    return null;
  }
  /**
   * Sets declarations
   * TODO: Move to the device?
   * @param {Tw2Device} device
   * @param {Tw2VertexDeclaration} inputDecl
   * @param {Number} stride
   * @returns {Boolean}
   */


  SetDeclaration(device, inputDecl, stride) {
    const gl = device.gl;
    let index = 0;

    for (let i = 0; i < inputDecl.elementsSorted.length; ++i) {
      const el = inputDecl.elementsSorted[i];
      if (el.location < 0) continue;

      while (true) {
        if (index >= this.elementsSorted.length) {
          gl.disableVertexAttribArray(el.location);
          gl.vertexAttrib4f(el.location, 0, 0, 0, 0);
          break;
        }

        const input = this.elementsSorted[index],
              cmp = Tw2VertexDeclaration.CompareDeclarationElements(input, el);

        if (cmp > 0) {
          gl.disableVertexAttribArray(el.location);
          gl.vertexAttrib4f(el.location, 0, 0, 0, 0);
          break;
        }

        if (cmp === 0) {
          if (input.customSetter) {
            input.customSetter(el);
          } else {
            gl.enableVertexAttribArray(el.location);
            gl.vertexAttribPointer(el.location, input.elements, input.type, false, stride, input.offset);
          }

          break;
        }

        index++;
      }
    }

    return true;
  }
  /**
   * Sets a partial declaration
   * @param {Tw2Device} device
   * @param {Tw2VertexDeclaration} inputDecl
   * @param {Number} stride
   * @param {Number} [usageOffset]
   * @param {Number} [divisor]
   * @returns {Array}
   */


  SetPartialDeclaration(device, inputDecl, stride, usageOffset, divisor) {
    const gl = device.gl,
          resetData = [];
    let index = 0;

    for (let i = 0; i < inputDecl.elementsSorted.length; ++i) {
      const el = inputDecl.elementsSorted[i];
      if (el.location < 0) continue;

      while (true) {
        const input = this.elementsSorted[index],
              cmp = Tw2VertexDeclaration.CompareDeclarationElements(input, el, usageOffset);

        if (cmp === 0) {
          if (input.customSetter) {
            input.customSetter(el);
          } else {
            gl.enableVertexAttribArray(el.location);
            gl.vertexAttribPointer(el.location, input.elements, input.type, false, stride, input.offset);
            gl.vertexAttribDivisor(el.location, divisor);

            if (divisor) {
              resetData.push(el.location);
            }
          }

          break;
        } else if (cmp > 0) {
          if (!divisor) {
            gl.disableVertexAttribArray(el.location);
            gl.vertexAttrib4f(el.location, 0, 0, 0, 0);
          }

          break;
        }

        index++;

        if (index >= this.elementsSorted.length) {
          if (!divisor) {
            gl.disableVertexAttribArray(el.location);
            gl.vertexAttrib4f(el.location, 0, 0, 0, 0);
          }

          return resetData;
        }
      }
    }

    return resetData;
  }
  /**
   * Resets instance divisors
   * TODO: Move to the device?
   * @param {Tw2Device} device
   * @param {?Array} [resetData]
   */


  ResetInstanceDivisors(device, resetData) {
    if (resetData) {
      for (let i = 0; i < resetData.length; ++i) {
        device.gl.vertexAttribDivisor(resetData[i], 0);
      }
    }
  }
  /**
   * CompareDeclarationElements
   * @param {Tw2VertexElement} a
   * @param {Tw2VertexElement} b
   * @param {Number} [usageOffset=0]
   * @returns {Number}
   */


  static CompareDeclarationElements(a, b, usageOffset = 0) {
    if (a.usage < b.usage) return -1;
    if (a.usage > b.usage) return 1;
    if (a.usageIndex + usageOffset < b.usageIndex) return -1;
    if (a.usageIndex + usageOffset > b.usageIndex) return 1;
    return 0;
  }
  /**
   * Creates a vertex declaration from a plain object
   * TODO: Allow preset element offsets
   * @param {RawVertexDataArray} values
   * @param {{}} [opt]
   * @param {Boolean} [opt.skipUpdate]
   */


  static from(values, opt) {
    const item = new Tw2VertexDeclaration();

    if (values) {
      let currentOffset = 0;

      for (let i = 0; i < values.length; i++) {
        values[i].offset = currentOffset;
        item.elements.push(_Tw2VertexElement__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexElement"].from(values[i]));
        currentOffset += values[i].elements * 4;
      }

      if (!opt || !opt.skipUpdate) item.RebuildHash();
    }

    return item;
  }

}

/***/ }),

/***/ "./core/vertex/Tw2VertexElement.js":
/*!*****************************************!*\
  !*** ./core/vertex/Tw2VertexElement.js ***!
  \*****************************************/
/*! exports provided: Tw2VertexElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VertexElement", function() { return Tw2VertexElement; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2VertexElement
 *
 * @property {Function} customSetter
 * @property {Number} elements
 * @property {?Number} location
 * @property {Number} offset
 * @property {Number} type
 * @property {Number} usage
 * @property {Number} usageIndex
 */

class Tw2VertexElement {
  constructor() {
    this.customSetter = null;
    this.elements = null;
    this.location = null;
    this.offset = 0;
    this.type = null;
    this.usage = -1;
    this.usageIndex = null;
    this._registerIndex = null;
    this._usedMask = null;
    this._attr = null;
  }

  /**
   * Gets the vertex's type as a string
   * @returns {string|string}
   */
  get string() {
    return Tw2VertexElement.TypeMap[this.usage] || "UNKNOWN";
  }
  /**
   * Creates a vertex element from values
   * @param {RawVertexData} [values]
   * @returns {Tw2VertexElement}
   */


  static from(values) {
    const item = new Tw2VertexElement();

    if (values) {
      // Compulsory
      let {
        usage,
        usageIndex
      } = values;
      item.usage = typeof usage === "string" ? this.Type[usage.toUpperCase()] : usage;
      item.usageIndex = usageIndex; // Optional

      const {
        elements = null,
        type = global__WEBPACK_IMPORTED_MODULE_0__["GL_FLOAT"],
        offset = 0,
        location = null,
        customSetter = null
      } = values;
      item.offset = offset;
      item.elements = elements;
      item.type = type;
      item.location = location;
      item.customSetter = customSetter; // Unused

      const {
        registerIndex = null,
        usedMask = null,
        attr = null
      } = values;
      item._registerIndex = registerIndex;
      item._usedMask = usedMask; // Debugging

      item._attr = attr;
    }

    return item;
  }
  /**
   * Vertex element types
   * @type {*}
   */


}
Tw2VertexElement.Type = {
  POSITION: 0,
  COLOR: 1,
  NORMAL: 2,
  TANGENT: 3,
  BINORMAL: 4,
  TEXCOORD: 5,
  BLENDWEIGHT: 6,
  BLENDINDICES: 7
};
Tw2VertexElement.TypeMap = ["POSITION", "COLOR", "NORMAL", "TANGENT", "BINORMAL", "TEXCOORD", "BLENDWEIGHT", "BLENDINDICES"];

/***/ }),

/***/ "./core/vertex/index.js":
/*!******************************!*\
  !*** ./core/vertex/index.js ***!
  \******************************/
/*! exports provided: Tw2VertexDeclaration, Tw2VertexElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2VertexDeclaration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2VertexDeclaration */ "./core/vertex/Tw2VertexDeclaration.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VertexDeclaration", function() { return _Tw2VertexDeclaration__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexDeclaration"]; });

/* harmony import */ var _Tw2VertexElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2VertexElement */ "./core/vertex/Tw2VertexElement.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VertexElement", function() { return _Tw2VertexElement__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexElement"]; });



/**
 * Raw vertex element data
 * @typedef {{}} RawVertexData
 * @param {String|Number} usage
 * @param {Number} usageIndex
 * @param {Number} elements
 * @param {?!Number} [type]
 * @param {?!Number} [offset = 0]
 * @param {?!Number} [location=null]
 * @param {?!Function} [customSetter=null]
 */

/**
 * Raw vertex element data array
 * @typedef {Array<RawVertexData>} RawVertexDataArray
 */

/***/ }),

/***/ "./curve/Tw2CurveSet.js":
/*!******************************!*\
  !*** ./curve/Tw2CurveSet.js ***!
  \******************************/
/*! exports provided: Tw2CurveSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveSet", function() { return Tw2CurveSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Curve set
 * TODO: Implement useSimTimeRebase
 * TODO: Implement ranges - Are these read only or do they need to relate back to an AnimationRes some how?
 * @ccp TriCurveSet
 *
 * @property {Array.<Tw2ValueBinding>} bindings                             -
 * @property {Array.<Tw2Curve|Tw2CurveExpression|Tw2CurveSequencer>} curves -
 * @property {Boolean} playOnLoad                                           -
 * @property {Array.<Tw2CurveSetRange>} ranges                              -
 * @property {Number} scale                                                 -
 * @property {Boolean} useSimTimeRebase                                     -
 * @property {Boolean} _isPlaying                                           -
 * @property {Number} _scaledTime                                           -
 */

class Tw2CurveSet extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.bindings = [];
    this.curves = [];
    this.playOnLoad = true;
    this.ranges = [];
    this.scale = 1;
    this.useSimTimeRebase = false;
    this.scaledTime = 0;
    this._isPlaying = false;
  }

  /**
   * Initializes the Tw2CurveSet
   */
  Initialize() {
    if (this.playOnLoad) {
      this.Play();
    }
  }
  /**
   * Plays the Tw2CurveSet
   */


  Play() {
    this._isPlaying = true;
    this.scaledTime = 0;
  }
  /**
   * Plays the Tw2CurveSet from a specific time
   * @param {Number} [time=0]
   */


  PlayFrom(time = 0) {
    this._isPlaying = true;
    this.scaledTime = time * this.scale;
  }
  /**
   * Stops the Tw2CurveSet from playing
   */


  Stop() {
    this._isPlaying = false;
  }
  /**
   * Internal render/update function which is called every frame
   * @param {Number} dt - Delta Time
   */


  Update(dt) {
    if (this._isPlaying) {
      this.scaledTime += dt * this.scale;

      for (let i = 0; i < this.curves.length; ++i) {
        this.curves[i].UpdateValue(this.scaledTime);
      }

      for (let i = 0; i < this.bindings.length; ++i) {
        this.bindings[i].CopyValue();
      }
    }
  }
  /**
   * Gets a range by name
   * @param {String}name
   * @returns {?Tw2CurveSetRange}
   */


  GetRangeByName(name) {
    for (let i = 0; i < this.ranges.length; i++) {
      if (this.ranges[i].name === name) {
        return this.ranges[i];
      }
    }

    return null;
  }
  /**
   * Gets the maximum curve duration
   *
   * @returns {Number}
   */


  GetMaxCurveDuration() {
    let length = 0;

    for (let i = 0; i < this.curves.length; ++i) {
      if ("GetLength" in this.curves[i]) {
        length = Math.max(length, this.curves[i].GetLength());
      }
    }

    return length;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["bindings", r.array], ["curves", r.array], ["name", r.string], ["playOnLoad", r.boolean], ["ranges", r.array], ["scale", r.float], ["useSimTimeRebase", r.boolean]];
  }

}

/***/ }),

/***/ "./curve/Tw2CurveSetRange.js":
/*!***********************************!*\
  !*** ./curve/Tw2CurveSetRange.js ***!
  \***********************************/
/*! exports provided: Tw2CurveSetRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveSetRange", function() { return Tw2CurveSetRange; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Curve set range
 * @ccp Tr2CurveSetRange
 *
 * @property {String} name      -
 * @property {Number} endTime   -
 * @property {Boolean} looped   -
 * @property {Number} startTime -
 */

class Tw2CurveSetRange extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.endTime = 0;
    this.looped = false;
    this.startTime = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["endTime", r.float], ["looped", r.boolean], ["name", r.string], ["startTime", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2CurveSetRange.__isStaging = 4;

/***/ }),

/***/ "./curve/Tw2ValueBinding.js":
/*!**********************************!*\
  !*** ./curve/Tw2ValueBinding.js ***!
  \**********************************/
/*! exports provided: Tw2ValueBinding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ValueBinding", function() { return Tw2ValueBinding; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core_parameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core/parameter */ "./core/parameter/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core_Tw2Error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core/Tw2Error */ "./core/Tw2Error.js");




/**
 * Tw2ValueBinding
 * TODO: Looks like there are less swizzles than before, might be able to simplify this class (eg if v1,v2,v3,v4 gone)
 * TODO: Handle utility functions
 * TODO: Figure out a way of telling if a source/destination is RGBA when building from a UI rather than a swizzle
 * @ccp TriValueBinding
 *
 * @property {String} name                 -
 * @property {String} destinationAttribute -
 * @property {*} destinationObject         -
 * @property {vec4} offset                 -
 * @property {Number} scale                -
 * @property {String} sourceAttribute      -
 * @property {*} sourceObject              -
 * @property {Function} _copyFunc          -
 * @property {Number} _destinationElement  -
 * @property {Boolean} _destinationIsArray -
 * @property {Boolean} _destinationIsRGBA  -
 * @property {Number} _sourceElement       -
 * @property {Boolean} _sourceIsArray      -
 * @property {Boolean} _sourceIsRGBA       -
 */

class Tw2ValueBinding extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.destinationAttribute = "";
    this.destinationObject = null;
    this.offset = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.scale = 1;
    this.sourceAttribute = "";
    this.sourceObject = null;
    this._copyFunc = null;
    this._destinationElement = null;
    this._destinationIsArray = null;
    this._destinationIsRGBA = null;
    this._sourceElement = null;
    this._sourceIsArray = null;
    this._sourceIsRGBA = null;
  }

  /**
   * Initializes the binding
   */
  Initialize() {
    this.UpdateValues();
  }
  /**
   * Fires on value changes
   */


  OnValueChanged() {
    if (this._copyFunc !== null) return;
    if (!this.sourceObject || this.sourceAttribute === "") return;
    if (!this.destinationObject || this.destinationAttribute === "") return;
    /*
    if (this.sourceObject && "_ref" in this.sourceObject)
    {
        this.sourceObject = this.FindIDFromRoot(this.sourceObject._ref);
        if (!this.sourceObject) throw new ErrBindingReference({object: "source"});
    }
      // Handle destination by reference
    if (this.destinationObject && "_ref" in this.destinationObject)
    {
        this.destinationObject = this.FindIDFromRoot(this.destinationObject._ref);
        if (!this.destinationObject) throw new ErrBindingReference({object: "destination"});
    }
     */

    let srcSwizzled = false,
        destSwizzled = false,
        srcSwizzle = this.sourceAttribute.substr(-2);

    if (srcSwizzle === ".x" || srcSwizzle === ".r") {
      srcSwizzled = true;
      this._sourceElement = 0;
      this.sourceAttribute = this.sourceAttribute.substr(0, this.sourceAttribute.length - 2);
      this._sourceIsRGBA = srcSwizzle === ".r";
    } else if (srcSwizzle === ".y" || srcSwizzle === ".g") {
      srcSwizzled = true;
      this._sourceElement = 1;
      this.sourceAttribute = this.sourceAttribute.substr(0, this.sourceAttribute.length - 2);
      this._sourceIsRGBA = srcSwizzle === ".g";
    } else if (srcSwizzle === ".z" || srcSwizzle === ".b") {
      srcSwizzled = true;
      this._sourceElement = 2;
      this.sourceAttribute = this.sourceAttribute.substr(0, this.sourceAttribute.length - 2);
      this._sourceIsRGBA = srcSwizzle === ".b";
    } else if (srcSwizzle === ".w" || srcSwizzle === ".a") {
      srcSwizzled = true;
      this._sourceElement = 3;
      this.sourceAttribute = this.sourceAttribute.substr(0, this.sourceAttribute.length - 2);
      this._sourceIsRGBA = srcSwizzle === ".a";
    } else if (this.sourceObject instanceof core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Vector4Parameter"]) {
      if (this.sourceAttribute === "v1") {
        srcSwizzled = true;
        this._sourceElement = 0;
        this.sourceAttribute = "value";
      } else if (this.sourceAttribute === "v2") {
        srcSwizzled = true;
        this._sourceElement = 1;
        this.sourceAttribute = "value";
      } else if (this.sourceAttribute === "v3") {
        srcSwizzled = true;
        this._sourceElement = 2;
        this.sourceAttribute = "value";
      } else if (this.sourceAttribute === "v4") {
        srcSwizzled = true;
        this._sourceElement = 3;
        this.sourceAttribute = "value";
      }
    }

    let destSwizzle = this.destinationAttribute.substr(-2);

    if (destSwizzle === ".x" || destSwizzle === ".r") {
      destSwizzled = true;
      this._destinationElement = 0;
      this.destinationAttribute = this.destinationAttribute.substr(0, this.destinationAttribute.length - 2);
      this._destinationIsRGBA = destSwizzle === ".r";
    } else if (destSwizzle === ".y" || destSwizzle === ".g") {
      destSwizzled = true;
      this._destinationElement = 1;
      this.destinationAttribute = this.destinationAttribute.substr(0, this.destinationAttribute.length - 2);
      this._destinationIsRGBA = destSwizzle === ".g";
    } else if (destSwizzle === ".z" || destSwizzle === ".b") {
      destSwizzled = true;
      this._destinationElement = 2;
      this.destinationAttribute = this.destinationAttribute.substr(0, this.destinationAttribute.length - 2);
      this._destinationIsRGBA = destSwizzle === ".b";
    } else if (destSwizzle === ".w" || destSwizzle === ".a") {
      destSwizzled = true;
      this._destinationElement = 3;
      this.destinationAttribute = this.destinationAttribute.substr(0, this.destinationAttribute.length - 2);
      this._destinationIsRGBA = destSwizzle === ".a";
    } else if (this.destinationObject instanceof core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Vector4Parameter"]) {
      if (this.destinationAttribute === "v1") {
        destSwizzled = true;
        this._destinationElement = 0;
        this.destinationAttribute = "value";
      } else if (this.destinationAttribute === "v2") {
        destSwizzled = true;
        this._destinationElement = 1;
        this.destinationAttribute = "value";
      } else if (this.destinationAttribute === "v3") {
        destSwizzled = true;
        this._destinationElement = 2;
        this.destinationAttribute = "value";
      } else if (this.destinationAttribute === "v4") {
        destSwizzled = true;
        this._destinationElement = 3;
        this.destinationAttribute = "value";
      }
    }

    const src = this.sourceObject[this.sourceAttribute],
          dest = this.destinationObject[this.destinationAttribute]; // Targets must be defined

    if (src === undefined) {
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrBindingValueUndefined"]({
        name: this.name,
        object: "source",
        property: this.sourceAttribute
      });
    }

    if (dest === undefined) {
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrBindingValueUndefined"]({
        name: this.name,
        object: "destination",
        property: this.destinationAttribute
      });
    }

    const srcIsArr = this._sourceIsArray = Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isArrayLike"])(src),
          destIsArr = this._destinationIsArray = Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isArrayLike"])(dest),
          con = Tw2ValueBinding;
    let copyFunc;

    if (srcIsArr === destIsArr && typeof src === typeof dest) {
      if (!srcIsArr) {
        copyFunc = con.CopyValueToValue;
      } else if (srcSwizzled) {
        copyFunc = destSwizzled ? con.CopyElementToElement : con.ReplicateElement;
      } else if (src.length <= dest.length) {
        copyFunc = con.CopyArray;
      } else if (src.length === 16) {
        copyFunc = con.ExtractPos;
      }
    } else if (srcIsArr && srcSwizzled && Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(dest)) {
      copyFunc = con.CopyElementToValue;
    } else if (destIsArr && Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(src)) {
      copyFunc = destSwizzled ? con.CopyValueToElement : con.ReplicateValue;
    } else if (Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(src) && Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isBoolean"])(dest)) {
      copyFunc = con.CopyFloatToBoolean;
    } else if (Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isBoolean"])(src) && Object(global_util__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(dest)) {
      copyFunc = con.CopyBooleanToFloat;
    }

    if (!copyFunc) {
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_3__["ErrBindingType"]({
        name: this.name
      });
    }

    this._copyFunc = copyFunc;
  }
  /**
   * CopyValue
   * @param {*} [controller=this]
   */


  CopyValue(controller = this) {
    if (this._copyFunc) {
      this._copyFunc(this);

      if ("UpdateValues" in this.destinationObject) {
        this.destinationObject.UpdateValues({
          controller
        });
      } else if ("OnValueChanged" in this.destinationObject) {
        this.destinationObject.OnValueChanged({
          controller
        });
      }
    }
  }
  /**
   * Gets the destination target (attribute with swizzles)
   * @returns {String}
   */


  GetDestinationTarget() {
    if (!this._copyFunc) return this.destinationAttribute;
    return this.constructor.GetAttribute(this.destinationObject, this.destinationAttribute, this._destinationElement, this._destinationIsRGBA);
  }
  /**
   * Gets the source target (attribute with swizzles)
   * @returns {String}
   */


  GetSourceTarget() {
    if (!this._copyFunc) return this.sourceAttribute;
    return this.constructor.GetAttribute(this.sourceObject, this.sourceAttribute, this._sourceElement, this._sourceIsRGBA);
  }
  /**
   * Sets source object and attribute
   * @param {*} obj
   * @param {String} attr
   * @param {Number} [element]
   * @param {Boolean} [isRGBA]
   */


  SetSource(obj, attr, element, isRGBA) {
    const {
      object,
      attribute
    } = this.constructor.GetTargets(obj, attr, element, isRGBA);
    this.sourceObject = object;
    this.sourceAttribute = attribute;
    this._copyFunc = null; //this.UpdateValues();
  }
  /**
   * Sets destination object and attribute
   * @param {*} obj
   * @param {String} attr
   * @param {Number} [element]
   * @param {Boolean} [isRGBA]
   */


  SetDestination(obj, attr, element, isRGBA) {
    const {
      object,
      attribute
    } = this.constructor.GetTargets(obj, attr, element, isRGBA);
    this.destinationObject = object;
    this.destinationAttribute = attribute;
    this._copyFunc = null; //this.UpdateValues();
  }
  /**
   * Gets a value bindings attribute and swizzles for serialization
   * @param {*} object
   * @param {String} attribute
   * @param {?Number} element
   * @param {Boolean} isRGBA
   * @returns {String}
   */


  static GetAttribute(object, attribute, element, isRGBA) {
    // Looks to be deprecated
    if (object instanceof core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Vector4Parameter"] && attribute === "value") {
      switch (element) {
        case 0:
          return "v0";

        case 1:
          return "v1";

        case 2:
          return "v2";

        case 3:
          return "v4";

        default:
          return attribute;
      }
    }

    switch (element) {
      case 0:
        return attribute + isRGBA ? ".r" : ".x";

      case 1:
        return attribute + isRGBA ? ".g" : ".y";

      case 2:
        return attribute + isRGBA ? ".b" : ".z";

      case 3:
        return attribute + isRGBA ? ".a" : ".w";

      default:
        return attribute;
    }
  }
  /**
   * Gets target values
   * @param {*} object
   * @param {String} attribute
   * @param {Number} [element]
   * @param {Boolean} [isRGBA]
   * @returns {{object: *, attribute: String}}
   */


  static GetTargets(object, attribute, element, isRGBA) {
    // Try to guess if rgba
    if (element !== undefined && isRGBA === undefined) {
      isRGBA = attribute.toUpperCase().includes("COLOR");
    } // Looks to be depreciated


    if (object instanceof core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Vector4Parameter"] && attribute === "value") {
      switch (element) {
        case 0:
          attribute = "v0";
          break;

        case 1:
          attribute = "v1";
          break;

        case 2:
          attribute = "v2";
          break;

        case 3:
          attribute = "v3";
          break;
      }
    } else {
      switch (element) {
        case 0:
          attribute += isRGBA ? ".r" : ".x";
          break;

        case 1:
          attribute += isRGBA ? ".g" : ".y";
          break;

        case 2:
          attribute += isRGBA ? ".b" : ".z";
          break;

        case 3:
          attribute += isRGBA ? ".a" : ".w";
          break;
      }
    }

    return {
      object,
      attribute
    };
  }
  /**
   * CopyValueToValue
   * @param {Tw2ValueBinding} a
   */


  static CopyValueToValue(a) {
    a.destinationObject[a.destinationAttribute] = a.sourceObject[a.sourceAttribute] * a.scale + a.offset[0];
  }
  /**
   * CopyArray
   * @param {Tw2ValueBinding} a
   */


  static CopyArray(a) {
    let count = Math.min(a.destinationObject[a.destinationAttribute].length, a.sourceObject[a.sourceAttribute].length);

    for (let i = 0; i < count; ++i) {
      a.destinationObject[a.destinationAttribute][i] = a.sourceObject[a.sourceAttribute][i] * a.scale + a.offset[i];
    }
  }
  /**
   * CopyElementToElement
   * @param {Tw2ValueBinding} a
   */


  static CopyElementToElement(a) {
    a.destinationObject[a.destinationAttribute][a._destinationElement] = a.sourceObject[a.sourceAttribute][a._sourceElement] * a.scale + a.offset[0];
  }
  /**
   * ReplicateValue
   * @param {Tw2ValueBinding} a
   */


  static ReplicateValue(a) {
    for (let i = 0; i < a.destinationObject[a.destinationAttribute].length; ++i) {
      a.destinationObject[a.destinationAttribute][i] = a.sourceObject[a.sourceAttribute] * a.scale + a.offset[i];
    }
  }
  /**
   * CopyArray
   * @param {Tw2ValueBinding} a
   */


  static ReplicateElement(a) {
    for (let i = 0; i < a.destinationObject[a.destinationAttribute].length; ++i) {
      a.destinationObject[a.destinationAttribute][i] = a.sourceObject[a.sourceAttribute][a._sourceElement] * a.scale + a.offset[i];
    }
  }
  /**
   * ExtractPos
   * @param {Tw2ValueBinding} a
   */


  static ExtractPos(a) {
    for (let i = 0; i < a.destinationObject[a.destinationAttribute].length; ++i) {
      a.destinationObject[a.destinationAttribute][i] = a.sourceObject[a.sourceAttribute][i + 12] * a.scale + a.offset[i];
    }
  }
  /**
   * CopyElementToValue
   * @param {Tw2ValueBinding} a
   */


  static CopyElementToValue(a) {
    a.destinationObject[a.destinationAttribute] = a.sourceObject[a.sourceAttribute][a._sourceElement] * a.scale + a.offset[0];
  }
  /**
   * CopyValueToElement
   * @param {Tw2ValueBinding} a
   */


  static CopyValueToElement(a) {
    a.destinationObject[a.destinationAttribute][a._destinationElement] = a.sourceObject[a.sourceAttribute] * a.scale + a.offset[0];
  }
  /**
   * CopyFloatToBoolean
   * @param {Tw2ValueBinding} a
   */


  static CopyFloatToBoolean(a) {
    a.destinationObject[a.destinationAttribute] = a.sourceObject[a.sourceAttribute] !== 0;
  }
  /**
   * CopyFloatToBoolean
   * @param {Tw2ValueBinding} a
   */


  static CopyBooleanToFloat(a) {
    a.destinationObject[a.destinationAttribute] = a.sourceObject[a.sourceAttribute] ? 1 : 0;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["destinationObject", r.object], ["destinationAttribute", r.string], ["name", r.string], ["offset", r.vector4], ["scale", r.float], ["sourceObject", r.object], ["sourceAttribute", r.string]];
  }

}

/***/ }),

/***/ "./curve/adapter/Tr2RotationAdapter.js":
/*!*********************************************!*\
  !*** ./curve/adapter/Tr2RotationAdapter.js ***!
  \*********************************************/
/*! exports provided: Tr2RotationAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2RotationAdapter", function() { return Tr2RotationAdapter; });
/* harmony import */ var _Tw2CurveAdapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2CurveAdapter */ "./curve/adapter/Tw2CurveAdapter.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Tr2RotationAdapter
 * @ccp Tr2RotationAdapter
 *
 * @property {vec4} value - rotation
 */

class Tr2RotationAdapter extends _Tw2CurveAdapter__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveAdapter"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_1__["vec4"].create();
  }

  /**
   * Gets value at a given time
   * @param {Number} time
   * @param {*} value
   */
  GetValueAt(time, value) {
    if (this.curve) {
      this.curve.GetValueAt(time, this.value);
    }

    return global__WEBPACK_IMPORTED_MODULE_1__["vec4"].copy(value, this.value);
  }
  /**
   * The adapter's output dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["curve", r.object], ["value", r.vector4]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2RotationAdapter.outputDimension = 4;
Tr2RotationAdapter.__isStaging = 4;

/***/ }),

/***/ "./curve/adapter/Tr2TranslationAdapter.js":
/*!************************************************!*\
  !*** ./curve/adapter/Tr2TranslationAdapter.js ***!
  \************************************************/
/*! exports provided: Tr2TranslationAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2TranslationAdapter", function() { return Tr2TranslationAdapter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveAdapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2CurveAdapter */ "./curve/adapter/Tw2CurveAdapter.js");


/**
 * Tr2TranslationAdapter
 * @ccp Tr2TranslationAdapter
 *
 * @property {vec3} value - translation
 */

class Tr2TranslationAdapter extends _Tw2CurveAdapter__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveAdapter"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Gets value at a given time
   * @param {Number} time
   * @param {*} value
   */
  GetValueAt(time, value) {
    if (this.curve) {
      this.curve.GetValueAt(time, this.value);
    }

    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.value);
  }
  /**
   * The sequencer's output dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["curve", r.object], ["value", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2TranslationAdapter.outputDimension = 3;
Tr2TranslationAdapter.__isStaging = 4;

/***/ }),

/***/ "./curve/adapter/Tw2CurveAdapter.js":
/*!******************************************!*\
  !*** ./curve/adapter/Tw2CurveAdapter.js ***!
  \******************************************/
/*! exports provided: Tw2CurveAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveAdapter", function() { return Tw2CurveAdapter; });
/* harmony import */ var _curve_Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../curve/Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tw2CurveAdapter
 * @ccp n/a
 *
 * @property {String} name
 * @property {Tw2Curve} curve
 * @property {Float32Array} value
 */

class Tw2CurveAdapter extends _curve_Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.curve = null;
    this.value = null;
  }

  /**
   * Sorts the curve
   */
  Sort() {
    if (this.curve) {
      this.curve.Sort();
    }
  }
  /**
   * Updates the adapter's value
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * The adapter's current value property
   * @type {?String}
   */


}
Tw2CurveAdapter.valueProperty = "value";
Tw2CurveAdapter.curveType = _curve_Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.ADAPTER;

/***/ }),

/***/ "./curve/adapter/index.js":
/*!********************************!*\
  !*** ./curve/adapter/index.js ***!
  \********************************/
/*! exports provided: Tr2RotationAdapter, Tr2TranslationAdapter, Tw2CurveAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2RotationAdapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2RotationAdapter */ "./curve/adapter/Tr2RotationAdapter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2RotationAdapter", function() { return _Tr2RotationAdapter__WEBPACK_IMPORTED_MODULE_0__["Tr2RotationAdapter"]; });

/* harmony import */ var _Tr2TranslationAdapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2TranslationAdapter */ "./curve/adapter/Tr2TranslationAdapter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2TranslationAdapter", function() { return _Tr2TranslationAdapter__WEBPACK_IMPORTED_MODULE_1__["Tr2TranslationAdapter"]; });

/* harmony import */ var _Tw2CurveAdapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2CurveAdapter */ "./curve/adapter/Tw2CurveAdapter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveAdapter", function() { return _Tw2CurveAdapter__WEBPACK_IMPORTED_MODULE_2__["Tw2CurveAdapter"]; });





/***/ }),

/***/ "./curve/curve/AudEventCurve.js":
/*!**************************************!*\
  !*** ./curve/curve/AudEventCurve.js ***!
  \**************************************/
/*! exports provided: AudEventKey, AudEventCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AudEventKey", function() { return AudEventKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AudEventCurve", function() { return AudEventCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * AudEventKey
 * TODO: Implement
 *
 * @property {Number} time  -
 * @property {Number} value -
 */

class AudEventKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.time = 0;
    this.value = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["time", r.float], ["value", r.ushort]];
  }

}
/**
 * AudEventCurve
 * TODO: Implement
 *
 * @property {Array.<AudEventKey>} keys           -
 * @property {TriObserverLocal} sourceTriObserver -
 */

class AudEventCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.keys = [];
    this.sourceTriObserver = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["keys", r.array], ["sourceTriObserver, r.object"]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
AudEventCurve.__isStaging = 4;

/***/ }),

/***/ "./curve/curve/Tr2BoneMatrixCurve.js":
/*!*******************************************!*\
  !*** ./curve/curve/Tr2BoneMatrixCurve.js ***!
  \*******************************************/
/*! exports provided: Tr2BoneMatrixCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2BoneMatrixCurve", function() { return Tr2BoneMatrixCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tr2BoneMatrixCurve
 * TODO: Implement
 *
 * @property {String} name
 */

class Tr2BoneMatrixCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2BoneMatrixCurve.__isStaging = 4;

/***/ }),

/***/ "./curve/curve/Tr2CurveScalar.js":
/*!***************************************!*\
  !*** ./curve/curve/Tr2CurveScalar.js ***!
  \***************************************/
/*! exports provided: Tw2CurveScalarKey, Tr2CurveScalar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveScalarKey", function() { return Tw2CurveScalarKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveScalar", function() { return Tr2CurveScalar; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tw2CurveScalarKey
 * @ccp N/A
 *
 * @param {Number} endTangent
 * @param {Number} extrapolation
 * @param {Number} index
 * @param {Number} interpolation
 * @param {Number} startTangent
 * @param {Number} value
 */

class Tw2CurveScalarKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.endTangent = 0.0;
    this.extrapolation = 0;
    this.index = 0;
    this.interpolation = 1;
    this.startTangent = 0.0;
    this.value = 0.0;
  }

  /**
   * Black reader
   * @param {Tw2BlackBinaryReader} r
   * @returns {Tw2CurveScalarKey}
   */
  static blackStruct(r) {
    const item = new this();
    item.time = r.ReadF32();
    item.value = r.ReadF32();
    item.startTangent = r.ReadF32();
    item.endTangent = r.ReadF32();
    item.index = r.ReadU16();
    item.interpolation = r.ReadU8();
    item.extrapolation = r.ReadU8();
    return item;
  }

}
/**
 * Tr2CurveScalar
 * TODO: implement extrapolationAfter
 * TODO: implement extrapolationBefore
 * TODO: implement timeOffset
 * TODO: implement timeScale
 * TODO: Get Extrapolation types from CCP
 * TODO: Get Interpolation types from CCP
 * TODO: implement GetValueAt
 * TODO: implement UpdateValue
 * @ccp Tr2CurveScalar
 *
 * @property {String} name                -
 * @property {Number} extrapolationAfter  -
 * @property {Number} extrapolationBefore -
 * @property {Array} keys                 -
 * @property {Number} timeOffset          -
 * @property {Number} timeScale           -
 */

class Tr2CurveScalar extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.extrapolationAfter = 0;
    this.extrapolationBefore = 0;
    this.keys = [];
    this.timeOffset = 0;
    this.timeScale = 0;
    this.currentValue = 0;
    this._length = 0;
  }

  /**
   * Sorts the curve
   */
  Sort() {
    this._length = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Sort3(this.keys);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    // TODO: Does timeOffset and timeScale need to be considered here?
    return this._length;
  }
  /**
   * The curve's dimension
   * @type {?number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["timeOffset", r.float], ["timeScale", r.float], ["extrapolationAfter", r.uint], ["extrapolationBefore", r.uint], ["keys", r.structList(Tw2CurveScalarKey)]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2CurveScalar.inputDimension = 1;
Tr2CurveScalar.outputDimension = 1;
Tr2CurveScalar.valueProperty = "currentValue";
Tr2CurveScalar.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE3;
Tr2CurveScalar.Key = Tw2CurveScalarKey;
Tr2CurveScalar.Interpolation = {};
Tr2CurveScalar.Extrapolation = {};
Tr2CurveScalar.__isStaging = 4;

/***/ }),

/***/ "./curve/curve/Tr2ScalarExprKeyCurve.js":
/*!**********************************************!*\
  !*** ./curve/curve/Tr2ScalarExprKeyCurve.js ***!
  \**********************************************/
/*! exports provided: Tr2ScalarExprKey, Tr2ScalarExprKeyCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ScalarExprKey", function() { return Tr2ScalarExprKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ScalarExprKeyCurve", function() { return Tr2ScalarExprKeyCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tr2ScalarExprKey
 * TODO: Implement
 * @ccp Tr2ScalarExprKey
 *
 * @property {Number} input1
 * @property {Number} input2
 * @property {Number} input3
 * @property {Number} interpolation
 * @property {Number} left
 * @property {Number} right
 * @property {Number} time
 * @property {String} timeExpression
 * @property {Number} value
 */

class Tr2ScalarExprKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.input1 = -1;
    this.input2 = -1;
    this.input3 = -1;
    this.interpolation = 0;
    this.left = 0;
    this.right = 0;
    this.time = 0;
    this.timeExpression = "";
    this.value = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["input1", r.float], ["input2", r.float], ["input3", r.float], ["interpolation", r.uint], ["left", r.float], ["right", r.float], ["time", r.float], ["timeExpression", r.string], ["value", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
/**
 * Tr2ScalarExprKeyCurve
 * @ccp Tr2ScalarExprKeyCurve
 *
 * @property {String} name                  -
 * @property {Number} interpolation         -
 * @property {Array<Tr2ScalarExprKey>} keys -
 */

Tr2ScalarExprKey.__isStaging = 4;
class Tr2ScalarExprKeyCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.interpolation = 0;
    this.keys = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["interpolation", r.uint], ["keys", r.array], ["name", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ScalarExprKeyCurve.__isStaging = 4;

/***/ }),

/***/ "./curve/curve/Tw2Curve.js":
/*!*********************************!*\
  !*** ./curve/curve/Tw2Curve.js ***!
  \*********************************/
/*! exports provided: Tw2CurveKey, Tw2Curve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveKey", function() { return Tw2CurveKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Curve", function() { return Tw2Curve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _class, _temp, _dec2, _dec3, _dec4, _dec5, _class3, _class4, _class5, _temp2;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

/**
 * Tw2CurveKey base class
 *
 * @property {number|String} _id
 * @property {String} name
 * @property {number} time
 */

let Tw2CurveKey = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_temp = class Tw2CurveKey extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.time = 0;
  }

}, _temp)) || _class);
/**
 * Tw2Curve base class
 *
 * @property {number|String} _id
 * @property {String} name
 */

let Tw2Curve = (_dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec3 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec4 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec5 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2(_class3 = (_class4 = (_temp2 = _class5 = class Tw2Curve extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
  }

  /**
   * Initializes the Curve
   */
  Initialize() {
    this.Sort();
  }
  /**
   * Sorts the curve
   */


  Sort() {}
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {}
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {}
  /**
   * Compares curve keys
   * @param {Tw2CurveKey} a
   * @param {Tw2CurveKey} b
   * @returns {number}
   */


  static Compare(a, b) {
    if (a.time < b.time) return -1;
    if (a.time > b.time) return 1;
    return 0;
  }
  /**
   * Sorts legacy curve keys
   * @param {*} curve
   * @param {Array.<Tw2CurveKey>} [keys=curve.keys] - Optional keys override
   */


  static Sort(curve, keys = curve.keys) {
    if (keys && keys.length) {
      keys.sort(Tw2Curve.Compare);
      curve.length = keys[keys.length - 1].time;
    }
  }
  /**
   * Sorts curve keys
   * @param {*} curve
   */


  static Sort2(curve) {
    if (curve.keys && curve.keys.length) {
      curve.keys.sort(Tw2Curve.Compare);
      const back = curve.keys[curve.keys.length - 1];

      if (back.time > curve.length) {
        const preLength = curve.length,
              endValue = curve.endValue,
              endTangent = curve.endTangent;
        curve.length = back.time;
        curve.endValue = back.value;
        curve.endTangent = back.leftTangent;

        if (preLength > 0) {
          back.time = preLength;
          back.value = endValue;
          back.leftTangent = endTangent;
        }
      }
    }
  }
  /**
   * Sorts keys by time
   * @param {*} keys
   * @returns {number} length
   */


  static Sort3(keys) {
    keys.sort((a, b) => {
      if (a.index < b.index) return -1;
      if (a.index > b.index) return 1;
      return 0;
    });
    let length = 0;

    for (let i = 0; i < keys.length; i++) {
      keys[i].index = i;

      if (i === keys.length - 1) {
        length = keys[i].time;
      }
    }

    return length;
  }
  /**
   * The curve's key dimension
   * @type {?number}
   */


}, _class5.inputDimension = null, _class5.outputDimension = null, _class5.valueProperty = null, _class5.curveType = null, _class5.Key = null, _class5.Interpolation = null, _class5.Extrapolation = null, _class5.Type = {
  CURVE: 1,
  CURVE2: 2,
  CURVE3: 3,
  CURVE_MAYA: 4,
  CURVE_NO_KEYS: 5,
  SEQUENCER: 100,
  SEQUENCER2: 101,
  EXPRESSION: 200,
  ADAPTER: 300
}, _class5.global = {
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec4_0: global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(),
  quat_0: global__WEBPACK_IMPORTED_MODULE_0__["quat"].create(),
  quat_1: global__WEBPACK_IMPORTED_MODULE_0__["quat"].create()
}, _temp2), (_applyDecoratedDescriptor(_class4.prototype, "Sort", [_dec3], Object.getOwnPropertyDescriptor(_class4.prototype, "Sort"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, "GetLength", [_dec4], Object.getOwnPropertyDescriptor(_class4.prototype, "GetLength"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, "UpdateValue", [_dec5], Object.getOwnPropertyDescriptor(_class4.prototype, "UpdateValue"), _class4.prototype)), _class4)) || _class3);

/***/ }),

/***/ "./curve/curve/Tw2CurveConstant.js":
/*!*****************************************!*\
  !*** ./curve/curve/Tw2CurveConstant.js ***!
  \*****************************************/
/*! exports provided: Tw2CurveConstant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveConstant", function() { return Tw2CurveConstant; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Constant curve
 * TODO: Is this a curve or a key?
 * @ccp Tr2CurveConstant
 *
 * @property {vec4} value  -
 */

class Tw2CurveConstant extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
  }

  /**
   * Sorts the curve
   */
  Sort() {} // No operation

  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return 0;
  }
  /**
   * Updates the current value at the given time
   * @param {number} [time]
   * @param {vec4} value
   */


  UpdateValue(time, value) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.value);
  }
  /**
   * The curve's dimension
   * @type {?number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["value", r.vector4]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2CurveConstant.inputDimension = 4;
Tw2CurveConstant.outputDimension = 4;
Tw2CurveConstant.valueProperty = "value";
Tw2CurveConstant.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE_NO_KEYS;
Tw2CurveConstant.__isStaging = 4;

/***/ }),

/***/ "./curve/curve/Tw2EventCurve.js":
/*!**************************************!*\
  !*** ./curve/curve/Tw2EventCurve.js ***!
  \**************************************/
/*! exports provided: Tw2EventKey, Tw2EventCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2EventKey", function() { return Tw2EventKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2EventCurve", function() { return Tw2EventCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Event curve key
 * @ccp TriEventKey
 *
 * @property {Number} value -
 */

class Tw2EventKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["time", r.float], ["value", r.ushort]];
  }

}
/**
 * Event curve
 * @ccp TriEventCurve
 *
 * @property {Number} extrapolation     -
 * @property {Array.<Tw2EventKey>} keys -
 * @property {Number} value             -
 */

class Tw2EventCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.extrapolation = 0;
    this.keys = [];
    this.value = 0;
    this._time = 0;
    this._currentKey = 0;
    this._length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    if (this.keys.length) {
      this.keys.sort(_Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Compare);
      this._length = this.keys[this.keys.length - 1].time;
    }
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this._length;
  }
  /**
   * Gets a value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    if (this._length <= 0) {
      return this.value;
    }

    let before = this._time;
    this._time = time;

    if (this._time < before) {
      this._currentKey = 0;
    }

    if (this.extrapolation === Tw2EventCurve.Extrapolation.CYCLE) {
      let now = this._time % this._length;
      if (now < before) this._currentKey = 0;
      this._time = now;
    }

    while (this._currentKey < this.keys.length && this._time >= this.keys[this._currentKey].time) {
      this.value = this.keys[this._currentKey].value;
      ++this._currentKey;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["extrapolation", r.uint], ["name", r.string], ["keys", r.array], ["value", r.ushort]];
  }

}
Tw2EventCurve.dimension = 1;
Tw2EventCurve.outputDimension = 1;
Tw2EventCurve.valueProperty = "value";
Tw2EventCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE;
Tw2EventCurve.Key = Tw2EventKey;
Tw2EventCurve.Extrapolation = {
  NONE: 0,
  CYCLE: 3
};

/***/ }),

/***/ "./curve/curve/Tw2PerlinCurve.js":
/*!***************************************!*\
  !*** ./curve/curve/Tw2PerlinCurve.js ***!
  \***************************************/
/*! exports provided: Tw2PerlinCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2PerlinCurve", function() { return Tw2PerlinCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");
/* harmony import */ var global_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/math */ "./global/math/index.js");


/**
 * Perlin curve
 * @ccp TriPerlinCurve
 *
 * @property {Number} N      -
 * @property {Number} alpha  -
 * @property {Number} beta   -
 * @property {Number} offset -
 * @property {Number} scale  -
 * @property {Number} speed  -
 * @property {Number} value  -
 */

class Tw2PerlinCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.N = 0;
    this.alpha = 0;
    this.beta = 0;
    this.offset = 0;
    this.scale = 0;
    this.speed = 0;
    this.value = 0;
  }

  /**
   * Sorts the curve
   */
  Sort() {} // No operation

  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return 0;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.value = this.GetValueAt(time);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @returns {number}
   */


  GetValueAt(time) {
    time -= this.offset;
    return (global_math__WEBPACK_IMPORTED_MODULE_1__["noise"].perlin1D(time * this.speed, this.alpha, this.beta, this.N) + 1) / 2 * this.scale + this.offset;
  }
  /**
   * The curve's dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["alpha", r.float], ["beta", r.float], ["N", r.uint], ["name", r.string], ["offset", r.float], ["scale", r.float], ["speed", r.float], ["value", r.float]];
  }

}
Tw2PerlinCurve.outputDimension = 1;
Tw2PerlinCurve.valueProperty = "value";
Tw2PerlinCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE_NO_KEYS;

/***/ }),

/***/ "./curve/curve/index.js":
/*!******************************!*\
  !*** ./curve/curve/index.js ***!
  \******************************/
/*! exports provided: AudEventKey, AudEventCurve, Tr2BoneMatrixCurve, Tw2CurveConstant, Tw2CurveScalarKey, Tr2CurveScalar, Tr2ScalarExprKey, Tr2ScalarExprKeyCurve, Tw2EventKey, Tw2EventCurve, Tw2PerlinCurve, Tw2CurveKey, Tw2Curve, Tw2ColorKey, Tw2ColorCurve, Tw2ColorKey2, Tw2ColorCurve2, Tw2QuaternionKey2, Tw2QuaternionCurve, Tw2RandomConstantCurve, Tw2Torque, Tw2RigidOrientation, Tw2QuaternionKey, Tw2RotationCurve, Tw2ScalarKey, Tw2ScalarCurve, Tw2ScalarKey2, Tw2ScalarCurve2, Tw2SineCurve, Tw2Vector2Key, Tw2Vector2Curve, Tw2Vector3Key, Tw2Vector3Curve, Tw2VectorKey, Tw2VectorCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _AudEventCurve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AudEventCurve */ "./curve/curve/AudEventCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AudEventKey", function() { return _AudEventCurve__WEBPACK_IMPORTED_MODULE_0__["AudEventKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AudEventCurve", function() { return _AudEventCurve__WEBPACK_IMPORTED_MODULE_0__["AudEventCurve"]; });

/* harmony import */ var _Tr2BoneMatrixCurve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2BoneMatrixCurve */ "./curve/curve/Tr2BoneMatrixCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2BoneMatrixCurve", function() { return _Tr2BoneMatrixCurve__WEBPACK_IMPORTED_MODULE_1__["Tr2BoneMatrixCurve"]; });

/* harmony import */ var _Tw2CurveConstant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2CurveConstant */ "./curve/curve/Tw2CurveConstant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveConstant", function() { return _Tw2CurveConstant__WEBPACK_IMPORTED_MODULE_2__["Tw2CurveConstant"]; });

/* harmony import */ var _Tr2CurveScalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tr2CurveScalar */ "./curve/curve/Tr2CurveScalar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveScalarKey", function() { return _Tr2CurveScalar__WEBPACK_IMPORTED_MODULE_3__["Tw2CurveScalarKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveScalar", function() { return _Tr2CurveScalar__WEBPACK_IMPORTED_MODULE_3__["Tr2CurveScalar"]; });

/* harmony import */ var _Tr2ScalarExprKeyCurve__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tr2ScalarExprKeyCurve */ "./curve/curve/Tr2ScalarExprKeyCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ScalarExprKey", function() { return _Tr2ScalarExprKeyCurve__WEBPACK_IMPORTED_MODULE_4__["Tr2ScalarExprKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ScalarExprKeyCurve", function() { return _Tr2ScalarExprKeyCurve__WEBPACK_IMPORTED_MODULE_4__["Tr2ScalarExprKeyCurve"]; });

/* harmony import */ var _Tw2EventCurve__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2EventCurve */ "./curve/curve/Tw2EventCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EventKey", function() { return _Tw2EventCurve__WEBPACK_IMPORTED_MODULE_5__["Tw2EventKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EventCurve", function() { return _Tw2EventCurve__WEBPACK_IMPORTED_MODULE_5__["Tw2EventCurve"]; });

/* harmony import */ var _Tw2PerlinCurve__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2PerlinCurve */ "./curve/curve/Tw2PerlinCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PerlinCurve", function() { return _Tw2PerlinCurve__WEBPACK_IMPORTED_MODULE_6__["Tw2PerlinCurve"]; });

/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2Curve */ "./curve/curve/Tw2Curve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveKey", function() { return _Tw2Curve__WEBPACK_IMPORTED_MODULE_7__["Tw2CurveKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Curve", function() { return _Tw2Curve__WEBPACK_IMPORTED_MODULE_7__["Tw2Curve"]; });

/* harmony import */ var _legacy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./legacy */ "./curve/curve/legacy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ColorKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ColorCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey2", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ColorKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve2", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ColorCurve2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey2", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2QuaternionKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2QuaternionCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomConstantCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2RandomConstantCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Torque", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2Torque"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RigidOrientation", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2RigidOrientation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2QuaternionKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RotationCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2RotationCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ScalarKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ScalarCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey2", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ScalarKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve2", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2ScalarCurve2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SineCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2SineCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Key", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2Vector2Key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Curve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2Vector2Curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Key", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2Vector3Key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Curve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2Vector3Curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorKey", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2VectorKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_8__["Tw2VectorCurve"]; });











/***/ }),

/***/ "./curve/curve/legacy/Tw2ColorCurve.js":
/*!*********************************************!*\
  !*** ./curve/curve/legacy/Tw2ColorCurve.js ***!
  \*********************************************/
/*! exports provided: Tw2ColorKey, Tw2ColorCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey", function() { return Tw2ColorKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve", function() { return Tw2ColorCurve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2ColorKey
 *
 * @property {vec4} value
 * @property {vec4} left
 * @property {vec4} right
 * @property {number} interpolation
 * @class
 */

class Tw2ColorKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.left = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.right = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.interpolation = 0;
  }

}
/**
 * Tw2ColorCurve
 *
 * @property {number} start
 * @property {vec4} currentValue
 * @property {number} extrapolation
 * @property {Array.<Tw2ColorKey>} keys
 * @property {number} _currentKey
 * @property {number} length
 * @class
 */

class Tw2ColorCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.start = 0;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.extrapolation = 0;
    this.keys = [];
    this._currentKey = 1;
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec4} value
   * @returns {vec4} value
   */


  GetValueAt(time, value) {
    if (this.length === 0) {
      return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.value);
    }

    const firstKey = this.keys[0],
          lastKey = this.keys[this.keys.length - 1];

    if (time >= lastKey.time) {
      switch (this.extrapolation) {
        case Tw2ColorCurve.Extrapolation.NONE:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.value);

        case Tw2ColorCurve.Extrapolation.CONSTANT:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, lastKey.value);

        case Tw2ColorCurve.Extrapolation.GRADIENT:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].scaleAndAdd(value, lastKey.value, lastKey.right, time - lastKey.time);

        default:
          time = time % lastKey.time;
      }
    } else if (time < 0 || time < firstKey.time) {
      switch (this.extrapolation) {
        case Tw2ColorCurve.Extrapolation.NONE:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.value);

        case Tw2ColorCurve.Extrapolation.GRADIENT:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].scaleAndAdd(value, firstKey.value, firstKey.left, time * this.length - lastKey.time);

        default:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, firstKey.value);
      }
    }

    let ck = this.keys[this._currentKey],
        ck_1 = this.keys[this._currentKey - 1];

    while (time >= ck.time || time < ck_1.time) {
      if (time < ck_1.time) this._currentKey = 0;
      this._currentKey++;
      ck = this.keys[this._currentKey];
      ck_1 = this.keys[this._currentKey - 1];
    }

    const nt = (time - ck_1.time) / (ck.time - ck_1.time);

    switch (ck_1.interpolation) {
      case Tw2ColorCurve.Interpolation.CONSTANT:
        return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, ck_1.value);

      default:
        value[0] = ck_1.value[0] * (1 - nt) + ck.value[0] * nt;
        value[1] = ck_1.value[1] * (1 - nt) + ck.value[1] * nt;
        value[2] = ck_1.value[2] * (1 - nt) + ck.value[2] * nt;
        value[3] = ck_1.value[3] * (1 - nt) + ck.value[3] * nt;
        return value;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2ColorCurve.inputDimension = 4;
Tw2ColorCurve.outputDimension = 4;
Tw2ColorCurve.valueProperty = "value";
Tw2ColorCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE;
Tw2ColorCurve.Key = Tw2ColorKey;
Tw2ColorCurve.Extrapolation = {
  NONE: 0,
  CONSTANT: 1,
  GRADIENT: 2,
  CYCLE: 3
};
Tw2ColorCurve.Interpolation = {
  NONE: 0,
  CONSTANT: 1,
  LINEAR: 2
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2ColorCurve2.js":
/*!**********************************************!*\
  !*** ./curve/curve/legacy/Tw2ColorCurve2.js ***!
  \**********************************************/
/*! exports provided: Tw2ColorKey2, Tw2ColorCurve2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey2", function() { return Tw2ColorKey2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve2", function() { return Tw2ColorCurve2; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2ColorKey2
 *
 * @property {number} time
 * @property {vec4} value
 * @property {vec4} leftTangent
 * @property {vec4} rightTangent
 * @property {number} interpolation
 * @class
 */

class Tw2ColorKey2 extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.leftTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.rightTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.interpolation = 1;
  }

}
/**
 * Tw2ColorCurve2
 *
 * @property {Boolean} cycle
 * @property {Boolean} reversed
 * @property {number} timeOffset
 * @property {number} timeScale
 * @property {vec4} startValue=[0,0,0,1]
 * @property {vec4} currentValue=[0,0,0,1]
 * @property {vec4} endValue=[0,0,0,1]
 * @property {vec4} startTangent
 * @property {vec4} endTangent
 * @property {number} interpolation
 * @property {Array.<Tw2ColorKey2>} keys
 * @class
 */

class Tw2ColorCurve2 extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.cycle = false;
    this.reversed = false;
    this.timeOffset = 0;
    this.timeScale = 1;
    this.startValue = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0, 0, 0, 1);
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0, 0, 0, 1);
    this.endValue = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0, 0, 0, 1);
    this.startTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.endTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.interpolation = 1;
    this.keys = [];
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort2(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec4} value
   * @returns {vec4}
   */


  GetValueAt(time, value) {
    time = time / this.timeScale + this.timeOffset;

    if (this.length <= 0 || time <= 0) {
      return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.startValue);
    }

    if (time > this.length) {
      if (this.cycle) {
        time = time % this.length;
      } else if (this.reversed) {
        return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.startValue);
      } else {
        return global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.endValue);
      }
    }

    if (this.reversed) {
      time = this.length - time;
    }

    if (this.keys.length === 0) {
      return this.Interpolate(time, null, null, value);
    }

    let startKey = this.keys[0],
        endKey = this.keys[this.keys.length - 1];

    if (time <= startKey.time) {
      return this.Interpolate(time, null, startKey, value);
    } else if (time >= endKey.time) {
      return this.Interpolate(time, endKey, null, value);
    }

    for (let i = 0; i + 1 < this.keys.length; ++i) {
      startKey = this.keys[i];
      endKey = this.keys[i + 1];
      if (startKey.time <= time && endKey.time > time) break;
    }

    return this.Interpolate(time, startKey, endKey, value);
  }
  /**
   * Interpolate
   * @param {number} time
   * @param {Tw2ColorKey2} lastKey
   * @param {Tw2ColorKey2} nextKey
   * @param {vec4} value
   * @returns {vec4} value
   */


  Interpolate(time, lastKey, nextKey, value) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(value, this.startValue);
    let startValue = this.startValue,
        endValue = this.endValue,
        interp = this.interpolation,
        deltaTime = this.length;

    if (lastKey !== null) {
      interp = lastKey.interpolation;
      time -= lastKey.time;
    }

    switch (interp) {
      case Tw2ColorCurve2.Interpolation.LINEAR:
        if (lastKey && nextKey) {
          startValue = lastKey.value;
          endValue = nextKey.value;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          deltaTime = this.length - lastKey.time;
        }

        value[0] = startValue[0] + (endValue[0] - startValue[0]) * (time / deltaTime);
        value[1] = startValue[1] + (endValue[1] - startValue[1]) * (time / deltaTime);
        value[2] = startValue[2] + (endValue[2] - startValue[2]) * (time / deltaTime);
        value[3] = startValue[3] + (endValue[3] - startValue[3]) * (time / deltaTime);
        return value;

      default:
        return value;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2ColorCurve2.inputDimension = 4;
Tw2ColorCurve2.outputDimension = 4;
Tw2ColorCurve2.valueProperty = "currentValue";
Tw2ColorCurve2.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE2;
Tw2ColorCurve2.Key = Tw2ColorKey2;
Tw2ColorCurve2.Interpolation = {
  CONSTANT: 0,
  LINEAR: 1
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2QuaternionCurve.js":
/*!**************************************************!*\
  !*** ./curve/curve/legacy/Tw2QuaternionCurve.js ***!
  \**************************************************/
/*! exports provided: Tw2QuaternionKey2, Tw2QuaternionCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey2", function() { return Tw2QuaternionKey2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionCurve", function() { return Tw2QuaternionCurve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2QuaternionKey2
 *
 * @property {quat} value
 * @property {vec4} leftTangent
 * @property {vec4} rightTangent
 * @property {number} interpolation
 * @class
 */

class Tw2QuaternionKey2 extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.leftTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.rightTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.interpolation = 1;
  }

}
/**
 * Tw2QuaternionCurve
 *
 * @property {Boolean} cycle
 * @property {Boolean} reversed
 * @property {number} timeOffset
 * @property {number} timeScale
 * @property {quat} startValue
 * @property {quat} currentValue
 * @property {quat} endValue
 * @property {vec4} startTangent
 * @property {vec4} endTangent
 * @property {number} interpolation
 * @property {Array.<Tw2QuaternionKey>} keys
 * @property {number} length
 * @class
 */

class Tw2QuaternionCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.cycle = false;
    this.reversed = false;
    this.timeOffset = 0;
    this.timeScale = 1;
    this.startValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.endValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.startTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.endTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.interpolation = 1;
    this.keys = [];
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort2(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {quat} value
   * @returns {quat}
   */


  GetValueAt(time, value) {
    time = time / this.timeScale + this.timeOffset;

    if (this.length <= 0 || time <= 0) {
      value[0] = this.startValue[0];
      value[1] = this.startValue[1];
      value[2] = this.startValue[2];
      return value;
    }

    if (time > this.length) {
      if (this.cycle) {
        time = time % this.length;
      } else if (this.reversed) {
        value[0] = this.startValue[0];
        value[1] = this.startValue[1];
        value[2] = this.startValue[2];
        return value;
      } else {
        value[0] = this.endValue[0];
        value[1] = this.endValue[1];
        value[2] = this.endValue[2];
        return value;
      }
    }

    if (this.reversed) {
      time = this.length - time;
    }

    if (this.keys.length === 0) {
      return this.Interpolate(time, null, null, value);
    }

    let startKey = this.keys[0],
        endKey = this.keys[this.keys.length - 1];

    if (time <= startKey.time) {
      return this.Interpolate(time, null, startKey, value);
    } else if (time >= endKey.time) {
      return this.Interpolate(time, endKey, null, value);
    }

    for (let i = 0; i + 1 < this.keys.length; ++i) {
      startKey = this.keys[i];
      endKey = this.keys[i + 1];
      if (startKey.time <= time && endKey.time > time) break;
    }

    return this.Interpolate(time, startKey, endKey, value);
  }
  /**
   * Interpolate
   * @param {number} time
   * @param {null|Tw2QuaternionKey} lastKey
   * @param {null|Tw2QuaternionKey} nextKey
   * @param {quat} value
   * @returns {*}
   */


  Interpolate(time, lastKey, nextKey, value) {
    value[0] = this.startValue[0];
    value[1] = this.startValue[1];
    value[2] = this.startValue[2];
    let startValue = this.startValue,
        endValue = this.endValue,
        interp = this.interpolation,
        deltaTime = this.length;

    if (lastKey !== null) {
      interp = lastKey.interpolation;
      time -= lastKey.time;
    }

    switch (interp) {
      case Tw2QuaternionCurve.Interpolation.SPHERICAL_LINEAR:
        if (lastKey && nextKey) {
          startValue = lastKey.value;
          endValue = nextKey.value;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          deltaTime = this.length - lastKey.time;
        }

        global__WEBPACK_IMPORTED_MODULE_0__["quat"].slerp(value, startValue, endValue, time / deltaTime);
        return value;

      default:
        return value;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2QuaternionCurve.inputDimension = 4;
Tw2QuaternionCurve.outputDimension = 4;
Tw2QuaternionCurve.valueProperty = "currentValue";
Tw2QuaternionCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE2;
Tw2QuaternionCurve.Key = Tw2QuaternionKey2;
Tw2QuaternionCurve.Interpolation = {
  CONSTANT: 0,
  SPHERICAL_LINEAR: 4
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2RandomConstantCurve.js":
/*!******************************************************!*\
  !*** ./curve/curve/legacy/Tw2RandomConstantCurve.js ***!
  \******************************************************/
/*! exports provided: Tw2RandomConstantCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomConstantCurve", function() { return Tw2RandomConstantCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tw2RandomConstantCurve
 *
 * @property {number} currentValue
 * @property {number} min
 * @property {number} max
 * @property {Boolean} hold
 * @class
 */

class Tw2RandomConstantCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.value = 0;
    this.min = 0;
    this.max = 1;
    this.hold = true;
  }

  /**
   * Sorts the curve
   */
  Sort() {} // No operation

  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return 0;
  }
  /**
   * Updates the current value at the given time
   */


  UpdateValue() {
    this.value = this.GetValueAt();
  }
  /**
   * Gets a value at a specific time
   * @returns {number}
   */


  GetValueAt() {
    return this.hold ? this.value : this.min + (this.max - this.min) * Math.random();
  }
  /**
   * The curve's dimension
   * @type {number}
   */


}
Tw2RandomConstantCurve.outputDimension = 1;
Tw2RandomConstantCurve.valueProperty = "value";
Tw2RandomConstantCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE_NO_KEYS;

/***/ }),

/***/ "./curve/curve/legacy/Tw2RigidOrientation.js":
/*!***************************************************!*\
  !*** ./curve/curve/legacy/Tw2RigidOrientation.js ***!
  \***************************************************/
/*! exports provided: Tw2Torque, Tw2RigidOrientation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Torque", function() { return Tw2Torque; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RigidOrientation", function() { return Tw2RigidOrientation; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2Torque
 *
 * @property {quat} rot0
 * @property {vec3} omega0
 * @property {vec3} torque
 * @class
 */

class Tw2Torque extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.rot0 = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.omega0 = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.torque = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

}
/**
 * Tw2RigidOrientation
 *
 * @property {String} name
 * @property {number} I
 * @property {number} drag
 * @property {quat} value
 * @property {number} start
 * @property {Array.<Tw2Torque>} states
 * @property {number} length
 * @class
 */

class Tw2RigidOrientation extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.I = 1;
    this.drag = 1;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.start = 0;
    this.states = [];
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort(this, this.states);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {quat} value
   * @returns {quat}
   */


  GetValueAt(time, value) {
    if (this.states.length === 0 || time < 0 || time < this.states[0].time) {
      return global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(value, this.value);
    }

    let key = 0;

    if (time >= this.states[this.states.length - 1].time) {
      key = this.states.length - 1;
    } else {
      for (; key + 1 < this.states.length; ++key) {
        if (time >= this.states[key].time && time < this.states[key + 1].time) {
          break;
        }
      }
    }

    const vec3_0 = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].global.vec3_0,
          quat_0 = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].global.quat_0;
    const ck = this.states[key];
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].exponentialDecay(vec3_0, ck.omega0, ck.torque, this.I, this.drag, time - ck.time);
    global__WEBPACK_IMPORTED_MODULE_0__["quat"].exp(quat_0, vec3_0);
    global__WEBPACK_IMPORTED_MODULE_0__["quat"].multiply(value, this.states[key].rot0, quat_0);
    return value;
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2RigidOrientation.inputDimension = 4;
Tw2RigidOrientation.outputDimension = 4;
Tw2RigidOrientation.valueProperty = "value";
Tw2RigidOrientation.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE;
Tw2RigidOrientation.Key = Tw2Torque;

/***/ }),

/***/ "./curve/curve/legacy/Tw2RotationCurve.js":
/*!************************************************!*\
  !*** ./curve/curve/legacy/Tw2RotationCurve.js ***!
  \************************************************/
/*! exports provided: Tw2QuaternionKey, Tw2RotationCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey", function() { return Tw2QuaternionKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RotationCurve", function() { return Tw2RotationCurve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2QuaternionKey
 *
 * @property {quat} value
 * @property {vec4} leftTangent
 * @property {vec4} rightTangent
 * @property {number} interpolation
 * @class
 */

class Tw2QuaternionKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.left = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.right = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.interpolation = 5;
  }

}
/**
 * Tw2RotationCurve
 *
 * @property {number} start
 * @property {quat} value
 * @property {number} extrapolation
 * @property {Array.<Tw2QuaternionKey>} keys
 * @property {number} _currentKey
 * @property {number} length
 * @class`
 */

class Tw2RotationCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.start = 0;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.extrapolation = 0;
    this.keys = [];
    this.length = 0;
    this._currentKey = 1;
  }

  /**
   * Sorts the curve's children
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {quat} value
   * @returns {quat}
   */


  GetValueAt(time, value) {
    if (this.length === 0) {
      return global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(value, this.value);
    }

    const scratch = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].global,
          firstKey = this.keys[0],
          lastKey = this.keys[this.keys.length - 1];

    if (time >= lastKey.time) {
      switch (this.extrapolation) {
        case Tw2RotationCurve.Extrapolation.NONE:
          return global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(value, this.value);

        case Tw2RotationCurve.Extrapolation.CONSTANT:
          return global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(value, lastKey.value);

        default:
          time = time % lastKey.time;
      }
    } else if (time < 0 || time < firstKey.time) {
      switch (this.extrapolation) {
        case Tw2RotationCurve.Extrapolation.NONE:
          return global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(value, this.value);

        default:
          return global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(value, firstKey.value);
      }
    }

    let ck = this.keys[this._currentKey],
        ck_1 = this.keys[this._currentKey - 1];

    while (time >= ck.time || time < ck_1.time) {
      if (time < ck_1.time) this._currentKey = 0;
      this._currentKey++;
      ck = this.keys[this._currentKey];
      ck_1 = this.keys[this._currentKey - 1];
    }

    const nt = (time - ck_1.time) / (ck.time - ck_1.time);

    switch (ck_1.interpolation) {
      case Tw2RotationCurve.Interpolation.CONSTANT:
        return global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(value, ck_1.value);

      case Tw2RotationCurve.Interpolation.LINEAR:
        value[0] = ck_1.value[0] * (1 - nt) + ck.value[0] * nt;
        value[1] = ck_1.value[1] * (1 - nt) + ck.value[1] * nt;
        value[2] = ck_1.value[2] * (1 - nt) + ck.value[2] * nt;
        value[3] = ck_1.value[3] * (1 - nt) + ck.value[3] * nt;
        return value;

      case Tw2RotationCurve.Interpolation.HERMITE:
        const collect = global__WEBPACK_IMPORTED_MODULE_0__["quat"].identity(scratch.quat_0),
              arr = [ck_1.value, ck_1.right, ck.left, ck.value];

        for (let i = 3; i > 0; i--) {
          const power = global__WEBPACK_IMPORTED_MODULE_0__["num"].biCumulative(nt, i);
          if (power > 1) global__WEBPACK_IMPORTED_MODULE_0__["quat"].multiply(value, collect, arr[i]);
          value[0] = -arr[i - 1][0];
          value[1] = -arr[i - 1][1];
          value[2] = -arr[i - 1][2];
          value[3] = arr[i - 1][3];
          global__WEBPACK_IMPORTED_MODULE_0__["quat"].multiply(value, value, arr[i]);
          global__WEBPACK_IMPORTED_MODULE_0__["quat"].pow(value, value, power);
          global__WEBPACK_IMPORTED_MODULE_0__["quat"].multiply(collect, collect, value);
        }

        return global__WEBPACK_IMPORTED_MODULE_0__["quat"].multiply(value, collect, ck_1.value);

      case Tw2RotationCurve.Interpolation.SLERP:
        return global__WEBPACK_IMPORTED_MODULE_0__["quat"].slerp(value, ck_1.value, ck.value, nt);

      default:
        return global__WEBPACK_IMPORTED_MODULE_0__["quat"].sqlerp(value, ck_1.value, ck_1.right, ck.left, ck.value, nt);
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2RotationCurve.outputDimention = 4;
Tw2RotationCurve.inputDimension = 4;
Tw2RotationCurve.valueProperty = "value";
Tw2RotationCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE;
Tw2RotationCurve.Child = Tw2QuaternionKey;
Tw2RotationCurve.Extrapolation = {
  NONE: 0,
  CONSTANT: 1,
  GRADIENT: 2,
  CYCLE: 3
};
Tw2RotationCurve.Interpolation = {
  NONE: 0,
  CONSTANT: 1,
  LINEAR: 2,
  HERMITE: 3,
  SLERP: 5,
  SQUAD: 6
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2ScalarCurve.js":
/*!**********************************************!*\
  !*** ./curve/curve/legacy/Tw2ScalarCurve.js ***!
  \**********************************************/
/*! exports provided: Tw2ScalarKey, Tw2ScalarCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey", function() { return Tw2ScalarKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve", function() { return Tw2ScalarCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tw2ScalarKey
 *
 * @property {number} value
 * @property {number} left
 * @property {number} right
 * @property {number} interpolation
 * @class
 */

class Tw2ScalarKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = 0;
    this.left = 0;
    this.right = 0;
    this.interpolation = 0;
  }

}
/**
 * Tw2ScalarCurve
 *
 * @property {number} start
 * @property {number} timeScale
 * @property {number} timeOffset
 * @property {number} value
 * @property {number} extrapolation
 * @property {Array.<Tw2ScalarKey>} keys
 * @property {number} _currentKey
 * @property {number} length
 * @class
 */

class Tw2ScalarCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.start = 0;
    this.timeScale = 1;
    this.timeOffset = 0;
    this.value = 0;
    this.extrapolation = 0;
    this.keys = [];
    this._currentKey = 1;
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Sort(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.value = this.GetValueAt(time);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @returns {number}
   */


  GetValueAt(time) {
    time = time / this.timeScale - this.timeOffset;

    if (this.length === 0) {
      return this.value;
    }

    const firstKey = this.keys[0],
          lastKey = this.keys[this.keys.length - 1];

    if (time >= lastKey.time) {
      switch (this.extrapolation) {
        case Tw2ScalarCurve.Extrapolation.NONE:
          return this.value;

        case Tw2ScalarCurve.Extrapolation.CONSTANT:
          return lastKey.value;

        case Tw2ScalarCurve.Extrapolation.GRADIENT:
          return lastKey.value + (time - lastKey.time) * lastKey.right;

        default:
          time = time % lastKey.time;
      }
    } else if (time < 0 || time < firstKey.time) {
      switch (this.extrapolation) {
        case Tw2ScalarCurve.Extrapolation.NONE:
          return this.value;

        case Tw2ScalarCurve.Extrapolation.GRADIENT:
          return firstKey.value + (time * this.length - lastKey.time) * firstKey.left;

        default:
          return firstKey.value;
      }
    }

    let ck = this.keys[this._currentKey],
        ck_1 = this.keys[this._currentKey - 1];

    while (time >= ck.time || time < ck_1.time) {
      if (time < ck_1.time) this._currentKey = 0;
      this._currentKey++;
      ck = this.keys[this._currentKey];
      ck_1 = this.keys[this._currentKey - 1];
    }

    const nt = (time - ck_1.time) / (ck.time - ck_1.time);

    switch (ck_1.interpolation) {
      case Tw2ScalarCurve.Interpolation.CONSTANT:
        return ck_1.value;

      case Tw2ScalarCurve.Interpolation.LINEAR:
        return ck_1.value * (1 - nt) + ck.value * nt;

      case Tw2ScalarCurve.Interpolation.HERMITE:
        const k3 = 2 * nt * nt * nt - 3 * nt * nt + 1,
              k2 = -2 * nt * nt * nt + 3 * nt * nt,
              k1 = nt * nt * nt - 2 * nt * nt + nt,
              k0 = nt * nt * nt - nt * nt;
        return k3 * ck_1.value + k2 * ck.value + k1 * ck_1.right + k0 * ck.left;

      default:
        const sq = Math.sqrt(ck_1.value / ck.value),
              exponent = Math.exp(-time / ck_1.right),
              ret = 1.0 + (sq - 1.0) * exponent;
        return ret * ret * ck.value;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2ScalarCurve.inputDimension = 1;
Tw2ScalarCurve.outputDimension = 1;
Tw2ScalarCurve.valueProperty = "value";
Tw2ScalarCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE;
Tw2ScalarCurve.Key = Tw2ScalarKey;
Tw2ScalarCurve.Extrapolation = {
  NONE: 0,
  CONSTANT: 1,
  GRADIENT: 2,
  CYCLE: 3
};
Tw2ScalarCurve.Interpolation = {
  NONE: 0,
  CONSTANT: 1,
  LINEAR: 2,
  HERMITE: 3,
  CATMULROM: 4
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2ScalarCurve2.js":
/*!***********************************************!*\
  !*** ./curve/curve/legacy/Tw2ScalarCurve2.js ***!
  \***********************************************/
/*! exports provided: Tw2ScalarKey2, Tw2ScalarCurve2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey2", function() { return Tw2ScalarKey2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve2", function() { return Tw2ScalarCurve2; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tw2ScalarKey2
 *
 * @property {number} value
 * @property {number} leftTangent
 * @property {number} rightTangent
 * @property {number} interpolation
 * @class
 */

class Tw2ScalarKey2 extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = 0;
    this.leftTangent = 0;
    this.rightTangent = 0;
    this.interpolation = 1;
  }

}
/**
 * Tw2ScalarCurve2
 *
 * @property {Boolean} cycle
 * @property {Boolean} reversed
 * @property {number} timeOffset
 * @property {number} timeScale
 * @property {number} startValue
 * @property {number} currentValue
 * @property {number} endValue
 * @property {number} startTangent
 * @property {number} endTangent
 * @property {number} interpolation
 * @property {Array.<Tw2ScalarKey2>} keys
 * @property {number} length
 * @class
 */

class Tw2ScalarCurve2 extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.cycle = false;
    this.reversed = false;
    this.timeOffset = 0;
    this.timeScale = 1;
    this.startValue = 0;
    this.currentValue = 0;
    this.endValue = 0;
    this.startTangent = 0;
    this.endTangent = 0;
    this.interpolation = 1;
    this.keys = [];
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Sort2(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.currentValue = this.GetValueAt(time);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @returns {number}
   */


  GetValueAt(time) {
    time = time / this.timeScale + this.timeOffset;

    if (this.length <= 0 || time <= 0) {
      return this.startValue;
    }

    if (time > this.length) {
      if (this.cycle) {
        time = time % this.length;
      } else if (this.reversed) {
        return this.startValue;
      } else {
        return this.endValue;
      }
    }

    if (this.reversed) {
      time = this.length - time;
    }

    if (this.keys.length === 0) {
      return this.Interpolate(time, null, null);
    }

    let startKey = this.keys[0],
        endKey = this.keys[this.keys.length - 1];

    if (time <= startKey.time) {
      return this.Interpolate(time, null, startKey);
    } else if (time >= endKey.time) {
      return this.Interpolate(time, endKey, null);
    }

    for (let i = 0; i + 1 < this.keys.length; ++i) {
      startKey = this.keys[i];
      endKey = this.keys[i + 1];
      if (startKey.time <= time && endKey.time > time) break;
    }

    return this.Interpolate(time, startKey, endKey);
  }
  /**
   * Interpolate
   * @param {number} time
   * @param {Tw2ScalarKey2} lastKey
   * @param {Tw2ScalarKey2} nextKey
   * @returns {number}
   */


  Interpolate(time, lastKey, nextKey) {
    let startValue = this.startValue,
        endValue = this.endValue,
        interp = this.interpolation,
        deltaTime = this.length;

    if (lastKey !== null) {
      interp = lastKey.interpolation;
      time -= lastKey.time;
    }

    switch (interp) {
      case Tw2ScalarCurve2.Interpolation.LINEAR:
        if (lastKey && nextKey) {
          startValue = lastKey.value;
          endValue = nextKey.value;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          deltaTime = this.length - lastKey.time;
        }

        return startValue + (endValue - startValue) * (time / deltaTime);

      case Tw2ScalarCurve2.Interpolation.HERMITE:
        let inTangent = this.startTangent,
            outTangent = this.endTangent;

        if (lastKey && nextKey) {
          startValue = lastKey.value;
          inTangent = lastKey.rightTangent;
          endValue = nextKey.value;
          outTangent = nextKey.leftTangent;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          outTangent = nextKey.leftTangent;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          inTangent = lastKey.rightTangent;
          deltaTime = this.length - lastKey.time;
        }

        const s = time / deltaTime,
              s2 = s * s,
              s3 = s2 * s;
        const c2 = -2.0 * s3 + 3.0 * s2,
              c1 = 1.0 - c2,
              c4 = s3 - s2,
              c3 = s + c4 - s2;
        return startValue * c1 + endValue * c2 + inTangent * c3 + outTangent * c4;

      default:
        return this.startValue;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2ScalarCurve2.inputDimension = 1;
Tw2ScalarCurve2.outputDimension = 1;
Tw2ScalarCurve2.valueProperty = "currentValue";
Tw2ScalarCurve2.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE2;
Tw2ScalarCurve2.Key = Tw2ScalarKey2;
Tw2ScalarCurve2.Interpolation = {
  CONSTANT: 0,
  LINEAR: 1,
  HERMITE: 2
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2SineCurve.js":
/*!********************************************!*\
  !*** ./curve/curve/legacy/Tw2SineCurve.js ***!
  \********************************************/
/*! exports provided: Tw2SineCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2SineCurve", function() { return Tw2SineCurve; });
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tw2SineCurve
 *
 * @property {String} name
 * @property {number} value
 * @property {number} offset
 * @property {number} scale
 * @property {number} speed
 */

class Tw2SineCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.value = 0;
    this.offset = 0;
    this.scale = 1;
    this.speed = 1;
  }

  /**
   * Sorts the curve
   */
  Sort() {} // No operation

  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return 0;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.value = this.GetValueAt(time);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @returns {number}
   */


  GetValueAt(time) {
    return Math.sin(time * Math.PI * 2 * this.speed) * this.scale + this.offset;
  }
  /**
   * THe curve's dimension
   * @type {number}
   */


}
Tw2SineCurve.outputDimension = 1;
Tw2SineCurve.valueProperty = "value";
Tw2SineCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE_NO_KEYS;

/***/ }),

/***/ "./curve/curve/legacy/Tw2Vector2Curve.js":
/*!***********************************************!*\
  !*** ./curve/curve/legacy/Tw2Vector2Curve.js ***!
  \***********************************************/
/*! exports provided: Tw2Vector2Key, Tw2Vector2Curve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Key", function() { return Tw2Vector2Key; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Curve", function() { return Tw2Vector2Curve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2Vector2Key
 *
 * @property {vec2} value
 * @property {vec2} leftTangent
 * @property {vec2} rightTangent
 * @property {number} interpolation
 * @class
 */

class Tw2Vector2Key extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.leftTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.rightTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.interpolation = 1;
  }

}
/**
 * Tw2Vector2Curve
 *
 * @property {Boolean} cycle
 * @property {Boolean} reversed
 * @property {number} timeOffset
 * @property {number} timeScale
 * @property {vec2} startValue - vec2 array
 * @property {vec2} currentValue - vec2 array
 * @property {vec2} endValue - vec2 array
 * @property {vec2} startTangent - vec2 array
 * @property {vec2} endTangent - vec2 array
 * @property {number} interpolation
 * @property {Array.<Tw2Vector2Key>} keys
 * @property {number} length
 * @class
 */

class Tw2Vector2Curve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.cycle = false;
    this.reversed = false;
    this.timeOffset = 0;
    this.timeScale = 1;
    this.startValue = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.endValue = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.startTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.endTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.interpolation = 1;
    this.keys = [];
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort2(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec2} value - vec2 array
   * @returns {vec2} vec2 array
   * @prototype
   */


  GetValueAt(time, value) {
    time = time / this.timeScale + this.timeOffset;

    if (this.length <= 0 || time <= 0) {
      return global__WEBPACK_IMPORTED_MODULE_0__["vec2"].copy(value, this.startValue);
    }

    if (time > this.length) {
      if (this.cycle) {
        time = time % this.length;
      } else if (this.reversed) {
        return global__WEBPACK_IMPORTED_MODULE_0__["vec2"].copy(value, this.startValue);
      } else {
        return global__WEBPACK_IMPORTED_MODULE_0__["vec2"].copy(value, this.endValue);
      }
    }

    if (this.reversed) {
      time = this.length - time;
    }

    if (this.keys.length === 0) {
      return this.Interpolate(time, null, null, value);
    }

    let startKey = this.keys[0],
        endKey = this.keys[this.keys.length - 1];

    if (time <= startKey.time) {
      return this.Interpolate(time, null, startKey, value);
    } else if (time >= endKey.time) {
      return this.Interpolate(time, endKey, null, value);
    }

    for (let i = 0; i + 1 < this.keys.length; ++i) {
      startKey = this.keys[i];
      endKey = this.keys[i + 1];
      if (startKey.time <= time && endKey.time > time) break;
    }

    return this.Interpolate(time, startKey, endKey, value);
  }
  /**
   * Interpolate
   * @param {number} time
   * @param {Tw2Vector2Key} lastKey
   * @param {Tw2Vector2Key} nextKey
   * @param {vec2} value - vec2 array
   * @returns {vec2} vec2 array
   */


  Interpolate(time, lastKey, nextKey, value) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec2"].copy(value, this.startValue);
    let startValue = this.startValue,
        endValue = this.endValue,
        interp = this.interpolation,
        deltaTime = this.length;

    if (lastKey !== null) {
      interp = lastKey.interpolation;
      time -= lastKey.time;
    }

    switch (interp) {
      case Tw2Vector2Curve.Interpolation.LINEAR:
        if (lastKey && nextKey) {
          startValue = lastKey.value;
          endValue = nextKey.value;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          deltaTime = this.length - lastKey.time;
        }

        value[0] = startValue[0] + (endValue[0] - startValue[0]) * (time / deltaTime);
        value[1] = startValue[1] + (endValue[1] - startValue[1]) * (time / deltaTime);
        return value;

      case Tw2Vector2Curve.Interpolation.HERMITE:
        let inTangent = this.startTangent,
            outTangent = this.endTangent;

        if (lastKey && nextKey) {
          startValue = lastKey.value;
          inTangent = lastKey.rightTangent;
          endValue = nextKey.value;
          outTangent = nextKey.leftTangent;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          outTangent = nextKey.leftTangent;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          inTangent = lastKey.rightTangent;
          deltaTime = this.length - lastKey.time;
        }

        const s = time / deltaTime,
              s2 = s * s,
              s3 = s2 * s;
        const c2 = -2.0 * s3 + 3.0 * s2,
              c1 = 1.0 - c2,
              c4 = s3 - s2,
              c3 = s + c4 - s2;
        value[0] = startValue[0] * c1 + endValue[0] * c2 + inTangent[0] * c3 + outTangent[0] * c4;
        value[1] = startValue[1] * c1 + endValue[1] * c2 + inTangent[1] * c3 + outTangent[1] * c4;
        return value;

      default:
        return value;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2Vector2Curve.inputDimension = 2;
Tw2Vector2Curve.outputDimension = 2;
Tw2Vector2Curve.valueProperty = "value";
Tw2Vector2Curve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE2;
Tw2Vector2Curve.Key = Tw2Vector2Key;
Tw2Vector2Curve.Interpolation = {
  CONSTANT: 0,
  LINEAR: 1,
  HERMITE: 2
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2Vector3Curve.js":
/*!***********************************************!*\
  !*** ./curve/curve/legacy/Tw2Vector3Curve.js ***!
  \***********************************************/
/*! exports provided: Tw2Vector3Key, Tw2Vector3Curve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Key", function() { return Tw2Vector3Key; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Curve", function() { return Tw2Vector3Curve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2Vector3Key
 *
 * @property {number} time
 * @property {vec3} value
 * @property {vec3} leftTangent
 * @property {vec3} rightTangent
 * @property {number} interpolation
 * @class
 */

class Tw2Vector3Key extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.leftTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rightTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.interpolation = 1;
  }

}
/**
 * Tw2Vector3Curve
 *
 * @property {Boolean} cycle
 * @property {Boolean} reversed
 * @property {number} timeOffset
 * @property {number} timeScale
 * @property {vec3} startValue
 * @property {vec3} currentValue
 * @property {vec3} endValue
 * @property {vec3} startTangent
 * @property {vec3} endTangent
 * @property {number} interpolation
 * @property {Array.<Tw2Vector3Key>} keys
 * @property {number} length
 * @class
 */

class Tw2Vector3Curve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.cycle = false;
    this.reversed = false;
    this.timeOffset = 0;
    this.timeScale = 1;
    this.startValue = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.endValue = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.startTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.endTangent = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.interpolation = 1;
    this.keys = [];
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort2(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec3} value
   * @returns {vec3}
   */


  GetValueAt(time, value) {
    time = time / this.timeScale + this.timeOffset;

    if (this.length <= 0 || time <= 0) {
      return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.startValue);
    }

    if (time > this.length) {
      if (this.cycle) {
        time = time % this.length;
      } else if (this.reversed) {
        return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.startValue);
      } else {
        return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.endValue);
      }
    }

    if (this.reversed) {
      time = this.length - time;
    }

    if (this.keys.length === 0) {
      return this.Interpolate(time, null, null, value);
    }

    let startKey = this.keys[0],
        endKey = this.keys[this.keys.length - 1];

    if (time <= startKey.time) {
      return this.Interpolate(time, null, startKey, value);
    } else if (time >= endKey.time) {
      return this.Interpolate(time, endKey, null, value);
    }

    for (let i = 0; i + 1 < this.keys.length; ++i) {
      startKey = this.keys[i];
      endKey = this.keys[i + 1];
      if (startKey.time <= time && endKey.time > time) break;
    }

    return this.Interpolate(time, startKey, endKey, value);
  }
  /**
   * Interpolate
   * @param {number} time
   * @param {Tw2Vector3Key} lastKey
   * @param {Tw2Vector3Key} nextKey
   * @param {vec3} value
   * @returns {vec3}
   */


  Interpolate(time, lastKey, nextKey, value) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.startValue);
    let startValue = this.startValue,
        endValue = this.endValue,
        interp = this.interpolation,
        deltaTime = this.length;

    if (lastKey !== null) {
      interp = lastKey.interpolation;
      time -= lastKey.time;
    }

    switch (interp) {
      case Tw2Vector3Curve.Interpolation.LINEAR:
        if (lastKey && nextKey) {
          startValue = lastKey.value;
          endValue = nextKey.value;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          deltaTime = this.length - lastKey.time;
        }

        value[0] = startValue[0] + (endValue[0] - startValue[0]) * (time / deltaTime);
        value[1] = startValue[1] + (endValue[1] - startValue[1]) * (time / deltaTime);
        value[2] = startValue[2] + (endValue[2] - startValue[2]) * (time / deltaTime);
        return value;

      case Tw2Vector3Curve.Interpolation.HERMITE:
        let inTangent = this.startTangent,
            outTangent = this.endTangent;

        if (lastKey && nextKey) {
          startValue = lastKey.value;
          inTangent = lastKey.rightTangent;
          endValue = nextKey.value;
          outTangent = nextKey.leftTangent;
          deltaTime = nextKey.time - lastKey.time;
        } else if (nextKey) {
          endValue = nextKey.value;
          outTangent = nextKey.leftTangent;
          deltaTime = nextKey.time;
        } else if (lastKey) {
          startValue = lastKey.value;
          inTangent = lastKey.rightTangent;
          deltaTime = this.length - lastKey.time;
        }

        const s = time / deltaTime,
              s2 = s * s,
              s3 = s2 * s;
        const c2 = -2.0 * s3 + 3.0 * s2,
              c1 = 1.0 - c2,
              c4 = s3 - s2,
              c3 = s + c4 - s2;
        value[0] = startValue[0] * c1 + endValue[0] * c2 + inTangent[0] * c3 + outTangent[0] * c4;
        value[1] = startValue[1] * c1 + endValue[1] * c2 + inTangent[1] * c3 + outTangent[1] * c4;
        value[2] = startValue[2] * c1 + endValue[2] * c2 + inTangent[2] * c3 + outTangent[2] * c4;
        return value;

      default:
        return value;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2Vector3Curve.inputDimension = 3;
Tw2Vector3Curve.outputDimension = 3;
Tw2Vector3Curve.valueProperty = "currentValue";
Tw2Vector3Curve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE2;
Tw2Vector3Curve.Key = Tw2Vector3Key;
Tw2Vector3Curve.Interpolation = {
  CONSTANT: 0,
  LINEAR: 1,
  HERMITE: 2
};

/***/ }),

/***/ "./curve/curve/legacy/Tw2VectorCurve.js":
/*!**********************************************!*\
  !*** ./curve/curve/legacy/Tw2VectorCurve.js ***!
  \**********************************************/
/*! exports provided: Tw2VectorKey, Tw2VectorCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorKey", function() { return Tw2VectorKey; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorCurve", function() { return Tw2VectorCurve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2Curve */ "./curve/curve/Tw2Curve.js");


/**
 * Tw2VectorKey
 *
 * @property {vec3} value
 * @property {vec3} left
 * @property {vec3} right
 * @property {number} interpolation
 * @inherits Tw2CurveKey
 * @class
 */

class Tw2VectorKey extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveKey"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.left = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.right = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.interpolation = 0;
  }

}
/**
 * Tw2Vector3Curve
 *
 * @property {String} name
 * @property {number} start
 * @property {vec3} value
 * @property {number} extrapolation
 * @property {Array.<Tw2VectorKey>} keys
 * @property {number} _currentKey
 * @property {number} length
 * @class
 */

class Tw2VectorCurve extends _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.start = 0;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.extrapolation = 0;
    this.keys = [];
    this._currentKey = 1;
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Sort(this);
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec3} value
   * @returns {vec3}
   */


  GetValueAt(time, value) {
    if (this.length === 0) {
      return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.value);
    }

    const firstKey = this.keys[0],
          lastKey = this.keys[this.keys.length - 1];

    if (time >= lastKey.time) {
      switch (this.extrapolation) {
        case Tw2VectorCurve.Extrapolation.NONE:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.value);

        case Tw2VectorCurve.Extrapolation.CONSTANT:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, lastKey.value);

        case Tw2VectorCurve.Extrapolation.GRADIENT:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scaleAndAdd(value, lastKey.value, lastKey.right, time - lastKey.time);

        default:
          time = time % lastKey.time;
      }
    } else if (time < 0 || time < firstKey.time) {
      switch (this.extrapolation) {
        case Tw2VectorCurve.Extrapolation.NONE:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, this.value);

        case Tw2VectorCurve.Extrapolation.GRADIENT:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scaleAndAdd(value, firstKey.value, firstKey.left, time * this.length - lastKey.time);

        default:
          return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, firstKey.value);
      }
    }

    let ck = this.keys[this._currentKey],
        ck_1 = this.keys[this._currentKey - 1];

    while (time >= ck.time || time < ck_1.time) {
      if (time < ck_1.time) this._currentKey = 0;
      this._currentKey++;
      ck = this.keys[this._currentKey];
      ck_1 = this.keys[this._currentKey - 1];
    }

    const nt = (time - ck_1.time) / (ck.time - ck_1.time);

    switch (ck_1.interpolation) {
      case Tw2VectorCurve.Interpolation.CONSTANT:
        return global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(value, ck_1.value);

      case Tw2VectorCurve.Interpolation.LINEAR:
        value[0] = ck_1.value[0] * (1 - nt) + ck.value[0] * nt;
        value[1] = ck_1.value[1] * (1 - nt) + ck.value[1] * nt;
        value[2] = ck_1.value[2] * (1 - nt) + ck.value[2] * nt;
        return value;

      case Tw2VectorCurve.Interpolation.HERMITE:
        const k3 = 2 * nt * nt * nt - 3 * nt * nt + 1,
              k2 = -2 * nt * nt * nt + 3 * nt * nt,
              k1 = nt * nt * nt - 2 * nt * nt + nt,
              k0 = nt * nt * nt - nt * nt;
        value[0] = k3 * ck_1.value[0] + k2 * ck.value[0] + k1 * ck_1.right[0] + k0 * ck.left[0];
        value[1] = k3 * ck_1.value[1] + k2 * ck.value[1] + k1 * ck_1.right[1] + k0 * ck.left[1];
        value[2] = k3 * ck_1.value[2] + k2 * ck.value[2] + k1 * ck_1.right[2] + k0 * ck.left[2];
        return value;

      default:
        return value;
    }
  }
  /**
   * The curve's key dimension
   * @type {number}
   */


}
Tw2VectorCurve.inputDimension = 3;
Tw2VectorCurve.outputDimension = 3;
Tw2VectorCurve.valueProperty = "value";
Tw2VectorCurve.curveType = _Tw2Curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE;
Tw2VectorCurve.Key = Tw2VectorKey;
Tw2VectorCurve.Extrapolation = {
  NONE: 0,
  CONSTANT: 1,
  GRADIENT: 2,
  CYCLE: 3
};
Tw2VectorCurve.Interpolation = {
  NONE: 0,
  CONSTANT: 1,
  LINEAR: 2,
  HERMITE: 3
};

/***/ }),

/***/ "./curve/curve/legacy/index.js":
/*!*************************************!*\
  !*** ./curve/curve/legacy/index.js ***!
  \*************************************/
/*! exports provided: Tw2ColorKey, Tw2ColorCurve, Tw2ColorKey2, Tw2ColorCurve2, Tw2QuaternionKey2, Tw2QuaternionCurve, Tw2RandomConstantCurve, Tw2Torque, Tw2RigidOrientation, Tw2QuaternionKey, Tw2RotationCurve, Tw2ScalarKey, Tw2ScalarCurve, Tw2ScalarKey2, Tw2ScalarCurve2, Tw2SineCurve, Tw2Vector2Key, Tw2Vector2Curve, Tw2Vector3Key, Tw2Vector3Curve, Tw2VectorKey, Tw2VectorCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2ColorCurve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2ColorCurve */ "./curve/curve/legacy/Tw2ColorCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey", function() { return _Tw2ColorCurve__WEBPACK_IMPORTED_MODULE_0__["Tw2ColorKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve", function() { return _Tw2ColorCurve__WEBPACK_IMPORTED_MODULE_0__["Tw2ColorCurve"]; });

/* harmony import */ var _Tw2ColorCurve2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ColorCurve2 */ "./curve/curve/legacy/Tw2ColorCurve2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey2", function() { return _Tw2ColorCurve2__WEBPACK_IMPORTED_MODULE_1__["Tw2ColorKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve2", function() { return _Tw2ColorCurve2__WEBPACK_IMPORTED_MODULE_1__["Tw2ColorCurve2"]; });

/* harmony import */ var _Tw2QuaternionCurve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2QuaternionCurve */ "./curve/curve/legacy/Tw2QuaternionCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey2", function() { return _Tw2QuaternionCurve__WEBPACK_IMPORTED_MODULE_2__["Tw2QuaternionKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionCurve", function() { return _Tw2QuaternionCurve__WEBPACK_IMPORTED_MODULE_2__["Tw2QuaternionCurve"]; });

/* harmony import */ var _Tw2RandomConstantCurve__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2RandomConstantCurve */ "./curve/curve/legacy/Tw2RandomConstantCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomConstantCurve", function() { return _Tw2RandomConstantCurve__WEBPACK_IMPORTED_MODULE_3__["Tw2RandomConstantCurve"]; });

/* harmony import */ var _Tw2RigidOrientation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2RigidOrientation */ "./curve/curve/legacy/Tw2RigidOrientation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Torque", function() { return _Tw2RigidOrientation__WEBPACK_IMPORTED_MODULE_4__["Tw2Torque"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RigidOrientation", function() { return _Tw2RigidOrientation__WEBPACK_IMPORTED_MODULE_4__["Tw2RigidOrientation"]; });

/* harmony import */ var _Tw2RotationCurve__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2RotationCurve */ "./curve/curve/legacy/Tw2RotationCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey", function() { return _Tw2RotationCurve__WEBPACK_IMPORTED_MODULE_5__["Tw2QuaternionKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RotationCurve", function() { return _Tw2RotationCurve__WEBPACK_IMPORTED_MODULE_5__["Tw2RotationCurve"]; });

/* harmony import */ var _Tw2ScalarCurve__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2ScalarCurve */ "./curve/curve/legacy/Tw2ScalarCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey", function() { return _Tw2ScalarCurve__WEBPACK_IMPORTED_MODULE_6__["Tw2ScalarKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve", function() { return _Tw2ScalarCurve__WEBPACK_IMPORTED_MODULE_6__["Tw2ScalarCurve"]; });

/* harmony import */ var _Tw2ScalarCurve2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2ScalarCurve2 */ "./curve/curve/legacy/Tw2ScalarCurve2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey2", function() { return _Tw2ScalarCurve2__WEBPACK_IMPORTED_MODULE_7__["Tw2ScalarKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve2", function() { return _Tw2ScalarCurve2__WEBPACK_IMPORTED_MODULE_7__["Tw2ScalarCurve2"]; });

/* harmony import */ var _Tw2SineCurve__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Tw2SineCurve */ "./curve/curve/legacy/Tw2SineCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SineCurve", function() { return _Tw2SineCurve__WEBPACK_IMPORTED_MODULE_8__["Tw2SineCurve"]; });

/* harmony import */ var _Tw2Vector2Curve__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Tw2Vector2Curve */ "./curve/curve/legacy/Tw2Vector2Curve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Key", function() { return _Tw2Vector2Curve__WEBPACK_IMPORTED_MODULE_9__["Tw2Vector2Key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Curve", function() { return _Tw2Vector2Curve__WEBPACK_IMPORTED_MODULE_9__["Tw2Vector2Curve"]; });

/* harmony import */ var _Tw2Vector3Curve__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Tw2Vector3Curve */ "./curve/curve/legacy/Tw2Vector3Curve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Key", function() { return _Tw2Vector3Curve__WEBPACK_IMPORTED_MODULE_10__["Tw2Vector3Key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Curve", function() { return _Tw2Vector3Curve__WEBPACK_IMPORTED_MODULE_10__["Tw2Vector3Curve"]; });

/* harmony import */ var _Tw2VectorCurve__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Tw2VectorCurve */ "./curve/curve/legacy/Tw2VectorCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorKey", function() { return _Tw2VectorCurve__WEBPACK_IMPORTED_MODULE_11__["Tw2VectorKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorCurve", function() { return _Tw2VectorCurve__WEBPACK_IMPORTED_MODULE_11__["Tw2VectorCurve"]; });














/***/ }),

/***/ "./curve/expression/Tr2CurveEulerRotationExpression.js":
/*!*************************************************************!*\
  !*** ./curve/expression/Tr2CurveEulerRotationExpression.js ***!
  \*************************************************************/
/*! exports provided: Tr2CurveEulerRotationExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveEulerRotationExpression", function() { return Tr2CurveEulerRotationExpression; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2CurveExpression */ "./curve/expression/Tw2CurveExpression.js");


/**
 * Tr2CurveEulerRotationExpression
 * TODO: Implement
 * @ccp Tr2CurveEulerRotationExpression
 *
 * @property {String} expressionPitch  -
 * @property {String} expressionRoll   -
 * @property {String} expressionYaw    -
 */

class Tr2CurveEulerRotationExpression extends _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveExpression"] {
  constructor(...args) {
    super(...args);
    this.expressionPitch = "";
    this.expressionRoll = "";
    this.expressionYaw = "";
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["inputs", r.array], ["name", r.string], ["expressionYaw", r.string], ["expressionPitch", r.string], ["expressionRoll", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2CurveEulerRotationExpression.inputDimension = 1;
Tr2CurveEulerRotationExpression.outputDimension = 4;
Tr2CurveEulerRotationExpression.valueProperty = "currentValue";
Tr2CurveEulerRotationExpression.childProperties = ["expressionPitch", "expressionRoll", "expressionYaw"];
Tr2CurveEulerRotationExpression.__isStaging = 4;

/***/ }),

/***/ "./curve/expression/Tr2CurveScalarExpression.js":
/*!******************************************************!*\
  !*** ./curve/expression/Tr2CurveScalarExpression.js ***!
  \******************************************************/
/*! exports provided: Tr2CurveScalarExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveScalarExpression", function() { return Tr2CurveScalarExpression; });
/* harmony import */ var _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2CurveExpression */ "./curve/expression/Tw2CurveExpression.js");

/**
 * Tr2CurveScalarExpression
 * TODO: Implement
 * @ccp Tr2CurveScalarExpression
 *
 * @property {String} expression       -
 * @property {Number} input1           -
 * @property {Number} input2           -
 * @property {Number} input3           -
 */

class Tr2CurveScalarExpression extends _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveExpression"] {
  constructor(...args) {
    super(...args);
    this.expression = "";
    this.input1 = -1;
    this.input2 = -1;
    this.input3 = -1;
    this.currentValue = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["inputs", r.array], ["name", r.string], ["expression", r.string], ["input1", r.float], ["input2", r.float], ["input3", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2CurveScalarExpression.inputDimension = 1;
Tr2CurveScalarExpression.outputDimension = 1;
Tr2CurveScalarExpression.valueProperty = "currentValue";
Tr2CurveScalarExpression.childProperties = ["expression"];
Tr2CurveScalarExpression.__isStaging = 4;

/***/ }),

/***/ "./curve/expression/Tr2CurveVector3Expression.js":
/*!*******************************************************!*\
  !*** ./curve/expression/Tr2CurveVector3Expression.js ***!
  \*******************************************************/
/*! exports provided: Tr2CurveVector3Expression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveVector3Expression", function() { return Tr2CurveVector3Expression; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2CurveExpression */ "./curve/expression/Tw2CurveExpression.js");


/**
 * Tr2CurveVector3Expression
 * TODO: Implement
 * @ccp Tr2CurveVector3Expression
 *
 * @property {String} expressionX -
 * @property {String} expressionY -
 * @property {String} expressionZ -
 */

class Tr2CurveVector3Expression extends _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveExpression"] {
  constructor(...args) {
    super(...args);
    this.expressionX = "";
    this.expressionY = "";
    this.expressionZ = "";
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["inputs", r.array], ["name", r.string], ["expressionX", r.string], ["expressionY", r.string], ["expressionZ", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2CurveVector3Expression.inputDimension = 1;
Tr2CurveVector3Expression.outputDimension = 3;
Tr2CurveVector3Expression.valueProperty = "currentValue";
Tr2CurveVector3Expression.childProperties = ["expressionX", "expressionY", "expressionZ"];
Tr2CurveVector3Expression.__isStaging = 4;

/***/ }),

/***/ "./curve/expression/Tw2CurveExpression.js":
/*!************************************************!*\
  !*** ./curve/expression/Tw2CurveExpression.js ***!
  \************************************************/
/*! exports provided: Tw2CurveExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveExpression", function() { return Tw2CurveExpression; });
/* harmony import */ var curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! curve */ "./curve/index.js");

/**
 * Tw2CurveExpression
 * Todo: Add expression engine
 * @ccp N/A
 *
 * @property {String} name
 * @property {Array} inputs
 */

class Tw2CurveExpression extends curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.inputs = [];
  }

  /**
   * Updates the current value at a specific time
   * @param {number} time
   */
  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Curve type
   * @type {number}
   */


}
Tw2CurveExpression.curveType = curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.EXPRESSION;

/***/ }),

/***/ "./curve/expression/index.js":
/*!***********************************!*\
  !*** ./curve/expression/index.js ***!
  \***********************************/
/*! exports provided: Tr2CurveEulerRotationExpression, Tr2CurveScalarExpression, Tr2CurveVector3Expression, Tw2CurveExpression */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2CurveEulerRotationExpression__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2CurveEulerRotationExpression */ "./curve/expression/Tr2CurveEulerRotationExpression.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveEulerRotationExpression", function() { return _Tr2CurveEulerRotationExpression__WEBPACK_IMPORTED_MODULE_0__["Tr2CurveEulerRotationExpression"]; });

/* harmony import */ var _Tr2CurveScalarExpression__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2CurveScalarExpression */ "./curve/expression/Tr2CurveScalarExpression.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveScalarExpression", function() { return _Tr2CurveScalarExpression__WEBPACK_IMPORTED_MODULE_1__["Tr2CurveScalarExpression"]; });

/* harmony import */ var _Tr2CurveVector3Expression__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tr2CurveVector3Expression */ "./curve/expression/Tr2CurveVector3Expression.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveVector3Expression", function() { return _Tr2CurveVector3Expression__WEBPACK_IMPORTED_MODULE_2__["Tr2CurveVector3Expression"]; });

/* harmony import */ var _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2CurveExpression */ "./curve/expression/Tw2CurveExpression.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveExpression", function() { return _Tw2CurveExpression__WEBPACK_IMPORTED_MODULE_3__["Tw2CurveExpression"]; });






/***/ }),

/***/ "./curve/index.js":
/*!************************!*\
  !*** ./curve/index.js ***!
  \************************/
/*! exports provided: Tw2CurveSet, Tw2CurveSetRange, Tw2ValueBinding, Tr2RotationAdapter, Tr2TranslationAdapter, Tw2CurveAdapter, AudEventKey, AudEventCurve, Tr2BoneMatrixCurve, Tw2CurveConstant, Tw2CurveScalarKey, Tr2CurveScalar, Tr2ScalarExprKey, Tr2ScalarExprKeyCurve, Tw2EventKey, Tw2EventCurve, Tw2PerlinCurve, Tw2CurveKey, Tw2Curve, Tr2CurveEulerRotationExpression, Tr2CurveScalarExpression, Tr2CurveVector3Expression, Tw2CurveExpression, TriColorSequencer, Tw2CurveColor, Tw2CurveEulerRotation, Tw2CurveVector3, Tw2CurveSequencer, Tw2ColorKey, Tw2ColorCurve, Tw2ColorKey2, Tw2ColorCurve2, Tw2QuaternionKey2, Tw2QuaternionCurve, Tw2RandomConstantCurve, Tw2Torque, Tw2RigidOrientation, Tw2QuaternionKey, Tw2RotationCurve, Tw2ScalarKey, Tw2ScalarCurve, Tw2ScalarKey2, Tw2ScalarCurve2, Tw2SineCurve, Tw2Vector2Key, Tw2Vector2Curve, Tw2Vector3Key, Tw2Vector3Curve, Tw2VectorKey, Tw2VectorCurve, Tw2WbgTrack, Tw2WbgTransformTrack, Tw2TransformTrack, Tw2MayaEulerRotationCurve, Tw2MayaScalarCurve, Tw2MayaVector3Curve, Tw2MayaAnimationEngine, Tw2ColorSequencer, Tw2EulerRotation, Tw2QuaternionSequencer, Tw2RGBAScalarSequencer, Tw2ScalarSequencer, Tw2VectorSequencer, Tw2XYZScalarSequencer, Tw2YPRSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2CurveSet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2CurveSet */ "./curve/Tw2CurveSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveSet", function() { return _Tw2CurveSet__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSet"]; });

/* harmony import */ var _Tw2CurveSetRange__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2CurveSetRange */ "./curve/Tw2CurveSetRange.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveSetRange", function() { return _Tw2CurveSetRange__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSetRange"]; });

/* harmony import */ var _Tw2ValueBinding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2ValueBinding */ "./curve/Tw2ValueBinding.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ValueBinding", function() { return _Tw2ValueBinding__WEBPACK_IMPORTED_MODULE_2__["Tw2ValueBinding"]; });

/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./adapter */ "./curve/adapter/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2RotationAdapter", function() { return _adapter__WEBPACK_IMPORTED_MODULE_3__["Tr2RotationAdapter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2TranslationAdapter", function() { return _adapter__WEBPACK_IMPORTED_MODULE_3__["Tr2TranslationAdapter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveAdapter", function() { return _adapter__WEBPACK_IMPORTED_MODULE_3__["Tw2CurveAdapter"]; });

/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./curve */ "./curve/curve/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AudEventKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["AudEventKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AudEventCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["AudEventCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2BoneMatrixCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tr2BoneMatrixCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveConstant", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2CurveConstant"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveScalarKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2CurveScalarKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveScalar", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tr2CurveScalar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ScalarExprKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tr2ScalarExprKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ScalarExprKeyCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tr2ScalarExprKeyCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EventKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2EventKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EventCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2EventCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2PerlinCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2PerlinCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2CurveKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Curve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2Curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ColorKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ColorCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorKey2", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ColorKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorCurve2", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ColorCurve2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey2", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2QuaternionKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2QuaternionCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomConstantCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2RandomConstantCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Torque", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2Torque"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RigidOrientation", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2RigidOrientation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2QuaternionKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RotationCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2RotationCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ScalarKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ScalarCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarKey2", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ScalarKey2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarCurve2", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2ScalarCurve2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SineCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2SineCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Key", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2Vector2Key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector2Curve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2Vector2Curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Key", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2Vector3Key"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Vector3Curve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2Vector3Curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorKey", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2VectorKey"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorCurve", function() { return _curve__WEBPACK_IMPORTED_MODULE_4__["Tw2VectorCurve"]; });

/* harmony import */ var _expression__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./expression */ "./curve/expression/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveEulerRotationExpression", function() { return _expression__WEBPACK_IMPORTED_MODULE_5__["Tr2CurveEulerRotationExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveScalarExpression", function() { return _expression__WEBPACK_IMPORTED_MODULE_5__["Tr2CurveScalarExpression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2CurveVector3Expression", function() { return _expression__WEBPACK_IMPORTED_MODULE_5__["Tr2CurveVector3Expression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveExpression", function() { return _expression__WEBPACK_IMPORTED_MODULE_5__["Tw2CurveExpression"]; });

/* harmony import */ var _legacy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./legacy */ "./curve/legacy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTrack", function() { return _legacy__WEBPACK_IMPORTED_MODULE_6__["Tw2WbgTrack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTransformTrack", function() { return _legacy__WEBPACK_IMPORTED_MODULE_6__["Tw2WbgTransformTrack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TransformTrack", function() { return _legacy__WEBPACK_IMPORTED_MODULE_6__["Tw2TransformTrack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaEulerRotationCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_6__["Tw2MayaEulerRotationCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaScalarCurve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_6__["Tw2MayaScalarCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaVector3Curve", function() { return _legacy__WEBPACK_IMPORTED_MODULE_6__["Tw2MayaVector3Curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaAnimationEngine", function() { return _legacy__WEBPACK_IMPORTED_MODULE_6__["Tw2MayaAnimationEngine"]; });

/* harmony import */ var _sequencer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sequencer */ "./curve/sequencer/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TriColorSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["TriColorSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveColor", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2CurveColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveEulerRotation", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2CurveEulerRotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveVector3", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2CurveVector3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2CurveSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2ColorSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EulerRotation", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2EulerRotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2QuaternionSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RGBAScalarSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2RGBAScalarSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2ScalarSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2VectorSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2XYZScalarSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2XYZScalarSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2YPRSequencer", function() { return _sequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2YPRSequencer"]; });










/***/ }),

/***/ "./curve/legacy/index.js":
/*!*******************************!*\
  !*** ./curve/legacy/index.js ***!
  \*******************************/
/*! exports provided: Tw2WbgTrack, Tw2WbgTransformTrack, Tw2TransformTrack, Tw2MayaEulerRotationCurve, Tw2MayaScalarCurve, Tw2MayaVector3Curve, Tw2MayaAnimationEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tracks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracks */ "./curve/legacy/tracks/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTrack", function() { return _tracks__WEBPACK_IMPORTED_MODULE_0__["Tw2WbgTrack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTransformTrack", function() { return _tracks__WEBPACK_IMPORTED_MODULE_0__["Tw2WbgTransformTrack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TransformTrack", function() { return _tracks__WEBPACK_IMPORTED_MODULE_0__["Tw2TransformTrack"]; });

/* harmony import */ var _maya__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maya */ "./curve/legacy/maya/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaEulerRotationCurve", function() { return _maya__WEBPACK_IMPORTED_MODULE_1__["Tw2MayaEulerRotationCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaScalarCurve", function() { return _maya__WEBPACK_IMPORTED_MODULE_1__["Tw2MayaScalarCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaVector3Curve", function() { return _maya__WEBPACK_IMPORTED_MODULE_1__["Tw2MayaVector3Curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaAnimationEngine", function() { return _maya__WEBPACK_IMPORTED_MODULE_1__["Tw2MayaAnimationEngine"]; });




/***/ }),

/***/ "./curve/legacy/maya/Tw2MayaAnimationEngine.js":
/*!*****************************************************!*\
  !*** ./curve/legacy/maya/Tw2MayaAnimationEngine.js ***!
  \*****************************************************/
/*! exports provided: Tw2MayaAnimationEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaAnimationEngine", function() { return Tw2MayaAnimationEngine; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");


/**
 * Tw2MayaAnimationEngine
 * TODO: Complete the prototype `_EvaluteBezier`
 *
 * @property {number|String} id
 * @property {Array} curves
 * @property {Array} hermiteSegments
 * @property {Array} bezierSegments
 * @property {number} _currentCurveIndex
 * @property _evalCache
 */

class Tw2MayaAnimationEngine {
  constructor() {
    this._id = global__WEBPACK_IMPORTED_MODULE_0__["util"].generateID();
    this.curves = [];
    this.hermiteSegments = [];
    this.bezierSegments = [];
    this._currentCurveIndex = 0;
    this._evalCache = null;
  }

  /**
   * Evaluate
   * @param curveIndex
   * @param time
   * @returns {*}
   */
  Evaluate(curveIndex, time) {
    if (this.curves.length <= curveIndex) return 0;
    this._currentCurveIndex = curveIndex;

    if (!this._evalCache) {
      this._evalCache = new Array(this.curves.length);

      for (let i = 0; i < this._evalCache.length; ++i) this._evalCache[i] = -1;
    }

    let animCurve = this.curves[curveIndex];
    let firstSegment = animCurve[Tw2MayaAnimationEngine.AnimCurveFields.SEGMENT_OFFSET];
    let segments = null;

    if (animCurve[Tw2MayaAnimationEngine.AnimCurveFields.IS_WEIGHTED]) {
      segments = this.bezierSegments;
    } else {
      segments = this.hermiteSegments;
    }

    if (time < segments[firstSegment][Tw2MayaAnimationEngine.AnimSegment.TIME]) {
      if (animCurve[Tw2MayaAnimationEngine.AnimCurveFields.PRE_INFINITY] === Tw2MayaAnimationEngine.INFINITY) {
        return segments[firstSegment][Tw2MayaAnimationEngine.AnimSegment.VALUE];
      }

      return this._EvaluateInfinities(animCurve, segments, firstSegment, time, true);
    }

    if (time > animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_TIME]) {
      if (animCurve[Tw2MayaAnimationEngine.AnimCurveFields.POST_INFINITY] === Tw2MayaAnimationEngine.INFINITY) {
        return animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_VALUE];
      }

      return this._EvaluateInfinities(animCurve, segments, firstSegment, time, false);
    }

    return this._EvaluateImpl(animCurve, segments, firstSegment, time);
  }
  /**
   * _EvaluateImpl
   * @param animCurve
   * @param segments
   * @param firstSegment
   * @param time
   * @returns {*}
   */


  _EvaluateImpl(animCurve, segments, firstSegment, time) {
    let withinInterval = false,
        nextSegment = null,
        lastSegment = null,
        index;

    if (this._evalCache[this._currentCurveIndex] >= 0) {
      lastSegment = firstSegment + this._evalCache[this._currentCurveIndex];

      if (this._evalCache[this._currentCurveIndex] < animCurve[Tw2MayaAnimationEngine.AnimCurveFields.NUM_SEGMENTS - 1] && time > segments[lastSegment][Tw2MayaAnimationEngine.AnimSegment.TIME]) {
        nextSegment = firstSegment + this._evalCache[this._currentCurveIndex] + 1;

        if (time === segments[nextSegment][Tw2MayaAnimationEngine.AnimSegment.TIME]) {
          this._evalCache[this._currentCurveIndex]++;
          return segments[nextSegment][Tw2MayaAnimationEngine.AnimSegment.VALUE];
        } else if (time < segments[nextSegment][Tw2MayaAnimationEngine.AnimSegment.TIME]) {
          index = this._evalCache[this._currentCurveIndex] + 1;
          withinInterval = true;
        } else {
          nextSegment = null;
        }
      } else if (this._evalCache[this._currentCurveIndex] > 0 && time < segments[lastSegment][Tw2MayaAnimationEngine.AnimSegment.TIME]) {
        let prevSegment = firstSegment + this._evalCache[this._currentCurveIndex] - 1;

        if (time > segments[prevSegment][Tw2MayaAnimationEngine.AnimSegment.TIME]) {
          index = this._evalCache[this._currentCurveIndex];
          withinInterval = true;
        } else if (time === segments[prevSegment][Tw2MayaAnimationEngine.AnimSegment.TIME]) {
          this._evalCache[this._currentCurveIndex]--;
          return segments[prevSegment][Tw2MayaAnimationEngine.AnimSegment.VALUE];
        }
      }
    }

    if (!withinInterval) {
      let result = this._Find(animCurve, time, segments, firstSegment);

      index = result[1];

      if (result[0] || index === 0) {
        if (index === animCurve[Tw2MayaAnimationEngine.AnimCurveFields.NUM_SEGMENTS]) {
          index--;
          this._evalCache[this._currentCurveIndex] = index;
          return animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_VALUE];
        } else {
          this._evalCache[this._currentCurveIndex] = index;
          return segments[firstSegment + index][Tw2MayaAnimationEngine.AnimSegment.VALUE];
        }
      } else if (index === animCurve[Tw2MayaAnimationEngine.AnimCurveFields.NUM_SEGMENTS] + 1) {
        this._evalCache[this._currentCurveIndex] = 0;
        return animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_VALUE];
      }
    }

    if (this._evalCache[this._currentCurveIndex] !== index - 1) {
      this._evalCache[this._currentCurveIndex] = index - 1;
      lastSegment = firstSegment + this._evalCache[this._currentCurveIndex];
      if (nextSegment === null) nextSegment = firstSegment + index;
    }

    if (animCurve[Tw2MayaAnimationEngine.AnimCurveFields.IS_WEIGHTED]) {
      let bSegment = segments[lastSegment];

      if (bSegment[Tw2MayaAnimationEngine.BezierSegment.IS_STEP]) {
        return bSegment[Tw2MayaAnimationEngine.BezierSegment.VALUE];
      } else if (bSegment[Tw2MayaAnimationEngine.BezierSegment.IS_STEP_NEXT]) {
        if (nextSegment === null) {
          return animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_VALUE];
        }

        return segments[nextSegment][Tw2MayaAnimationEngine.BezierSegment.VALUE];
      } else {
        let nextKeyTime = animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_TIME];

        if (this._evalCache[this._currentCurveIndex] + 1 < animCurve[Tw2MayaAnimationEngine.AnimCurveFields.NUM_SEGMENTS]) {
          nextKeyTime = segments[nextSegment][Tw2MayaAnimationEngine.BezierSegment.TIME];
        }

        return this._EvaluateBezier(bSegment, time, nextKeyTime);
      }
    } else {
      let hSegment = segments[lastSegment];

      if (hSegment[Tw2MayaAnimationEngine.HermiteSegment.IS_STEP]) {
        return hSegment[Tw2MayaAnimationEngine.HermiteSegment.VALUE];
      } else if (hSegment[Tw2MayaAnimationEngine.HermiteSegment.IS_STEP_NEXT]) {
        if (nextSegment === null) {
          return animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_VALUE];
        }

        return segments[nextSegment][Tw2MayaAnimationEngine.HermiteSegment.VALUE];
      } else {
        return this._EvaluateHermite(hSegment, time);
      }
    }
  }
  /* eslint-disable no-unused-vars */

  /**
   * A static helper function to evaluate the infinity portion of an animation curve.
   * The infinity portion is the parts of the animation curve outside the range of keys.
   * @param curve - The animation curve to evaluate
   * @param segments
   * @param startSegment
   * @param {time} time
   * @param {Boolean} bool - false: evaluate the post-infinity portion, true: evaluate the pre-infinity portion
   */


  _EvaluateInfinities(curve, segments, startSegment, time, bool) {
    throw new core__WEBPACK_IMPORTED_MODULE_1__["ErrFeatureNotImplemented"]({
      feature: "Maya animation engine evaluate infinities"
    });
  }
  /* eslint-enable no-unused-vars */

  /**
   * _EvaluateHermite
   * @param segment
   * @param time
   * @returns {*}
   */


  _EvaluateHermite(segment, time) {
    let t = time - segment[Tw2MayaAnimationEngine.HermiteSegment.TIME];
    let coeff = segment[Tw2MayaAnimationEngine.HermiteSegment.COEFF];
    return t * (t * (t * coeff[0] + coeff[1]) + coeff[2]) + coeff[3];
  }
  /**
   * _EvaluateBezier
   * @param segment
   * @param time
   * @param nextSegmentTime
   * @returns {*}
   */


  _EvaluateBezier(segment, time, nextSegmentTime) {
    let t, s;
    s = (time - segment[Tw2MayaAnimationEngine.BezierSegment.TIME]) / (nextSegmentTime - segment[Tw2MayaAnimationEngine.BezierSegment.TIME]);

    if (segment[Tw2MayaAnimationEngine.BezierSegment.IS_LINEAR]) {
      t = s;
    } else {
      let poly = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
      poly[3] = segment[Tw2MayaAnimationEngine.BezierSegment.COEFF][3];
      poly[2] = segment[Tw2MayaAnimationEngine.BezierSegment.COEFF][2];
      poly[1] = segment[Tw2MayaAnimationEngine.BezierSegment.COEFF][1];
      poly[0] = segment[Tw2MayaAnimationEngine.BezierSegment.COEFF][0] - s;
      let roots = [];
      if (global__WEBPACK_IMPORTED_MODULE_0__["curve"].polyZeroes(poly, 3, 0.0, 1, 1.0, 1, roots) === 1) t = roots[0];else t = 0.0;
    }

    let poly = segment[Tw2MayaAnimationEngine.BezierSegment.POLYY];
    return t * (t * (t * poly[3] + poly[2]) + poly[1]) + poly[0];
  }
  /**
   * _Find
   * @param animCurve
   * @param time
   * @param segments
   * @param firstSegment
   * @returns {*}
   */


  _Find(animCurve, time, segments, firstSegment) {
    let len, mid, low, high;
    /* use a binary search to find the key */

    let index = 0;
    len = animCurve[Tw2MayaAnimationEngine.AnimCurveFields.NUM_SEGMENTS] + 1;
    let segment = null;
    let stime = 0.0;

    if (len > 0) {
      low = 0;
      high = len - 1;

      do {
        mid = low + high >> 1;

        if (mid < len - 1) {
          segment = firstSegment + mid;
          stime = segments[segment][Tw2MayaAnimationEngine.AnimSegment.TIME];
        } else {
          stime = animCurve[Tw2MayaAnimationEngine.AnimCurveFields.END_TIME];
        }

        if (time < stime) {
          high = mid - 1;
        } else if (time > stime) {
          low = mid + 1;
        } else {
          index = mid;
          return [true, index];
        }
      } while (low <= high);

      index = low;
    }

    return [false, index];
  }
  /**
   * Returns the total number of curves
   * @returns {number}
   */


  GetNumberOfCurves() {
    return this.curves.length;
  }
  /**
   * Gets specific curve's length
   * @property {number} index
   * @returns {number}
   */


  GetLength(index) {
    if (index < 0 || index >= this.curves.length) return 0;
    let curve = this.curves[index];
    let firstSegment;

    if (curve[Tw2MayaAnimationEngine.AnimCurveFields.IS_WEIGHTED]) {
      firstSegment = this.bezierSegments[curve[Tw2MayaAnimationEngine.AnimCurveFields.SEGMENT_OFFSET]];
    } else {
      firstSegment = this.hermiteSegments[curve[Tw2MayaAnimationEngine.AnimCurveFields.SEGMENT_OFFSET]];
    }

    return curve[Tw2MayaAnimationEngine.AnimCurveFields.END_TIME] - firstSegment[Tw2MayaAnimationEngine.AnimSegment.TIME];
  }

}
Tw2MayaAnimationEngine.AnimCurveFields = {
  NUM_SEGMENTS: 0,
  SEGMENT_OFFSET: 1,
  END_TIME: 2,
  END_VALUE: 3,
  IN_TANGENT: 4,
  OUT_TANGENT: 5,
  PRE_INFINITY: 6,
  POST_INFINITY: 7,
  IS_WEIGHTED: 8
};
Tw2MayaAnimationEngine.AnimSegment = {
  TIME: 0,
  VALUE: 1
};
Tw2MayaAnimationEngine.HermiteSegment = {
  TIME: 0,
  VALUE: 1,
  COEFF: 2,
  IS_STEP: 3,
  IS_STEP_NEXT: 4
};
Tw2MayaAnimationEngine.BezierSegment = {
  TIME: 0,
  VALUE: 1,
  COEFF: 2,
  POLYY: 3,
  IS_STEP: 4,
  IS_STEP_NEXT: 5,
  IS_LINEAR: 6
};
Tw2MayaAnimationEngine.INFINITY = 0;

/***/ }),

/***/ "./curve/legacy/maya/Tw2MayaEulerRotationCurve.js":
/*!********************************************************!*\
  !*** ./curve/legacy/maya/Tw2MayaEulerRotationCurve.js ***!
  \********************************************************/
/*! exports provided: Tw2MayaEulerRotationCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaEulerRotationCurve", function() { return Tw2MayaEulerRotationCurve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! curve */ "./curve/index.js");


/**
 * Tw2MayaEulerRotationCurve
 *
 * @property {number} xIndex
 * @property {number} yIndex
 * @property {number} zIndex
 * @property {?Tw2MayaAnimationEngine} animationEngine
 * @property {String} name
 * @property {vec3} eulerValue
 * @property {Boolean} updateQuaternion
 * @property {quat} quatValue
 * @property {number} length
 * @class
 */

class Tw2MayaEulerRotationCurve extends curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.xIndex = -1;
    this.yIndex = -1;
    this.zIndex = -1;
    this.animationEngine = null;
    this.eulerValue = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.updateQuaternion = false;
    this.quatValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.length = 0;
  }

  /**
   * Sorts the curve
   */
  Sort() {
    this.ComputeLength();
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    if (this.animationEngine) {
      if (this.xIndex) {
        this.eulerValue[0] = this.animationEngine.Evaluate(this.xIndex, time);
      }

      if (this.yIndex) {
        if (this.yIndex === this.xIndex) {
          this.eulerValue[1] = this.eulerValue[0];
        } else {
          this.eulerValue[1] = this.animationEngine.Evaluate(this.yIndex, time);
        }
      }

      if (this.zIndex) {
        if (this.zIndex === this.xIndex) {
          this.eulerValue[2] = this.eulerValue[0];
        } else {
          this.eulerValue[2] = this.animationEngine.Evaluate(this.zIndex, time);
        }
      }

      if (this.updateQuaternion) {
        const sinYaw = Math.sin(this.eulerValue[0] / 2),
              cosYaw = Math.cos(this.eulerValue[0] / 2),
              sinPitch = Math.sin(this.eulerValue[1] / 2),
              cosPitch = Math.cos(this.eulerValue[1] / 2),
              sinRoll = Math.sin(this.eulerValue[2] / 2),
              cosRoll = Math.cos(this.eulerValue[2] / 2);
        this.quatValue[0] = sinYaw * cosPitch * sinRoll + cosYaw * sinPitch * cosRoll;
        this.quatValue[1] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;
        this.quatValue[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;
        this.quatValue[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;
      }
    }
  }
  /**
   * Computes curve Length
   */


  ComputeLength() {
    if (!this.animationEngine || this.animationEngine.GetNumberOfCurves() === 0) return;
    this.length = 0;

    if (this.xIndex >= 0) {
      this.length = this.animationEngine.GetLength(this.xIndex);
    }

    if (this.yIndex >= 0) {
      this.length = Math.max(this.length, this.animationEngine.GetLength(this.yIndex));
    }

    if (this.zIndex >= 0) {
      this.length = Math.max(this.length, this.animationEngine.GetLength(this.zIndex));
    }
  }
  /**
   * The curve's dimension
   * @type {number}
   */


}
Tw2MayaEulerRotationCurve.outputDimension = 3;
Tw2MayaEulerRotationCurve.valueProperty = "eulerValue";
Tw2MayaEulerRotationCurve.curveType = curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE_MAYA;

/***/ }),

/***/ "./curve/legacy/maya/Tw2MayaScalarCurve.js":
/*!*************************************************!*\
  !*** ./curve/legacy/maya/Tw2MayaScalarCurve.js ***!
  \*************************************************/
/*! exports provided: Tw2MayaScalarCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaScalarCurve", function() { return Tw2MayaScalarCurve; });
/* harmony import */ var curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! curve */ "./curve/index.js");

/**
 * Tw2MayaScalarCurve
 *
 * @property {number} index
 * @property {null|Tw2MayaAnimationEngine} animationEngine
 * @property {number} value
 * @property {number} length
 * @class
 */

class Tw2MayaScalarCurve extends curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.index = -1;
    this.animationEngine = null;
    this.value = 0;
    this.length = 0;
  }

  /**
   * Sorts the curve
   */
  Sort() {
    this.ComputeLength();
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    if (this.animationEngine) {
      this.value = this.animationEngine.Evaluate(this.index, time);
    }
  }
  /**
   * Computes curve Length
   */


  ComputeLength() {
    if (!this.animationEngine || this.animationEngine.GetNumberOfCurves() === 0) return;
    if (this.index >= 0) this.length = this.animationEngine.GetLength(this.index);
  }
  /**
   * The curve's dimension
   * @type {number}
   */


}
Tw2MayaScalarCurve.outputDimension = 1;
Tw2MayaScalarCurve.valueProperty = "value";
Tw2MayaScalarCurve.curveType = curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"].Type.CURVE_MAYA;

/***/ }),

/***/ "./curve/legacy/maya/Tw2MayaVector3Curve.js":
/*!**************************************************!*\
  !*** ./curve/legacy/maya/Tw2MayaVector3Curve.js ***!
  \**************************************************/
/*! exports provided: Tw2MayaVector3Curve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaVector3Curve", function() { return Tw2MayaVector3Curve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! curve */ "./curve/index.js");


/**
 * Tw2MayaVector3Curve
 *
 * @property {number} xIndex
 * @property {number} yIndex
 * @property {number} zIndex
 * @property {null|Tw2MayaAnimationEngine} animationEngine
 * @property {String} name
 * @property {vec3} value
 * @property {number} length
 */

class Tw2MayaVector3Curve extends curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"] {
  constructor(...args) {
    super(...args);
    this.xIndex = -1;
    this.yIndex = -1;
    this.zIndex = -1;
    this.animationEngine = null;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.length = 0;
  }

  /**
   * Sorts the curve's keys
   */
  Sort() {
    this.ComputeLength();
  }
  /**
   * Gets the curve's length
   * @returns {number}
   */


  GetLength() {
    return this.length;
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    if (this.animationEngine) {
      if (this.xIndex) {
        this.value[0] = this.animationEngine.Evaluate(this.xIndex, time);
      }

      if (this.yIndex) {
        if (this.yIndex === this.xIndex) {
          this.value[1] = this.value[0];
        } else {
          this.value[1] = this.animationEngine.Evaluate(this.yIndex, time);
        }
      }

      if (this.zIndex) {
        if (this.zIndex === this.xIndex) {
          this.value[2] = this.value[0];
        } else {
          this.value[2] = this.animationEngine.Evaluate(this.zIndex, time);
        }
      }
    }
  }
  /**
   * Computes curve Length
   */


  ComputeLength() {
    if (!this.animationEngine || this.animationEngine.GetNumberOfCurves() === 0) return;
    this.length = 0;

    if (this.xIndex >= 0) {
      this.length = this.animationEngine.GetLength(this.xIndex);
    }

    if (this.yIndex >= 0) {
      this.length = Math.max(this.length, this.animationEngine.GetLength(this.yIndex));
    }

    if (this.zIndex >= 0) {
      this.length = Math.max(this.length, this.animationEngine.GetLength(this.zIndex));
    }
  }
  /**
   * The curve's dimension
   * @type {number}
   */


}
Tw2MayaVector3Curve.outputDimension = 3;
Tw2MayaVector3Curve.valueProperty = "value";
Tw2MayaVector3Curve.curveType = curve__WEBPACK_IMPORTED_MODULE_1__["Tw2Curve"].Type.CURVE_MAYA;

/***/ }),

/***/ "./curve/legacy/maya/index.js":
/*!************************************!*\
  !*** ./curve/legacy/maya/index.js ***!
  \************************************/
/*! exports provided: Tw2MayaEulerRotationCurve, Tw2MayaScalarCurve, Tw2MayaVector3Curve, Tw2MayaAnimationEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2MayaEulerRotationCurve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2MayaEulerRotationCurve */ "./curve/legacy/maya/Tw2MayaEulerRotationCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaEulerRotationCurve", function() { return _Tw2MayaEulerRotationCurve__WEBPACK_IMPORTED_MODULE_0__["Tw2MayaEulerRotationCurve"]; });

/* harmony import */ var _Tw2MayaScalarCurve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2MayaScalarCurve */ "./curve/legacy/maya/Tw2MayaScalarCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaScalarCurve", function() { return _Tw2MayaScalarCurve__WEBPACK_IMPORTED_MODULE_1__["Tw2MayaScalarCurve"]; });

/* harmony import */ var _Tw2MayaVector3Curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2MayaVector3Curve */ "./curve/legacy/maya/Tw2MayaVector3Curve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaVector3Curve", function() { return _Tw2MayaVector3Curve__WEBPACK_IMPORTED_MODULE_2__["Tw2MayaVector3Curve"]; });

/* harmony import */ var _Tw2MayaAnimationEngine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2MayaAnimationEngine */ "./curve/legacy/maya/Tw2MayaAnimationEngine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2MayaAnimationEngine", function() { return _Tw2MayaAnimationEngine__WEBPACK_IMPORTED_MODULE_3__["Tw2MayaAnimationEngine"]; });






/***/ }),

/***/ "./curve/legacy/tracks/Tw2TransformTrack.js":
/*!**************************************************!*\
  !*** ./curve/legacy/tracks/Tw2TransformTrack.js ***!
  \**************************************************/
/*! exports provided: Tw2TransformTrack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2TransformTrack", function() { return Tw2TransformTrack; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2TransformTrack
 *
 * @property {String|number} _id
 * @property {String} name
 * @property {String} resPath
 * @property {Object} res
 * @property {String} group
 * @property {Boolean} cycle
 * @property {number} duration
 * @property {vec3} translation
 * @property {quat} rotation
 * @property {vec3} scale
 * @property positionCurve
 * @property orientationCurve
 * @property scaleCurve
 * @property {mat4} _scaleShear
 * @class
 */

class Tw2TransformTrack {
  constructor() {
    this._id = global__WEBPACK_IMPORTED_MODULE_0__["util"].generateID();
    this.name = "";
    this.resPath = "";
    this.res = null;
    this.group = "";
    this.cycle = false;
    this.duration = 0;
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scale = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 0);
    this.scaleShear = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.positionCurve = null;
    this.orientationCurve = null;
    this.scaleCurve = null;
  }

  /**
   * Initializes the Curve
   */
  Initialize() {
    if (this.resPath !== "") {
      this.res = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.resPath);
    }
  }
  /**
   * Gets curve length
   *
   * @returns {number}
   */


  GetLength() {
    return this.duration;
  }
  /**
   * Updates a value at a specific time
   *
   * @param {number} time
   */


  UpdateValue(time) {
    if (!this.res || !this.res.IsGood()) return;
    if (!this.positionCurve) this.FindTracks();
    if (!this.positionCurve) return;
    if (this.cycle) time = time % this.duration;
    if (time > this.duration || time < 0) return;
    global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(this.positionCurve, time, this.translation, this.cycle, this.duration);
    global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(this.orientationCurve, time, this.rotation, this.cycle, this.duration);
    global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(this.rotation, this.rotation);
    global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(this.scaleCurve, time, this.scaleShear, this.cycle, this.duration);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getScaling(this.scale, this.scaleCurve);
  }
  /**
   * FindTracks
   */


  FindTracks() {
    let group = null;

    for (let i = 0; i < this.res.animations.length; ++i) {
      for (let j = 0; j < this.res.animations[i].trackGroups.length; ++j) {
        if (this.res.animations[i].trackGroups[j].name === this.group) {
          this.duration = this.res.animations[i].duration;
          group = this.res.animations[i].trackGroups[j];
          break;
        }
      }
    }

    if (!group) return;

    for (let i = 0; i < group.transformTracks.length; ++i) {
      if (this.name === group.transformTracks[i].name) {
        this.positionCurve = group.transformTracks[i].position;
        this.orientationCurve = group.transformTracks[i].orientation;
        this.scaleCurve = group.transformTracks[i].scaleShear;
        break;
      }
    }
  }

}

/***/ }),

/***/ "./curve/legacy/tracks/Tw2WbgTrack.js":
/*!********************************************!*\
  !*** ./curve/legacy/tracks/Tw2WbgTrack.js ***!
  \********************************************/
/*! exports provided: Tw2WbgTrack, Tw2WbgTransformTrack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTrack", function() { return Tw2WbgTrack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTransformTrack", function() { return Tw2WbgTransformTrack; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tw2WbgTrack
 *
 * @property {String|number} _id
 * @property {String} name
 * @property {String} geometryResPath
 * @property {Object} geometryRes
 * @property {String} group
 * @property {number} duration
 * @property {Boolean} cycle
 */

function Tw2WbgTrack() {
  this._id = global__WEBPACK_IMPORTED_MODULE_0__["util"].generateID();
  this.name = "";
  this.geometryResPath = "";
  this.geometryRes = null;
  this.group = "";
  this.duration = 0;
  this.cycle = false;
  /**
   * SetCurves
   * @param self
   * @private
   */

  function SetCurves(self) {
    if (!self.name || !self.group || !self.geometryRes) {
      return;
    }

    for (let i = 0; i < self.geometryRes.animations.length; ++i) {
      let animation = self.geometryRes.animations[i];

      for (let j = 0; j < animation.trackGroups.length; ++j) {
        if (animation.trackGroups[j].name === self.group) {
          self._ApplyTracks(animation.trackGroups[j], animation.duration);
        }
      }
    }
  }
  /**
   * Initialize
   */


  this.Initialize = function () {
    if (this.geometryResPath) {
      this.geometryRes = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.geometryResPath, res => SetCurves(this));
    }
  };
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  this.UpdateValue = function (time) {
    if (!this._TracksReady()) return;
    if (this.cycle) time = time % this.duration;
    if (time <= this.duration && time >= 0) this._UpdateValue(time);
  };
}
/**
 * Tw2WbgTransformTrack
 *
 * @property {String|number} _id
 * @property {vec3} translation
 * @property {quat} rotation
 * @property {vec3} scale
 * @variable {*} positionCurve
 * @variable {*} rotationCurve
 * @variable {*} scaleCurve
 * @variable {mat4} scaleShear
 */

function Tw2WbgTransformTrack() {
  this._id = global__WEBPACK_IMPORTED_MODULE_0__["util"].generateID();
  this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
  this.rotation[3] = 1;
  this.scale = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  let positionCurve = null;
  let rotationCurve = null;
  let scaleCurve = null;
  let scaleShear = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  /**
   * _TracksReady
   * @returns {*}
   * @private
   */

  this._TracksReady = function () {
    return positionCurve || rotationCurve || scaleCurve;
  };
  /**
   * _ApplyTracks
   * @param trackGroup
   * @param duration
   * @private
   */


  this._ApplyTracks = function (trackGroup, duration) {
    for (let i = 0; i < trackGroup.transformTracks.length; ++i) {
      let track = trackGroup.transformTracks[i];

      if (track.name === this.name) {
        this.duration = duration;
        positionCurve = track.position;
        rotationCurve = track.orientation;
        scaleCurve = track.scaleShear;
      }
    }

    this.UpdateValue(0);
  };
  /**
   * Updates a value at a specific time
   * @param {number} time
   * @prototype
   */


  this._UpdateValue = function (time) {
    if (positionCurve) {
      global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(positionCurve, time, this.translation, this.cycle, this.duration);
    }

    if (rotationCurve) {
      global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(rotationCurve, time, this.rotation, this.cycle, this.duration);
      global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(this.rotation, this.rotation);
    }

    if (scaleCurve) {
      global__WEBPACK_IMPORTED_MODULE_0__["curve"].evaluate(scaleCurve, time, scaleShear, this.cycle, this.duration);
    }

    this.scale[0] = scaleShear[0];
    this.scale[1] = scaleShear[5];
    this.scale[2] = scaleShear[10];
  };
}
/**
 * @type {Tw2WbgTrack}
 * @prototype
 */

Tw2WbgTransformTrack.prototype = new Tw2WbgTrack();

/***/ }),

/***/ "./curve/legacy/tracks/index.js":
/*!**************************************!*\
  !*** ./curve/legacy/tracks/index.js ***!
  \**************************************/
/*! exports provided: Tw2WbgTrack, Tw2WbgTransformTrack, Tw2TransformTrack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2WbgTrack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2WbgTrack */ "./curve/legacy/tracks/Tw2WbgTrack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTrack", function() { return _Tw2WbgTrack__WEBPACK_IMPORTED_MODULE_0__["Tw2WbgTrack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2WbgTransformTrack", function() { return _Tw2WbgTrack__WEBPACK_IMPORTED_MODULE_0__["Tw2WbgTransformTrack"]; });

/* harmony import */ var _Tw2TransformTrack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2TransformTrack */ "./curve/legacy/tracks/Tw2TransformTrack.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2TransformTrack", function() { return _Tw2TransformTrack__WEBPACK_IMPORTED_MODULE_1__["Tw2TransformTrack"]; });




/***/ }),

/***/ "./curve/sequencer/TriColorSequencer.js":
/*!**********************************************!*\
  !*** ./curve/sequencer/TriColorSequencer.js ***!
  \**********************************************/
/*! exports provided: TriColorSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TriColorSequencer", function() { return TriColorSequencer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Color sequencer
 * TODO: Can't rename to Tw2ColorSequencer as a legacy one already exists
 * @ccp TriColorSequencer
 *
 * @property {String} name                                   -
 * @property {Array.<Tw2Curve|Tw2CurveExpression>} functions -
 * @property {vec4} value                                    -
 */

class TriColorSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.functions = [];
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromKeys(this);
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec4} value
   * @returns {vec4}
   */


  GetValueAt(time, value) {
    const vec4_0 = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].global.vec4_0;
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(vec4_0, 0, 0, 0, 0);

    for (let i = 0; i < this.functions.length; i++) {
      this.functions[i].GetValueAt(time, value);
      global__WEBPACK_IMPORTED_MODULE_0__["vec4"].add(value, value, vec4_0);
    }

    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["functions", r.array], ["name", r.string], ["value", r.vector4]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
TriColorSequencer.inputDimension = 4;
TriColorSequencer.outputDimension = 4;
TriColorSequencer.valueProperty = "value";
TriColorSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER;
TriColorSequencer.childArray = "functions";
TriColorSequencer.__isStaging = 2;

/***/ }),

/***/ "./curve/sequencer/Tw2CurveColor.js":
/*!******************************************!*\
  !*** ./curve/sequencer/Tw2CurveColor.js ***!
  \******************************************/
/*! exports provided: Tw2CurveColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveColor", function() { return Tw2CurveColor; });
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Tw2CurveColor
 * @ccp Tr2CurveColor
 *
 * @property {Tr2CurveScalar} r  -
 * @property {Tr2CurveScalar} g  -
 * @property {Tr2CurveScalar} b  -
 * @property {Tr2CurveScalar} a  -
 * @property {vec4} currentValue -
 */

class Tw2CurveColor extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.r = null;
    this.g = null;
    this.b = null;
    this.a = null;
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_1__["vec4"].fromValues(0, 0, 0, 0);
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Sort2(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].GetLengthFromProperties(this);
  }
  /**
   * Updates the current value at the given time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {Number} time
   * @param {vec4} value
   * @returns {vec4}
   */


  GetValueAt(time, value) {
    value[0] = this.r ? this.r.GetValueAt(time) : 0;
    value[1] = this.g ? this.g.GetValueAt(time) : 0;
    value[2] = this.b ? this.b.GetValueAt(time) : 0;
    value[3] = this.a ? this.a.GetValueAt(time) : 0;
    return value;
  }
  /**
   * The sequencer's curve input dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["r", r.rawObject], ["g", r.rawObject], ["b", r.rawObject], ["a", r.rawObject]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2CurveColor.inputDimension = 1;
Tw2CurveColor.outputDimension = 4;
Tw2CurveColor.valueProperty = "currentValue";
Tw2CurveColor.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Type.SEQUENCER;
Tw2CurveColor.childProperties = ["r", "g", "b", "a"];
Tw2CurveColor.__isStaging = 2;

/***/ }),

/***/ "./curve/sequencer/Tw2CurveEulerRotation.js":
/*!**************************************************!*\
  !*** ./curve/sequencer/Tw2CurveEulerRotation.js ***!
  \**************************************************/
/*! exports provided: Tw2CurveEulerRotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveEulerRotation", function() { return Tw2CurveEulerRotation; });
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Euler to Quaternion sequencer
 * @ccp Tr2CurveEulerRotation
 *
 * @property {Tr2CurveScalar} pitch -
 * @property {Tr2CurveScalar} roll  -
 * @property {Tr2CurveScalar} yaw   -
 * @property {quat} currentValue
 */

class Tw2CurveEulerRotation extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.pitch = null;
    this.roll = null;
    this.yaw = null;
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_1__["quat"].create();
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Sort2(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].GetLengthFromProperties(this);
  }
  /**
   * Updates the current value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {quat} value
   * @returns {quat}
   */


  GetValueAt(time, value) {
    const yaw = this.yaw ? this.yaw.GetValueAt(time) : 0.0,
          pitch = this.pitch ? this.pitch.GetValueAt(time) : 0.0,
          roll = this.roll ? this.roll.GetValueAt(time) : 0.0;
    const sinYaw = Math.sin(yaw / 2.0),
          cosYaw = Math.cos(yaw / 2.0),
          sinPitch = Math.sin(pitch / 2.0),
          cosPitch = Math.cos(pitch / 2.0),
          sinRoll = Math.sin(roll / 2.0),
          cosRoll = Math.cos(roll / 2.0);
    value[0] = sinYaw * cosPitch * sinRoll + cosYaw * sinPitch * cosRoll;
    value[1] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;
    value[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;
    value[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;
    return value;
  }
  /**
   * The sequencer's curve input dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["pitch", r.rawObject], ["roll", r.rawObject], ["yaw", r.rawObject]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2CurveEulerRotation.inputDimension = 1;
Tw2CurveEulerRotation.outputDimension = 4;
Tw2CurveEulerRotation.valueProperty = "currentValue";
Tw2CurveEulerRotation.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Type.SEQUENCER2;
Tw2CurveEulerRotation.childProperties = ["yaw", "pitch", "roll"];
Tw2CurveEulerRotation.__isStaging = 2;

/***/ }),

/***/ "./curve/sequencer/Tw2CurveSequencer.js":
/*!**********************************************!*\
  !*** ./curve/sequencer/Tw2CurveSequencer.js ***!
  \**********************************************/
/*! exports provided: Tw2CurveSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveSequencer", function() { return Tw2CurveSequencer; });
/* harmony import */ var _curve_Tw2Curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../curve/Tw2Curve */ "./curve/curve/Tw2Curve.js");

/**
 * Tw2CurveSequencer base class
 *
 * @class
 */

class Tw2CurveSequencer extends _curve_Tw2Curve__WEBPACK_IMPORTED_MODULE_0__["Tw2Curve"] {
  /**
   * Legacy sequencer sorting
   * @param {Tw2CurveSequencer} sequencer
   * @param {String} [childArray]
   */
  static Sort(sequencer, childArray = sequencer.constructor.childArray) {
    let curves = sequencer[childArray];

    if (curves && curves.length) {
      for (let i = 0; i < curves.length; i++) {
        if (curves[i] && "Sort" in curves[i]) {
          curves[i].Sort();
        }
      }
    }
  }
  /**
   * Standard sequencer sorting
   * @param {Tw2CurveSequencer} sequencer
   * @param {Array<String>} [childProperties]
   */


  static Sort2(sequencer, childProperties = sequencer.constructor.childProperties) {
    if (childProperties) {
      for (let i = 0; i < childProperties.length; i++) {
        let curve = sequencer[childProperties[i]];

        if (curve && "Sort" in curve) {
          curve.Sort();
        }
      }
    }
  }
  /**
   * Gets the length of the sequencer from it's key array
   * @param {Tw2CurveSequencer} sequencer
   * @param {String} [childArray]
   * @returns {number}
   */


  static GetLengthFromKeys(sequencer, childArray = sequencer.constructor.childArray) {
    const curveArray = sequencer[childArray];
    let len = 0;

    for (let i = 0; i < curveArray.length; ++i) {
      if ("GetLength" in curveArray[i]) {
        len = Math.max(len, curveArray[i].GetLength());
      }
    }

    return len;
  }
  /**
   * Gets the length of a sequencer's curves
   * @param {*} sequencer
   * @param {Array<String>} [childProperties]
   * @returns {number}
   */


  static GetLengthFromProperties(sequencer, childProperties = sequencer.constructor.childProperties) {
    let len = 0;

    for (let i = 0; i < childProperties.length; i++) {
      const curve = sequencer[childProperties[i]];

      if (curve && "GetLength" in curve) {
        len = Math.max(len, curve.GetLength());
      }
    }

    return len;
  }
  /**
   * The sequencer's curve input dimension
   * @type {?number}
   */


}
Tw2CurveSequencer.inputDimension = null;
Tw2CurveSequencer.outputDimension = null;
Tw2CurveSequencer.childProperties = null;
Tw2CurveSequencer.childArray = null;
Tw2CurveSequencer.Operator = null;

/***/ }),

/***/ "./curve/sequencer/Tw2CurveVector3.js":
/*!********************************************!*\
  !*** ./curve/sequencer/Tw2CurveVector3.js ***!
  \********************************************/
/*! exports provided: Tw2CurveVector3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveVector3", function() { return Tw2CurveVector3; });
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Vector3 curve sequencer
 * @ccp Tr2CurveVector3
 *
 * @property {Tr2CurveScalar} x -
 * @property {Tr2CurveScalar} y -
 * @property {Tr2CurveScalar} z -
 * @property {vec3} currentValue      -
 */

class Tw2CurveVector3 extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.x = null;
    this.y = null;
    this.z = null;
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_1__["vec3"].create();
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Sort2(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].GetLengthFromProperties(this);
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec3} value
   * @returns {vec3}
   */


  GetValueAt(time, value) {
    value[0] = this.x ? this.x.GetValueAt(time) : 0;
    value[1] = this.y ? this.y.GetValueAt(time) : 0;
    value[2] = this.z ? this.z.GetValueAt(time) : 0;
    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["x", r.rawObject], ["y", r.rawObject], ["z", r.rawObject]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2CurveVector3.inputDimension = 1;
Tw2CurveVector3.outputDimension = 3;
Tw2CurveVector3.valueProperty = "currentValue";
Tw2CurveVector3.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Type.SEQUENCER2;
Tw2CurveVector3.childProperties = ["x", "y", "z"];
Tw2CurveVector3.__isStaging = 2;

/***/ }),

/***/ "./curve/sequencer/index.js":
/*!**********************************!*\
  !*** ./curve/sequencer/index.js ***!
  \**********************************/
/*! exports provided: TriColorSequencer, Tw2CurveColor, Tw2CurveEulerRotation, Tw2CurveVector3, Tw2CurveSequencer, Tw2ColorSequencer, Tw2EulerRotation, Tw2QuaternionSequencer, Tw2RGBAScalarSequencer, Tw2ScalarSequencer, Tw2VectorSequencer, Tw2XYZScalarSequencer, Tw2YPRSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _TriColorSequencer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TriColorSequencer */ "./curve/sequencer/TriColorSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TriColorSequencer", function() { return _TriColorSequencer__WEBPACK_IMPORTED_MODULE_0__["TriColorSequencer"]; });

/* harmony import */ var _Tw2CurveColor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2CurveColor */ "./curve/sequencer/Tw2CurveColor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveColor", function() { return _Tw2CurveColor__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveColor"]; });

/* harmony import */ var _Tw2CurveEulerRotation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2CurveEulerRotation */ "./curve/sequencer/Tw2CurveEulerRotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveEulerRotation", function() { return _Tw2CurveEulerRotation__WEBPACK_IMPORTED_MODULE_2__["Tw2CurveEulerRotation"]; });

/* harmony import */ var _Tw2CurveVector3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2CurveVector3 */ "./curve/sequencer/Tw2CurveVector3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveVector3", function() { return _Tw2CurveVector3__WEBPACK_IMPORTED_MODULE_3__["Tw2CurveVector3"]; });

/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2CurveSequencer", function() { return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_4__["Tw2CurveSequencer"]; });

/* harmony import */ var _legacy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./legacy */ "./curve/sequencer/legacy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorSequencer", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2ColorSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EulerRotation", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2EulerRotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionSequencer", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2QuaternionSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RGBAScalarSequencer", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2RGBAScalarSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarSequencer", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2ScalarSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorSequencer", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2VectorSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2XYZScalarSequencer", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2XYZScalarSequencer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2YPRSequencer", function() { return _legacy__WEBPACK_IMPORTED_MODULE_5__["Tw2YPRSequencer"]; });








/***/ }),

/***/ "./curve/sequencer/legacy/Tw2ColorSequencer.js":
/*!*****************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2ColorSequencer.js ***!
  \*****************************************************/
/*! exports provided: Tw2ColorSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorSequencer", function() { return Tw2ColorSequencer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Tw2ColorSequencer
 *
 * @property {number} start
 * @property {vec4} value
 * @property {number} operator
 * @property {Array<Tw2Curve>} functions
 * @class
 */

class Tw2ColorSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.start = 0;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.operator = 0;
    this.functions = [];
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromKeys(this);
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec4} value
   * @returns {vec4}
   */


  GetValueAt(time, value) {
    const vec4_0 = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].global.vec4_0;

    switch (this.operator) {
      case Tw2ColorSequencer.Operator.MULTIPLY:
        global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(value, 1, 1, 1, 1);

        for (let i = 0; i < this.functions.length; ++i) {
          this.functions[i].GetValueAt(time, vec4_0);
          global__WEBPACK_IMPORTED_MODULE_0__["vec4"].multiply(value, value, vec4_0);
        }

        break;

      default:
        global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(value, 0, 0, 0, 0);

        for (let i = 0; i < this.functions.length; ++i) {
          this.functions[i].GetValueAt(time, vec4_0);
          global__WEBPACK_IMPORTED_MODULE_0__["vec4"].add(value, value, vec4_0);
        }

    }

    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2ColorSequencer.inputDimension = 4;
Tw2ColorSequencer.outputDimension = 4;
Tw2ColorSequencer.valueProperty = "value";
Tw2ColorSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER;
Tw2ColorSequencer.childArray = "functions";
Tw2ColorSequencer.Operator = {
  MULTIPLY: 0,
  ADD: 1
};

/***/ }),

/***/ "./curve/sequencer/legacy/Tw2EulerRotation.js":
/*!****************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2EulerRotation.js ***!
  \****************************************************/
/*! exports provided: Tw2EulerRotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2EulerRotation", function() { return Tw2EulerRotation; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Tw2EulerRotation
 *
 * @property {String} name
 * @property {Tw2Curve} [yawCurve]
 * @property {Tw2Curve} [pitchCurve]
 * @property {Tw2Curve} [rollCurve]
 * @property {quat} currentValue=[0,0,0,1]
 * @class
 */

class Tw2EulerRotation extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.yawCurve = null;
    this.pitchCurve = null;
    this.rollCurve = null;
    this.currentValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort2(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromProperties(this);
  }
  /**
   * Updates the current value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.currentValue);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {quat} value
   * @returns {quat}
   */


  GetValueAt(time, value) {
    const yaw = this.yawCurve ? this.yawCurve.GetValueAt(time) : 0.0,
          pitch = this.pitchCurve ? this.pitchCurve.GetValueAt(time) : 0.0,
          roll = this.rollCurve ? this.rollCurve.GetValueAt(time) : 0.0;
    const sinYaw = Math.sin(yaw / 2.0),
          cosYaw = Math.cos(yaw / 2.0),
          sinPitch = Math.sin(pitch / 2.0),
          cosPitch = Math.cos(pitch / 2.0),
          sinRoll = Math.sin(roll / 2.0),
          cosRoll = Math.cos(roll / 2.0);
    value[0] = sinYaw * cosPitch * sinRoll + cosYaw * sinPitch * cosRoll;
    value[1] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;
    value[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;
    value[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;
    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2EulerRotation.inputDimension = 1;
Tw2EulerRotation.outputDimension = 4;
Tw2EulerRotation.valueProperty = "currentValue";
Tw2EulerRotation.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER2;
Tw2EulerRotation.childProperties = ["yawCurve", "pitchCurve", "rollCurve"];

/***/ }),

/***/ "./curve/sequencer/legacy/Tw2QuaternionSequencer.js":
/*!**********************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2QuaternionSequencer.js ***!
  \**********************************************************/
/*! exports provided: Tw2QuaternionSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionSequencer", function() { return Tw2QuaternionSequencer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Tw2QuaternionSequencer
 *
 * @property {String} name
 * @property {number} start
 * @property {quat} value
 * @property {Array<Tw2Curve>} functions
 * @class
 */

class Tw2QuaternionSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.start = 0;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.functions = [];
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromKeys(this);
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {quat} value
   * @returns {quat}
   */


  GetValueAt(time, value) {
    global__WEBPACK_IMPORTED_MODULE_0__["quat"].identity(value);
    const quat_0 = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].global.quat_0;

    for (let i = 0; i < this.functions.length; ++i) {
      this.functions[i].GetValueAt(time, quat_0);
      global__WEBPACK_IMPORTED_MODULE_0__["quat"].multiply(value, value, quat_0);
    }

    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2QuaternionSequencer.inputDimension = 4;
Tw2QuaternionSequencer.outputDimension = 4;
Tw2QuaternionSequencer.valueProperty = "value";
Tw2QuaternionSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER;
Tw2QuaternionSequencer.childArray = "functions";

/***/ }),

/***/ "./curve/sequencer/legacy/Tw2RGBAScalarSequencer.js":
/*!**********************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2RGBAScalarSequencer.js ***!
  \**********************************************************/
/*! exports provided: Tw2RGBAScalarSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RGBAScalarSequencer", function() { return Tw2RGBAScalarSequencer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Tw2RGBAScalarSequencer
 *
 * @property {vec4} value
 * @property {Tw2Curve} RedCurve
 * @property {Tw2Curve} GreenCurve
 * @property {Tw2Curve} BlueCurve
 * @property {Tw2Curve} AlphaCurve
 * @class
 */

class Tw2RGBAScalarSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.RedCurve = null;
    this.GreenCurve = null;
    this.BlueCurve = null;
    this.AlphaCurve = null;
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort2(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromProperties(this);
  }
  /**
   * Updates the current value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec4} value
   * @returns {vec4}
   */


  GetValueAt(time, value) {
    value[0] = this.RedCurve ? this.RedCurve.GetValueAt(time) : 0;
    value[1] = this.GreenCurve ? this.GreenCurve.GetValueAt(time) : 0;
    value[2] = this.BlueCurve ? this.BlueCurve.GetValueAt(time) : 0;
    value[3] = this.AlphaCurve ? this.AlphaCurve.GetValueAt(time) : 0;
    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2RGBAScalarSequencer.inputDimension = 1;
Tw2RGBAScalarSequencer.outputDimension = 4;
Tw2RGBAScalarSequencer.valueProperty = "value";
Tw2RGBAScalarSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER2;
Tw2RGBAScalarSequencer.childProperties = ["RedCurve", "GreenCurve", "BlueCurve", "AlphaCurve"];

/***/ }),

/***/ "./curve/sequencer/legacy/Tw2ScalarSequencer.js":
/*!******************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2ScalarSequencer.js ***!
  \******************************************************/
/*! exports provided: Tw2ScalarSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarSequencer", function() { return Tw2ScalarSequencer; });
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");

/**
 * Tw2ScalarSequencer
 *
 * @property {String} name
 * @property {number} value
 * @property {number} operator
 * @property {Array<Tw2Curve>} functions
 * @property {number} inMinClamp
 * @property {number} inMaxClamp
 * @property {number} outMinClamp
 * @property {number} outMaxClamp
 * @property {Boolean} clamping
 * @class
 */

class Tw2ScalarSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.value = 0;
    this.operator = 0;
    this.functions = [];
    this.inMinClamp = 0;
    this.inMaxClamp = 1;
    this.outMinClamp = 0;
    this.outMaxClamp = 1;
    this.clamping = false;
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Sort(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].GetLengthFromKeys(this);
  }
  /**
   * Updates a value at a specific time
   *
   * @param {number} time
   */


  UpdateValue(time) {
    this.value = this.GetValueAt(time);
  }
  /**
   * Gets a value at a specific time
   *
   * @param {number} time
   * @returns {number}
   */


  GetValueAt(time) {
    let value;

    switch (this.operator) {
      case Tw2ScalarSequencer.Operator.MULTIPLY:
        value = 1;

        for (let i = 0; i < this.functions.length; ++i) {
          let v = this.functions[i].GetValueAt(time);

          if (this.clamping) {
            v = Math.min(Math.max(v, this.inMinClamp), this.inMaxClamp);
          }

          value *= v;
        }

        break;

      default:
        value = 0;

        for (let i = 0; i < this.functions.length; ++i) {
          let v = this.functions[i].GetValueAt(time);

          if (this.clamping) {
            v = Math.min(Math.max(v, this.inMinClamp), this.inMaxClamp);
          }

          value += v;
        }

    }

    if (this.clamping) {
      value = Math.min(Math.max(value, this.outMinClamp), this.outMaxClamp);
    }

    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2ScalarSequencer.inputDimension = 1;
Tw2ScalarSequencer.outputDimension = 1;
Tw2ScalarSequencer.valueProperty = "value";
Tw2ScalarSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2CurveSequencer"].Type.SEQUENCER;
Tw2ScalarSequencer.childArray = "functions";
Tw2ScalarSequencer.Operator = {
  MULTIPLY: 0,
  ADD: 1
};

/***/ }),

/***/ "./curve/sequencer/legacy/Tw2VectorSequencer.js":
/*!******************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2VectorSequencer.js ***!
  \******************************************************/
/*! exports provided: Tw2VectorSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorSequencer", function() { return Tw2VectorSequencer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Tw2VectorSequencer
 *
 * @property {String} name
 * @property {number} start
 * @property {vec3} value
 * @property {number} operator
 * @property {Array.<Tw2Curve>} functions
 * @class
 */

class Tw2VectorSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.start = 0;
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.operator = 0;
    this.functions = [];
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromKeys(this);
  }
  /**
   * Updates the current value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec3} value
   * @returns {vec3}
   */


  GetValueAt(time, value) {
    const vec3_0 = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].global.vec3_0;

    switch (this.operator) {
      case Tw2VectorSequencer.Operator.MULTIPLY:
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(value, 1, 1, 1);

        for (let i = 0; i < this.functions.length; ++i) {
          this.functions[i].GetValueAt(time, vec3_0);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].multiply(value, value, vec3_0);
        }

        return value;

      default:
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(value, 0, 0, 0);

        for (let i = 0; i < this.functions.length; ++i) {
          this.functions[i].GetValueAt(time, vec3_0);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(value, value, vec3_0);
        }

        return value;
    }
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2VectorSequencer.inputDimension = 3;
Tw2VectorSequencer.outputDimension = 3;
Tw2VectorSequencer.valueProperty = "value";
Tw2VectorSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER;
Tw2VectorSequencer.childArray = "functions";
Tw2VectorSequencer.Operator = {
  MULTIPLY: 0,
  ADD: 1
};

/***/ }),

/***/ "./curve/sequencer/legacy/Tw2XYZScalarSequencer.js":
/*!*********************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2XYZScalarSequencer.js ***!
  \*********************************************************/
/*! exports provided: Tw2XYZScalarSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2XYZScalarSequencer", function() { return Tw2XYZScalarSequencer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Tw2XYZScalarSequencer
 *
 * @property {String} name
 * @property {vec3} value
 * @property {Tw2CurveSequencer} XCurve
 * @property {Tw2CurveSequencer} YCurve
 * @property {Tw2CurveSequencer} ZCurve
 * @class
 */

class Tw2XYZScalarSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.XCurve = null;
    this.YCurve = null;
    this.ZCurve = null;
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort2(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromProperties(this);
  }
  /**
   * Updates a value at a specific time
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   * @param {number} time
   * @param {vec3} value
   * @returns {vec3}
   */


  GetValueAt(time, value) {
    value[0] = this.XCurve ? this.XCurve.GetValueAt(time) : 0;
    value[1] = this.YCurve ? this.YCurve.GetValueAt(time) : 0;
    value[2] = this.ZCurve ? this.ZCurve.GetValueAt(time) : 0;
    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2XYZScalarSequencer.inputDimension = 1;
Tw2XYZScalarSequencer.outputDimension = 3;
Tw2XYZScalarSequencer.valueProperty = "value";
Tw2XYZScalarSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER2;
Tw2XYZScalarSequencer.childProperties = ["XCurve", "YCurve", "ZCurve"];

/***/ }),

/***/ "./curve/sequencer/legacy/Tw2YPRSequencer.js":
/*!***************************************************!*\
  !*** ./curve/sequencer/legacy/Tw2YPRSequencer.js ***!
  \***************************************************/
/*! exports provided: Tw2YPRSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2YPRSequencer", function() { return Tw2YPRSequencer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tw2CurveSequencer */ "./curve/sequencer/Tw2CurveSequencer.js");


/**
 * Tw2YPRSequencer
 *
 * @property {quat} value
 * @property {vec3} YawPitchRoll
 * @property {Tw2Curve} YawCurve
 * @property {Tw2Curve} PitchCurve
 * @property {Tw2Curve} RollCurve
 * @class
 */

class Tw2YPRSequencer extends _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.YawPitchRoll = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.YawCurve = null;
    this.PitchCurve = null;
    this.RollCurve = null;
  }

  /**
   * Sorts the sequencer
   */
  Sort() {
    _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Sort2(this);
  }
  /**
   * Gets sequencer length
   * @returns {number}
   */


  GetLength() {
    return _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].GetLengthFromProperties(this);
  }
  /**
   * Updates a value at a specific time
   *
   * @param {number} time
   */


  UpdateValue(time) {
    this.GetValueAt(time, this.value);
  }
  /**
   * Gets a value at a specific time
   *
   * @param {number} time
   * @param {quat} value
   * @returns {quat}
   */


  GetValueAt(time, value) {
    if (this.YawCurve) this.YawPitchRoll[0] = this.YawCurve.GetValueAt(time);
    if (this.PitchCurve) this.YawPitchRoll[1] = this.PitchCurve.GetValueAt(time);
    if (this.RollCurve) this.YawPitchRoll[2] = this.RollCurve.GetValueAt(time);
    const sinYaw = Math.sin(this.YawPitchRoll[0] / 180 * Math.PI / 2.0),
          cosYaw = Math.cos(this.YawPitchRoll[0] / 180 * Math.PI / 2.0),
          sinPitch = Math.sin(this.YawPitchRoll[1] / 180 * Math.PI / 2.0),
          cosPitch = Math.cos(this.YawPitchRoll[1] / 180 * Math.PI / 2.0),
          sinRoll = Math.sin(this.YawPitchRoll[2] / 180 * Math.PI / 2.0),
          cosRoll = Math.cos(this.YawPitchRoll[2] / 180 * Math.PI / 2.0);
    value[0] = sinYaw * cosPitch * sinRoll + cosYaw * sinPitch * cosRoll;
    value[1] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;
    value[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;
    value[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;
    return value;
  }
  /**
   * The sequencer's curve dimension
   * @type {number}
   */


}
Tw2YPRSequencer.inputDimension = 1;
Tw2YPRSequencer.outputDimension = 4;
Tw2YPRSequencer.valueProperty = "value";
Tw2YPRSequencer.curveType = _Tw2CurveSequencer__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSequencer"].Type.SEQUENCER2;
Tw2YPRSequencer.childProperties = ["YawCurve", "PitchCurve", "RollCurve"];

/***/ }),

/***/ "./curve/sequencer/legacy/index.js":
/*!*****************************************!*\
  !*** ./curve/sequencer/legacy/index.js ***!
  \*****************************************/
/*! exports provided: Tw2ColorSequencer, Tw2EulerRotation, Tw2QuaternionSequencer, Tw2RGBAScalarSequencer, Tw2ScalarSequencer, Tw2VectorSequencer, Tw2XYZScalarSequencer, Tw2YPRSequencer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2ColorSequencer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2ColorSequencer */ "./curve/sequencer/legacy/Tw2ColorSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ColorSequencer", function() { return _Tw2ColorSequencer__WEBPACK_IMPORTED_MODULE_0__["Tw2ColorSequencer"]; });

/* harmony import */ var _Tw2EulerRotation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2EulerRotation */ "./curve/sequencer/legacy/Tw2EulerRotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EulerRotation", function() { return _Tw2EulerRotation__WEBPACK_IMPORTED_MODULE_1__["Tw2EulerRotation"]; });

/* harmony import */ var _Tw2QuaternionSequencer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2QuaternionSequencer */ "./curve/sequencer/legacy/Tw2QuaternionSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2QuaternionSequencer", function() { return _Tw2QuaternionSequencer__WEBPACK_IMPORTED_MODULE_2__["Tw2QuaternionSequencer"]; });

/* harmony import */ var _Tw2RGBAScalarSequencer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2RGBAScalarSequencer */ "./curve/sequencer/legacy/Tw2RGBAScalarSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RGBAScalarSequencer", function() { return _Tw2RGBAScalarSequencer__WEBPACK_IMPORTED_MODULE_3__["Tw2RGBAScalarSequencer"]; });

/* harmony import */ var _Tw2ScalarSequencer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2ScalarSequencer */ "./curve/sequencer/legacy/Tw2ScalarSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ScalarSequencer", function() { return _Tw2ScalarSequencer__WEBPACK_IMPORTED_MODULE_4__["Tw2ScalarSequencer"]; });

/* harmony import */ var _Tw2VectorSequencer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2VectorSequencer */ "./curve/sequencer/legacy/Tw2VectorSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2VectorSequencer", function() { return _Tw2VectorSequencer__WEBPACK_IMPORTED_MODULE_5__["Tw2VectorSequencer"]; });

/* harmony import */ var _Tw2XYZScalarSequencer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2XYZScalarSequencer */ "./curve/sequencer/legacy/Tw2XYZScalarSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2XYZScalarSequencer", function() { return _Tw2XYZScalarSequencer__WEBPACK_IMPORTED_MODULE_6__["Tw2XYZScalarSequencer"]; });

/* harmony import */ var _Tw2YPRSequencer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2YPRSequencer */ "./curve/sequencer/legacy/Tw2YPRSequencer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2YPRSequencer", function() { return _Tw2YPRSequencer__WEBPACK_IMPORTED_MODULE_7__["Tw2YPRSequencer"]; });










/***/ }),

/***/ "./eve/EveCamera.js":
/*!**************************!*\
  !*** ./eve/EveCamera.js ***!
  \**************************/
/*! exports provided: EveCamera */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveCamera", function() { return EveCamera; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveCamera
 * TODO: Implement
 * @ccp EveCamera
 *
 * @property {Number} fieldOfView             -
 * @property {Number} friction                -
 * @property {Number} frontClip               -
 * @property {Boolean} idleMove               -
 * @property {Number} idleScale               -
 * @property {Number} idleSpeed               -
 * @property {vec3} intr                      -
 * @property {Number} maxSpeed                -
 * @property {Number} noiseScale              -
 * @property {Tr2CurveScalar} noiseScaleCurve -
 * @property {Number} pitch                   -
 * @property {vec3} pos                       -
 * @property {quat} rotationAroundParent      -
 * @property {Number} translationFromParent   -
 * @property {Number} yaw                     -
 * @property {Tr2CurveScalar} zoomCurve       -
 */

class EveCamera extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.fieldOfView = 0;
    this.friction = 0;
    this.frontClip = 0;
    this.idleMove = false;
    this.idleScale = 0;
    this.idleSpeed = 0;
    this.intr = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.maxSpeed = 0;
    this.noiseScale = 0;
    this.noiseScaleCurve = null;
    this.pitch = 0;
    this.pos = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotationAroundParent = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.translationFromParent = 0;
    this.yaw = 0;
    this.zoomCurve = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["fieldOfView", r.float], ["friction", r.float], ["frontClip", r.float], ["idleMove", r.boolean], ["idleScale", r.float], ["idleSpeed", r.float], ["intr", r.vector3], ["pitch", r.float], ["pos", r.vector3], ["maxSpeed", r.float], ["noiseScale", r.float], ["noiseScaleCurve", r.object], ["rotationAroundParent", r.vector4], ["translationFromParent", r.float], ["yaw", r.float], ["zoomCurve", r.object]];
  }

}
EveCamera.__isStaging = 4;

/***/ }),

/***/ "./eve/EveLineContainer.js":
/*!*********************************!*\
  !*** ./eve/EveLineContainer.js ***!
  \*********************************/
/*! exports provided: EveLineContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveLineContainer", function() { return EveLineContainer; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveLineContainer
 * @ccp EveLineContainer
 * TODO: Implement
 *
 * @property {EveCurveLineSet} lineSet -
 */

class EveLineContainer extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.lineSet = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["lineSet", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveLineContainer.__isStaging = 4;

/***/ }),

/***/ "./eve/EveSpaceScene.js":
/*!******************************!*\
  !*** ./eve/EveSpaceScene.js ***!
  \******************************/
/*! exports provided: EveSpaceScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpaceScene", function() { return EveSpaceScene; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");


/**
 * EveSpaceScene
 * TODO: Identify where to set "shadowFadeThreshold" in ps frame data
 * TODO: Identify where to set "shadowThreshold" in ps frame data
 * TODO: Identify if/where/how to set "enableShadows" in ps frame data
 * TODO: Identify if/where/how to set "selfShadowOnly" in ps frame data
 * TODO: Identify if shadows require their own render mode and render batch accumulation
 * TODO: Implement "externalParameters"
 * TODO: Implement "selfShadowOnly"
 * TODO: Implement "shLightingManager"
 * TODO: Implement "shadowFadeThreshold"
 * TODO: Implement "shadowThreshold"
 * TODO: Implement "starField"
 * TODO: Implement "sunDiffuseColorWithDynamicLights"
 * TODO: Implement "postProcess"
 * @ccp EveSpaceScene
 *
 * @property {vec4} ambientColor                                                     -
 * @property {Tr2Effect} backgroundEffect                                            -
 * @property {Array.<EveObject>} backgroundObjects                                   -
 * @property {Boolean} backgroundRenderingEnabled                                    -
 * @property {Array.<Tw2CurveSet>} curveSets                                         -
 * @property {Boolean} enableShadows                                                 -
 * @property {String} envMap1ResPath                                                 -
 * @property {String} envMap2ResPath                                                 -
 * @property {String} envMapResPath                                                  -
 * @property {quat} envMapRotation                                                   -
 * @property {Array.<Tr2ExternalParameter>} externalParameters                       -
 * @property {vec4} fogColor                                                         -
 * @property {Number} fogEnd                                                         -
 * @property {Number} fogMax                                                         -
 * @property {Number} fogStart                                                       -
 * @property {Number} nebulaIntensity                                                -
 * @property {Array.<EveEffectRoot2|EveRootTransform|EveObject|EveStation2>} objects -
 * @property {String} postProcessPath                                                -
 * @property {Boolean} selfShadowOnly                                                -
 * @property {Tr2ShLightingManager} shLightingManager                                -
 * @property {Number} shadowFadeThreshold                                            -
 * @property {Number} shadowThreshold                                                -
 * @property {EveStarfield} starfield                                                -
 * @property {vec4} sunDiffuseColor                                                  -
 * @property {vec4} sunDiffuseColorWithDynamicLights                                 -
 * @property {vec3} sunDirection                                                     -
 * @property {Boolean} useSunDiffuseColorWithDynamicLights                           -
 * @property {vec4} clearColor
 * @property {Boolean} display
 * @property {vec3} envMapScaling
 * @property {Number} fogBlur
 * @property {Number} fogType
 * @property {Array.<EveLensflare>} lensflares
 * @property {Array.<EvePlanet>} planets
 * @property {Tr2PostProcess} postProcess
 * @property {*} visible
 * @property {*} debugHelper
 * @property {Tw2BatchAccumulator} _batches
 * @property {Tw2TextureRes} _emptyTexture
 * @property {Tw2Frustum} _frustum
 * @property {Boolean} _lodEnabled
 * @property {Tw2RawData} _perFrameVS
 * @property {Tw2RawData} _perFramePS
 * @property {Tw2TextureRes} _envMapRes
 * @property {Tw2TextureRes} _envMap1Res
 * @property {Tw2TextureRes} _envMap1Res
 */

class EveSpaceScene extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  // ccp
  //ccpwgl
  // Should this come from the background effect?
  //shadowEffect = null;

  /**
   * Constructor
   */
  constructor() {
    super();
    this.ambientColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0.25, 0.25, 0.25, 1);
    this.backgroundEffect = null;
    this.backgroundObjects = [];
    this.backgroundRenderingEnabled = true;
    this.curveSets = [];
    this.enableShadows = false;
    this.envMap1ResPath = "";
    this.envMap2ResPath = "";
    this.envMapResPath = "";
    this.envMapRotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.externalParameters = [];
    this.fogColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0.25, 0.25, 0.25, 1);
    this.fogEnd = 0;
    this.fogMax = 0;
    this.fogStart = 0;
    this.nebulaIntensity = 1;
    this.objects = [];
    this.postProcessPath = "";
    this.selfShadowOnly = false;
    this.shLightingManager = null;
    this.shadowFadeThreshold = 0;
    this.shadowThreshold = 0;
    this.starfield = null;
    this.sunDiffuseColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(1, 1, 1, 1);
    this.sunDiffuseColorWithDynamicLights = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(1, 1, 1, 1);
    this.sunDirection = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, -1, 1);
    this.useSunDiffuseColorWithDynamicLights = false;
    this.clearColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0, 0, 0, 1);
    this.display = true;
    this.envMapScaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.fogBlur = 0;
    this.fogType = 0;
    this.lensflares = [];
    this.planets = [];
    this.lineSets = [];
    this.postProcess = null;
    this.visible = {
      backgroundObjects: true,
      clearColor: true,
      debug: false,
      //environment: true,
      environmentReflection: true,
      environmentDiffuse: true,
      environmentBlur: true,
      fog: true,
      lensflares: true,
      lineSets: true,
      objects: true,
      planets: true,
      post: true,
      //shadow: true,
      starField: true
    };
    this._debugHelper = null;
    this._batches = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2BatchAccumulator"]();
    this._emptyTexture = null;
    this._frustum = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2Frustum"]();
    this._lodEnabled = false;
    this._perFrameVS = core__WEBPACK_IMPORTED_MODULE_1__["Tw2RawData"].from(EveSpaceScene.perFrameData.vs);
    this._perFramePS = core__WEBPACK_IMPORTED_MODULE_1__["Tw2RawData"].from(EveSpaceScene.perFrameData.ps);
    this._envMapRes = null;
    this._envMap1Res = null;
    this._envMap2Res = null;
    Object.defineProperty(this.visible, "environment", {
      get: () => this.backgroundRenderingEnabled,
      set: bool => this.backgroundRenderingEnabled = bool ? 1 : 0
    });
    Object.defineProperty(this.visible, "shadow", {
      get: () => this.enableShadows,
      set: bool => this.enableShadows = bool ? 1 : 0
    });
    EveSpaceScene.init();
  }
  /**
   * Initializes the space scene
   */


  Initialize() {
    this.SetEnvMapReflection(this.envMapPath);
    this.SetEnvMapDiffuse(this.envMap1ResPath);
    this.SetEnvMapBlur(this.envMap2ResPath);
    this.SetPostProcess(this.postProcessPath); // Shift own objects to the background objects array
    // This is to stop wrapped scenes from accidentally purging the scene's own objects
    // during scene rebuilds

    if (this.objects.length) {
      for (let i = 0; i < this.objects.length; i++) {
        this.backgroundObjects.push(this.objects[i]);
      }

      this.objects.splice(0);
    }
  }
  /**
   * Sets the post processing path
   * @param {String} path
   */


  SetPostProcess(path = "") {
    if (!path) {
      this.postProcessPath = "";
      this.postProcess = null;
    } else {
      this.postProcessPath = path.toLowerCase();
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetObject(path, obj => this.postProcess = obj);
    }
  }
  /**
   * Sets the environment's reflection map
   * @param {String} path
   */


  SetEnvMapReflection(path = "") {
    if (!path) {
      this.envMapPath = "";
      this._envMapRes = null;
    } else {
      this.envMapResPath = path;
      this._envMapRes = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(path);
    }
  }
  /**
   * Sets the environment's diffuse map
   * @param {String} path
   */


  SetEnvMapDiffuse(path = "") {
    if (!path) {
      this.envMap1ResPath = "";
      this._envMap1Res = null;
    } else {
      this.envMap1ResPath = path.toLowerCase();
      this._envMap1Res = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(path);
    }
  }
  /**
   * Sets the environment's blur map (used for fog)
   * @param {String} path
   */


  SetEnvMapBlur(path = "") {
    if (!path) {
      this.envMap2ResPath = "";
      this._envMap1Res = null;
      return;
    }

    this.envMap2ResPath = path.toLowerCase();
    this._envMap2Res = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(path);
  }
  /**
   * Enables LOD
   * @param {Boolean} enable
   */


  EnableLod(enable) {
    this._lodEnabled = enable;
    if (!enable) this.PerChildObject("ResetLod");
  }
  /**
   * Keeps the scene and it's object's resources alive
   */


  KeepAlive() {
    const res = this.GetResources();
    this.GetChildResources(res);

    for (let i = 0; i < res.length; i++) {
      res[i].KeepAlive();
    }
  }
  /**
   * Gets scene's resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    for (let i = 0; i < this.lensflares.length; i++) {
      this.lensflares[i].GetResources(out);
    }

    if (this.backgroundEffect) this.backgroundEffect.GetResources(out);
    if (this.postProcess) this.postProcess.GetResources(out);
    if (this.starfield) this.starfield.GetResources(out);
    if (this._envMapRes && !out.includes(this._envMapRes)) out.push(this._envMapRes);
    if (this._envMap1Res && !out.includes(this._envMap1Res)) out.push(this._envMapRes);
    if (this._envMap2Res && !out.includes(this._envMap2Res)) out.push(this._envMapRes);
    return out;
  }
  /**
   * Gets children's resources
   * @param {Array} [out=[]]
   * @returns {Array<Tw2Resource>}
   */


  GetChildResources(out = []) {
    this.PerChildObject("GetResources", out);
    return out;
  }
  /**
   * Calls a function on each planet, object and background object if it exists
   * @param {String} funcName
   * @param args
   */


  PerChildObject(funcName, ...args) {
    for (let i = 0; i < this.planets.length; i++) {
      if (funcName in this.planets[i]) {
        this.planets[i][funcName](...args);
      }
    }

    for (let i = 0; i < this.objects.length; i++) {
      if (funcName in this.objects[i]) {
        this.objects[i][funcName](...args);
      }
    }

    for (let i = 0; i < this.backgroundObjects.length; i++) {
      if (funcName in this.backgroundObjects[i]) {
        this.backgroundObjects[i][funcName](...args);
      }
    }

    for (let i = 0; i < this.lineSets.length; i++) {
      if (funcName in this.lineSets[i]) {
        this.lineSets[i][funcName](...args);
      }
    }
  }
  /**
   * Gets an empty texture
   * @returns {Tw2TextureRes}
   */


  GetEmptyTexture() {
    if (!this._emptyTexture) {
      this._emptyTexture = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource("res:/texture/global/black.dds.0.png");
    }

    return this._emptyTexture;
  }
  /**
   * Per frame update that is called per frame
   * @param {number} dt - delta time
   */


  Update(dt) {
    for (let i = 0; i < this.curveSets.length; i++) {
      this.curveSets[i].Update(dt);
    }

    this.PerChildObject("Update", dt);
    /*
    if (this.starField)
    {
        this.starField.Update(dt);
    }
    */
  }
  /**
   * Gets batches for rendering
   * @param {number} mode
   * @param {Array.<EveObject>} objectArray
   * @param {Tw2BatchAccumulator} [accumulator=this._batches]
   */


  RenderBatches(mode, objectArray, accumulator = this._batches) {
    for (let i = 0; i < objectArray.length; ++i) {
      if ("GetBatches" in objectArray[i]) {
        objectArray[i].GetBatches(mode, accumulator);
      }
    }
  }
  /**
   * Updates children's view dependent data and renders them
   * @param {Number} dt - deltaTime
   */


  Render(dt) {
    this.ApplyPerFrameData();
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          g = EveSpaceScene.global,
          tr = undefined,
          show = this.visible;

    if (show["environment"] && this.backgroundEffect) {
      d.SetStandardStates(d.RM_FULLSCREEN);
      d.RenderCameraSpaceQuad(this.backgroundEffect);
    }

    if (show.planets && this.planets.length) {
      const tempProj = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(g.mat4_0, d.projection),
            newProj = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(g.mat4_1, d.projection),
            zn = 10000,
            zf = 1e11;
      newProj[10] = zf / (zn - zf);
      newProj[14] = zf * zn / (zn - zf);
      d.SetProjection(newProj, true);
      this.ApplyPerFrameData();

      for (let i = 0; i < this.planets.length; ++i) {
        if (this.planets[i].UpdateViewDependentData) {
          this.planets[i].UpdateViewDependentData(tr, dt);
        }
      }

      this._batches.Clear();

      d.gl.depthRange(0.9, 1);
      this.RenderBatches(d.RM_OPAQUE, this.planets);
      this.RenderBatches(d.RM_DECAL, this.planets);
      this.RenderBatches(d.RM_TRANSPARENT, this.planets);
      this.RenderBatches(d.RM_ADDITIVE, this.planets);

      this._batches.Render();

      d.SetProjection(tempProj, true);
      this.ApplyPerFrameData();
      d.gl.depthRange(0, 0.9);
    }

    if (this._lodEnabled) {
      this._frustum.Initialize(d.view, d.projection, d.viewportWidth, d.viewInverse, d.viewProjection);

      this.PerChildObject("UpdateLod", this._frustum);
    }

    if (show.objects) {
      for (let i = 0; i < this.objects.length; ++i) {
        if (this.objects[i].UpdateViewDependentData) {
          this.objects[i].UpdateViewDependentData(tr, dt);
        }
      }
    }

    if (show.backgroundObjects) {
      for (let i = 0; i < this.backgroundObjects.length; i++) {
        if (this.backgroundObjects[i].UpdateViewDependentData) {
          this.backgroundObjects[i].UpdateViewDependentData(tr, dt);
        }
      }
    }

    if (show.lineSets) {
      for (let i = 0; i < this.lineSets.length; i++) {
        this.lineSets[i].UpdateViewDependentData(tr, dt);
      }
    }

    if (show.lensflares) {
      for (let i = 0; i < this.lensflares.length; ++i) {
        this.lensflares[i].PrepareRender();
      }
    }

    this._batches.Clear();

    if (show.planets) {
      for (let i = 0; i < this.planets.length; ++i) {
        this.planets[i].GetZOnlyBatches(d.RM_OPAQUE, this._batches);
      }
    }

    if (show.objects) {
      this.RenderBatches(d.RM_OPAQUE, this.objects);
      this.RenderBatches(d.RM_DECAL, this.objects);
      this.RenderBatches(d.RM_TRANSPARENT, this.objects);
      this.RenderBatches(d.RM_ADDITIVE, this.objects); //this.RenderBatches(d.RM_DISTORTION, this.objects);
    }

    if (show.backgroundObjects) {
      this.RenderBatches(d.RM_OPAQUE, this.backgroundObjects);
      this.RenderBatches(d.RM_DECAL, this.backgroundObjects);
      this.RenderBatches(d.RM_TRANSPARENT, this.backgroundObjects);
      this.RenderBatches(d.RM_ADDITIVE, this.backgroundObjects); //this.RenderBatched(d.RM_DISTORTION, this.backgroundObjects);
    }

    if (show.lineSets) {
      this.RenderBatches(d.RM_TRANSPARENT, this.lineSets);
      this.RenderBatches(d.RM_ADDITIVE, this.lineSets);
    }

    if (show.lensflares) {
      for (let i = 0; i < this.lensflares.length; ++i) {
        this.lensflares[i].GetBatches(d.RM_ADDITIVE, this._batches);
      }
    }

    if (this.starfield) {// TODO: Implement starfield
    }

    if (this.postProcess) {// TODO: Implement post processing
    }

    this._batches.Render();

    if (show.lensflares) {
      for (let i = 0; i < this.lensflares.length; ++i) {
        this.lensflares[i].UpdateOccluders();
      }
    }

    if (show.debug) {
      if (EveSpaceScene.DebugRenderer) {
        if (!this._debugHelper) {
          this._debugHelper = new EveSpaceScene.DebugRenderer();
        }

        this.PerChildObject("RenderDebugInfo", this._debugHelper);

        this._debugHelper.Render();
      }
    }
  }
  /**
   * Applies per frame data
   */


  ApplyPerFrameData() {
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          g = EveSpaceScene.global,
          envMapTransform = g.mat4_2,
          sunDir = g.vec3_0,
          show = this.visible; // Todo: Update from local transform??

    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromQuat(envMapTransform, this.envMapRotation);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].scale(envMapTransform, envMapTransform, this.envMapScaling);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(envMapTransform, envMapTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].negate(sunDir, this.sunDirection);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(sunDir, sunDir);
    let distance = this.fogEnd - this.fogStart;
    if (Math.abs(distance) < 1e-5) distance = 1e-5;
    const f = 1.0 / distance;
    const vs = this._perFrameVS;
    vs.Set("FogFactors", [this.fogEnd * f, f, this.visible.fog ? this.fogMax : 0, 1]);
    vs.Set("ViewportAdjustment", [1, 1, 1, 1]);
    vs.Set("MiscSettings", [d.currentTime, 0, d.viewportWidth, d.viewportHeight]);
    vs.Set("SunData.DirWorld", sunDir);
    vs.Set("SunData.DiffuseColor", this.sunDiffuseColor);
    vs.Set("TargetResolution", d.targetResolution);
    vs.Set("ViewInverseTransposeMat", d.viewInverse);
    vs.Set("ViewProjectionMat", d.viewProjectionTranspose);
    vs.Set("ViewMat", d.viewTranspose);
    vs.Set("ProjectionMat", d.projectionTranspose);
    vs.Set("EnvMapRotationMat", envMapTransform);
    d.perFrameVSData = vs;
    const ps = this._perFramePS;
    ps.Set("ViewInverseTransposeMat", d.viewInverse);
    ps.Set("ViewMat", d.viewTranspose);
    ps.Set("EnvMapRotationMat", envMapTransform);
    ps.Set("SunData.DirWorld", sunDir);
    ps.Set("SunData.DiffuseColor", this.sunDiffuseColor);
    ps.Set("SceneData.AmbientColor", this.ambientColor);
    ps.Set("MiscSettings", [d.currentTime, this.fogType, this.fogBlur, 1]);
    ps.Set("SceneData.FogColor", this.fogColor);
    ps.Set("FovXY", [d.targetResolution[3], d.targetResolution[2]]);
    ps.Set("ShadowMapSettings", [1, 1, 0, 0]);
    ps.Set("TargetResolution", d.targetResolution);
    ps.SetIndex("SceneData.NebulaIntensity", 0, this.nebulaIntensity);
    ps.SetIndex("ViewportSize", 0, d.viewportWidth);
    ps.SetIndex("ViewportSize", 1, d.viewportHeight);
    ps.SetIndex("ShadowCameraRange", 0, 1);
    ps.SetIndex("ProjectionToView", 0, -d.projection[14]);
    ps.SetIndex("ProjectionToView", 1, -d.projection[10] - 1);
    /*
    ps.Get("SceneData.NebulaIntensity")[0] = this.nebulaIntensity;
    ps.Get("ViewportSize")[0] = d.viewportWidth;
    ps.Get("ViewportSize")[1] = d.viewportHeight;
    ps.Get("ShadowCameraRange")[0] = 1;
    ps.Get("ProjectionToView")[0] = -d.projection[14];
    ps.Get("ProjectionToView")[1] = -d.projection[10] - 1;
     */

    d.perFramePSData = ps;
    const envMap = this._envMapRes && show.environmentReflection ? this._envMapRes : this.GetEmptyTexture(),
          envMap1 = this._envMap1Res && show.environmentDiffuse ? this._envMap1Res : this.GetEmptyTexture(),
          envMap2 = this._envMap2Res && show.environmentBlur ? this._envMap2Res : this.GetEmptyTexture();
    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetVariable("EveSpaceSceneEnvMap").SetTextureRes(envMap);
    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetVariable("EnvMap1").SetTextureRes(envMap1);
    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].GetVariable("EnvMap2").SetTextureRes(envMap2);
  }
  /**
   * Initializes class global and scratch variables
   */


  static init() {
    if (!EveSpaceScene.global) {
      EveSpaceScene.global = {
        vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        vec4_0: global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(),
        mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create(),
        mat4_1: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create(),
        mat4_2: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
      };
    }
  }
  /**
   * Per frame data
   * @type {*}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["ambientColor", r.color], ["backgroundEffect", r.object], ["backgroundObjects", r.array], ["backgroundRenderingEnabled", r.boolean], ["curveSets", r.array], ["enableShadows", r.boolean], ["envMapResPath", r.path], ["envMap1ResPath", r.path], ["envMap2ResPath", r.path], ["envMapRotation", r.vector4], ["externalParameters", r.array], ["fogColor", r.color], ["fogStart", r.float], ["fogEnd", r.float], ["fogMax", r.float], ["nebulaIntensity", r.float], ["objects", r.array], ["postProcessPath", r.path], ["selfShadowOnly", r.boolean], ["starfield", r.object], ["shadowFadeThreshold", r.float], ["shadowThreshold", r.float], ["shLightingManager", r.object], ["sunDiffuseColor", r.color], ["sunDiffuseColorWithDynamicLights", r.vector4], ["sunDirection", r.vector3], ["useSunDiffuseColorWithDynamicLights", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveSpaceScene.perFrameData = {
  ps: [["ViewInverseTransposeMat", 16], ["ViewMat", 16], ["EnvMapRotationMat", 16], ["SunData.DirWorld", 4], ["SunData.DiffuseColor", 4], ["SceneData.AmbientColor", 3], ["SceneData.NebulaIntensity", 1], ["SceneData.FogColor", 4], ["ViewportOffset", 2], ["ViewportSize", 2], ["TargetResolution", 4], ["ShadowMapSettings", 4], ["ShadowCameraRange", 4], ["ProjectionToView", 2], ["FovXY", 2], ["MiscSettings", 4]],
  vs: [["ViewInverseTransposeMat", 16], ["ViewProjectionMat", 16], ["ViewMat", 16], ["ProjectionMat", 16], ["ShadowViewMat", 16], ["ShadowViewProjectionMat", 16], ["EnvMapRotationMat", 16], ["SunData.DirWorld", 4], ["SunData.DiffuseColor", 4], ["FogFactors", 4], ["TargetResolution", 4], ["ViewportAdjustment", 4], ["MiscSettings", 4]]
};
EveSpaceScene.global = null;
EveSpaceScene.DebugRenderer = window["Tw2DebugRenderer"] || null;
EveSpaceScene.__isStaging = 2;
EveSpaceScene.__isScene = true;

/***/ }),

/***/ "./eve/animation/EveAnimation.js":
/*!***************************************!*\
  !*** ./eve/animation/EveAnimation.js ***!
  \***************************************/
/*! exports provided: EveAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveAnimation", function() { return EveAnimation; });
/**
 * EveAnimation
 * TODO: Identify default value for "loop" property
 *
 * @property {String} name  - The animation's name
 * @property {Number} loops - The amount of time the animation should loop
 */
class EveAnimation {
  constructor() {
    this.name = "";
    this.loops = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["loops", r.uint]];
  }

}

/***/ }),

/***/ "./eve/animation/EveAnimationCommand.js":
/*!**********************************************!*\
  !*** ./eve/animation/EveAnimationCommand.js ***!
  \**********************************************/
/*! exports provided: EveAnimationCommand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveAnimationCommand", function() { return EveAnimationCommand; });
/**
 * EveAnimationCommand
 * TODO: Identify default value of "command" property
 *
 * @property {Number} command - The command's number/ id
 */
class EveAnimationCommand {
  constructor() {
    this.command = -1;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["command", r.uint]];
  }

}

/***/ }),

/***/ "./eve/animation/EveAnimationCurve.js":
/*!********************************************!*\
  !*** ./eve/animation/EveAnimationCurve.js ***!
  \********************************************/
/*! exports provided: EveAnimationCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveAnimationCurve", function() { return EveAnimationCurve; });
/**
 * EveAnimationCurve
 *
 * @property {String} name - The name of the target animation curve?
 */
class EveAnimationCurve {
  constructor() {
    this.name = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string]];
  }

}

/***/ }),

/***/ "./eve/animation/EveAnimationState.js":
/*!********************************************!*\
  !*** ./eve/animation/EveAnimationState.js ***!
  \********************************************/
/*! exports provided: EveAnimationState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveAnimationState", function() { return EveAnimationState; });
/* harmony import */ var _EveAnimationStateTransition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveAnimationStateTransition */ "./eve/animation/EveAnimationStateTransition.js");

/**
 * EveAnimationState
 * TODO: Identify array children type of "initCommands" property
 *
 * @property {String} name                                    -
 * @property {EveAnimation} animation                         -
 * @property {Array<EveAnimationCurve>} curves                -
 * @property {Array<EveAnimationCommand>} commands            -
 * @property {Array<*>} initCommands                          -
 * @property {Array<EveAnimationStateTransition>} transitions -
 */

class EveAnimationState {
  constructor() {
    this.name = "";
    this.animation = null;
    this.curves = [];
    this.commands = [];
    this.initCommands = [];
    this.transitions = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["animation", r.object], ["curves", r.array], ["commands", r.array], ["initCommands", r.array], ["transitions", r.structList(_EveAnimationStateTransition__WEBPACK_IMPORTED_MODULE_0__["EveAnimationStateTransition"])]];
  }

}

/***/ }),

/***/ "./eve/animation/EveAnimationStateMachine.js":
/*!***************************************************!*\
  !*** ./eve/animation/EveAnimationStateMachine.js ***!
  \***************************************************/
/*! exports provided: EveAnimationStateMachine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveAnimationStateMachine", function() { return EveAnimationStateMachine; });
/**
 * EveAnimationStateMachine
 *
 * @property {String} name                                    -
 * @property {Boolean} autoPlayDefault                        -
 * @property {Array<EveAnimationState>} states                -
 * @property {Array<EveAnimationStateTransition>} transitions -
 * @property {String} trackMask                               -
 * @property {String} defaultAnimation                        -
 */
class EveAnimationStateMachine {
  constructor() {
    this.name = "";
    this.autoPlayDefault = true;
    this.states = [];
    this.transitions = [];
    this.trackMask = "";
    this.defaultAnimation = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["autoPlayDefault", r.boolean], ["states", r.array], ["transitions", r.array], ["trackMask", r.string], ["defaultAnimation", r.string]];
  }

}

/***/ }),

/***/ "./eve/animation/EveAnimationStateTransition.js":
/*!******************************************************!*\
  !*** ./eve/animation/EveAnimationStateTransition.js ***!
  \******************************************************/
/*! exports provided: EveAnimationStateTransition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveAnimationStateTransition", function() { return EveAnimationStateTransition; });
/**
 * EveAnimationStateTransition
 * TODO: Figure out the correct properties for this class
 * @ccp N/A
 *
 * @property {String} state
 * @property {String} transition
 */
class EveAnimationStateTransition {
  constructor() {
    this.state = "";
    this.transition = "";
  }

  /**
   * Black structure reader
   * TODO: Figure out the other properties for this class
   * @param {Tw2BlackBinaryReader} reader
   * @returns {EveAnimationStateTransition}
   */
  static blackStruct(reader) {
    const item = new EveAnimationStateTransition(); // Not sure of property name

    item.state = reader.ReadStringU16();
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content"); // Not sure of property name

    item.transition = reader.ReadStringU16();
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    reader.ExpectU8(0, "unknown content");
    return item;
  }

}

/***/ }),

/***/ "./eve/animation/index.js":
/*!********************************!*\
  !*** ./eve/animation/index.js ***!
  \********************************/
/*! exports provided: EveAnimation, EveAnimationCommand, EveAnimationCurve, EveAnimationState, EveAnimationStateMachine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveAnimation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveAnimation */ "./eve/animation/EveAnimation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimation", function() { return _EveAnimation__WEBPACK_IMPORTED_MODULE_0__["EveAnimation"]; });

/* harmony import */ var _EveAnimationCommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveAnimationCommand */ "./eve/animation/EveAnimationCommand.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationCommand", function() { return _EveAnimationCommand__WEBPACK_IMPORTED_MODULE_1__["EveAnimationCommand"]; });

/* harmony import */ var _EveAnimationCurve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveAnimationCurve */ "./eve/animation/EveAnimationCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationCurve", function() { return _EveAnimationCurve__WEBPACK_IMPORTED_MODULE_2__["EveAnimationCurve"]; });

/* harmony import */ var _EveAnimationState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveAnimationState */ "./eve/animation/EveAnimationState.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationState", function() { return _EveAnimationState__WEBPACK_IMPORTED_MODULE_3__["EveAnimationState"]; });

/* harmony import */ var _EveAnimationStateMachine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveAnimationStateMachine */ "./eve/animation/EveAnimationStateMachine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationStateMachine", function() { return _EveAnimationStateMachine__WEBPACK_IMPORTED_MODULE_4__["EveAnimationStateMachine"]; });







/***/ }),

/***/ "./eve/child/EveChild.js":
/*!*******************************!*\
  !*** ./eve/child/EveChild.js ***!
  \*******************************/
/*! exports provided: EveChild */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChild", function() { return EveChild; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _dec2, _dec3, _dec4, _class, _class2, _class3, _temp;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

/**
 * Root EveChild class
 */

let EveChild = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec3 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec4 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_class2 = (_temp = _class3 = class EveChild extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Per frame update
   * @param {number} dt
   * @param {mat4} parentTransform
   */
  Update(dt, parentTransform) {}
  /**
   * Gets object resources
   * @param {Array} [out=[]]
   * @returns {Array<Tw2Resource>} out
   */


  GetResources(out = []) {}
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {}
  /**
   * Class globals and scratch variables
   * @type {Object}
   */


}, _class3.global = {
  mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create(),
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create()
}, _class3.perObjectData = {
  ffe: [["world", 16], ["worldInverseTranspose", 16]]
}, _class3.__isEffectChild = true, _temp), (_applyDecoratedDescriptor(_class2.prototype, "Update", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "Update"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "GetResources", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "GetResources"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "GetBatches", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "GetBatches"), _class2.prototype)), _class2)) || _class);

/***/ }),

/***/ "./eve/child/EveChildBulletStorm.js":
/*!******************************************!*\
  !*** ./eve/child/EveChildBulletStorm.js ***!
  \******************************************/
/*! exports provided: EveChildBulletStorm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildBulletStorm", function() { return EveChildBulletStorm; });
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");

/**
 * EveChildBulletStorm
 * Todo: Implement
 *
 * @property {Tw2Effect} effect        -
 * @property {Number} multiplier       -
 * @property {Number} range            -
 * @property {String} sourceLocatorSet -
 * @property {Number} speed            -
 */

class EveChildBulletStorm extends _EveChild__WEBPACK_IMPORTED_MODULE_0__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.effect = null;
    this.multiplier = 0;
    this.range = 0;
    this.sourceLocatorSet = "";
    this.speed = 0;
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.effect) this.effect.GetResources(out);
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["effect", r.object], ["multiplier", r.uint], ["range", r.float], ["speed", r.float], ["sourceLocatorSet", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildBulletStorm.__isStaging = 4;

/***/ }),

/***/ "./eve/child/EveChildCloud.js":
/*!************************************!*\
  !*** ./eve/child/EveChildCloud.js ***!
  \************************************/
/*! exports provided: EveChildCloud */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildCloud", function() { return EveChildCloud; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");


/**
 * EveChildCloud
 * TODO: Implement
 *
 * @property {String} name                -
 * @property {Number} cellScreenSize      -
 * @property {Tw2Effect} effect           -
 * @property {Number} preTesselationLevel -
 * @property {quat} rotation              -
 * @property {vec3} scaling               -
 * @property {Number} sortingModifier     -
 * @property {vec3} translation           -
 */

class EveChildCloud extends _EveChild__WEBPACK_IMPORTED_MODULE_1__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.cellScreenSize = 0;
    this.effect = null;
    this.preTesselationLevel = 0;
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.sortingModifier = 0;
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.effect) this.effect.GetResources(out);
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["cellScreenSize", r.float], ["sortingModifier", r.float], ["effect", r.object], ["name", r.string], ["preTesselationLevel", r.uint], ["rotation", r.vector4], ["scaling", r.vector3], ["translation", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildCloud.__isStaging = 4;

/***/ }),

/***/ "./eve/child/EveChildContainer.js":
/*!****************************************!*\
  !*** ./eve/child/EveChildContainer.js ***!
  \****************************************/
/*! exports provided: EveChildContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildContainer", function() { return EveChildContainer; });
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Container for other child effects
 * TODO: Implement "controllers"
 * TODO: Implement "hideOnLowQuality"
 * TODO: Implement "lights"
 * TODO: Implement "observers"
 * TODO: Implement "staticTransform"
 * TODO: Implement "transformModifiers"
 *
 * @property {String} name                                 -
 * @property {Array.<StateController>} controllers         -
 * @property {Array.<Tw2CurveSet>} curveSets               -
 * @property {Boolean} display                             -
 * @property {Boolean} hideOnLowQuality                    -
 * @property {EveChildInheritProperties} inheritProperties -
 * @property {Array.<Tr2PointLight>} lights                -
 * @property {mat4} localTransform                         -
 * @property {Array.<EveChild>} objects                    -
 * @property {Array.<TriObserverLocal>} observers          -
 * @property {quat} rotation                               -
 * @property {vec3} scaling                                -
 * @property {Boolean} staticTransform                     -
 * @property {Array.<ChildModifier>} transformModifiers    -
 * @property {vec3} translation                            -
 * @property {mat4} _worldTransform                        -
 * @property {mat4} _worldTransformLast                    -
 */

class EveChildContainer extends _EveChild__WEBPACK_IMPORTED_MODULE_0__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.controllers = [];
    this.curveSets = [];
    this.display = true;
    this.hideOnLowQuality = false;
    this.inheritProperties = null;
    this.lights = [];
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_1__["mat4"].create();
    this.objects = [];
    this.observers = [];
    this.rotation = global__WEBPACK_IMPORTED_MODULE_1__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_1__["vec3"].fromValues(1, 1, 1);
    this.staticTransform = false;
    this.transformModifiers = [];
    this.translation = global__WEBPACK_IMPORTED_MODULE_1__["vec3"].create();
    this.useSRT = true;
    this._worldTransform = global__WEBPACK_IMPORTED_MODULE_1__["mat4"].create();
    this._worldTransformLast = global__WEBPACK_IMPORTED_MODULE_1__["mat4"].create();
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    for (let i = 0; i < this.objects.length; i++) {
      this.objects[i].GetResources(out);
    }

    return out;
  }
  /**
   * Per frame update
   * @param {number} dt
   * @param {mat4} parentTransform
   */


  Update(dt, parentTransform) {
    if (this.useSRT) {
      global__WEBPACK_IMPORTED_MODULE_1__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, this.translation, this.scaling);
    }
    /*
    for (let i = 0; i < this.transformModifiers.length; i++)
    {
        this.transformModifiers.Update(dt, this.localTransform);
    }
    */


    global__WEBPACK_IMPORTED_MODULE_1__["mat4"].copy(this._worldTransformLast, this._worldTransform);
    global__WEBPACK_IMPORTED_MODULE_1__["mat4"].multiply(this._worldTransform, parentTransform, this.localTransform);

    for (let i = 0; i < this.curveSets.length; i++) {
      this.curveSets[i].Update(dt);
    }

    for (let i = 0; i < this.objects.length; i++) {
      this.objects[i].Update(dt, this._worldTransform);
    }
    /*
    for (let i = 0; i < this.lights.length; i++)
    {
        this.lights[i].Update(dt, this._worldTransform);
    }
    */

  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (this.display) {
      for (let i = 0; i < this.objects.length; i++) {
        this.objects[i].GetBatches(mode, accumulator, perObjectData);
      }
      /*
      for (let i = 0; i < this.lights.length; i++)
      {
          this.lights[i].GetBatches(mode, accumulator, perObjectData);
      }
      */

    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["boneIndex", r.uint], ["controllers", r.array], ["display", r.boolean], ["localTransform", r.matrix], ["name", r.string], ["curveSets", r.array], ["hideOnLowQuality", r.boolean], ["inheritProperties", r.object], ["lights", r.array], ["observers", r.array], ["objects", r.array], ["rotation", r.vector4], ["scaling", r.vector3], ["staticTransform", r.boolean], ["transformModifiers", r.array], ["translation", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   * @private
   */


}
EveChildContainer.__isStaging = 2;

/***/ }),

/***/ "./eve/child/EveChildExplosion.js":
/*!****************************************!*\
  !*** ./eve/child/EveChildExplosion.js ***!
  \****************************************/
/*! exports provided: EveChildExplosion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildExplosion", function() { return EveChildExplosion; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");


/**
 * EveChildExplosion
 * TODO: Implement
 *
 * @property {String} name                               -
 * @property {Number} globalDuration                     -
 * @property {EveChildContainer} globalExplosion         -
 * @property {Number} globalExplosionDelay               -
 * @property {vec3} globalScaling                        -
 * @property {Number} localDuration                      -
 * @property {EveChildContainer} localExplosion          -
 * @property {Number} localExplosionInterval             -
 * @property {Number} localExplosionIntervalFactor       -
 * @property {EveChildContainer} localExplosionShared    -
 * @property {Array.<EveChildContainer>} localExplosions -
 * @property {mat4} localTransform                       -
 * @property {quat} rotation                             -
 * @property {vec3} scaling                              -
 */

class EveChildExplosion extends _EveChild__WEBPACK_IMPORTED_MODULE_1__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.globalDuration = 0;
    this.globalExplosion = null;
    this.globalExplosionDelay = 0;
    this.globalScaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.localDuration = 0;
    this.localExplosion = null;
    this.localExplosionInterval = 0;
    this.localExplosionIntervalFactor = 0;
    this.localExplosionShared = null;
    this.localExplosions = [];
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.localExplosion) this.localExplosion.GetResources(out);
    if (this.localExplosionShared) this.localExplosionShared.GetResources(out);

    for (let i = 0; i < this.localExplosions.length; i++) {
      this.localExplosions[i].GetResources(out);
    }

    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["globalDuration", r.float], ["globalExplosion", r.object], ["globalExplosionDelay", r.float], ["globalExplosions", r.array], ["globalScaling", r.vector3], ["localDuration", r.float], ["localExplosion", r.object], ["localExplosions", r.array], ["localExplosionInterval", r.float], ["localExplosionIntervalFactor", r.float], ["localExplosionShared", r.object], ["localTransform", r.matrix], ["name", r.string], ["rotation", r.vector4], ["scaling", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildExplosion.__isStaging = 4;

/***/ }),

/***/ "./eve/child/EveChildInheritProperties.js":
/*!************************************************!*\
  !*** ./eve/child/EveChildInheritProperties.js ***!
  \************************************************/
/*! exports provided: EveChildInheritProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildInheritProperties", function() { return EveChildInheritProperties; });
/**
 * EveChildInheritProperties
 * TODO: What is this?
 */
class EveChildInheritProperties {
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildInheritProperties.__isStaging = 4;

/***/ }),

/***/ "./eve/child/EveChildLink.js":
/*!***********************************!*\
  !*** ./eve/child/EveChildLink.js ***!
  \***********************************/
/*! exports provided: EveChildLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildLink", function() { return EveChildLink; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");


/**
 * EveChildLink
 * TODO: Implement
 *
 * @property {String} name                                  -
 * @property {Array.<Tw2ValueBinding>} linkStrengthBindings -
 * @property {Array.<Curve>} linkStrengthCurves             -
 * @property {Tw2Mesh} mesh                                 -
 * @property {quat} rotation                                -
 */

class EveChildLink extends _EveChild__WEBPACK_IMPORTED_MODULE_1__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.linkStrengthBindings = [];
    this.linkStrengthCurves = [];
    this.mesh = null;
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.mesh) this.mesh.GetResources(out);
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["linkStrengthBindings", r.array], ["linkStrengthCurves", r.array], ["mesh", r.object], ["name", r.string], ["rotation", r.vector4]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildLink.__isStaging = 4;

/***/ }),

/***/ "./eve/child/EveChildMesh.js":
/*!***********************************!*\
  !*** ./eve/child/EveChildMesh.js ***!
  \***********************************/
/*! exports provided: EveChildMesh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildMesh", function() { return EveChildMesh; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");



/**
 * Mesh attachment to space object
 * TODO: Implement "lowestLodVisible"
 * TODO: Implement "minScreenSize"
 * TODO: Implement "sortValueOffset"
 * TODO: Implement "staticTransform"
 * TODO: Implement "transformModifiers"
 *
 * @property {String} name                              -
 * @property {Boolean} display                          -
 * @property {mat4} localTransform                      -
 * @property {Number} lowestLodVisible                  -
 * @property {Tw2Mesh|Tw2InstancedMesh} mesh            -
 * @property {Number} minScreenSize                     -
 * @property {quat} rotation                            -
 * @property {vec3} scaling                             -
 * @property {Number} sortValueOffset                   -
 * @property {Boolean} staticTransform                  -
 * @property {Array.<ChildModifier>} transformModifiers -
 * @property {vec3} translation                         -
 * @property {Boolean} useSRT                           -
 * @property {Boolean} useSpaceObjectData               -
 * @property {mat4} _worldTransform                     -
 * @property {mat4} _worldTransformLast                 -
 * @property {Tw2PerObjectData} _perObjectData          -
 */

class EveChildMesh extends _EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.display = true;
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.lowestLodVisible = 2;
    this.mesh = null;
    this.minScreenSize = 0;
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.sortValueOffset = 0;
    this.staticTransform = false;
    this.transformModifiers = [];
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.useSRT = true;
    this.useSpaceObjectData = true;
    this._worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._worldTransformLast = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._perObjectData = null;
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.mesh) this.mesh.GetResources(out);
    return out;
  }
  /**
   * Per frame update
   * @param {number} dt
   * @param {mat4} parentTransform
   */


  Update(dt, parentTransform) {
    if (this.useSRT) {
      global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(this.rotation, this.rotation);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, this.translation, this.scaling);
    }
    /*
    for (let i = 0; i < this.transformModifiers.length; i++)
    {
        this.transformModifiers.Update(dt, this.localTransform);
    }
    */


    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._worldTransformLast, this._worldTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this._worldTransform, parentTransform, this.localTransform);
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.display || !this.mesh) return;

    if (this.useSpaceObjectData) {
      if (!this._perObjectData) {
        this._perObjectData = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"]();
        this._perObjectData.vs = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2RawData"]();
        this._perObjectData.vs.data = new Float32Array(perObjectData.vs.data.length);
        this._perObjectData.vs.data[33] = 1;
        this._perObjectData.vs.data[35] = 1;
        this._perObjectData.ps = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2RawData"]();
        this._perObjectData.ps.data = new Float32Array(perObjectData.ps.data.length);
        this._perObjectData.ps.data[1] = 1;
        this._perObjectData.ps.data[3] = 1;
      }

      this._perObjectData.vs.data.set(perObjectData.vs.data);

      this._perObjectData.ps.data.set(perObjectData.ps.data);

      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.data, this._worldTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.data.subarray(16), this._worldTransformLast);
    } else {
      if (!this._perObjectData) {
        this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(_EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"].perObjectData);
      }

      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.ffe.Get("world"), this._worldTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this._perObjectData.ffe.Get("worldInverseTranspose"), this._worldTransform);
    }

    this.mesh.GetBatches(mode, accumulator, this._perObjectData);
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["display", r.boolean], ["localTransform", r.matrix], ["lowestLodVisible", r.uint], ["mesh", r.object], ["minScreenSize", r.float], ["name", r.string], ["rotation", r.vector4], ["scaling", r.vector3], ["sortValueOffset", r.float], ["staticTransform", r.boolean], ["transformModifiers", r.array], ["translation", r.vector3], ["useSpaceObjectData", r.boolean], ["useSRT", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildMesh.__isStaging = 1;

/***/ }),

/***/ "./eve/child/EveChildParticleSphere.js":
/*!*********************************************!*\
  !*** ./eve/child/EveChildParticleSphere.js ***!
  \*********************************************/
/*! exports provided: EveChildParticleSphere */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildParticleSphere", function() { return EveChildParticleSphere; });
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");

/**
 * EveChildParticleSphere
 * TODO: Implement
 *
 * @property {String} name                                      -
 * @property {Array.<Tw2ParticleAttributeGenerator>} generators -
 * @property {Number} maxSpeed                                  -
 * @property {Tw2InstancedMesh} mesh                            -
 * @property {Number} movementScale                             -
 * @property {Tw2ParticleSystem} particleSystem                 -
 * @property {Number} positionShiftDecreaseSpeed                -
 * @property {Number} positionShiftIncreaseSpeed                -
 * @property {Number} positionShiftMax                          -
 * @property {Number} positionShiftMin                          -
 * @property {Number} radius                                    -
 * @property {Boolean} useSpaceObjectData                       -
 */

class EveChildParticleSphere extends _EveChild__WEBPACK_IMPORTED_MODULE_0__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.generators = [];
    this.maxSpeed = 0;
    this.mesh = null;
    this.movementScale = 0;
    this.particleSystem = null;
    this.positionShiftDecreaseSpeed = 0;
    this.positionShiftIncreaseSpeed = 0;
    this.positionShiftMax = 0;
    this.positionShiftMin = 0;
    this.radius = 0;
    this.useSpaceObjectData = false;
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.mesh) this.mesh.GetResources(out);

    if (this.particleSystem && this.particleSystem.GetResources) {
      this.particleSystem.GetResources(out);
    }

    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["generators", r.array], ["maxSpeed", r.float], ["mesh", r.object], ["movementScale", r.float], ["name", r.string], ["particleSystem", r.object], ["positionShiftDecreaseSpeed", r.float], ["positionShiftIncreaseSpeed", r.float], ["positionShiftMax", r.float], ["positionShiftMin", r.float], ["radius", r.float], ["useSpaceObjectData", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildParticleSphere.__isStaging = 4;

/***/ }),

/***/ "./eve/child/EveChildParticleSystem.js":
/*!*********************************************!*\
  !*** ./eve/child/EveChildParticleSystem.js ***!
  \*********************************************/
/*! exports provided: EveChildParticleSystem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildParticleSystem", function() { return EveChildParticleSystem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");



/**
 * Particle system attachment to space object
 * TODO: Implement "lodSphereRadius"
 * TODO: Implement "minScreenSize"
 * TODO: Implement "useDynamicLod"
 *
 * @property {String} name                                                     -
 * @property {Boolean} display                                                 -
 * @property {mat4} localTransform                                             -
 * @property {Number} lodSphereRadius                                          -
 * @property {Tw2InstancedMesh} mesh                                           -
 * @property {Number} minScreenSize                                            -
 * @property {Array.<Tw2ParticleEmitter>} particleEmitters                     -
 * @property {Array.<Tw2ParticleSystem|Tr2GpuParticleSystem>} particleSystems  -
 * @property {quat} rotation                                                   -
 * @property {vec3} scaling                                                    -
 * @property {vec3} translation                                                -
 * @property {Boolean} useDynamicLod                                           -
 * @property {mat4} _worldTransform                                            -
 * @property {mat4} _worldTransformLast                                        -
 * @property {Tw2PerObjectData} _perObjectData                                 -
 */

class EveChildParticleSystem extends _EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.display = true;
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.lodSphereRadius = 0;
    this.mesh = null;
    this.minScreenSize = 0;
    this.particleEmitters = [];
    this.particleSystems = [];
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.useDynamicLod = false;
    this.useSRT = true;
    this._worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._worldTransformLast = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(_EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"].perObjectData);
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.mesh) this.mesh.GetResources(out);

    for (let i = 0; i < this.particleEmitters.length; i++) {
      this.particleEmitters[i].GetResources(out);
    }

    for (let i = 0; i < this.particleSystems.length; i++) {
      this.particleSystems[i].GetResources(out);
    }

    return out;
  }
  /**
   * Per frame update
   * @param {number} dt
   * @param {mat4} parentTransform
   */


  Update(dt, parentTransform) {
    if (this.useSRT) {
      global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(this.rotation, this.rotation);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, this.translation, this.scaling);
    }

    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._worldTransformLast, this._worldTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this._worldTransform, parentTransform, this.localTransform);

    for (let i = 0; i < this.particleEmitters.length; ++i) {
      this.particleEmitters[i].Update(dt);
    }

    for (let i = 0; i < this.particleSystems.length; ++i) {
      this.particleSystems[i].Update(dt);
    }
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (this.display && this.mesh) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.ffe.Get("world"), this._worldTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this._perObjectData.ffe.Get("worldInverseTranspose"), this._worldTransform);
      this.mesh.GetBatches(mode, accumulator, this._perObjectData);
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["display", r.boolean], ["localTransform", r.matrix], ["lodSphereRadius", r.float], ["mesh", r.object], ["minScreenSize", r.float], ["name", r.string], ["particleEmitters", r.array], ["particleSystems", r.array], ["rotation", r.vector4], ["scaling", r.vector3], ["translation", r.vector3], ["useDynamicLod", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildParticleSystem.__isStaging = 1;

/***/ }),

/***/ "./eve/child/EveChildQuad.js":
/*!***********************************!*\
  !*** ./eve/child/EveChildQuad.js ***!
  \***********************************/
/*! exports provided: EveChildQuad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildQuad", function() { return EveChildQuad; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveChild */ "./eve/child/EveChild.js");


/**
 * EveChildQuad
 * TODO: Implement
 *
 * @property {String} name              -
 * @property {Number} brightness        -
 * @property {vec4} color               -
 * @property {Tw2Effect} effect         -
 * @property {mat4} localTransform      -
 * @property {Number} minScreenSize     -
 * @property {quat} rotation            -
 * @property {vec3} scaling             -
 * @property {vec3} translation         -
 */

class EveChildQuad extends _EveChild__WEBPACK_IMPORTED_MODULE_1__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.brightness = 0;
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.effect = null;
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.minScreenSize = 0;
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.effect) this.effect.GetResources(out);
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["brightness", r.float], ["color", r.color], ["effect", r.object], ["localTransform", r.matrix], ["minScreenSize", r.float], ["name", r.string], ["rotation", r.vector4], ["scaling", r.vector3], ["translation", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildQuad.__isStaging = 4;

/***/ }),

/***/ "./eve/child/index.js":
/*!****************************!*\
  !*** ./eve/child/index.js ***!
  \****************************/
/*! exports provided: EveChildBulletStorm, EveChildCloud, EveChildContainer, EveChildExplosion, EveChildInheritProperties, EveChildLink, EveChildMesh, EveChildParticleSphere, EveChildParticleSystem, EveChildQuad, EveChildBillboard, EveChildModifierAttachToBone, EveChildModifierBillboard2D, EveChildModifierBillboard3D, EveChildModifierCameraOrientedRotationConstrained, EveChildModifierSRT, EveChildModifierTranslateWithCamera */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveChildBulletStorm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveChildBulletStorm */ "./eve/child/EveChildBulletStorm.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildBulletStorm", function() { return _EveChildBulletStorm__WEBPACK_IMPORTED_MODULE_0__["EveChildBulletStorm"]; });

/* harmony import */ var _EveChildCloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveChildCloud */ "./eve/child/EveChildCloud.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildCloud", function() { return _EveChildCloud__WEBPACK_IMPORTED_MODULE_1__["EveChildCloud"]; });

/* harmony import */ var _EveChildContainer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveChildContainer */ "./eve/child/EveChildContainer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildContainer", function() { return _EveChildContainer__WEBPACK_IMPORTED_MODULE_2__["EveChildContainer"]; });

/* harmony import */ var _EveChildExplosion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveChildExplosion */ "./eve/child/EveChildExplosion.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildExplosion", function() { return _EveChildExplosion__WEBPACK_IMPORTED_MODULE_3__["EveChildExplosion"]; });

/* harmony import */ var _EveChildInheritProperties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveChildInheritProperties */ "./eve/child/EveChildInheritProperties.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildInheritProperties", function() { return _EveChildInheritProperties__WEBPACK_IMPORTED_MODULE_4__["EveChildInheritProperties"]; });

/* harmony import */ var _EveChildLink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveChildLink */ "./eve/child/EveChildLink.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildLink", function() { return _EveChildLink__WEBPACK_IMPORTED_MODULE_5__["EveChildLink"]; });

/* harmony import */ var _EveChildMesh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveChildMesh */ "./eve/child/EveChildMesh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildMesh", function() { return _EveChildMesh__WEBPACK_IMPORTED_MODULE_6__["EveChildMesh"]; });

/* harmony import */ var _EveChildParticleSphere__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EveChildParticleSphere */ "./eve/child/EveChildParticleSphere.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildParticleSphere", function() { return _EveChildParticleSphere__WEBPACK_IMPORTED_MODULE_7__["EveChildParticleSphere"]; });

/* harmony import */ var _EveChildParticleSystem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EveChildParticleSystem */ "./eve/child/EveChildParticleSystem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildParticleSystem", function() { return _EveChildParticleSystem__WEBPACK_IMPORTED_MODULE_8__["EveChildParticleSystem"]; });

/* harmony import */ var _EveChildQuad__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EveChildQuad */ "./eve/child/EveChildQuad.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildQuad", function() { return _EveChildQuad__WEBPACK_IMPORTED_MODULE_9__["EveChildQuad"]; });

/* harmony import */ var _legacy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./legacy */ "./eve/child/legacy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildBillboard", function() { return _legacy__WEBPACK_IMPORTED_MODULE_10__["EveChildBillboard"]; });

/* harmony import */ var _modifier__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modifier */ "./eve/child/modifier/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierAttachToBone", function() { return _modifier__WEBPACK_IMPORTED_MODULE_11__["EveChildModifierAttachToBone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard2D", function() { return _modifier__WEBPACK_IMPORTED_MODULE_11__["EveChildModifierBillboard2D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard3D", function() { return _modifier__WEBPACK_IMPORTED_MODULE_11__["EveChildModifierBillboard3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierCameraOrientedRotationConstrained", function() { return _modifier__WEBPACK_IMPORTED_MODULE_11__["EveChildModifierCameraOrientedRotationConstrained"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierSRT", function() { return _modifier__WEBPACK_IMPORTED_MODULE_11__["EveChildModifierSRT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierTranslateWithCamera", function() { return _modifier__WEBPACK_IMPORTED_MODULE_11__["EveChildModifierTranslateWithCamera"]; });














/***/ }),

/***/ "./eve/child/legacy/EveChildBillboard.js":
/*!***********************************************!*\
  !*** ./eve/child/legacy/EveChildBillboard.js ***!
  \***********************************************/
/*! exports provided: EveChildBillboard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildBillboard", function() { return EveChildBillboard; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveChild__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../EveChild */ "./eve/child/EveChild.js");



const {
  device
} = global__WEBPACK_IMPORTED_MODULE_0__["tw2"];
/**
 * Mesh attachment to space object and oriented towards the camera
 * TODO: Is this deprecated?
 * @ccp EveChildBillboard
 *
 * @property {Boolean} display
 * @property {mat4} localTransform
 * @property {Number} lowestLodVisible
 * @property {Tw2Mesh|Tw2InstancedMesh} mesh
 * @property {quat} rotation
 * @property {vec3} translation
 * @property {vec3} scaling
 * @property {Boolean} staticTransform
 * @property {Boolean} useSRT
 * @property {Tw2PerObjectData} _perObjectData
 * @property {mat4} _worldTransform
 * @property {mat4} _worldTransformLast
 */

class EveChildBillboard extends _EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"] {
  constructor(...args) {
    super(...args);
    this.display = true;
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.lowestLodVisible = 2;
    this.mesh = null;
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.staticTransform = false;
    this.useSRT = true;
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(_EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"].perObjectData);
    this._worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._worldTransformLast = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Gets the child's resources
   * @param {Array} [out=[]]
   * @returns {Array.<Tw2Resource>} out
   */
  GetResources(out) {
    if (this.mesh) this.mesh.GetResources(out);
    return out;
  }
  /**
   * Per frame update
   * @param {number} dt
   * @param {mat4} parentTransform
   */


  Update(dt, parentTransform) {
    if (this.useSRT) {
      global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(this.rotation, this.rotation);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, this.translation, this.scaling);
    }

    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._worldTransformLast, this._worldTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this._worldTransform, parentTransform, this.localTransform);
    const viewInverse = _EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"].global.mat4_0,
          finalScale = _EveChild__WEBPACK_IMPORTED_MODULE_2__["EveChild"].global.vec3_0;
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].lookAt(viewInverse, device.eyePosition, this._worldTransform.subarray(12), [0, 1, 0]);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(viewInverse, viewInverse);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getScaling(finalScale, parentTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].multiply(finalScale, finalScale, this.scaling);
    this._worldTransform[0] = viewInverse[0] * finalScale[0];
    this._worldTransform[1] = viewInverse[1] * finalScale[0];
    this._worldTransform[2] = viewInverse[2] * finalScale[0];
    this._worldTransform[4] = viewInverse[4] * finalScale[1];
    this._worldTransform[5] = viewInverse[5] * finalScale[1];
    this._worldTransform[6] = viewInverse[6] * finalScale[1];
    this._worldTransform[8] = viewInverse[8] * finalScale[2];
    this._worldTransform[9] = viewInverse[9] * finalScale[2];
    this._worldTransform[10] = viewInverse[10] * finalScale[2];
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (this.display && this.mesh) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.ffe.Get("world"), this._worldTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this._perObjectData.ffe.Get("worldInverseTranspose"), this._worldTransform);
      this.mesh.GetBatches(mode, accumulator, this._perObjectData);
    }
  }

}

/***/ }),

/***/ "./eve/child/legacy/index.js":
/*!***********************************!*\
  !*** ./eve/child/legacy/index.js ***!
  \***********************************/
/*! exports provided: EveChildBillboard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveChildBillboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveChildBillboard */ "./eve/child/legacy/EveChildBillboard.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildBillboard", function() { return _EveChildBillboard__WEBPACK_IMPORTED_MODULE_0__["EveChildBillboard"]; });



/***/ }),

/***/ "./eve/child/modifier/EveChildModifierAttachToBone.js":
/*!************************************************************!*\
  !*** ./eve/child/modifier/EveChildModifierAttachToBone.js ***!
  \************************************************************/
/*! exports provided: EveChildModifierAttachToBone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierAttachToBone", function() { return EveChildModifierAttachToBone; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveChildModifierAttachToBone
 *
 * @property {Number} boneIndex -
 */

class EveChildModifierAttachToBone extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.boneIndex = -1;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boneIndex", r.uint]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildModifierAttachToBone.__isStaging = 4;

/***/ }),

/***/ "./eve/child/modifier/EveChildModifierBillboard2D.js":
/*!***********************************************************!*\
  !*** ./eve/child/modifier/EveChildModifierBillboard2D.js ***!
  \***********************************************************/
/*! exports provided: EveChildModifierBillboard2D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard2D", function() { return EveChildModifierBillboard2D; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveChildModifierBillboard2D
 */

class EveChildModifierBillboard2D extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {}

EveChildModifierBillboard2D.black = function (r) {
  return [];
};

EveChildModifierBillboard2D.__isStaging = 4;

/***/ }),

/***/ "./eve/child/modifier/EveChildModifierBillboard3D.js":
/*!***********************************************************!*\
  !*** ./eve/child/modifier/EveChildModifierBillboard3D.js ***!
  \***********************************************************/
/*! exports provided: EveChildModifierBillboard3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard3D", function() { return EveChildModifierBillboard3D; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveChildModifierBillboard3D
 */

class EveChildModifierBillboard3D extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {}

EveChildModifierBillboard3D.black = function (r) {
  return [];
};

EveChildModifierBillboard3D.__isStaging = 4;

/***/ }),

/***/ "./eve/child/modifier/EveChildModifierCameraOrientedRotationConstrained.js":
/*!*********************************************************************************!*\
  !*** ./eve/child/modifier/EveChildModifierCameraOrientedRotationConstrained.js ***!
  \*********************************************************************************/
/*! exports provided: EveChildModifierCameraOrientedRotationConstrained */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierCameraOrientedRotationConstrained", function() { return EveChildModifierCameraOrientedRotationConstrained; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveChildModifierCameraOrientedRotationConstrained
 */

class EveChildModifierCameraOrientedRotationConstrained extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {}

EveChildModifierCameraOrientedRotationConstrained.black = function (r) {
  return [];
};

EveChildModifierCameraOrientedRotationConstrained.__isStaging = 4;

/***/ }),

/***/ "./eve/child/modifier/EveChildModifierSRT.js":
/*!***************************************************!*\
  !*** ./eve/child/modifier/EveChildModifierSRT.js ***!
  \***************************************************/
/*! exports provided: EveChildModifierSRT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierSRT", function() { return EveChildModifierSRT; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveChildModifierSRT
 *
 * @property {quat} rotation    -
 * @property {vec3} scaling     -
 * @property {vec3} translation -
 */

class EveChildModifierSRT extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["rotation", r.vector4], ["scaling", r.vector3], ["translation", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveChildModifierSRT.__isStaging = 2;

/***/ }),

/***/ "./eve/child/modifier/EveChildModifierTranslateWithCamera.js":
/*!*******************************************************************!*\
  !*** ./eve/child/modifier/EveChildModifierTranslateWithCamera.js ***!
  \*******************************************************************/
/*! exports provided: EveChildModifierTranslateWithCamera */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierTranslateWithCamera", function() { return EveChildModifierTranslateWithCamera; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveChildModifierTranslateWithCamera
 *
 */

class EveChildModifierTranslateWithCamera extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {}

EveChildModifierTranslateWithCamera.black = function (r) {
  return [];
};

EveChildModifierTranslateWithCamera.__isStaging = 4;

/***/ }),

/***/ "./eve/child/modifier/index.js":
/*!*************************************!*\
  !*** ./eve/child/modifier/index.js ***!
  \*************************************/
/*! exports provided: EveChildModifierAttachToBone, EveChildModifierBillboard2D, EveChildModifierBillboard3D, EveChildModifierCameraOrientedRotationConstrained, EveChildModifierSRT, EveChildModifierTranslateWithCamera */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveChildModifierAttachToBone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveChildModifierAttachToBone */ "./eve/child/modifier/EveChildModifierAttachToBone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierAttachToBone", function() { return _EveChildModifierAttachToBone__WEBPACK_IMPORTED_MODULE_0__["EveChildModifierAttachToBone"]; });

/* harmony import */ var _EveChildModifierBillboard2D__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveChildModifierBillboard2D */ "./eve/child/modifier/EveChildModifierBillboard2D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard2D", function() { return _EveChildModifierBillboard2D__WEBPACK_IMPORTED_MODULE_1__["EveChildModifierBillboard2D"]; });

/* harmony import */ var _EveChildModifierBillboard3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveChildModifierBillboard3D */ "./eve/child/modifier/EveChildModifierBillboard3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard3D", function() { return _EveChildModifierBillboard3D__WEBPACK_IMPORTED_MODULE_2__["EveChildModifierBillboard3D"]; });

/* harmony import */ var _EveChildModifierCameraOrientedRotationConstrained__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveChildModifierCameraOrientedRotationConstrained */ "./eve/child/modifier/EveChildModifierCameraOrientedRotationConstrained.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierCameraOrientedRotationConstrained", function() { return _EveChildModifierCameraOrientedRotationConstrained__WEBPACK_IMPORTED_MODULE_3__["EveChildModifierCameraOrientedRotationConstrained"]; });

/* harmony import */ var _EveChildModifierSRT__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveChildModifierSRT */ "./eve/child/modifier/EveChildModifierSRT.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierSRT", function() { return _EveChildModifierSRT__WEBPACK_IMPORTED_MODULE_4__["EveChildModifierSRT"]; });

/* harmony import */ var _EveChildModifierTranslateWithCamera__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveChildModifierTranslateWithCamera */ "./eve/child/modifier/EveChildModifierTranslateWithCamera.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierTranslateWithCamera", function() { return _EveChildModifierTranslateWithCamera__WEBPACK_IMPORTED_MODULE_5__["EveChildModifierTranslateWithCamera"]; });








/***/ }),

/***/ "./eve/effect/EveLensflare.js":
/*!************************************!*\
  !*** ./eve/effect/EveLensflare.js ***!
  \************************************/
/*! exports provided: EveLensflare */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveLensflare", function() { return EveLensflare; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveOccluder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveOccluder */ "./eve/effect/EveOccluder.js");



/**
 * EveLensFlare
 * TODO: Handle store
 * TODO: Handle device
 * TODO: Handle device specific global variables (TextureRes, Tw2RenderTarget)
 * TODO: Identify if "curveSets" is deprecated, it never gets used
 * TODO: Identify if "flares" array is deprecated, newer files don't look to have child flares
 * TODO: Identify if "_backBuffer" is deprecated, it never gets used
 * TODO: Identify if "backgroundOccluders" should be implemented
 * TODO: Occluder doesn't work for center most flares, which can be seen through ships
 *
 * @property {String} name                              -
 * @property {Boolean} display                          -
 * @property {Boolean} update                           -
 * @property {Boolean} doOcclusionQueries               -
 * @property {number} cameraFactor                      -
 * @property {vec3} position                            -
 * @property {Array} flares                             -
 * @property {Array.<EveOccluder>} occluders            -
 * @property {Array.<EveOccluder>} backgroundOccluders  -
 * @property {number} occlusionIntensity                -
 * @property {number} backgroundOcclusionIntensity      -
 * @property {Array} distanceToEdgeCurves               -
 * @property {Array} distanceToCenterCurves             -
 * @property {Array} radialAngleCurves                  -
 * @property {Array} xDistanceToCenter                  -
 * @property {Array} yDistanceToCenter                  -
 * @property {Array} zDistanceToCenter                  -
 * @property {Array} bindings                           -
 * @property {Array.<Tw2CurveSet>} curveSets            -
 * @property {?Tw2Mesh} mesh                            -
 * @property {vec3} _direction                          -
 * @property {mat4} _transform                          -
 * @property {*} _backBuffer                            -
 */

class EveLensflare extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  // ccp
  // ccpwgl

  /**
   * Constructor
   */
  constructor() {
    super();
    this.name = "";
    this.backgroundOccluders = [];
    this.bindings = [];
    this.distanceToCenterCurves = [];
    this.distanceToEdgeCurves = [];
    this.mesh = null;
    this.occluders = [];
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radialAngleCurves = [];
    this.xDistanceToCenter = [];
    this.yDistanceToCenter = [];
    this.zDistanceToCenter = [];
    this.display = true;
    this.update = true;
    this.doOcclusionQueries = true;
    this.cameraFactor = 20;
    this.flares = [];
    this.occlusionIntensity = 1;
    this.backgroundOcclusionIntensity = 1;
    this.curveSets = [];
    this._direction = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._backBuffer = null;
    EveLensflare.init();
  }
  /**
   * Updates Occluders
   */


  UpdateOccluders() {
    if (!this.doOcclusionQueries) return;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          g = EveLensflare.global;

    if (!g.occluderLevels[0].texture || g.occluderLevels[0].width < this.occluders.length * 2) {
      for (let i = 0; i < g.occluderLevels.length; ++i) {
        g.occluderLevels[i].Create(this.occluders.length * 2, 1, false);
      }
    } // TODO: Is this deprecated?


    for (let j = 0; j < this.flares.length; ++j) {
      if ("_backBuffer" in this.flares[j]) {
        this.flares[j]._backBuffer.textureRes = g.occluderLevels.texture;
      }
    }

    this.occlusionIntensity = 1;
    this.backgroundOcclusionIntensity = 1;
    g.occluderLevels[g.occludedLevelIndex].Set();
    d.SetStandardStates(d.RM_OPAQUE);
    gl.clearColor(0.0, 0.0, 0.0, 1.0);
    gl.clear(gl.COLOR_BUFFER_BIT);
    g.occluderLevels[g.occludedLevelIndex].Unset();
    let samples = 1;

    if (d.antialiasing) {
      samples = d.msaaSamples;
      gl.sampleCoverage(1.0 / samples, false);
    }

    for (let i = 0; i < this.occluders.length; ++i) {
      d.SetRenderState(global__WEBPACK_IMPORTED_MODULE_0__["RS_COLORWRITEENABLE"], 8);
      gl.colorMask(false, false, false, true);
      gl.clearColor(0.0, 0.0, 0.0, 0.0);
      gl.clear(gl.COLOR_BUFFER_BIT); // Turn off antialiasing

      if (d.antialiasing) {
        gl.enable(gl.SAMPLE_COVERAGE);
        gl.sampleCoverage(0.25, false);
      }

      this.occluders[i].UpdateValue(this._transform, i);
      if (d.antialiasing) gl.disable(gl.SAMPLE_COVERAGE); // Copy back buffer into a texture

      if (!g.backBuffer.texture) g.backBuffer.Attach(gl.createTexture());
      gl.bindTexture(gl.TEXTURE_2D, g.backBuffer.texture);

      if (g.backBuffer.width !== d.viewportWidth || g.backBuffer.height !== d.viewportHeight) {
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, d.viewportWidth, d.viewportHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
        g.backBuffer.width = d.viewportWidth;
        g.backBuffer.height = d.viewportHeight;
      }

      gl.copyTexImage2D(gl.TEXTURE_2D, 0, d.alphaBlendBackBuffer ? gl.RGBA : gl.RGB, 0, 0, g.backBuffer.width, g.backBuffer.height, 0);
      gl.bindTexture(gl.TEXTURE_2D, null); // Collect samples

      g.occluderLevels[g.occludedLevelIndex].Set();
      _EveOccluder__WEBPACK_IMPORTED_MODULE_2__["EveOccluder"].CollectSamples(g.backBuffer, i, g.occluderLevels[0].width / 2, samples);
      g.occluderLevels[g.occludedLevelIndex].Unset();
    }

    if (d.antialiasing) gl.sampleCoverage(1, false);
    g.occluderLevels[(g.occludedLevelIndex + 1) % g.occluderLevels.length].Set();
    const pixels = new Uint8Array(g.occluderLevels[0].width * 4);
    gl.readPixels(0, 0, 2, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);
    g.occluderLevels[(g.occludedLevelIndex + 1) % g.occluderLevels.length].Unset();
    this.occlusionIntensity = 1;

    for (let i = 0; i < g.occluderLevels[0].width * 2; i += 4) {
      this.occlusionIntensity *= pixels[i + 1] ? pixels[i] / pixels[i + 1] : 1;
    }

    this.backgroundOcclusionIntensity = this.occlusionIntensity;
    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].SetVariableValue("LensflareFxOccScale", [this.occlusionIntensity, this.occlusionIntensity, 0, 0]);
    g.occludedLevelIndex = (g.occludedLevelIndex + 1) % g.occluderLevels.length;
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (this.display) {
      const viewDir = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(EveLensflare.global.vec4_0, 0, 0, 1, 0);
      global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(viewDir, viewDir, global__WEBPACK_IMPORTED_MODULE_0__["device"].viewInverse);
      if (global__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(viewDir, this._direction) < 0) return;

      for (let i = 0; i < this.flares.length; ++i) {
        this.flares[i].GetBatches(mode, accumulator, perObjectData);
      }

      if (this.mesh) {
        this.mesh.GetBatches(mode, accumulator, perObjectData);
      }
    }
  }
  /**
   * Prepares the lensflare for rendering
   */


  PrepareRender() {
    if (!this.display) return;
    const g = EveLensflare.global,
          viewDir = g.vec4_0,
          cameraPos = g.vec3_0,
          scaleMat = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(g.mat4_0),
          cameraSpacePos = g.vec3_2,
          negDirVec = g.vec3_3,
          negPos = g.vec3_1,
          dist = g.vec4_1;
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(cameraPos, [0, 0, 0], global__WEBPACK_IMPORTED_MODULE_0__["device"].viewInverse);

    if (global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length(this.position) === 0) {
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].negate(negPos, cameraPos); //let distScale = vec3.length(negPos);
      //distScale = distScale > 1.5 ? 1 / Math.log(distScale) : 2.5;
    } else {
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].negate(negPos, this.position);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(this._direction, negPos);
    }

    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(viewDir, [0, 0, 1, 0], global__WEBPACK_IMPORTED_MODULE_0__["device"].viewInverse);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scaleAndAdd(cameraSpacePos, cameraPos, viewDir, -this.cameraFactor);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].negate(negDirVec, this._direction);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].arcFromForward(this._transform, negDirVec);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].setTranslation(this._transform, cameraSpacePos);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].scale(scaleMat, scaleMat, [this.occlusionIntensity, this.occlusionIntensity, 1]); //mat4.multiply(scaleMat, scaleMat, this._transform);

    const dir = this._direction;
    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].SetVariableValue("LensflareFxDirectionScale", [dir[0], dir[1], dir[2], 1]);
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(dist, dir[0], dir[1], dir[2], 0);
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(dist, dist, global__WEBPACK_IMPORTED_MODULE_0__["device"].view);
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(dist, dist, global__WEBPACK_IMPORTED_MODULE_0__["device"].projection);
    dist[0] /= dist[3];
    dist[1] /= dist[3];
    const distToEdge = 1 - Math.min(1 - Math.abs(dist[0]), 1 - Math.abs(dist[1])),
          distToCenter = Math.sqrt(dist[0] * dist[0] + dist[1] * dist[1]),
          radialAngle = Math.atan2(dist[1], dist[0]) + Math.PI;

    for (let i = 0; i < this.distanceToEdgeCurves.length; ++i) {
      this.distanceToEdgeCurves[i].UpdateValue(distToEdge);
    }

    for (let i = 0; i < this.distanceToCenterCurves.length; ++i) {
      this.distanceToCenterCurves[i].UpdateValue(distToCenter);
    }

    for (let i = 0; i < this.radialAngleCurves.length; ++i) {
      this.radialAngleCurves[i].UpdateValue(radialAngle);
    }

    for (let i = 0; i < this.xDistanceToCenter.length; ++i) {
      this.xDistanceToCenter[i].UpdateValue(dist[0] + 10);
    }

    for (let i = 0; i < this.yDistanceToCenter.length; ++i) {
      this.yDistanceToCenter[i].UpdateValue(dist[1] + 10);
    }

    for (let i = 0; i < this.bindings.length; ++i) {
      this.bindings[i].CopyValue();
    }

    for (let i = 0; i < this.flares.length; ++i) {
      this.flares[i].UpdateViewDependentData(this._transform);
    }
  }
  /**
   * Initializes class global and scratch variables
   */


  static init() {
    if (!EveLensflare.global) {
      const g = EveLensflare.global = {};
      g.vec3_0 = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      g.vec3_1 = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      g.vec3_2 = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      g.vec3_3 = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      g.vec4_0 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
      g.vec4_1 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
      g.mat4_0 = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
      g.backBuffer = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureRes"]();
      g.backBuffer.width = 0;
      g.backBuffer.height = 0;
      g.backBuffer.hasMipMaps = false;
      g.occludedLevelIndex = 0;
      g.occluderLevels = [new core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderTarget"](), new core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderTarget"](), new core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderTarget"](), new core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderTarget"]()];
    }
  }
  /**
   * Global and scratch variables
   * @type {*}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["backgroundOccluders", r.array], ["bindings", r.array], ["distanceToCenterCurves", r.array], ["distanceToEdgeCurves", r.array], ["mesh", r.object], ["name", r.string], ["occluders", r.array], ["position", r.vector3], ["radialAngleCurves", r.array], ["xDistanceToCenter", r.array], ["yDistanceToCenter", r.array], ["zDistanceToCenter", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveLensflare.global = null;
EveLensflare.__isStaging = 1;
EveLensflare.__isLensflare = true;

/***/ }),

/***/ "./eve/effect/EveMeshOverlayEffect.js":
/*!********************************************!*\
  !*** ./eve/effect/EveMeshOverlayEffect.js ***!
  \********************************************/
/*! exports provided: EveMeshOverlayEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveMeshOverlayEffect", function() { return EveMeshOverlayEffect; });
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! curve */ "./curve/index.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/util */ "./global/util/index.js");




/**
 * Constructor for Overlay Effects
 * TODO: Implement "distortionEffects"
 * TODO: Identify if "decalEffects" is deprecated
 *
 * @property {String} name                          - The overlay effect's name
 * @property {Array.<Tw2Effect>} additiveEffects    - Additive overlay effects
 * @property {Tw2CurveSet} curveSet                 - Animation curve set
 * @property {Boolean} display                      - Enables/ disables all batch accumulations
 * @property {Array.<Tw2Effect>} decalEffects       - Decal overlay effects (Is this deprecated?)
 * @property {Array.<Tw2Effect>} distortionEffects  - Distortion effects (Currently not supported)
 * @property {Array.<Tw2Effect>} opaqueEffects      - Opaque overlay effects
 * @property {Array.<Tw2Effect>} transparentEffects - Transparent overlay effects
 * @property {Boolean} update                       - Enabled updating
 * @property {{}} visible                           - Batch accumulation options for the overlay effect
 * @property {Boolean} visible.opaqueEffects        - Enables/ disables opaque effect batch accumulation
 * @property {Boolean} visible.decalEffects         - Enables/ disables decal effect batch accumulation
 * @property {Boolean} visible.transparentEffects   - Enables/ disables transparent effect batch accumulation
 * @property {Boolean} visible.additiveEffects      - Enables/ disables additive effect batch accumulation
 * @property {Boolean} visible.distortionEffects    - Currently not supported
 */

class EveMeshOverlayEffect extends global__WEBPACK_IMPORTED_MODULE_2__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.additiveEffects = [];
    this.curveSet = null;
    this.distortionEffects = [];
    this.opaqueEffects = [];
    this.transparentEffects = [];
    this.decalEffects = [];
    this.display = true;
    this.update = true;
    this.visible = {
      opaqueEffects: true,
      decalEffects: true,
      transparentEffects: true,
      additiveEffects: true,
      distortionEffects: true
    };
  }

  /**
   * Creates an area's effects
   * @param {EveMeshOverlayEffect} dest
   * @param {*} src
   * @param {String|String[]} names
   */
  static createAreaEffects(dest, src, names) {
    names = Object(global_util__WEBPACK_IMPORTED_MODULE_3__["toArray"])(names);

    for (let i = 0; i < names.length; i++) {
      const name = names[i];

      if (name in src && name in dest) {
        for (let i = 0; i < src[name].length; i++) {
          dest[name].push(core__WEBPACK_IMPORTED_MODULE_0__["Tw2Effect"].from(src[name][i]));
        }
      }
    }
  }
  /**
   * Creates a mesh from an object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {EveMeshOverlayEffect}
   */


  static from(values, options) {
    const item = new EveMeshOverlayEffect();

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item, values, ["name", "display", "update"]);

      if (values.curveSet) {
        item.curveSet = curve__WEBPACK_IMPORTED_MODULE_1__["Tw2CurveSet"].from(values.curveSet);
      }

      const areas = ["additiveEffects", "distortionEffects", "opaqueEffects", "transparentEffects", "decalEffects"];

      if (values.visible) {
        Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item.visible, values.visible, areas);
      }

      this.createAreaEffects(item, values, areas);
    }

    if (!options || !options.skipUpdate) {// No Op
    }

    return item;
  }
  /**
   * Per frame update
   * @param {number} dt - delta Time
   */


  Update(dt) {
    if (this.update && this.curveSet) {
      this.curveSet.Update(dt);
    }
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   * @param {Tw2Mesh} mesh
   */


  GetBatches(mode, accumulator, perObjectData, mesh) {
    if (!this.display || !mesh || !mesh.IsGood()) return;
    const effects = this.GetEffects(mode);

    for (let i = 0; i < effects.length; i++) {
      const batch = new core__WEBPACK_IMPORTED_MODULE_0__["Tw2GeometryBatch"]();
      batch.renderMode = mode;
      batch.perObjectData = perObjectData;
      batch.geometryRes = mesh.geometryResource;
      batch.meshIx = mesh.meshIndex;
      batch.start = 0;
      batch.count = mesh.geometryResource.meshes[mesh.meshIndex].areas.length;
      batch.effect = effects[i];
      accumulator.Commit(batch);
    }
  }
  /**
   * Gets effects
   * @param {number} mode
   * @returns {Array.<Tw2Effect>}
   */


  GetEffects(mode) {
    if (this.display) {
      switch (mode) {
        case global__WEBPACK_IMPORTED_MODULE_2__["RM_OPAQUE"]:
          if (this.visible.opaqueEffects) return this.opaqueEffects;
          break;

        case global__WEBPACK_IMPORTED_MODULE_2__["RM_TRANSPARENT"]:
          if (this.visible.transparentEffects) return this.transparentEffects;
          break;

        case global__WEBPACK_IMPORTED_MODULE_2__["RM_ADDITIVE"]:
          if (this.visible.additiveEffects) return this.additiveEffects;
          break;

        case global__WEBPACK_IMPORTED_MODULE_2__["RM_DECAL"]:
          if (this.visible.decalEffects) return this.decalEffects;
          break;

        case global__WEBPACK_IMPORTED_MODULE_2__["RM_DISTORTION"]:
          if (this.visible.distortionEffects) return this.distortionEffects;
      }
    }

    return [];
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["additiveEffects", r.array], ["curveSet", r.object], ["distortionEffects", r.array], ["name", r.string], ["opaqueEffects", r.array], ["transparentEffects", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveMeshOverlayEffect.__isStaging = 1;

/***/ }),

/***/ "./eve/effect/EveOccluder.js":
/*!***********************************!*\
  !*** ./eve/effect/EveOccluder.js ***!
  \***********************************/
/*! exports provided: EveOccluder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveOccluder", function() { return EveOccluder; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");


/**
 * EveOccluder
 * TODO: Handle device
 * TODO: Handle device specific global variables (Tw2VertexDeclaration, Tw2Effect)
 * TODO: Handle store
 *
 * @property {String} name                  -
 * @property {Array.<EveTransform>} sprites -
 */

class EveOccluder extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Constructor
   */
  constructor() {
    super();
    this.name = "";
    this.sprites = [];
    EveOccluder.init();
  }
  /**
   * UpdateValues
   * @param {mat4} parentTransform
   * @param {number} index
   */


  UpdateValue(parentTransform, index) {
    if (!global__WEBPACK_IMPORTED_MODULE_0__["device"].alphaBlendBackBuffer) return;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          g = EveOccluder.global,
          worldViewProj = g.mat4_0,
          center = g.vec4_0;
    g.accumulator.Clear();

    for (let i = 0; i < this.sprites.length; ++i) {
      this.sprites[i].UpdateViewDependentData(parentTransform);
      this.sprites[i].GetBatches(d.RM_DECAL, g.accumulator);
    }

    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].SetVariableValue("OccluderValue", [(1 << index * 2) / 255.0, (2 << index * 2) / 255.0, 0, 0]);
    g.accumulator.Render();
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(worldViewProj, d.viewProjection, this.sprites[0].worldTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(center, [0, 0, 0, 1], worldViewProj);
    const x0 = (center[0] / center[3] + 1) * 0.5,
          y0 = (center[1] / center[3] + 1) * 0.5;
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(center, 0.5, 0.5, 0, 1);
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(center, center, worldViewProj);
    const x1 = (center[0] / center[3] + 1) * 0.5,
          y1 = (center[1] / center[3] + 1) * 0.5;
    center[0] = x0;
    center[1] = y0;
    center[2] = x1 - x0;
    center[3] = y1 - y0;
    g.effect.parameters.OccluderPosition.SetValue(center);
  }
  /**
   * CollectSamples
   * @param {Tw2TextureRes} tex
   * @param {number} index
   * @param {number} total
   * @param {number} samples
   * @returns boolean
   */


  static CollectSamples(tex, index, total, samples) {
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          g = this.global,
          effect = g.effect,
          vertexBuffer = g.vertexBuffer,
          decl = g.decl;
    if (!effect.effectRes || !effect.effectRes.IsGood()) return false;
    effect.parameters.BackBuffer.SetTextureRes(tex);
    effect.parameters.OccluderIndex.SetValue([index, total, samples]);
    d.SetStandardStates(d.RM_ADDITIVE);
    d.gl.bindBuffer(d.gl.ARRAY_BUFFER, vertexBuffer);

    for (let pass = 0; pass < effect.GetPassCount("Main"); ++pass) {
      effect.ApplyPass("Main", pass);
      if (decl.SetDeclaration(d, effect.GetPassInput("Main", pass), 16)) return false;
      d.ApplyShadowState();
      d.gl.drawArrays(d.gl.TRIANGLES, 0, 255 * 6);
    }

    return true;
  }
  /**
   * Initializes class globals and scratch variables
   */


  static init() {
    if (EveOccluder.global) return;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          g = EveOccluder.global = {};
    g.mat4_0 = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    g.vec4_0 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    g.accumulator = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2BatchAccumulator"]();
    g.effect = core__WEBPACK_IMPORTED_MODULE_1__["Tw2Effect"].from({
      name: "Occluder sampler",
      effectFilePath: "res:/graphics/effect/managed/space/specialfx/lensflares/collectsamples.fx",
      parameters: {
        "OccluderPosition": [1, 1, 1, 1],
        "OccluderIndex": [1, 1, 1],
        "BackBuffer": ""
      }
    });
    g.vertexBuffer = null;
    g.decl = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"].from([{
      usage: "POSITION",
      usageIndex: 0,
      elements: 2
    }, {
      usage: "TEXCOORD",
      usageIndex: 0,
      elements: 2
    }]);
    g.decl.RebuildHash();
    const vb = new Float32Array(255 * 6 * 4);
    let index = 0;

    for (let i = 0; i < 16; ++i) {
      for (let j = 0; j < 16; ++j) {
        const x = (i + Math.random()) / 16 * 2 - 1,
              y = (j + Math.random()) / 16 * 2 - 1;
        vb[index++] = 1;
        vb[index++] = 1;
        vb[index++] = x;
        vb[index++] = y;
        vb[index++] = -1;
        vb[index++] = 1;
        vb[index++] = x;
        vb[index++] = y;
        vb[index++] = 1;
        vb[index++] = -1;
        vb[index++] = x;
        vb[index++] = y;
        vb[index++] = -1;
        vb[index++] = 1;
        vb[index++] = x;
        vb[index++] = y;
        vb[index++] = 1;
        vb[index++] = -1;
        vb[index++] = x;
        vb[index++] = y;
        vb[index++] = -1;
        vb[index++] = -1;
        vb[index++] = x;
        vb[index++] = y;
      }
    }

    g.vertexBuffer = d.gl.createBuffer();
    d.gl.bindBuffer(d.gl.ARRAY_BUFFER, g.vertexBuffer);
    d.gl.bufferData(d.gl.ARRAY_BUFFER, vb, d.gl.STATIC_DRAW);
    d.gl.bindBuffer(d.gl.ARRAY_BUFFER, null);
  }
  /**
   * Global and scratch variables
   * @type {*}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["sprites", r.array]];
  }

}
EveOccluder.global = null;

/***/ }),

/***/ "./eve/effect/EveStarfield.js":
/*!************************************!*\
  !*** ./eve/effect/EveStarfield.js ***!
  \************************************/
/*! exports provided: EveStarfield */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveStarfield", function() { return EveStarfield; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveStarfield
 * TODO: Implement
 *
 * @property {Tw2Effect} effect         -
 * @property {Number} maxDist           -
 * @property {Number} maxFlashRate      -
 * @property {Number} minDist           -
 * @property {Number} minFlashIntensity -
 * @property {Number} minFlashRate      -
 * @property {Number} numStars          -
 * @property {Number} seed              -
 */

class EveStarfield extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.effect = null;
    this.maxDist = 0;
    this.maxFlashRate = 0;
    this.minDist = 0;
    this.minFlashIntensity = 0;
    this.minFlashRate = 0;
    this.numStars = 0;
    this.seed = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["effect", r.object], ["maxDist", r.float], ["maxFlashRate", r.float], ["minDist", r.float], ["minFlashIntensity", r.float], ["minFlashRate", r.float], ["numStars", r.uint], ["seed", r.uint]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveStarfield.__isStaging = 4;

/***/ }),

/***/ "./eve/effect/EveStretch.js":
/*!**********************************!*\
  !*** ./eve/effect/EveStretch.js ***!
  \**********************************/
/*! exports provided: EveStretch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveStretch", function() { return EveStretch; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");


/**
 * EveStretch
 * TODO: Implement "moveCompletion"
 * TODO: Implement "moveObject"
 * TODO: Implement "progressCurve"
 * TODO: Implement "sourceLights"
 * TODO: Implement "useCurveLod"
 *
 * @property {String} name                      - The stretches' name
 * @property {Array.<TriCurveSet>} curveSets    - Animation curve sets
 * @property {Curve|CurveAdapter} dest          - Destination curve
 * @property {EveTransform} destObject          - Destination object
 * @property {Tw2Float} length                  - Stretch length
 * @property {TriCurveSet} moveCompletion       - not implemented
 * @property {EveTransform} moveObject          - not implemented
 * @property {Tr2CurveScalar} progressCurve     - not implemented
 * @property {Curve|CurveAdapter} source        - Source object
 * @property {Array} sourceLights               - not implemented
 * @property {EveTransform} sourceObject        - Source object
 * @property {EveTransform} stretchObject       - Stretch object
 * @property {Boolean} useCurveLod              - Enables curve LOD
 * @property {vec3} _destinationPosition        - Destination position
 * @property {Boolean} _displayDestObject       - Toggles destination object visibility
 * @property {Boolean} _displaySourceObject     - Toggles source object visibility
 * @property {Boolean} _isNegZForward           - Identifies if the the negative z axis is forwards
 * @property {vec3} _sourcePosition             - Source's position
 * @property {mat4} _sourceTransform            - Source's transform
 * @property {number} _time                     - The current stretch time
 * @property {Boolean} _useTransformsForStretch - Toggles using transforms for stretch objects
 */

class EveStretch extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  // ccpwgl

  /**
   * Constructor
   */
  constructor() {
    super();
    this.name = "";
    this.curveSets = [];
    this.dest = null;
    this.destObject = null;
    this.length = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2Float"]();
    this.moveCompletion = null;
    this.moveObject = null;
    this.progressCurve = null;
    this.source = null;
    this.sourceLights = [];
    this.sourceObject = null;
    this.stretchObject = null;
    this.useCurveLod = false;
    this.display = true;
    this.update = true;
    this._destinationPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._displayDestObject = true;
    this._displaySourceObject = true;
    this._isNegZForward = false;
    this._useTransformsForStretch = false;
    this._sourcePosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._sourceTransform = null;
    this._time = 0;
    this._useParentMatrix = false;
    EveStretch.init();
  }
  /**
   * Gets the stretches resources
   * @param {Array} [out=[]]
   * @return {Array<Tw2Resource>} out
   */


  GetResources(out = []) {
    if (this.source && this.source.GetResources) {
      this.source.GetResources(out);
    }

    if (this.dest && this.dest.GetResources) {
      this.dest.GetResources(out);
    }

    if (this.sourceObject && this.sourceObject.GetResources) {
      this.sourceObject.GetResources(out);
    }

    if (this.destObject && this.destObject.GetResources) {
      this.destObject.GetResources(out);
    }

    if (this.stretchObject && this.stretchObject.GetResources) {
      this.stretchObject.GetResources(out);
    }

    return out;
  }
  /**
   * Sets source's position
   * @param {vec3} position
   */


  SetSourcePosition(position) {
    this._useTransformsForStretch = false;
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this._sourcePosition, position);
  }
  /**
   * Sets the source's position from a transform
   * @param {mat4} t
   * @constructor
   */


  SetSourcePositionFromTransform(t) {
    this._useTransformsForStretch = false;
    this._sourcePosition[0] = t[12];
    this._sourcePosition[1] = t[13];
    this._sourcePosition[2] = t[14];
  }
  /**
   * Sets the destination position
   * @param {vec3} position
   */


  SetDestinationPosition(position) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this._destinationPosition, position);
  }
  /**
   * Sets the source transform
   * @param {mat4} transform
   */


  SetSourceTransform(transform) {
    this._useTransformsForStretch = true;
    this._sourceTransform = transform;
  }
  /**
   * SetIsNegZForward
   * @param {Boolean} isNegZForward
   */


  SetIsNegZForward(isNegZForward) {
    this._isNegZForward = isNegZForward;
  }
  /**
   * Updates view dependent data
   * @param {mat4} parentTransform
   */


  UpdateViewDependentData(parentTransform) {
    if (!this.display) return; // TODO: Handle parent scale....

    const g = EveStretch.global,
          directionVec = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(g.vec3_0, this._destinationPosition, this._sourcePosition),
          m = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(g.mat4_0),
          x = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(g.vec3_1, 0, 0, 0),
          up = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(g.vec3_2, 0, 0, 0),
          s = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(g.mat4_1);
    let scalingLength = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length(directionVec);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(directionVec, directionVec);

    if (this._useTransformsForStretch) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotateX(m, m, -Math.PI / 2);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(m, this._sourceTransform, m);
    } else {
      if (Math.abs(directionVec[1]) > 0.9) {
        up[2] = 1;
      } else {
        up[1] = 1;
      }

      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(x, up, directionVec);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(x, x);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(up, directionVec, x);
      m[0] = x[0];
      m[1] = x[1];
      m[2] = x[2];
      m[4] = -directionVec[0];
      m[5] = -directionVec[1];
      m[6] = -directionVec[2];
      m[8] = up[0];
      m[9] = up[1];
      m[10] = up[2];
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(m, parentTransform, m);
    }

    if (this.destObject && this._displayDestObject) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].setTranslation(m, this._destinationPosition);
      this.destObject.UpdateViewDependentData(m);
    }

    if (this.sourceObject && this._displaySourceObject) {
      if (this._useTransformsForStretch) {
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(m);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotateX(m, m, -Math.PI / 2);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(m, this._sourceTransform, m);
      } else {
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].setTranslation(m, this._sourcePosition);
      }

      this.sourceObject.UpdateViewDependentData(m);
    }

    if (this.stretchObject) {
      if (this._useTransformsForStretch) {
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(m);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].scale(m, m, [1, 1, scalingLength]);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(m, this._sourceTransform, m);
      } else {
        m[0] = x[0];
        m[1] = x[1];
        m[2] = x[2];
        m[4] = up[0];
        m[5] = up[1];
        m[6] = up[2];
        m[8] = -directionVec[0];
        m[9] = -directionVec[1];
        m[10] = -directionVec[2];
        if (this._isNegZForward) scalingLength = -scalingLength;
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].scale(s, s, [1, 1, scalingLength]);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(m, m, s);
      }

      this.stretchObject.UpdateViewDependentData(m);
    }
  }
  /**
   * Per frame update
   * @param {number} dt - delta time
   */


  Update(dt) {
    for (let i = 0; i < this.curveSets.length; ++i) {
      this.curveSets[i].Update(dt);
    }

    this._time += dt;

    if (this.source) {
      this.source.GetValueAt(this._time, this._sourcePosition);
    } else if (this._useTransformsForStretch) {
      this._sourcePosition[0] = this._sourceTransform[12];
      this._sourcePosition[1] = this._sourceTransform[13];
      this._sourcePosition[2] = this._sourceTransform[14];
    }

    if (this.dest) {
      this.source.GetValueAt(this._time, this._destinationPosition);
    }

    const directionVec = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(EveStretch.global.vec3_0, this._destinationPosition, this._sourcePosition);
    this.length.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length(directionVec);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(directionVec, directionVec); // Unused - typo?

    if (this.sourceObject && this._displaySourceObject) {
      this.sourceObject.Update(dt);
    }

    if (this.destObject && this._displayDestObject) {
      this.destObject.Update(dt);
    }

    if (this.stretchObject) {
      this.stretchObject.Update(dt);
    }
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.display) return;

    if (this.sourceObject && this._displaySourceObject) {
      this.sourceObject.GetBatches(mode, accumulator, perObjectData);
    }

    if (this.destObject && this._displayDestObject) {
      this.destObject.GetBatches(mode, accumulator, perObjectData);
    }

    if (this.stretchObject) {
      this.stretchObject.GetBatches(mode, accumulator, perObjectData);
    }
  }
  /**
   * Initializes class global and scratch variables
   */


  static init() {
    if (!EveStretch.global) {
      EveStretch.global = {
        vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        vec3_1: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        vec3_2: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create(),
        mat4_1: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
      };
    }
  }
  /**
   * Global and scratch variables
   * @type {*}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["curveSets", r.array], ["dest", r.object], ["destObject", r.object], ["length", r.object], ["moveCompletion", r.object], ["moveObject", r.object], ["name", r.string], ["progressCurve", r.object], ["source", r.object], ["sourceLights", r.array], ["sourceObject", r.object], ["stretchObject", r.object], ["useCurveLod", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveStretch.global = null;
EveStretch.__isStaging = 1;

/***/ }),

/***/ "./eve/effect/EveStretch2.js":
/*!***********************************!*\
  !*** ./eve/effect/EveStretch2.js ***!
  \***********************************/
/*! exports provided: EveStretch2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveStretch2", function() { return EveStretch2; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveStretch2
 * TODO: Implement
 *
 * @property {String} name          -
 * @property {*} destinationEmitter -
 * @property {*} destinationLight   -
 * @property {Tw2Effect} effect     -
 * @property {TriCurveSet} loop     -
 * @property {*} sourceEmitter      -
 * @property {*} sourceLight        -
 * @property {Number} quadCount     -
 */

class EveStretch2 extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.destinationEmitter = null;
    this.destinationLight = null;
    this.effect = null;
    this.loop = null;
    this.sourceEmitter = null;
    this.sourceLight = null;
    this.quadCount = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["destinationEmitter", r.object], ["destinationLight", r.object], ["effect", r.object], ["loop", r.object], ["name", r.string], ["sourceEmitter", r.object], ["sourceLight", r.object], ["quadCount", r.uint]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveStretch2.__isStaging = 4;

/***/ }),

/***/ "./eve/effect/EveTurretFiringFX.js":
/*!*****************************************!*\
  !*** ./eve/effect/EveTurretFiringFX.js ***!
  \*****************************************/
/*! exports provided: EvePerMuzzleData, EveTurretFiringFX */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EvePerMuzzleData", function() { return EvePerMuzzleData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveTurretFiringFX", function() { return EveTurretFiringFX; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EvePerMuzzleData
 *
 * @property {number} constantDelay
 * @property {number} currentStartDelay
 * @property {number} elapsedTime
 * @property muzzlePositionBone
 * @property {mat4} muzzleTransform
 * @property {Boolean} readyToStart
 * @property {Boolean} started
 */

class EvePerMuzzleData extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.constantDelay = 0;
    this.currentStartDelay = 0;
    this.elapsedTime = 0;
    this.muzzlePositionBone = null;
    this.muzzleTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.readyToStart = false;
    this.started = false;
  }

}
/**
 * EveTurretFiringFX
 * TODO: Implement "boneName",
 * TODO: Implement "destinationObserver",
 * TODO: Implement "firingDurationOverride",
 * TODO: Implement "firingPeakTime",
 * TODO: Implement "maxRadius",
 * TODO: Implement "minRadius",
 * TODO: Implement "scaleEffectTarget",
 * TODO: Implement "sourceObserver",
 * TODO: Implement "startCurveSet",
 * TODO: Implement "stopCurveSet"
 * TODO: Are the firing delays 5,6,7 and 8 deprecated
 *
 * @property {String} name                             -
 * @property {String} boneName                         -
 * @property {TriObserverLocal} destinationObserver    -
 * @property {Number} firingDelay1                     -
 * @property {Number} firingDelay2                     -
 * @property {Number} firingDelay3                     -
 * @property {Number} firingDelay4                     -
 * @property {Number} firingDurationOverride           -
 * @property {Number} firingPeakTime                   -
 * @property {Boolean} isLoopFiring                    -
 * @property {Number} maxRadius                        -
 * @property {Number} maxScale                         -
 * @property {Number} minRadius                        -
 * @property {Number} minScale                         -
 * @property {Boolean} scaleEffectTarget               -
 * @property {TriObserverLocal} sourceObserver         -
 * @property {Tw2CurveSet} startCurveSet               -
 * @property {Tw2CurveSet} stopCurveSet                -
 * @property {Array.<EveStretch|EveStretch2>} stretch  -
 * @property {Boolean} useMuzzleTransform              -
 * @property {Boolean} display                         -
 * @property {Array.<EveStretch>} stretch              -
 * @property {Boolean} useMuzzleTransform              -
 * @property {number} firingDelay5                     -
 * @property {number} firingDelay6                     -
 * @property {number} firingDelay7                     -
 * @property {number} firingDelay8                     -
 * @property {vec3} _endPosition                       -
 * @property {number} _firingDuration                  -
 * @property {Boolean} _isFiring                       - Identifies if the firing fx is firing
 * @property {Array.<EvePerMuzzleData>} _perMuzzleData -
 */

class EveTurretFiringFX extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.boneName = "";
    this.destinationObserver = null;
    this.firingDelay1 = 0;
    this.firingDelay2 = 0;
    this.firingDelay3 = 0;
    this.firingDelay4 = 0;
    this.firingDurationOverride = 0;
    this.firingPeakTime = 0;
    this.isLoopFiring = false;
    this.maxRadius = 0;
    this.maxScale = 0;
    this.minRadius = 0;
    this.minScale = 0;
    this.scaleEffectTarget = false;
    this.sourceObserver = null;
    this.startCurveSet = null;
    this.stopCurveSet = null;
    this.stretch = [];
    this.useMuzzleTransform = false;
    this.display = true;
    this.firingDelay5 = 0;
    this.firingDelay6 = 0;
    this.firingDelay7 = 0;
    this.firingDelay8 = 0;
    this._endPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._firingDuration = 0;
    this._isFiring = false;
    this._perMuzzleData = [];
  }

  /**
   * Initializes the turret firing fx
   */
  Initialize() {
    this._firingDuration = this.GetCurveDuration();

    for (let i = 0; i < this.stretch.length; ++i) {
      this._perMuzzleData[i] = new EvePerMuzzleData();
    }

    const data = this._perMuzzleData;
    if (data.length > 0) data[0].constantDelay = this.firingDelay1;
    if (data.length > 1) data[1].constantDelay = this.firingDelay2;
    if (data.length > 2) data[2].constantDelay = this.firingDelay3;
    if (data.length > 3) data[3].constantDelay = this.firingDelay4;
    if (data.length > 4) data[4].constantDelay = this.firingDelay5;
    if (data.length > 5) data[5].constantDelay = this.firingDelay6;
    if (data.length > 6) data[6].constantDelay = this.firingDelay7;
    if (data.length > 7) data[7].constantDelay = this.firingDelay8;
  }
  /**
   * Gets the total curve duration
   * @returns {number}
   */


  GetCurveDuration() {
    let maxDuration = 0;

    for (let i = 0; i < this.stretch.length; ++i) {
      const stretch = this.stretch[i];

      for (let j = 0; j < stretch.curveSets.length; ++j) {
        maxDuration = Math.max(maxDuration, stretch.curveSets[j].GetMaxCurveDuration());
      }
    }

    return maxDuration;
  }
  /**
   * Gets a count of stretch effects
   * @returns {Number}
   */


  GetPerMuzzleEffectCount() {
    return this.stretch.length;
  }
  /**
   * Sets the firing fx's end position
   * @param {vec3} v
   */


  SetEndPosition(v) {
    this._endPosition[0] = v[0];
    this._endPosition[1] = v[1];
    this._endPosition[2] = v[2];
  }
  /**
   * Sets muzzle bone id
   * @param {number} index
   * @param bone
   */


  SetMuzzleBoneID(index, bone) {
    this._perMuzzleData[index].muzzlePositionBone = bone;
  }
  /**
   * Gets a muzzle's transform
   * @param {number} index
   * @returns {mat4}
   */


  GetMuzzleTransform(index) {
    return this._perMuzzleData[index].muzzleTransform;
  }
  /**
   * Prepares the firing effect
   * @param {number} delay
   * @param {number} [muzzleID=-1]
   */


  PrepareFiring(delay, muzzleID = -1) {
    for (let i = 0; i < this.stretch.length; ++i) {
      if (muzzleID < 0 || muzzleID === i) {
        this._perMuzzleData[i].currentStartDelay = delay + this._perMuzzleData[i].constantDelay;
        this._perMuzzleData[i].started = false;
        this._perMuzzleData[i].readyToStart = false;
        this._perMuzzleData[i].elapsedTime = 0;
      } else {
        this._perMuzzleData[i].currentStartDelay = Number.MAX_VALUE;
        this._perMuzzleData[i].started = false;
        this._perMuzzleData[i].readyToStart = false;
        this._perMuzzleData[i].elapsedTime = 0;
      }
    }

    this._isFiring = true;
  }
  /**
   * Starts a muzzle effect
   * @param {number} muzzleID
   */


  StartMuzzleEffect(muzzleID) {
    const stretch = this.stretch[muzzleID];

    for (let i = 0; i < stretch.curveSets.length; ++i) {
      const curveSet = stretch.curveSets[i];

      switch (curveSet.name) {
        case "play_start":
        case "play_loop":
          curveSet.PlayFrom(-this._perMuzzleData[muzzleID].currentStartDelay);
          break;

        case "play_stop":
          curveSet.Stop();
          break;
      }
    }

    this._perMuzzleData[muzzleID].started = true;
    this._perMuzzleData[muzzleID].readyToStart = false;
  }
  /**
   * Stops the firing effect
   */


  StopFiring() {
    for (let j = 0; j < this.stretch.length; ++j) {
      const stretch = this.stretch[j];

      for (let i = 0; i < stretch.curveSets.length; ++i) {
        const curveSet = stretch.curveSets[i];

        switch (curveSet.name) {
          case "play_start":
          case "play_loop":
            curveSet.Stop();
            break;

          case "play_stop":
            curveSet.Play();
            break;
        }
      }

      this._perMuzzleData[j].started = false;
      this._perMuzzleData[j].readyToStart = false;
      this._perMuzzleData[j].currentStartDelay = 0;
      this._perMuzzleData[j].elapsedTime = 0;
    }

    this._isFiring = false;
  }
  /**
   * Updates view dependant data
   * @param {mat4} parentTransform
   */


  UpdateViewDependentData(parentTransform) {
    // Eve Turret handles parentTransforms for muzzles
    for (let i = 0; i < this.stretch.length; ++i) {
      this.stretch[i].UpdateViewDependentData(parentTransform);
    }
  }
  /**
   * Per frame update
   * @param {number} dt - Delta time
   */


  Update(dt) {
    for (let i = 0; i < this.stretch.length; ++i) {
      if (this._perMuzzleData[i].started) {
        this._perMuzzleData[i].elapsedTime += dt;
      }

      if (this._perMuzzleData[i].elapsedTime < this._firingDuration || this.isLoopFiring) {
        if (this._isFiring) {
          if (!this._perMuzzleData[i].started) {
            if (this._perMuzzleData[i].readyToStart) {
              this.StartMuzzleEffect(i);
              this._perMuzzleData[i].currentStartDelay = 0;
              this._perMuzzleData[i].elapsedTime = 0;
            } else {
              this._perMuzzleData[i].currentStartDelay -= dt;
            }

            if (this._perMuzzleData[i].currentStartDelay <= 0) {
              this._perMuzzleData[i].readyToStart = true;
            }
          } else {
            if (this.useMuzzleTransform) {
              this.stretch[i].SetSourceTransform(this._perMuzzleData[i].muzzleTransform);
            } else {
              this.stretch[i].SetSourcePositionFromTransform(this._perMuzzleData[i].muzzleTransform);
            }

            this.stretch[i].SetDestinationPosition(this._endPosition);
            this.stretch[i].SetIsNegZForward(true);
          }
        }
      }

      this.stretch[i].Update(dt);
    }
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.display || !this._isFiring) return;

    for (let i = 0; i < this.stretch.length; ++i) {
      if (this._perMuzzleData[i].started && (this._firingDuration >= this._perMuzzleData[i].elapsedTime || this.isLoopFiring)) {
        this.stretch[i].GetBatches(mode, accumulator, perObjectData);
      }
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["boneName", r.string], ["destinationObserver", r.object], ["firingDelay1", r.float], ["firingDelay2", r.float], ["firingDelay3", r.float], ["firingDelay4", r.float], ["firingDurationOverride", r.float], ["firingPeakTime", r.float], ["isLoopFiring", r.boolean], ["maxRadius", r.float], ["maxScale", r.float], ["minRadius", r.float], ["minScale", r.float], ["name", r.string], ["scaleEffectTarget", r.boolean], ["sourceObserver", r.object], ["startCurveSet", r.object], ["stopCurveSet", r.object], ["stretch", r.array], ["useMuzzleTransform", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveTurretFiringFX.__isStaging = 1;

/***/ }),

/***/ "./eve/effect/index.js":
/*!*****************************!*\
  !*** ./eve/effect/index.js ***!
  \*****************************/
/*! exports provided: EveLensflare, EveMeshOverlayEffect, EveOccluder, EveStarfield, EveStretch, EveStretch2, EvePerMuzzleData, EveTurretFiringFX */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveLensflare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveLensflare */ "./eve/effect/EveLensflare.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLensflare", function() { return _EveLensflare__WEBPACK_IMPORTED_MODULE_0__["EveLensflare"]; });

/* harmony import */ var _EveMeshOverlayEffect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveMeshOverlayEffect */ "./eve/effect/EveMeshOverlayEffect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMeshOverlayEffect", function() { return _EveMeshOverlayEffect__WEBPACK_IMPORTED_MODULE_1__["EveMeshOverlayEffect"]; });

/* harmony import */ var _EveOccluder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveOccluder */ "./eve/effect/EveOccluder.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveOccluder", function() { return _EveOccluder__WEBPACK_IMPORTED_MODULE_2__["EveOccluder"]; });

/* harmony import */ var _EveStarfield__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveStarfield */ "./eve/effect/EveStarfield.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStarfield", function() { return _EveStarfield__WEBPACK_IMPORTED_MODULE_3__["EveStarfield"]; });

/* harmony import */ var _EveStretch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveStretch */ "./eve/effect/EveStretch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStretch", function() { return _EveStretch__WEBPACK_IMPORTED_MODULE_4__["EveStretch"]; });

/* harmony import */ var _EveStretch2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveStretch2 */ "./eve/effect/EveStretch2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStretch2", function() { return _EveStretch2__WEBPACK_IMPORTED_MODULE_5__["EveStretch2"]; });

/* harmony import */ var _EveTurretFiringFX__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveTurretFiringFX */ "./eve/effect/EveTurretFiringFX.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePerMuzzleData", function() { return _EveTurretFiringFX__WEBPACK_IMPORTED_MODULE_6__["EvePerMuzzleData"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTurretFiringFX", function() { return _EveTurretFiringFX__WEBPACK_IMPORTED_MODULE_6__["EveTurretFiringFX"]; });









/***/ }),

/***/ "./eve/index.js":
/*!**********************!*\
  !*** ./eve/index.js ***!
  \**********************/
/*! exports provided: EveCamera, EveLineContainer, EveSpaceScene, EveAnimation, EveAnimationCommand, EveAnimationCurve, EveAnimationState, EveAnimationStateMachine, EveChildBulletStorm, EveChildCloud, EveChildContainer, EveChildExplosion, EveChildInheritProperties, EveChildLink, EveChildMesh, EveChildParticleSphere, EveChildParticleSystem, EveChildQuad, EveLensflare, EveMeshOverlayEffect, EveOccluder, EveStarfield, EveStretch, EveStretch2, EvePerMuzzleData, EveTurretFiringFX, EveBanner, EveBoosterSet2Batch, EveBoosterSet2Item, EveBoosterSet2, EveCurveLineSetItem, EveCurveLineSet, EveCustomMask, EveHazeSetBatch, EveHazeSetItem, EveHazeSet, EveLocator2, EveLocator, EveObjectSetItem, EveObjectSet, EvePlaneSetBatch, EvePlaneSetItem, EvePlaneSet, EveSpaceObjectDecal, EveSpotlightSetBatch, EveSpotlightSetItem, EveSpotlightSet, EveSpriteLineSetBatch, EveSpriteLineSetItem, EveSpriteLineSet, EveSpriteSetBatch, EveSpriteSetItem, EveSpriteSet, EveTrailSetRenderBatch, EveTrailsSet, EveTurretSetItem, EveTurretSet, EveEffectRoot2, EveMissileWarhead, EveMissile, EveMobile, EveRootTransform, EveShip2, EveStation2, EveTransform, EveParticleDirectForce, EveParticleDragForce, EveConnector, EveLocalPositionCurve, EveSpherePin, EveTacticalOverlay, EveUiObject, EveChildBillboard, EveChildModifierAttachToBone, EveChildModifierBillboard2D, EveChildModifierBillboard3D, EveChildModifierCameraOrientedRotationConstrained, EveChildModifierSRT, EveChildModifierTranslateWithCamera, EveBoosterBatch, EveBoosterSetItem, EveBoosterSet, EveEffectRoot, EvePlanet, EveShip, EveSpaceObject, EveStation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _animation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./animation */ "./eve/animation/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimation", function() { return _animation__WEBPACK_IMPORTED_MODULE_0__["EveAnimation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationCommand", function() { return _animation__WEBPACK_IMPORTED_MODULE_0__["EveAnimationCommand"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationCurve", function() { return _animation__WEBPACK_IMPORTED_MODULE_0__["EveAnimationCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationState", function() { return _animation__WEBPACK_IMPORTED_MODULE_0__["EveAnimationState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveAnimationStateMachine", function() { return _animation__WEBPACK_IMPORTED_MODULE_0__["EveAnimationStateMachine"]; });

/* harmony import */ var _child__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./child */ "./eve/child/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildBulletStorm", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildBulletStorm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildCloud", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildCloud"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildContainer", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildContainer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildExplosion", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildExplosion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildInheritProperties", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildInheritProperties"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildLink", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildLink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildMesh", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildMesh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildParticleSphere", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildParticleSphere"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildParticleSystem", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildParticleSystem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildQuad", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildQuad"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildBillboard", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildBillboard"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierAttachToBone", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildModifierAttachToBone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard2D", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildModifierBillboard2D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierBillboard3D", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildModifierBillboard3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierCameraOrientedRotationConstrained", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildModifierCameraOrientedRotationConstrained"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierSRT", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildModifierSRT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveChildModifierTranslateWithCamera", function() { return _child__WEBPACK_IMPORTED_MODULE_1__["EveChildModifierTranslateWithCamera"]; });

/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./effect */ "./eve/effect/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLensflare", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EveLensflare"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMeshOverlayEffect", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EveMeshOverlayEffect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveOccluder", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EveOccluder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStarfield", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EveStarfield"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStretch", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EveStretch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStretch2", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EveStretch2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePerMuzzleData", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EvePerMuzzleData"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTurretFiringFX", function() { return _effect__WEBPACK_IMPORTED_MODULE_2__["EveTurretFiringFX"]; });

/* harmony import */ var _item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./item */ "./eve/item/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBanner", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveBanner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2Batch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveBoosterSet2Batch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2Item", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveBoosterSet2Item"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveBoosterSet2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveCurveLineSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveCurveLineSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveCurveLineSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveCurveLineSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveCustomMask", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveCustomMask"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveHazeSetBatch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveHazeSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveHazeSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveHazeSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveHazeSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveHazeSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLocator2", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveLocator2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLocator", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveLocator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveObjectSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveObjectSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveObjectSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveObjectSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSetBatch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EvePlaneSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EvePlaneSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EvePlaneSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpaceObjectDecal", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpaceObjectDecal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSetBatch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpotlightSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpotlightSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpotlightSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSetBatch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpriteLineSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpriteLineSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpriteLineSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSetBatch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpriteSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpriteSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveSpriteSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTrailSetRenderBatch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveTrailSetRenderBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTrailsSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveTrailsSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTurretSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveTurretSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTurretSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveTurretSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterBatch", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveBoosterBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSetItem", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveBoosterSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet", function() { return _item__WEBPACK_IMPORTED_MODULE_3__["EveBoosterSet"]; });

/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./object */ "./eve/object/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveEffectRoot2", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveEffectRoot2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMissileWarhead", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveMissileWarhead"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMissile", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveMissile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMobile", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveMobile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveRootTransform", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveRootTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveShip2", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveShip2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStation2", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveStation2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTransform", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveTransform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveEffectRoot", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveEffectRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlanet", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EvePlanet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveShip", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveShip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpaceObject", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveSpaceObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStation", function() { return _object__WEBPACK_IMPORTED_MODULE_4__["EveStation"]; });

/* harmony import */ var _particle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./particle */ "./eve/particle/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveParticleDirectForce", function() { return _particle__WEBPACK_IMPORTED_MODULE_5__["EveParticleDirectForce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveParticleDragForce", function() { return _particle__WEBPACK_IMPORTED_MODULE_5__["EveParticleDragForce"]; });

/* harmony import */ var _pi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pi */ "./eve/pi/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveConnector", function() { return _pi__WEBPACK_IMPORTED_MODULE_6__["EveConnector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLocalPositionCurve", function() { return _pi__WEBPACK_IMPORTED_MODULE_6__["EveLocalPositionCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpherePin", function() { return _pi__WEBPACK_IMPORTED_MODULE_6__["EveSpherePin"]; });

/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui */ "./eve/ui/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTacticalOverlay", function() { return _ui__WEBPACK_IMPORTED_MODULE_7__["EveTacticalOverlay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveUiObject", function() { return _ui__WEBPACK_IMPORTED_MODULE_7__["EveUiObject"]; });

/* harmony import */ var _EveCamera__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EveCamera */ "./eve/EveCamera.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveCamera", function() { return _EveCamera__WEBPACK_IMPORTED_MODULE_8__["EveCamera"]; });

/* harmony import */ var _EveLineContainer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EveLineContainer */ "./eve/EveLineContainer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLineContainer", function() { return _EveLineContainer__WEBPACK_IMPORTED_MODULE_9__["EveLineContainer"]; });

/* harmony import */ var _EveSpaceScene__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EveSpaceScene */ "./eve/EveSpaceScene.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpaceScene", function() { return _EveSpaceScene__WEBPACK_IMPORTED_MODULE_10__["EveSpaceScene"]; });













/***/ }),

/***/ "./eve/item/EveBanner.js":
/*!*******************************!*\
  !*** ./eve/item/EveBanner.js ***!
  \*******************************/
/*! exports provided: EveBanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveBanner", function() { return EveBanner; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveBanner
 * TODO: Implement
 * @ccp EveBanner
 *
 * @property {Number} angleX    -
 * @property {Number} angleY    -
 * @property {Number} boneIndex -
 * @property {vec3} position    -
 * @property {quat} rotation    -
 * @property {vec3} scaling     -
 * @property {Number} usage     -
 */

class EveBanner extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.angleX = 0;
    this.angleY = 0;
    this.boneIndex = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.usage = 0;
    this.display = true;
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.transform, this.rotation, this.position, this.scaling);
  }

}

/***/ }),

/***/ "./eve/item/EveBoosterSet2.js":
/*!************************************!*\
  !*** ./eve/item/EveBoosterSet2.js ***!
  \************************************/
/*! exports provided: EveBoosterSet2Batch, EveBoosterSet2Item, EveBoosterSet2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2Batch", function() { return EveBoosterSet2Batch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2Item", function() { return EveBoosterSet2Item; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2", function() { return EveBoosterSet2; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");



/**
 * Eve booster set 2 render batch
 * @ccp N/A
 *
 * @property {EveBoosterSet2} boosterSet
 */

class EveBoosterSet2Batch extends core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.boosterSet = null;
  }

  /**
   * Commits the batch
   * @param {String} technique - technique name
   */
  Commit(technique) {
    this.boosterSet.Render(technique);
  }

}
/**
 * Booster
 * TODO: Implement
 * @ccp N/A
 */

class EveBoosterSet2Item extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {}
/**
 * Booster set
 * TODO: Implement
 * @ccp EveBoosterSet2
 *
 * @property {Boolean} alwaysOn             -
 * @property {Number} alwaysOnIntensity     -
 * @property {Tw2Effect} effect             -
 * @property {vec4} glowColor               -
 * @property {Number} glowScale             -
 * @property {EveSpriteSet} glows           -
 * @property {vec4} haloColor               -
 * @property {Number} haloScaleX            -
 * @property {Number} haloScaleY            -
 * @property {vec4} lightColor              -
 * @property {Number} lightFlickerAmplitude -
 * @property {Number} lightFlickerFrequency -
 * @property {Number} lightRadius           -
 * @property {vec4} lightWarpColor          -
 * @property {Number} lightWarpRadius       -
 * @property {Number} symHaloScale          -
 * @property {EveTrailsSet} trails          -
 * @property {vec4} warpGlowColor           -
 * @property {vec4} warpHaloColor           -
 */

EveBoosterSet2Item.__isStaging = 4;
class EveBoosterSet2 extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  constructor(...args) {
    super(...args);
    this.alwaysOn = false;
    this.alwaysOnIntensity = 0;
    this.effect = null;
    this.glowColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.glowScale = 0;
    this.glows = null;
    this.haloColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.haloScaleX = 0;
    this.haloScaleY = 0;
    this.lightColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.lightFlickerAmplitude = 0;
    this.lightFlickerFrequency = 0;
    this.lightRadius = 0;
    this.lightWarpColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.lightWarpRadius = 0;
    this.symHaloScale = 0;
    this.trails = null;
    this.warpGlowColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.warpHaloColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["alwaysOn", r.boolean], ["alwaysOnIntensity", r.float], ["effect", r.object], ["glows", r.object], ["glowColor", r.color], ["glowScale", r.float], ["haloColor", r.color], ["haloScaleX", r.float], ["haloScaleY", r.float], ["lightFlickerAmplitude", r.float], ["lightFlickerColor", r.color], ["lightFlickerFrequency", r.float], ["lightFlickerRadius", r.float], ["lightColor", r.color], ["lightRadius", r.float], ["lightWarpColor", r.color], ["lightWarpRadius", r.float], ["symHaloScale", r.float], ["trails", r.object], ["warpGlowColor", r.color], ["warpHaloColor", r.color]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveBoosterSet2.__isStaging = 4;

/***/ }),

/***/ "./eve/item/EveCurveLineSet.js":
/*!*************************************!*\
  !*** ./eve/item/EveCurveLineSet.js ***!
  \*************************************/
/*! exports provided: EveCurveLineSetItem, EveCurveLineSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveCurveLineSetItem", function() { return EveCurveLineSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveCurveLineSet", function() { return EveCurveLineSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");



/**
 * Curve line set item
 * @ccp N/A
 *
 * @property {Number} animationSpeed     - Line's animation speed
 * @property {Number} animationScale     - Line's animation scale
 * @property {vec4} color1               - Line's start color
 * @property {vec4} color2               - Line's end color
 * @property {vec3} intermediatePosition - Line's intermediate/middle position (not used with straight lines)
 * @property {vec4} multiColor           -
 * @property {Number} multiColorBorder   -
 * @property {Number} numOfSegments      - The amount of segments for a curved or sphered line
 * @property {vec4} overlayColor         - Line's overlay color
 * @property {vec3} position1            - Line's start position
 * @property {vec3} position2            - Line's end position
 * @property {Number} type               - Line's type
 * @property {Number} width              - Line's width
 */

class EveCurveLineSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.animationSpeed = 0;
    this.animationScale = 1;
    this.color1 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(1, 1, 1, 1);
    this.color2 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(1, 1, 1, 1);
    this.intermediatePosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.multiColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0, 0, 0, 1);
    this.multiColorBorder = -1;
    this.numOfSegments = 1;
    this.overlayColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0, 0, 0, 1);
    this.position1 = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.position2 = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.type = EveCurveLineSetItem.Type.INVALID;
    this.width = 1;
  }

  /**
   * Changes the lines position from a ray3
   * @param {vec3} origin
   * @param {vec3} direction
   * @param {Number} [length=EveCurveLineSetItem.DEFAULT_RAY_LENGTH]
   */
  ChangePositionFromRay(origin, direction, length = EveCurveLineSetItem.DEFAULT_RAY_LENGTH) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.position1, origin);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scaleAndAdd(this.position2, origin, direction, length);
    this.UpdateValues();
  }
  /**
   * Changes the line's colors
   * @param {vec3} startColor
   * @param {vec3} endColor
   */


  ChangeColor(startColor, endColor) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.color1, startColor);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.color2, endColor);
    this.UpdateValues();
  }
  /**
   * Changes the line's width
   * @param {Number} width
   */


  ChangeWidth(width) {
    this.width = width;
    this.UpdateValues();
  }
  /**
   * Changes positions from cartesian coordinates
   * @param {vec3} startPosition
   * @param {vec3} endPosition
   * @param {vec3} middle
   */


  ChangeCartesian(startPosition, endPosition, middle) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.position1, startPosition);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.position2, endPosition);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.intermediatePosition, middle);
    this.UpdateValues();
  }
  /**
   * Changes cartesian position
   * @param {vec3} startPosition
   * @param {vec3} endPosition
   */


  ChangePositionCartesian(startPosition, endPosition) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.position1, startPosition);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.position2, endPosition);
    this.UpdateValues();
  }
  /**
   * Changes cartesian intermediate position
   * @param {vec3} intermediatePosition
   */


  ChangeIntermediateCartesian(intermediatePosition) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this.intermediatePosition, intermediatePosition);
    this.UpdateValues();
  }
  /**
   * Changes positions from spherical
   * @param {vec3} startPosition
   * @param {vec3} endPosition
   * @param {vec3} middle
   * @param {vec3} center
   */


  ChangeSpherical(startPosition, endPosition, middle, center) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(this.position1, startPosition, center);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(this.position2, endPosition, center);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(this.intermediatePosition, middle, center);
    this.UpdateValues();
  }
  /**
   * Changes position from spherical coordinates
   * @param {vec3} startPosition
   * @param {vec3} endPosition
   * @param {vec3} center
   */


  ChangePositionSpherical(startPosition, endPosition, center) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(this.position1, startPosition, center);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(this.position2, endPosition, center);
    this.UpdateValues();
  }
  /**
   * Changes spherical intermediate position
   * @param {vec3} intermediatePosition
   * @param {vec3} center
   */


  ChangeIntermediateSpherical(intermediatePosition, center) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(this.intermediatePosition, intermediatePosition, center);
    this.UpdateValues();
  }
  /**
   * Changes multi line color
   * @param {vec4} color
   * @param {Number} border
   */


  ChangeMultiColor(color, border) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(this.multiColor, color);
    this.multiColorBorder = border;
    this.UpdateValues();
  }
  /**
   * Changes animated color settings
   * @param {vec4} color
   * @param {Number} speed
   * @param {Number} scale
   */


  ChangeAnimation(color, speed, scale) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(this.overlayColor, color);
    this.animationSpeed = speed;
    this.animationScale = scale;
    this.UpdateValues();
  }
  /**
   * Changes line segmentation
   * @param {Number} numOfSegments
   */


  ChangeSegmentation(numOfSegments) {
    if (this.type !== EveCurveLineSetItem.Type.STRAIGHT) {
      this.numOfSegments = numOfSegments;
      this.UpdateValues();
    }
  }
  /**
   * Creates a line from an object
   * TODO: Remove this class once it is generated by the Tw2Schema
   * @param {*} [opt={}]
   * @returns {EveCurveLineSetItem}
   */


  static from(opt = {}) {
    const item = new this();
    global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(item, opt, ["name", "display", "type", "position1", "color1", "position2", "color2", "intermediatePosition", "width", "multiColor", "multiColorBorder", "overlayColor", "animationSpeed", "animationScale", "numOfSegments"]);
    return item;
  }
  /**
   * Curve line types
   * @type {{INVALID: number, STRAIGHT: number, SPHERED: number, CURVED: number}}
   */


}
/**
 * Curve line set
 * TODO: The black definition seems way too small - find an example black file that uses this class
 * TODO: Implement "lineWidthFactor"
 * TODO: Implement "depthOffset"
 * TODO: Share "lineEffect" between line sets?
 * TODO: Share "pickEffect" between line sets?
 * TODO: Replace "parentTransform" usages and cache with "worldTransform" instead?
 * TODO: Is "lineWidthFactor" deprecated, or just for ccpwgl?
 * @ccp EveCurveLineSet
 *
 * @property {Tw2Effect} lineEffect            -
 * @property {?Tw2Effect} pickEffect           -
 * @property {Number} lineWidthFactor          -
 * @property {Boolean} additive                -
 * @property {Number} depthOffset              -
 * @property {vec3} translation                -
 * @property {quat} rotation                   -
 * @property {vec3} scaling                    -
 * @property {mat4} transform                  -
 * @property {mat4} _parentTransform           -
 * @property {Number} _vertexSize              -
 * @property {Number} _vbSize                  -
 * @property {?WebGLBuffer} _vb                -
 * @property {Tw2PerObjectData} _perObjectData -
 * @property {Tw2VertexDeclaration} _decl      -
 */

EveCurveLineSetItem.Type = {
  INVALID: 0,
  STRAIGHT: 1,
  SPHERED: 2,
  CURVED: 3
};
EveCurveLineSetItem.DEFAULT_RAY_LENGTH = 1000;
EveCurveLineSetItem.DEFAULT_CURVED_SEGMENTS = 20;
EveCurveLineSetItem.DEFAULT_SPHERED_SEGMENTS = 20;
class EveCurveLineSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  // ccp
  // ccpwgl

  /**
   * Constructor
   */
  constructor() {
    super();
    this.lineEffect = core__WEBPACK_IMPORTED_MODULE_1__["Tw2Effect"].from({
      effectFilePath: "res:/Graphics/Effect/Managed/Space/SpecialFX/Lines3D.fx",
      textures: {
        "TexMap": "res:/texture/global/white.dds.0.png",
        "OverlayTexMap": "res:/texture/global/white.dds.0.png"
      }
    });
    this.pickEffect = null;
    this.lineWidthFactor = 1;
    this.additive = false;
    this.depthOffset = 0;
    this.pickable = true;
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._parentTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._vertexSize = 26;
    this._vbSize = 0;
    this._vb = null;
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveCurveLineSet.perObjectData);
    this._decl = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"].from(EveCurveLineSet.vertexDeclarations).SetStride(26 * 4);
    EveCurveLineSet.init();
  }
  /**
   * Alias for this.items
   * @returns {Array}
   */


  get lines() {
    return this.items;
  }
  /**
   * Alias for this.items
   * @param {Array} arr
   */


  set lines(arr) {
    this.items = arr;
  }
  /**
   * Gets the current line count
   * @returns {Number}
   */


  get lineCount() {
    let count = 0;

    for (let i = 0; i < this.items.length; i++) {
      if (this.items[i].type !== EveCurveLineSetItem.Type.INVALID) {
        count += this.items[i].numOfSegments;
      }
    }

    return count;
  }
  /**
   * Initializes the curve line set
   */


  Initialize() {
    this.UpdateValues();
    this.Rebuild();
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.lineEffect) this.lineEffect.GetResources(out);
    return out;
  }
  /**
   * Creates a straight line from a ray
   * @param {vec3} origin
   * @param {vec3} direction
   * @param {Number} length
   * @param {Number} width
   * @param {vec4} startColor
   * @param {vec4} endColor
   * @returns {EveCurveLineSetItem}
   */


  AddStraightLineFromRay(origin, direction, length, width, startColor, endColor) {
    const line = this.AddStraightLine([0, 0, 0], [0, 0, 0], width, startColor, endColor);
    line.ChangePositionFromRay(origin, direction, length);
    return line;
  }
  /**
   * Creates a straight line
   * @param {vec3} start
   * @param {vec3} end
   * @param {Number} [width]
   * @param {vec4} [startColor]
   * @param {vec4} [endColor]
   * @returns {EveCurveLineSetItem}
   */


  AddStraightLine(start, end, width, startColor, endColor) {
    return this.CreateItem({
      type: EveCurveLineSetItem.Type.STRAIGHT,
      position1: start,
      position2: end,
      color1: startColor,
      color2: endColor,
      width: width
    });
  }
  /**
   * Creates and adds a curved line from cartesian coordinates
   * @param {vec3} start
   * @param {vec3} end
   * @param {vec3} center
   * @param {Number} [width]
   * @param {vec4} [startColor]
   * @param {vec4} [endColor]
   * @returns {EveCurveLineSetItem}
   */


  AddCurvedLineCrt(start, end, center, width, startColor, endColor) {
    return this.CreateItem({
      type: EveCurveLineSetItem.Type.CURVED,
      position1: start,
      position2: end,
      intermediatePosition: center,
      color1: startColor,
      color2: endColor,
      width: width,
      numOfSegments: EveCurveLineSetItem.DEFAULT_CURVED_SEGMENTS
    });
  }
  /**
   * Creates and adds a curved line from spherical coordinates
   * @param {vec3} start
   * @param {vec3} end
   * @param {vec3} center
   * @param {vec3} middle
   * @param {Number} [width]
   * @param {vec4} [startColor]
   * @param {vec4} [endColor]
   * @returns {EveCurveLineSetItem}
   */


  AddCurvedLineSph(start, end, center, middle, width, startColor, endColor) {
    const g = EveCurveLineSet.global;
    return this.CreateItem({
      type: EveCurveLineSetItem.Type.CURVED,
      position1: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(g.vec3_0, start, center),
      position2: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(g.vec3_1, end, center),
      intermediatePosition: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(g.vec3_2, middle, center),
      color1: startColor,
      color2: endColor,
      width: width,
      numOfSegments: EveCurveLineSetItem.DEFAULT_CURVED_SEGMENTS
    });
  }
  /**
   * Creates and adds a sphered line from cartesian coordinates
   * @param {vec3} start
   * @param {vec3} end
   * @param {vec3} center
   * @param {Number} [width]
   * @param {vec4} [startColor]
   * @param {vec4} [endColor]
   * @returns {EveCurveLineSetItem}
   */


  AddSpheredLineCrt(start, end, center, width, startColor, endColor) {
    return this.CreateItem({
      type: EveCurveLineSetItem.Type.SPHERED,
      position1: start,
      position2: end,
      intermediatePosition: center,
      color1: startColor,
      color2: endColor,
      width: width,
      numOfSegments: EveCurveLineSetItem.DEFAULT_SPHERED_SEGMENTS
    });
  }
  /**
   * Creates and adds a sphered line from spherical coordinates
   * @param {vec3} start
   * @param {vec3} end
   * @param {vec3} center
   * @param {vec3} middle
   * @param {Number} [width]
   * @param {vec4} [startColor]
   * @param {vec4} [endColor]
   * @returns {EveCurveLineSetItem}
   */


  AddSpheredLineSph(start, end, center, middle, width, startColor, endColor) {
    const g = EveCurveLineSet.global;
    return this.CreateItem({
      type: EveCurveLineSetItem.Type.SPHERED,
      position1: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(g.vec3_0, start, center),
      position2: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(g.vec3_1, end, center),
      intermediatePosition: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical(g.vec3_2, middle, center),
      color1: startColor,
      color2: endColor,
      width: width,
      numOfSegments: EveCurveLineSetItem.DEFAULT_SPHERED_SEGMENTS
    });
  }
  /**
   * Fire on value changes
   */


  OnValueChanged() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.transform, this.rotation, this.translation, this.scaling);
    this._dirty = true;
  }
  /**
   * Per frame update
   * @param {mat4} parentTransform
   */


  UpdateViewDependentData(parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._parentTransform, parentTransform);
  }
  /**
   * Unloads the line set's buffers
   */


  Unload(skipEvent) {
    if (this._vb) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._vb);
      this._vb = null;
    }

    super.Unload(skipEvent);
  }
  /**
   * Rebuilds the line set
   */


  Rebuild() {
    //this.Unload(true);
    this.RebuildItems();
    this._vbSize = this.lineCount;
    this._dirty = false;
    const visibleItems = this._visibleItems.length;

    if (!visibleItems) {
      super.Rebuild();
      return;
    }

    const g = EveCurveLineSet.global,
          data = new Float32Array(this._vbSize * 6 * this._vertexSize),
          startDir = g.vec3_0,
          endDir = g.vec3_1,
          startDirNrm = g.vec3_2,
          endDirNrm = g.vec3_3,
          rotationAxis = g.vec3_4,
          tangent1 = g.vec3_5,
          tangent2 = g.vec3_6,
          rotationMatrix = g.mat4_0;
    let dir1 = g.vec3_7,
        dir2 = g.vec3_8,
        pos1 = g.vec3_9,
        pos2 = g.vec3_10,
        col1 = g.vec4_0,
        col2 = g.vec4_1,
        offset = 0,
        tmp;

    for (let i = 0; i < visibleItems; ++i) {
      const item = this._visibleItems[i];

      switch (item.type) {
        case EveCurveLineSetItem.Type.INVALID:
          break;

        case EveCurveLineSetItem.Type.STRAIGHT:
          EveCurveLineSet.WriteLineVerticesToBuffer(this, item.position1, item.color1, 0, item.position2, item.color2, 1, i, data, offset);
          offset += 6 * this._vertexSize;
          break;

        case EveCurveLineSetItem.Type.SPHERED:
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(startDir, item.position1, item.intermediatePosition);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(endDir, item.position2, item.intermediatePosition);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(startDirNrm, startDir);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(endDirNrm, endDir);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(rotationAxis, startDir, endDir);
          const fullAngle = Math.acos(global__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(startDirNrm, endDirNrm)),
                segmentAngle = fullAngle / item.numOfSegments;
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(rotationMatrix);
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].rotate(rotationMatrix, rotationMatrix, segmentAngle, rotationAxis);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(dir1, startDir);
          global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(col1, item.color1);

          for (let j = 0; j < this.lines[i].numOfSegments; ++j) {
            const segmentFactor = (j + 1) / item.numOfSegments;
            global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(dir2, dir1, rotationMatrix);
            col2[0] = item.color1[0] * (1 - segmentFactor) + item.color2[0] * segmentFactor;
            col2[1] = item.color1[1] * (1 - segmentFactor) + item.color2[1] * segmentFactor;
            col2[2] = item.color1[2] * (1 - segmentFactor) + item.color2[2] * segmentFactor;
            col2[3] = item.color1[3] * (1 - segmentFactor) + item.color2[3] * segmentFactor;
            global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(pos1, dir1, item.intermediatePosition);
            global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(pos2, dir2, item.intermediatePosition);
            EveCurveLineSet.WriteLineVerticesToBuffer(this, pos1, col1, j / item.numOfSegments, pos2, col2, segmentFactor, i, data, offset);
            offset += 6 * this._vertexSize;
            tmp = dir1;
            dir1 = dir2;
            dir2 = tmp;
            tmp = col1;
            col1 = col2;
            col2 = tmp;
          }

          break;

        case EveCurveLineSetItem.Type.CURVED:
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(tangent1, item.intermediatePosition, item.position1);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(tangent2, item.position2, item.intermediatePosition);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(pos1, item.position1);
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(col1, item.color1);

          for (let j = 0; j < item.numOfSegments; ++j) {
            const segmentFactor = (j + 1) / item.numOfSegments;
            global__WEBPACK_IMPORTED_MODULE_0__["vec3"].hermite(pos2, item.position1, tangent1, item.position2, tangent2, segmentFactor);
            col2[0] = item.color1[0] * (1 - segmentFactor) + item.color2[0] * segmentFactor;
            col2[1] = item.color1[1] * (1 - segmentFactor) + item.color2[1] * segmentFactor;
            col2[2] = item.color1[2] * (1 - segmentFactor) + item.color2[2] * segmentFactor;
            col2[3] = item.color1[3] * (1 - segmentFactor) + item.color2[3] * segmentFactor;
            EveCurveLineSet.WriteLineVerticesToBuffer(this, pos1, col1, j / item.numOfSegments, pos2, col2, segmentFactor, i, data, offset);
            offset += 6 * this._vertexSize;
            tmp = pos1;
            pos1 = pos2;
            pos2 = tmp;
            tmp = col1;
            col1 = col2;
            col2 = tmp;
          }

      }
    } //if (this._vb) device.gl.deleteBuffer(this._vb);


    this._vb = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.createBuffer();
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindBuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ARRAY_BUFFER, this._vb);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bufferData(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ARRAY_BUFFER, data, global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.STATIC_DRAW);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindBuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ARRAY_BUFFER, null);
    super.Rebuild();
  }
  /**
   * Gets render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (!this.display || !this._vb) return;
    let effect;

    switch (mode) {
      case global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_TRANSPARENT:
        if (this.additive || !this.lineEffect) return;
        effect = this.lineEffect;
        break;

      case global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE:
        if (!this.additive || !this.lineEffect) return;
        effect = this.lineEffect;
        break;

      case global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_PICKABLE:
        if (!this.pickable || !this.pickEffect) return;
        effect = this.pickEffect;
    }

    const batch = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2ForwardingRenderBatch"](),
          worldTransform = EveCurveLineSet.global.mat4_0;
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(worldTransform, this.transform, this._parentTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("WorldMat"), worldTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.ps.Get("WorldMat"), worldTransform);
    batch.perObjectData = this._perObjectData;
    batch.geometryProvider = this;
    batch.renderMode = mode;
    batch.effect = effect;
    accumulator.Commit(batch);
  }
  /**
   * Per frame update
   * @param {Tw2ForwardingRenderBatch} batch
   * @param {String} technique - technique name
   * @returns {Boolean}
   */


  Render(batch, technique) {
    if (!batch.effect || !batch.effect.IsGood() || !this._vb) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl;
    gl.bindBuffer(gl.ARRAY_BUFFER, this._vb);
    let passCount = batch.effect.GetPassCount(technique);

    for (let pass = 0; pass < passCount; ++pass) {
      batch.effect.ApplyPass(technique, pass);
      let passInput = batch.effect.GetPassInput(technique, pass);
      if (!this._decl.SetDeclaration(d, passInput, this._decl.stride)) return false;
      d.ApplyShadowState();
      gl.drawArrays(gl.TRIANGLES, 0, this._vbSize * 6);
    }

    return true;
  }
  /**
   * Fills color vertices
   * @param {EveCurveLineSetItem} item
   * @param buffer
   * @param {Number} offset
   * @returns {Number}
   */


  static FillColorVertices(item, buffer, offset) {
    buffer[offset++] = item.multiColor[0];
    buffer[offset++] = item.multiColor[1];
    buffer[offset++] = item.multiColor[2];
    buffer[offset++] = item.multiColor[3];
    buffer[offset++] = item.overlayColor[0];
    buffer[offset++] = item.overlayColor[1];
    buffer[offset++] = item.overlayColor[2];
    buffer[offset++] = item.overlayColor[3];
    return offset;
  }
  /**
   * Writes line vertices to the vertex buffer
   * @param {EveCurveLineSet} lineSet
   * @param {vec3} start
   * @param {quat} startColor
   * @param length1
   * @param {vec3} end
   * @param {quat} endColor
   * @param length2
   * @param {Number} lineID
   * @param buffer
   * @param {Number} offset
   */


  static WriteLineVerticesToBuffer(lineSet, start, startColor, length1, end, endColor, length2, lineID, buffer, offset) {
    const item = lineSet.items[lineID];
    buffer[offset++] = start[0];
    buffer[offset++] = start[1];
    buffer[offset++] = start[2];
    buffer[offset++] = end[0] - start[0];
    buffer[offset++] = end[1] - start[1];
    buffer[offset++] = end[2] - start[2];
    buffer[offset++] = -lineSet.lineWidthFactor * item.width;
    buffer[offset++] = 0;
    buffer[offset++] = length1;
    buffer[offset++] = item.multiColorBorder;
    buffer[offset++] = length2 - length1;
    buffer[offset++] = item.animationSpeed;
    buffer[offset++] = item.animationScale;
    buffer[offset++] = lineID;
    buffer[offset++] = startColor[0];
    buffer[offset++] = startColor[1];
    buffer[offset++] = startColor[2];
    buffer[offset++] = startColor[3];
    offset = EveCurveLineSet.FillColorVertices(item, buffer, offset);
    buffer[offset++] = start[0];
    buffer[offset++] = start[1];
    buffer[offset++] = start[2];
    buffer[offset++] = end[0] - start[0];
    buffer[offset++] = end[1] - start[1];
    buffer[offset++] = end[2] - start[2];
    buffer[offset++] = lineSet.lineWidthFactor * item.width;
    buffer[offset++] = 0;
    buffer[offset++] = length1;
    buffer[offset++] = item.multiColorBorder;
    buffer[offset++] = length2 - length1;
    buffer[offset++] = item.animationSpeed;
    buffer[offset++] = item.animationScale;
    buffer[offset++] = lineID;
    buffer[offset++] = startColor[0];
    buffer[offset++] = startColor[1];
    buffer[offset++] = startColor[2];
    buffer[offset++] = startColor[3];
    offset = EveCurveLineSet.FillColorVertices(item, buffer, offset);
    buffer[offset++] = end[0];
    buffer[offset++] = end[1];
    buffer[offset++] = end[2];
    buffer[offset++] = start[0] - end[0];
    buffer[offset++] = start[1] - end[1];
    buffer[offset++] = start[2] - end[2];
    buffer[offset++] = -lineSet.lineWidthFactor * item.width;
    buffer[offset++] = 1;
    buffer[offset++] = length2;
    buffer[offset++] = item.multiColorBorder;
    buffer[offset++] = length2 - length1;
    buffer[offset++] = item.animationSpeed;
    buffer[offset++] = item.animationScale;
    buffer[offset++] = lineID;
    buffer[offset++] = endColor[0];
    buffer[offset++] = endColor[1];
    buffer[offset++] = endColor[2];
    buffer[offset++] = endColor[3];
    offset = EveCurveLineSet.FillColorVertices(item, buffer, offset);
    buffer[offset++] = start[0];
    buffer[offset++] = start[1];
    buffer[offset++] = start[2];
    buffer[offset++] = end[0] - start[0];
    buffer[offset++] = end[1] - start[1];
    buffer[offset++] = end[2] - start[2];
    buffer[offset++] = lineSet.lineWidthFactor * item.width;
    buffer[offset++] = 0;
    buffer[offset++] = length1;
    buffer[offset++] = item.multiColorBorder;
    buffer[offset++] = length2 - length1;
    buffer[offset++] = item.animationSpeed;
    buffer[offset++] = item.animationScale;
    buffer[offset++] = lineID;
    buffer[offset++] = startColor[0];
    buffer[offset++] = startColor[1];
    buffer[offset++] = startColor[2];
    buffer[offset++] = startColor[3];
    offset = EveCurveLineSet.FillColorVertices(item, buffer, offset);
    buffer[offset++] = end[0];
    buffer[offset++] = end[1];
    buffer[offset++] = end[2];
    buffer[offset++] = start[0] - end[0];
    buffer[offset++] = start[1] - end[1];
    buffer[offset++] = start[2] - end[2];
    buffer[offset++] = lineSet.lineWidthFactor * item.width;
    buffer[offset++] = 1;
    buffer[offset++] = length2;
    buffer[offset++] = item.multiColorBorder;
    buffer[offset++] = length2 - length1;
    buffer[offset++] = item.animationSpeed;
    buffer[offset++] = item.animationScale;
    buffer[offset++] = lineID;
    buffer[offset++] = endColor[0];
    buffer[offset++] = endColor[1];
    buffer[offset++] = endColor[2];
    buffer[offset++] = endColor[3];
    offset = EveCurveLineSet.FillColorVertices(item, buffer, offset);
    buffer[offset++] = end[0];
    buffer[offset++] = end[1];
    buffer[offset++] = end[2];
    buffer[offset++] = start[0] - end[0];
    buffer[offset++] = start[1] - end[1];
    buffer[offset++] = start[2] - end[2];
    buffer[offset++] = -lineSet.lineWidthFactor * item.width;
    buffer[offset++] = 1;
    buffer[offset++] = length2;
    buffer[offset++] = item.multiColorBorder;
    buffer[offset++] = length2 - length1;
    buffer[offset++] = item.animationSpeed;
    buffer[offset++] = item.animationScale;
    buffer[offset++] = lineID;
    buffer[offset++] = endColor[0];
    buffer[offset++] = endColor[1];
    buffer[offset++] = endColor[2];
    buffer[offset++] = endColor[3];
    EveCurveLineSet.FillColorVertices(item, buffer, offset);
  }
  /**
   * Initializes class global variables and scratch
   */


  static init() {
    if (!EveCurveLineSet.global) {
      EveCurveLineSet.global = {
        vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // start direction
        vec3_1: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // end direction
        vec3_2: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // start direction normalized
        vec3_3: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // end direction normalized
        vec3_4: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // rotationAxis
        vec3_5: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // direction1
        vec3_6: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // direction2
        vec3_7: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // position 1
        vec3_8: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // position 2
        vec3_9: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // tangent1
        vec3_10: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        // tangent2
        vec4_0: global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(),
        // color 1
        vec4_1: global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(),
        // color 2
        mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create() // rotationMatrix

      };
    }
  }
  /**
   * Line set item constructor
   * @type {EveCurveLineSetItem}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["lineEffect", r.object], ["pickEffect", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveCurveLineSet.Item = EveCurveLineSetItem;
EveCurveLineSet.global = null;
EveCurveLineSet.perObjectData = {
  vs: [["WorldMat", 16]],
  ps: [["WorldMat", 16]]
};
EveCurveLineSet.vertexDeclarations = [{
  usage: "POSITION",
  usageIndex: 0,
  elements: 3
}, {
  usage: "TEXCOORD",
  usageIndex: 0,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 1,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 2,
  elements: 3
}, {
  usage: "COLOR",
  usageIndex: 0,
  elements: 4
}, {
  usage: "COLOR",
  usageIndex: 1,
  elements: 4
}, {
  usage: "COLOR",
  usageIndex: 2,
  elements: 4
}];
EveCurveLineSet.__isStaging = 1;

/***/ }),

/***/ "./eve/item/EveCustomMask.js":
/*!***********************************!*\
  !*** ./eve/item/EveCustomMask.js ***!
  \***********************************/
/*! exports provided: EveCustomMask */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveCustomMask", function() { return EveCustomMask; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core_parameter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core/parameter */ "./core/parameter/index.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



/**
 * Custom mask for patterns
 * @ccp EveCustomMask
 *
 * @property {Boolean} display             - Toggles mask visibility
 * @property {Boolean} isMirrored          - Identifies if the mask is mirrored
 * @property {Number} materialIndex        - The material this mask is for (ie. Mtl1, Mtl2, Mtl3, Mtl4, PMt1, PMt2)
 * @property {Object} parameters           - Mask parameters
 * @property {vec4} targetMaterials        - The target materials this mask is for
 * @property {mat4} _worldInverseTranspose - The custom mask's final matrix
 */

class EveCustomMask extends core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TransformParameter"] {
  constructor(...args) {
    super(...args);
    this.materialIndex = 0;
    this.targetMaterials = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.display = true;
    this.isMirrored = false;
    this.parameters = {
      PatternMaskMap: new core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"]("PatternMaskMap"),
      DiffuseColor: new core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Vector4Parameter"]("DiffuseColor"),
      FresnelColor: new core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Vector4Parameter"]("FresnelColor"),
      Gloss: new core_parameter__WEBPACK_IMPORTED_MODULE_1__["Tw2Vector4Parameter"]("Gloss")
    };
    this._worldInverseTranspose = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Sets a sof material by name
   * @param {String} name
   * @returns {Promise<void>}
   */
  SetMaterial(name) {
    var _this = this;

    return _asyncToGenerator(function* () {
      const material = yield global__WEBPACK_IMPORTED_MODULE_0__["tw2"].eveSof.FetchMaterial(name);
      const {
        DiffuseColor,
        FresnelColor,
        Gloss
      } = material.parameters;

      _this.parameters.DiffuseColor.SetValue(DiffuseColor);

      _this.parameters.FresnelColor.SetValue(FresnelColor);

      _this.parameters.Gloss.SetValue(Gloss);
    })();
  }
  /**
   * Updates the parent's per object data
   * @param {mat4} parentTransform
   * @param {Tw2PerObjectData} perObjectData
   * @param {Number} index
   * @param {Boolean} visible
   */


  UpdatePerObjectData(parentTransform, perObjectData, index, visible) {
    this.SetParentTransform(parentTransform);
    const targets = this.display && visible ? this.targetMaterials : global__WEBPACK_IMPORTED_MODULE_0__["vec4"].ZERO;
    perObjectData.ps.Set("CustomMaskTarget" + index, targets);
    perObjectData.ps.SetIndex("CustomMaskMaterialID" + index, 0, this.materialIndex);
    perObjectData.vs.SetIndex("CustomMaskData" + index, 1, this.isMirrored ? 1 : 0);
    perObjectData.vs.Set("CustomMaskMatrix" + index, this._worldInverseTranspose);
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["materialIndex", r.byte], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3], ["targetMaterials", r.vector4]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveCustomMask.__isStaging = 1;

/***/ }),

/***/ "./eve/item/EveHazeSet.js":
/*!********************************!*\
  !*** ./eve/item/EveHazeSet.js ***!
  \********************************/
/*! exports provided: EveHazeSetBatch, EveHazeSetItem, EveHazeSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveHazeSetBatch", function() { return EveHazeSetBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveHazeSetItem", function() { return EveHazeSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveHazeSet", function() { return EveHazeSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");



/**
 * Haze set render batch
 * @ccp N/A
 *
 * @property {EveHazeSet} hazeSet
 */

class EveHazeSetBatch extends core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.hazeSet = null;
  }

  /**
   * Commits the haze set for rendering
   * @param {String} technique - technique name
   */
  Commit(technique) {
    this.hazeSet.Render(technique);
  }

}
/**
 * Haze item
 * @ccp EveHazeSetItem
 *
 * @property {Boolean} boosterGainInfluence -
 * @property {Number} colorType             -
 * @property {Number} hazeBrightness        -
 * @property {Number} hazeFalloff           -
 * @property {vec3} position                - Item's position
 * @property {quat} rotation                - Item's rotation
 * @property {vec3} scaling                 - Item's scaling
 * @property {Number} sourceBrightness      -
 * @property {Number} sourceSize            -
 * @property {mat4} transform               - Item's local transform
 */

class EveHazeSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.boosterGainInfluence = false;
    this.colorType = 0;
    this.hazeBrightness = 0;
    this.hazeFalloff = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.sourceBrightness = 0;
    this.sourceSize = 0;
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.transform, this.rotation, this.position, this.scaling);
    this._dirty = true;
  }

}
/**
 * Haze set
 * TODO: Implement
 * @ccp EveHazeSet
 */

class EveHazeSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  /**
   * Unloads the object's buffers
   */
  Unload() {} // TODO: Unload buffers

  /**
   * Rebuilds the haze set's buffers
   */


  Rebuild() {} // TODO: Rebuild buffers

  /**
   * Gets the plane set's render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {} // TODO: GetBatches

  /**
   * Renders the haze set
   * @param {String} technique - technique name
   */


  Render(technique) {// TODO: Render
  }

}

/***/ }),

/***/ "./eve/item/EveLocator2.js":
/*!*********************************!*\
  !*** ./eve/item/EveLocator2.js ***!
  \*********************************/
/*! exports provided: EveLocator2, EveLocator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveLocator2", function() { return EveLocator2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveLocator", function() { return EveLocator2; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/util */ "./global/util/index.js");


/**
 * Contains transform information for T3 Attachments, Boosters, Turrets and XLTurrets
 * TODO: Make bone private and update all uses
 * TODO: Properties "atlasIndex0" and "atlasIndex1" may be for internal use only
 * @ccp EveLocator2
 *
 * @property {?number} atlasIndex0          - A booster locator's atlasIndex0
 * @property {?number} atlasIndex1          - A booster locator's atlasIndex1
 * @property {mat4} transform               - The locator's transform
 * @property {?Tw2Bone} _bone               - A turret locator's bone
 */

class EveLocator2 extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.atlasIndex0 = null;
    this.atlasIndex1 = null;
    this.bone = null;
  }

  /**
   * Gets the locator's bone from an animation controller
   * @param {Tw2AnimationController} animationController
   * @returns {null|Tw2Bone}
   */
  FindBone(animationController) {
    this.bone = animationController.FindBoneForMesh(this.name, 0);
    return this.bone;
  }
  /**
   * Creates a locator from options
   * @param {*} [values]
   * @param {*} [options]
   * @returns {EveLocator2}
   */


  static from(values, options) {
    const item = new EveLocator2();

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_1__["assignIfExists"])(item, values, ["transform", "name", "atlasIndex0", "atlasIndex1"]);
    }

    return item;
  }
  /**
   * Locator name prefixes
   * @type {{AUDIO: string, ATTACH: string, BOOSTER: string, TURRET: string, XL_TURRET: string}}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["transform", r.matrix]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveLocator2.Prefix = {
  AUDIO: "locator_audio",
  ATTACH: "locator_attach",
  BOOSTER: "locator_booster",
  TURRET: "locator_turret",
  XL_TURRET: "locator_xl"
};
EveLocator2.__isStaging = 1;


/***/ }),

/***/ "./eve/item/EveObjectSet.js":
/*!**********************************!*\
  !*** ./eve/item/EveObjectSet.js ***!
  \**********************************/
/*! exports provided: EveObjectSetItem, EveObjectSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveObjectSetItem", function() { return EveObjectSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveObjectSet", function() { return EveObjectSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _class, _temp, _dec2, _dec3, _dec4, _class3, _class4, _class5, _temp2;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

/**
 * EveObjectSetItem base class
 * @ccp N/A
 *
 * @property {Boolean} display - Toggles the set item's visibility
 * @property {Boolean} _dirty  - Identifies that the item is dirty
 */

let EveObjectSetItem = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_temp = class EveObjectSetItem extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.display = true;
    this._dirty = true;
  }

  /**
   * Fire on value changes
   */
  OnValueChanged() {
    this._dirty = true;
  }

}, _temp)) || _class);
/**
 * EveObjectSet base class
 * @ccp N/A
 *
 * @property {Boolean} display        - Toggles set visibility
 * @property {Array<*>} items         - The set's items
 * @property {Array<*>} _visibleItems - The set's items that will be rendered when the set is visible
 * @property {Boolean} _dirty         - Identifies if the set requires rebuilding
 * @property {Boolean} _autoRebuild   - Auto rebuilds the object if a child is dirty
 */

let EveObjectSet = (_dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec3 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec4 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2(_class3 = (_class4 = (_temp2 = _class5 = class EveObjectSet extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.autoRebuild = true;
    this.display = true;
    this.items = [];
    this._dirty = true;
    this._visibleItems = [];
  }

  /**
   * Initializes the set
   */
  Initialize() {
    this.Rebuild();
  }
  /**
   * Fires on value changes
   */


  OnValueChanged() {
    this._dirty = true;
  }
  /**
   * Fires when an item is modified
   * @param {*} item
   * @param {*} opt
   */


  OnItemModified(item, opt) {
    if (this.items.includes(item)) {
      this._dirty = true;
      this.emit("item_modified", item, opt);
    } else {
      this.emit("item_removed", item, opt);
      item.off("modified", this.OnItemModified);
    }
  }
  /**
   * Creates an item from an options object and then adds it to the set
   * @param {*} [values={}]
   * @param {Boolean} [skipUpdate]
   * @param {Boolean} [skipEvents]
   * @returns {*}
   */


  CreateItem(values = {}, skipUpdate, skipEvents) {
    const item = this.constructor.Item.from(values);
    this.AddItem(item, true, true);

    if (!skipEvents) {
      this.emit("item_created", item);
    }

    if (!skipUpdate) {
      this.UpdateValues();
    }

    return item;
  }
  /**
   * Adds a set item
   * @param {*} item
   * @param {Boolean} [skipUpdate]
   * @param {Boolean} [skipEvents]
   */


  AddItem(item, skipUpdate, skipEvents) {
    if (!this.items.includes(item)) {
      this.items.push(item);
      this._dirty = true;
      item.on("modified", this.OnItemModified, this);

      if (!skipEvents) {
        this.emit("item_added", item);
      }

      if (!skipUpdate) {
        this.UpdateValues(item);
      }

      return true;
    }

    return false;
  }
  /**
   * Removes a set item
   * @param {*} item
   * @param {Boolean} [skipUpdate]
   * @param {Boolean} [skipEvents]
   */


  RemoveItem(item, skipUpdate, skipEvents) {
    const index = this.items.indexOf(item);

    if (index !== -1) {
      this.items.splice(index, 1);
      this._dirty = true;
      item.off("modified", this.OnItemModified);

      if (!skipEvents) {
        this.emit("item_removed", item);
      }

      if (!skipUpdate) {
        this.UpdateValues(item);
      }

      return true;
    }

    return false;
  }
  /**
   * Clears all items
   * @param {Boolean} [skipUpdate]
   * @param {Boolean} [skipEvents]
   */


  ClearItems(skipUpdate, skipEvents) {
    let items;

    if (!skipEvents) {
      items = Array.from(this.items);
    }

    for (let i = 0; i < this.items.length; i++) {
      this.RemoveItem(this.items[i], true, true);
      i--;
    }

    if (!skipEvents) {
      this.emit("items_cleared", items);
    }

    if (!skipUpdate) {
      this.UpdateValues();
    }
  }
  /**
   * Rebuilds items
   */


  RebuildItems() {
    this._visibleItems.splice(0);

    for (let i = 0; i < this.items.length; i++) {
      const item = this.items[i];

      if (!item.has("modified", this.OnItemModified)) {
        this.emit("item_added", item);
        item.on("modified", this.OnItemModified, this);
      }

      if (item.display) {
        this._visibleItems.push(item);
      }

      if (item._dirty) {
        this.emit("item_rebuilt", item);
      }

      item._dirty = false;
    }

    this._dirty = true;
  }
  /**
   * Checks if any children are dirty
   * @returns {boolean}
   */


  AreItemsDirty() {
    for (let i = 0; i < this.items.length; i++) {
      if (this.items[i]._dirty) {
        return true;
      }
    }

    return false;
  }
  /**
   * Per frame update
   * @param {Number} dt
   */


  Update(dt) {
    if (!this._dirty && this.autoRebuild && this.AreItemsDirty()) {
      this._dirty = true;
    }

    if (this._dirty) {
      this.Rebuild();
    }
  }
  /**
   * Unloads the set's buffers
   */


  Unload(skipEvent) {
    if (!skipEvent) {
      this.emit("unloaded");
    }
  }
  /**
   * Rebuilds the set
   */


  Rebuild() {
    this.emit("rebuilt");
  }
  /**
   * Gets render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {}
  /**
   * Renders the set
   */


  Render() {}
  /**
   * The object set's item
   * @type {?Function}
   */


}, _class5.Item = null, _class5.global = {
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_1: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_2: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec4_0: global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(),
  vec4_1: global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create(),
  mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
}, _temp2), (_applyDecoratedDescriptor(_class4.prototype, "GetBatches", [_dec3], Object.getOwnPropertyDescriptor(_class4.prototype, "GetBatches"), _class4.prototype), _applyDecoratedDescriptor(_class4.prototype, "Render", [_dec4], Object.getOwnPropertyDescriptor(_class4.prototype, "Render"), _class4.prototype)), _class4)) || _class3);

/***/ }),

/***/ "./eve/item/EvePlaneSet.js":
/*!*********************************!*\
  !*** ./eve/item/EvePlaneSet.js ***!
  \*********************************/
/*! exports provided: EvePlaneSetBatch, EvePlaneSetItem, EvePlaneSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSetBatch", function() { return EvePlaneSetBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSetItem", function() { return EvePlaneSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSet", function() { return EvePlaneSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core_mesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core/mesh */ "./core/mesh/index.js");





/**
 * Plane set render batch
 * @ccp N/A
 * @property {EvePlaneSet} planeSet
 */

class EvePlaneSetBatch extends core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.planeSet = null;
  }

  /**
   * Commits the plan set
   * @param {String} technique - technique name
   */
  Commit(technique) {
    this.planeSet.Render(technique);
  }

}
/**
 * Plane set item
 * TODO: Identify if "boneIndex" is deprecated
 * TODO: Identify if "groupIndex" is deprecated
 * TODO: Replace "transform" with "localTransform" ?
 * If "boneIndex" and "groupIndex" are just used by the EveSOF, we may need to record this information if
 * we are going to convert this object back into a EveSOF object
 * @ccp EvePlaneSetItem
 *
 * @property {String} name          -
 * @property {vec4} color           -
 * @property {vec4} layer1Scroll    -
 * @property {vec4} layer1Transform -
 * @property {vec4} layer2Scroll    -
 * @property {vec4} layer2Transform -
 * @property {Number} maskAtlasID   -
 * @property {vec3} position        -
 * @property {quat} rotation        -
 * @property {vec3} scaling         -
 * @property {Number} boneIndex     -
 * @property {Boolean} display      -
 * @property {Number} groupIndex    -
 * @property {mat4} transform       -
 */

class EvePlaneSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.layer1Scroll = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.layer1Transform = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.layer2Scroll = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.layer2Transform = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.maskAtlasID = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.boneIndex = 0;
    this.groupIndex = -1;
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.transform, this.rotation, this.translation, this.scaling);
    this._dirty = true;
  }
  /**
   * Creates a plane set item from an object
   * @param {*} [values]
   * @returns {EvePlaneSetItem}
   */


  static from(values) {
    const item = new EvePlaneSetItem();

    if (values) {
      global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(item, values, ["name", "display", "boneIndex", "groupIndex", "position", "scaling", "rotation", "transform", "color", "layer1Transform", "layer2Transform", "layer1Scroll", "layer2Scroll", "maskAtlasID"]); // Allow alias for maskAtlasID

      if (values.maskMapAtlasIndex !== undefined) {
        item.maskAtlasID = values.maskMapAtlasIndex;
      }
    }

    return item;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["color", r.color], ["layer1Scroll", r.vector4], ["layer1Transform", r.vector4], ["layer2Scroll", r.vector4], ["layer2Transform", r.vector4], ["maskAtlasID", r.uint], ["name", r.string], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3]];
  }

}
/**
 * Plane set
 * Todo: Implement "hideOnLowQuality"
 * Todo: Implement "pickBufferID" (Assuming we will add picking)
 * @ccp EvePlaneSet
 *
 * @property {String} name                     -
 * @property {Tw2Effect} effect                -
 * @property {Boolean} hideOnLowQuality        -
 * @property {Number} pickBufferID             -
 * @property {Array.<EveObjectSetItem>} planes -
 * @property {Boolean} display                 -
 * @property {Number} _time                    -
 * @property {WebGLBuffer} _vertexBuffer       -
 * @property {WebGLBuffer} _indexBuffer        -
 * @property {Tw2VertexDeclaration} _decl      -
 */

class EvePlaneSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.effect = null;
    this.hideOnLowQuality = false;
    this.pickBufferID = 0;
    this._time = 0;
    this._vertexBuffer = null;
    this._indexBuffer = null;
    this._decl = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"].from(EvePlaneSet.vertexDeclarations);
  }

  /**
   * Alias for this.items
   * @returns {Array}
   */
  get planes() {
    return this.items;
  }
  /**
   * Alias for this.items
   * @param {Array} arr
   */


  set planes(arr) {
    this.items = arr;
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.effect) this.effect.GetResources(out);
    return out;
  }
  /**
   * Per frame update
   * @param {Number} dt - Delta Time
   * @param {mat4} [parentMatrix]
   */


  Update(dt, parentMatrix) {
    this._time += dt;
    super.Update(dt);
  }
  /**
   * Unloads the set's buffers
   * @param {Boolean} [skipEvent]
   */


  Unload(skipEvent) {
    if (this._vertexBuffer) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._vertexBuffer);
      this._vertexBuffer = null;
    }

    if (this._indexBuffer) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._indexBuffer);
      this._indexBuffer = null;
    }

    super.Unload(skipEvent);
  }
  /**
   * Rebuilds the plane set's buffers
   */


  Rebuild() {
    this.Unload(true);
    this.RebuildItems();
    this._dirty = false;
    const itemCount = this._visibleItems.length;

    if (!itemCount) {
      super.Rebuild();
      return;
    }

    const vertexSize = 35,
          mat4_0 = EvePlaneSet.global.mat4_0;
    const array = new Float32Array(itemCount * 4 * vertexSize);

    for (let i = 0; i < itemCount; ++i) {
      const item = this._visibleItems[i],
            offset = i * 4 * vertexSize;
      array[offset + vertexSize - 3] = 0;
      array[offset + vertexSize + vertexSize - 3] = 1;
      array[offset + 2 * vertexSize + vertexSize - 3] = 2;
      array[offset + 3 * vertexSize + vertexSize - 3] = 3;
      const itemTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(item.transform, item.rotation, item.position, item.scaling);

      for (let j = 0; j < 4; ++j) {
        const vtxOffset = offset + j * vertexSize;
        array[vtxOffset] = itemTransform[0];
        array[vtxOffset + 1] = itemTransform[4];
        array[vtxOffset + 2] = itemTransform[8];
        array[vtxOffset + 3] = itemTransform[12];
        array[vtxOffset + 4] = itemTransform[1];
        array[vtxOffset + 5] = itemTransform[5];
        array[vtxOffset + 6] = itemTransform[9];
        array[vtxOffset + 7] = itemTransform[13];
        array[vtxOffset + 8] = itemTransform[2];
        array[vtxOffset + 9] = itemTransform[6];
        array[vtxOffset + 10] = itemTransform[10];
        array[vtxOffset + 11] = itemTransform[14];
        array[vtxOffset + 12] = item.color[0];
        array[vtxOffset + 13] = item.color[1];
        array[vtxOffset + 14] = item.color[2];
        array[vtxOffset + 15] = item.color[3];
        array[vtxOffset + 16] = item.layer1Transform[0];
        array[vtxOffset + 17] = item.layer1Transform[1];
        array[vtxOffset + 18] = item.layer1Transform[2];
        array[vtxOffset + 19] = item.layer1Transform[3];
        array[vtxOffset + 20] = item.layer2Transform[0];
        array[vtxOffset + 21] = item.layer2Transform[1];
        array[vtxOffset + 22] = item.layer2Transform[2];
        array[vtxOffset + 23] = item.layer2Transform[3];
        array[vtxOffset + 24] = item.layer1Scroll[0];
        array[vtxOffset + 25] = item.layer1Scroll[1];
        array[vtxOffset + 26] = item.layer1Scroll[2];
        array[vtxOffset + 27] = item.layer1Scroll[3];
        array[vtxOffset + 28] = item.layer2Scroll[0];
        array[vtxOffset + 29] = item.layer2Scroll[1];
        array[vtxOffset + 30] = item.layer2Scroll[2];
        array[vtxOffset + 31] = item.layer2Scroll[3];
        array[vtxOffset + 33] = item.boneIndex;
        array[vtxOffset + 34] = item.maskAtlasID;
      }
    }

    this._vertexBuffer = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.createBuffer();
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindBuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ARRAY_BUFFER, this._vertexBuffer);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bufferData(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ARRAY_BUFFER, array, global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.STATIC_DRAW);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindBuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ARRAY_BUFFER, null);
    const indexes = new Uint16Array(itemCount * 6);

    for (let i = 0; i < itemCount; ++i) {
      const offset = i * 6,
            vtxOffset = i * 4;
      indexes[offset] = vtxOffset;
      indexes[offset + 1] = vtxOffset + 2;
      indexes[offset + 2] = vtxOffset + 1;
      indexes[offset + 3] = vtxOffset;
      indexes[offset + 4] = vtxOffset + 3;
      indexes[offset + 5] = vtxOffset + 2;
    }

    this._indexBuffer = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.createBuffer();
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindBuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bufferData(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ELEMENT_ARRAY_BUFFER, indexes, global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.STATIC_DRAW);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.bindBuffer(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.ELEMENT_ARRAY_BUFFER, null);
    this._indexBuffer.count = itemCount * 6;
    super.Rebuild();
  }
  /**
   * Gets the plane set's render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (this.display && mode === global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE && this._indexBuffer && this._vertexBuffer && this._visibleItems.length) {
      const batch = new EvePlaneSetBatch();
      batch.renderMode = global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE;
      batch.planeSet = this;
      batch.perObjectData = perObjectData;
      accumulator.Commit(batch);
    }
  }
  /**
   * Renders the plane set
   * @param {String} technique - technique name
   */


  Render(technique) {
    if (!this.effect || !this.effect.IsGood() || !this._vertexBuffer || !this._indexBuffer) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl;
    d.SetStandardStates(d.RM_ADDITIVE);
    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);

    for (let pass = 0; pass < this.effect.GetPassCount(technique); ++pass) {
      this.effect.ApplyPass(technique, pass);
      if (!this._decl.SetDeclaration(d, this.effect.GetPassInput(technique, pass), 140)) return false;
      d.ApplyShadowState();
      gl.drawElements(gl.TRIANGLES, this._indexBuffer.count, gl.UNSIGNED_SHORT, 0);
    }

    return true;
  }
  /**
   * Creates an eve plane from a plain object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {EvePlaneSet}
   */


  static from(values, options) {
    const item = new EvePlaneSet();

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item, values, ["name", "display", "hideOnLowQuality"]);

      if (values.effect) {
        item.effect = core_mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2Effect"].from(values.effect);
      }

      if (values.items) {
        for (let i = 0; i < values.items.length; i++) {
          item.CreateItem(values.items[i]);
        }
      }
    }

    if (!options || !options.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * The plane set's item constructor
   * @type {EvePlaneSetItem}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["effect", r.object], ["hideOnLowQuality", r.boolean], ["name", r.string], ["pickBufferID", r.byte], ["planes", r.array]];
  }

}
EvePlaneSet.Item = EvePlaneSetItem;
EvePlaneSet.vertexDeclarations = [{
  usage: "TEXCOORD",
  usageIndex: 0,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 1,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 2,
  elements: 4
}, {
  usage: "COLOR",
  usageIndex: 0,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 3,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 4,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 5,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 6,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 7,
  elements: 3
}];

/***/ }),

/***/ "./eve/item/EveSpaceObjectDecal.js":
/*!*****************************************!*\
  !*** ./eve/item/EveSpaceObjectDecal.js ***!
  \*****************************************/
/*! exports provided: EveSpaceObjectDecal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpaceObjectDecal", function() { return EveSpaceObjectDecal; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core/ */ "./core/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core_mesh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core/mesh */ "./core/mesh/index.js");




/**
 * Decal
 * TODO: Make "PickEffect" shared
 * TODO: Identify if "groupIndex" is deprecated
 * TODO: Identify if "parentBoneIndex" is deprecated - Doesn't seem to be on the new SOF anywhere and is required
 * @ccp EveSpaceObjectDecal
 *
 * @property {String} name                     - Decal name
 * @property {Tw2Effect} decalEffect           - Decal effect
 * @property {Boolean} display                 - Toggles decal visibility
 * @property {TypedArray} indexBuffer          - Decal index buffer
 * @property {Number} groupIndex               - Decals SOF group index
 * @property {Number} parentBoneIndex          - Decal's parent bone index
 * @property {Boolean} pickable                - Identifies if the decal is pickable
 * @property {Tw2Effect} pickEffect            - Decal pick effect
 * @property {vec3} position                   - Decal position
 * @property {quat} rotation                   - Decal rotation
 * @property {vec3} scaling                    - Decal scaling
 * @property {WebGLBuffer} _indexBuffer        - Decal index buffer
 * @property {Tw2GeometryRes} _parentGeometry  - Decal's parent geometry
 * @property {Tw2PerObjectData} _perObjectData - Decal per object data
 * @property {mat4} _transform                 - Decal local transform
 * @property {mat4} _transformInv              - Decal local transform inverse
 */

class EveSpaceObjectDecal extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.decalEffect = null;
    this.indexBuffer = [];
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.display = true;
    this.groupIndex = -1;
    this.parentBoneIndex = -1;
    this.pickable = true;
    this.pickEffect = null;
    this._indexBuffer = null;
    this._parentGeometry = null;
    this._perObjectData = core___WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveSpaceObjectDecal.perObjectData);
    this._transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._transformInv = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._dirty = true;
  }

  /**
   * Initializes the decal
   */
  Initialize() {
    this.Rebuild();
    this.UpdateValues();
  }
  /**
   * Gets effect resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.decalEffect) this.decalEffect.GetResources(out);
    if (this.pickEffect) this.pickEffect.GetResources(out);
    return out;
  }
  /**
   * Fire on value changes
   */


  OnValueChanged() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this._transform, this.rotation, this.position, this.scaling);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this._transformInv, this._transform);
  }
  /**
   * Sets the parent geometry
   * @param {Tw2GeometryRes} geometryRes
   */


  SetParentGeometry(geometryRes) {
    this._parentGeometry = geometryRes;
  }
  /**
   * Unloads the decal's buffers
   */


  Unload(skipEvent) {
    if (this._indexBuffer) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._indexBuffer);
      this._indexBuffer = null;
    }

    if (!skipEvent) {
      this.emit("unloaded");
    }
  }
  /**
   * Rebuilds the object's buffers
   */


  Rebuild() {
    this.Unload(true);

    if (this.indexBuffer) {
      const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl,
            indexes = new Uint16Array(this.indexBuffer);
      this._indexBuffer = gl.createBuffer();
      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);
      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexes, gl.STATIC_DRAW);
    }

    this._dirty = false;
    this.emit("rebuilt");
  }
  /**
   * Gets batches for rendering
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   * @param {Number} [counter=0]
   */


  GetBatches(mode, accumulator, perObjectData, counter) {
    let effect;

    switch (mode) {
      case global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_DECAL:
        effect = this.decalEffect;
        break;

      case global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_PICKABLE:
        effect = this.pickable ? this.pickEffect : null;
        break;
    }

    if (this._dirty) {
      this.Rebuild();
    }

    if (!this.display || !effect || !this._parentGeometry || !this._parentGeometry.meshes[0] || !this._indexBuffer) {
      return;
    }

    if (effect.IsGood() && this._parentGeometry.IsGood()) {
      const batch = new core___WEBPACK_IMPORTED_MODULE_1__["Tw2ForwardingRenderBatch"]();

      this._perObjectData.vs.Set("worldMatrix", perObjectData.vs.Get("WorldMat"));

      if (this.parentBoneIndex >= 0) {
        const bones = perObjectData.vs.Get("JointMat"),
              offset = this.parentBoneIndex * 12;

        if (bones[offset] || bones[offset + 4] || bones[offset + 8]) {
          const bone = this._perObjectData.vs.Get("parentBoneMatrix");

          bone[0] = bones[offset];
          bone[1] = bones[offset + 4];
          bone[2] = bones[offset + 8];
          bone[3] = 0;
          bone[4] = bones[offset + 1];
          bone[5] = bones[offset + 5];
          bone[6] = bones[offset + 9];
          bone[7] = 0;
          bone[8] = bones[offset + 2];
          bone[9] = bones[offset + 6];
          bone[10] = bones[offset + 10];
          bone[11] = 0;
          bone[12] = bones[offset + 3];
          bone[13] = bones[offset + 7];
          bone[14] = bones[offset + 11];
          bone[15] = 1;
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(bone, bone);
        }
      }

      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this._perObjectData.vs.Get("invWorldMatrix"), this._perObjectData.vs.Get("worldMatrix"));
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("decalMatrix"), this._transform);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("invDecalMatrix"), this._transformInv);
      this._perObjectData.ps.Get("displayData")[0] = counter || 0;

      this._perObjectData.ps.Set("shipData", perObjectData.ps.data);

      batch.perObjectData = this._perObjectData;
      batch.geometryProvider = this;
      batch.renderMode = mode;
      batch.effect = effect;
      accumulator.Commit(batch);
    }
  }
  /**
   * Renders the decal
   * @param {Tw2ForwardingRenderBatch} batch
   * @param {String} technique - technique name
   */


  Render(batch, technique) {
    const mesh = this._parentGeometry.meshes[0],
          bkIB = mesh.indexes,
          bkStart = mesh.areas[0].start,
          bkCount = mesh.areas[0].count,
          bkIndexType = mesh.indexType;
    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].SetVariableValue("u_DecalMatrix", this._transform);
    global__WEBPACK_IMPORTED_MODULE_0__["tw2"].SetVariableValue("u_InvDecalMatrix", this._transformInv);
    mesh.indexes = this._indexBuffer;
    mesh.areas[0].start = 0;
    mesh.areas[0].count = this.indexBuffer.length;
    mesh.indexType = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.UNSIGNED_SHORT;

    this._parentGeometry.RenderAreas(0, 0, 1, batch.effect, technique);

    mesh.indexes = bkIB;
    mesh.areas[0].start = bkStart;
    mesh.areas[0].count = bkCount;
    mesh.indexType = bkIndexType;
  }
  /**
   * Creates a decal from a plain object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {EveSpaceObjectDecal}
   */


  static from(values, options) {
    const item = new EveSpaceObjectDecal();

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_2__["assignIfExists"])(item, values, ["name", "display", "pickable", "position", "rotation", "scaling", "groupIndex", "parentBoneIndex"]);

      if (values.indexBuffer) {
        item.indexBuffer = new Uint16Array(values.indexBuffer);
      }

      if (values.pickEffect) {
        item.pickEffect = core_mesh__WEBPACK_IMPORTED_MODULE_3__["Tw2Effect"].from(values.pickEffect);
      }

      const decalEffect = values.decalEffect || values.effect;

      if (decalEffect) {
        item.decalEffect = core_mesh__WEBPACK_IMPORTED_MODULE_3__["Tw2Effect"].from(decalEffect);
      }
    }

    if (!options || !options.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * Per object data
   * @type {{vs: *[], ps: *[]}}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["decalEffect", r.object], ["name", r.string], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3], ["indexBuffer", r.indexBuffer]];
  }

}
EveSpaceObjectDecal.perObjectData = {
  vs: [["worldMatrix", 16], ["invWorldMatrix", 16], ["decalMatrix", 16], ["invDecalMatrix", 16], ["parentBoneMatrix", global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity([])]],
  ps: [["displayData", 4], ["shipData", 4 * 3]]
};

/***/ }),

/***/ "./eve/item/EveSpotlightSet.js":
/*!*************************************!*\
  !*** ./eve/item/EveSpotlightSet.js ***!
  \*************************************/
/*! exports provided: EveSpotlightSetBatch, EveSpotlightSetItem, EveSpotlightSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSetBatch", function() { return EveSpotlightSetBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSetItem", function() { return EveSpotlightSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSet", function() { return EveSpotlightSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core_mesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core/mesh */ "./core/mesh/index.js");





/**
 * Spotlight set render batch
 * @property {EveSpotlightSet} spotlightSet
 */

class EveSpotlightSetBatch extends core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.spotlightSet = null;
  }

  /**
   * Commits the spotlight set for rendering
   * @param {String} technique - technique name
   */
  Commit(technique) {
    this.spotlightSet.RenderCones(technique);
    this.spotlightSet.RenderGlow(technique);
  }

}
/**
 * Spotlight
 * TODO: Identify if "boosterGainInfluence" is deprecated
 * @ccp EveSpotlightSetItem
 *
 * @property {String} name                  - The spotlight's name
 * @property {mat4} transform               - The spotlight's transform
 * @property {vec4} coneColor               - Colour of the spotlight's cone
 * @property {vec4} spriteColor             - Colour of the spotlight's sprite texture
 * @property {vec4} flareColor              - Colour of the spotlight's flare
 * @property {vec4} spriteScale             - The size of the spotlight
 * @property {Number} boosterGainInfluence  - If true, the spotlight can change size on booster gain
 * @property {Number} boneIndex             - The spotlight's bone index
 * @property {Number} groupIndex            - The sof faction group that the spotlight belongs to
 * @property {Number} coneIntensity         - Scales the spotlight's cone colour, set by an object's sof Faction
 * @property {Number} spriteIntensity       - Scales the spotlight's sprite colour, set by an object's sof Faction
 * @property {Number} flareIntensity        - Scales the spotlight's flare colour, set by an object's sof Faction
 */

class EveSpotlightSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.coneColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.flareColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.spriteColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.spriteScale = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.boosterGainInfluence = 0;
    this.boneIndex = 0;
    this.display = true;
    this.groupIndex = -1;
    this.coneIntensity = 0;
    this.spriteIntensity = 0;
    this.flareIntensity = 0;
  }

  // faction intensity

  /**
   * Creates a spotlight set item from an object
   * @param {*} [opt={}
   * @returns {EveSpotlightSetItem}
   */
  static from(opt = {}) {
    const item = new this();
    global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(item, opt, ["name", "display", "boosterGainInfluence", "boneIndex", "groupIndex", "coneIntensity", "spriteIntensity", "flareIntensity", "transform", "coneColor", "spriteColor", "flareColor", "spriteScale"]);
    return item;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["coneColor", r.color], ["flareColor", r.color], ["name", r.string], ["spriteColor", r.color], ["spriteScale", r.vector3], ["transform", r.matrix]];
  }

}
/**
 * Spotlight set
 * Todo: Implement "intensity"
 * @ccp EveSpotlightSet
 *
 * @property {String} name                                - The spotlight set's name
 * @property {Tw2Effect} coneEffect                       - The spotlight set's cone effect
 * @property {Tw2Effect} glowEffect                       - The spotlight set's glow effect
 * @property {Number} intensity                           - The spotlight set's intensity
 * @property {Array.<EveSpotlightSetItem>} spotlightItems - The spotlight set's children
 * @property {WebGLBuffer} _coneVertexBuffer              - Vertex buffer for the spotlight set's cone vertices
 * @property {WebGLBuffer} _spriteVertexBuffer            - Vertex buffer for the spotlight set's sprite/glow vertices
 * @property {WebGLBuffer} _indexBuffer                   - Index buffer for the spotlight set
 * @property {Tw2VertexDeclaration} _decl                 - The spotlight set's vertex declarations
 */

class EveSpotlightSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.coneEffect = null;
    this.glowEffect = null;
    this.intensity = 1;
    this._coneVertexBuffer = null;
    this._spriteVertexBuffer = null;
    this._indexBuffer = null;
    this._decl = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"].from(EveSpotlightSet.vertexDeclarations);
  }

  /**
   * Alias for this.items
   * @returns {Array}
   */
  get spotlightItems() {
    return this.items;
  }
  /**
   * Alias for this.items
   * @param {Array} arr
   */


  set spotlightItems(arr) {
    this.items = arr;
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.coneEffect) this.coneEffect.GetResources(out);
    if (this.glowEffect) this.glowEffect.GetResources(out);
    return out;
  }
  /**
   * Unloads the spotlight set's buffers
   * @param {Boolean} [skipEvent]
   */


  Unload(skipEvent) {
    if (this._coneVertexBuffer) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._coneVertexBuffer);
      this._coneVertexBuffer = null;
    }

    if (this._spriteVertexBuffer) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._spriteVertexBuffer);
      this._spriteVertexBuffer = null;
    }

    if (this._indexBuffer) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._indexBuffer);
      this._indexBuffer = null;
    }

    super.Unload(skipEvent);
  }
  /**
   * Rebuilds the spotlight set's buffers
   */


  Rebuild() {
    this.Unload(true);
    this.RebuildItems();
    this._dirty = false;
    const itemCount = this._visibleItems.length;

    if (!itemCount) {
      super.Rebuild();
      return;
    }

    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          vertCount = 4,
          coneQuadCount = 4,
          coneVertexCount = itemCount * coneQuadCount * vertCount,
          vertexSize = 22,
          coneIndices = [1, 0, 2, 3],
          coneArray = new Float32Array(coneVertexCount * vertexSize);

    for (let i = 0; i < itemCount; ++i) {
      const item = this._visibleItems[i];

      for (let q = 0; q < coneQuadCount; ++q) {
        for (let v = 0; v < vertCount; ++v) {
          const offset = (i * coneQuadCount * vertCount + vertCount * q + v) * vertexSize;
          coneArray[offset] = item.coneColor[0] * item.coneIntensity * this.intensity;
          coneArray[offset + 1] = item.coneColor[1] * item.coneIntensity * this.intensity;
          coneArray[offset + 2] = item.coneColor[2] * item.coneIntensity * this.intensity;
          coneArray[offset + 3] = item.coneColor[3];
          coneArray[offset + 4] = item.transform[0];
          coneArray[offset + 5] = item.transform[4];
          coneArray[offset + 6] = item.transform[8];
          coneArray[offset + 7] = item.transform[12];
          coneArray[offset + 8] = item.transform[1];
          coneArray[offset + 9] = item.transform[5];
          coneArray[offset + 10] = item.transform[9];
          coneArray[offset + 11] = item.transform[13];
          coneArray[offset + 12] = item.transform[2];
          coneArray[offset + 13] = item.transform[6];
          coneArray[offset + 14] = item.transform[10];
          coneArray[offset + 15] = item.transform[14];
          coneArray[offset + 16] = 1;
          coneArray[offset + 17] = 1;
          coneArray[offset + 18] = 1;
          coneArray[offset + 19] = q * vertCount + coneIndices[v];
          coneArray[offset + 20] = item.boneIndex;
          coneArray[offset + 21] = item.boosterGainInfluence ? 255 : 0;
        }
      }
    }

    this._coneVertexBuffer = d.gl.createBuffer();
    d.gl.bindBuffer(d.gl.ARRAY_BUFFER, this._coneVertexBuffer);
    d.gl.bufferData(d.gl.ARRAY_BUFFER, coneArray, d.gl.STATIC_DRAW);
    this._coneVertexBuffer.count = itemCount * coneQuadCount * 6;
    const spriteQuadCount = 2,
          spriteVertexCount = itemCount * spriteQuadCount * vertCount,
          spriteArray = new Float32Array(spriteVertexCount * vertexSize),
          spriteIndexes = [1, 0, 2, 3];

    for (let i = 0; i < itemCount; ++i) {
      const item = this._visibleItems[i];

      for (let q = 0; q < spriteQuadCount; ++q) {
        for (let v = 0; v < vertCount; ++v) {
          const offset = (i * spriteQuadCount * vertCount + vertCount * q + v) * vertexSize;

          if (q % 2 === 0) {
            spriteArray[offset] = item.spriteColor[0] * item.spriteIntensity * this.intensity;
            spriteArray[offset + 1] = item.spriteColor[1] * item.spriteIntensity * this.intensity;
            spriteArray[offset + 2] = item.spriteColor[2] * item.spriteIntensity * this.intensity;
            spriteArray[offset + 3] = item.spriteColor[3];
            spriteArray[offset + 16] = item.spriteScale[0];
            spriteArray[offset + 17] = 1;
            spriteArray[offset + 18] = 1;
          } else {
            spriteArray[offset] = item.flareColor[0] * item.flareIntensity * this.intensity;
            spriteArray[offset + 1] = item.flareColor[1] * item.flareIntensity * this.intensity;
            spriteArray[offset + 2] = item.flareColor[2] * item.flareIntensity * this.intensity;
            spriteArray[offset + 3] = item.flareColor[3];
            spriteArray[offset + 16] = 1;
            spriteArray[offset + 17] = item.spriteScale[1];
            spriteArray[offset + 18] = item.spriteScale[2];
          }

          spriteArray[offset + 4] = item.transform[0];
          spriteArray[offset + 5] = item.transform[4];
          spriteArray[offset + 6] = item.transform[8];
          spriteArray[offset + 7] = item.transform[12];
          spriteArray[offset + 8] = item.transform[1];
          spriteArray[offset + 9] = item.transform[5];
          spriteArray[offset + 10] = item.transform[9];
          spriteArray[offset + 11] = item.transform[13];
          spriteArray[offset + 12] = item.transform[2];
          spriteArray[offset + 13] = item.transform[6];
          spriteArray[offset + 14] = item.transform[10];
          spriteArray[offset + 15] = item.transform[14];
          spriteArray[offset + 19] = q * vertCount + spriteIndexes[v];
          spriteArray[offset + 20] = item.boneIndex;
          spriteArray[offset + 21] = item.boosterGainInfluence ? 255 : 0;
        }
      }
    }

    this._spriteVertexBuffer = d.gl.createBuffer();
    d.gl.bindBuffer(d.gl.ARRAY_BUFFER, this._spriteVertexBuffer);
    d.gl.bufferData(d.gl.ARRAY_BUFFER, spriteArray, d.gl.STATIC_DRAW);
    this._spriteVertexBuffer.count = itemCount * spriteQuadCount * 6;
    const indexes = new Uint16Array(itemCount * coneQuadCount * 6);

    for (let i = 0; i < itemCount * coneQuadCount; ++i) {
      const offset = i * 6,
            vtxOffset = i * 4;
      indexes[offset] = vtxOffset;
      indexes[offset + 1] = vtxOffset + 1;
      indexes[offset + 2] = vtxOffset + 2;
      indexes[offset + 3] = vtxOffset + 2;
      indexes[offset + 4] = vtxOffset + 3;
      indexes[offset + 5] = vtxOffset;
    }

    this._indexBuffer = d.gl.createBuffer();
    d.gl.bindBuffer(d.gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);
    d.gl.bufferData(d.gl.ELEMENT_ARRAY_BUFFER, indexes, d.gl.STATIC_DRAW);
    d.gl.bindBuffer(d.gl.ELEMENT_ARRAY_BUFFER, null);
    this._indexBuffer.count = itemCount;
    super.Rebuild();
  }
  /**
   * Gets the spotlight set's render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (this.display && mode === global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE && this._indexBuffer && this._indexBuffer.count) {
      const batch = new EveSpotlightSetBatch();
      batch.renderMode = global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE;
      batch.spotlightSet = this;
      batch.perObjectData = perObjectData;
      accumulator.Commit(batch);
    }
  }
  /**
   * Renders the spotlight set's cone effect
   * @param {String} technique - technique name
   * @returns {Boolean}
   */


  RenderCones(technique) {
    return EveSpotlightSet.Render(this, this.coneEffect, technique, this._coneVertexBuffer);
  }
  /**
   * Renders the spotlight set's glow effect
   * @param {String} technique - technique name
   * @returns {Boolean}
   */


  RenderGlow(technique) {
    return EveSpotlightSet.Render(this, this.glowEffect, technique, this._spriteVertexBuffer);
  }
  /**
   * Internal render function
   * @param {EveSpotlightSet} spotlightSet
   * @param {Tw2Effect} effect   - The Tw2Effect to render
   * @param {String} technique - technique name
   * @param {WebGLBuffer} buffer - A webgl buffer (ie. cone or glow buffer)
   * @returns {Boolean}
   * @private
   */


  static Render(spotlightSet, effect, technique, buffer) {
    if (!effect || !effect.IsGood() || !buffer || !spotlightSet._indexBuffer) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          stride = 22 * 4;
    d.SetStandardStates(d.RM_ADDITIVE);
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, spotlightSet._indexBuffer);

    for (let pass = 0; pass < effect.GetPassCount(technique); ++pass) {
      effect.ApplyPass(technique, pass);
      if (!spotlightSet._decl.SetDeclaration(d, effect.GetPassInput(technique, pass), stride)) return false;
      d.ApplyShadowState();
      d.gl.drawElements(gl.TRIANGLES, buffer["count"], gl.UNSIGNED_SHORT, 0);
    }

    return true;
  }
  /**
   * Creates an eve spotlight set from a plain object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {EveSpotlightSet}
   */


  static from(values, options) {
    const item = new EveSpotlightSet();

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item, values, ["name", "display", "intensity"]);

      if (values.coneEffect) {
        if (Object(global_util__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(values.coneEffect)) {
          item.coneEffect = values.coneEffect;
        } else {
          item.coneEffect = core_mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2Effect"].from(values.coneEffect);
        }
      }

      if (values.glowEffect) {
        if (Object(global_util__WEBPACK_IMPORTED_MODULE_3__["isFunction"])(values.glowEffect)) {
          item.glowEffect = values.glowEffect;
        } else {
          item.glowEffect = core_mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2Effect"].from(values.glowEffect);
        }
      }

      if (values.items) {
        for (let i = 0; i < values.items.length; i++) {
          item.CreateItem(values.items[i]);
        }
      }
    }

    if (!options || !options.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * Spotlight set item constructor
   * @type {EveSpotlightSetItem}usageIndex:
   elements:    */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["coneEffect", r.object], ["glowEffect", r.object], ["intensity", r.float], ["name", r.string], ["spotlightItems", r.array]];
  }

}
EveSpotlightSet.Item = EveSpotlightSetItem;
EveSpotlightSet.vertexDeclarations = [{
  usage: "COLOR",
  usageIndex: 0,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 0,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 1,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 2,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 3,
  elements: 3
}, {
  usage: "TEXCOORD",
  usageIndex: 4,
  elements: 3
}];

/***/ }),

/***/ "./eve/item/EveSpriteLineSet.js":
/*!**************************************!*\
  !*** ./eve/item/EveSpriteLineSet.js ***!
  \**************************************/
/*! exports provided: EveSpriteLineSetBatch, EveSpriteLineSetItem, EveSpriteLineSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSetBatch", function() { return EveSpriteLineSetBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSetItem", function() { return EveSpriteLineSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSet", function() { return EveSpriteLineSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");


/**
 * Eve sprite line set render batch
 *
 * @property {EveSpriteLineSet} spriteLineSet
 */

class EveSpriteLineSetBatch {
  constructor() {
    this.spriteLineSet = null;
  }

  /**
   * Commits the batch for rendering
   * @param {String} technique
   */
  Commit(technique) {
    this.spriteLineSet.Render(technique);
  }

}
/**
 * Sprite line
 * Todo: Is this actually a class?
 * @ccp ???
 *
 * @property {Number} blinkPhase      -
 * @property {Number} blinkPhaseShift -
 * @property {Number} blinkRate       -
 * @property {Number} boneIndex       -
 * @property {Number} colorType       -
 * @property {Number} falloff         -
 * @property {Number} intensity       -
 * @property {Boolean} isCircle       -
 * @property {Number} maxScale        -
 * @property {Number} minScale        -
 * @property {vec3} position          -
 * @property {quat} rotation          -
 * @property {vec3} scaling           -
 * @property {Number} spacing         -
 * @property {mat4} transform         -
 */

class EveSpriteLineSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_1__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.blinkPhase = 0;
    this.blinkPhaseShift = 0;
    this.blinkRate = 0;
    this.boneIndex = 0;
    this.colorType = 0;
    this.falloff = 0;
    this.intensity = 0;
    this.isCircle = false;
    this.maxScale = 0;
    this.minScale = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.spacing = 0;
    this.display = true;
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._dirty = true;
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.transform, this.rotation, this.position, this.scaling);
    this._dirty = true;
  }

}
/**
 * Sprite line set
 * @TODO: Is this actually a class?
 * @ccp ???
 *
 * @property {Array<EveSpriteLineSetItem>} items
 */

class EveSpriteLineSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_1__["EveObjectSet"] {
  /**
   * Unloads the sprite line set's buffers
   */
  Unload() {} // TODO: Unload

  /**
   * Rebuilds the sprite line set's buffers
   */


  Rebuild() {} // TODO: Rebuild

  /**
   * Gets the sprite line set's render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {} // TODO: GetBatches

  /**
   * Renders the sprite line set
   * @param {String} technique - technique name
   * @returns {Boolean}        - true if rendered
   */


  Render(technique) {// TODO: Render
  }

}

/***/ }),

/***/ "./eve/item/EveSpriteSet.js":
/*!**********************************!*\
  !*** ./eve/item/EveSpriteSet.js ***!
  \**********************************/
/*! exports provided: EveSpriteSetBatch, EveSpriteSetItem, EveSpriteSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSetBatch", function() { return EveSpriteSetBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSetItem", function() { return EveSpriteSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSet", function() { return EveSpriteSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core_mesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core/mesh */ "./core/mesh/index.js");





/**
 * Sprite set render batch
 * @ccp N/A
 *
 * @property {Boolean} boosterGlow
 * @property {EveSpriteSet} spriteSet
 * @property {mat4} world
 * @property {Number}
 * @property {Number}
 */

class EveSpriteSetBatch extends core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.boosterGlow = false;
    this.spriteSet = null;
    this.world = null;
    this.boosterGain = 0;
    this.warpIntensity = 0;
  }

  /**
   * Commits the sprite set
   * @param {String} technique - technique name
   */
  Commit(technique) {
    if (this.boosterGlow) {
      this.spriteSet.RenderBoosterGlow(technique, this.world, this.boosterGain, this.warpIntensity);
    } else {
      this.spriteSet.Render(technique, this.world, this.perObjectData);
    }
  }

}
/**
 * Sprite
 * @ccp EveSpriteSetItem
 *
 * @property {String} name       -
 * @property {Number} blinkPhase -
 * @property {Number} blinkRate  -
 * @property {Number} boneIndex  -
 * @property {vec4} color        -
 * @property {Number} falloff    -
 * @property {Number} maxScale   -
 * @property {Number} minScale   -
 * @property {vec3} position     -
 * @property {vec4} warpColor    -
 */

class EveSpriteSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.blinkPhase = 0;
    this.blinkRate = 0;
    this.boneIndex = 0;
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.falloff = 0;
    this.maxScale = 0;
    this.minScale = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.warpColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.groupIndex = -1;
    this.groupName = "";
  }

  /**
   * Creates a sprite set item from an object
   * @param {*} [values]
   * @returns {EveSpriteSetItem}
   */
  static from(values) {
    const item = new this();

    if (values) {
      global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(item, values, ["name", "display", "blinkRate", "blinkPhase", "minScale", "maxScale", "falloff", "boneIndex", "groupIndex", "position", "color", "warpColor", "groupName"]);
    }

    return item;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["blinkPhase", r.float], ["blinkRate", r.float], ["boneIndex", r.uint], ["color", r.color], ["falloff", r.float], ["maxScale", r.float], ["minScale", r.float], ["name", r.string], ["position", r.vector3], ["warpColor", r.color]];
  }

}
/**
 * Sprite set
 * @ccp EveSpriteSet
 *
 * @property {String} name                      - The sprite set's name
 * @property {Tw2Effect} effect                 - The sprite set's effect
 * @property {Number} intensity                 - The sprite set's intensity
 * @property {Boolean} skinned                  - Use bone transforms (when useQuads is true)
 * @property {?Boolean} useQuads                - Use quad rendering (CPU transform)
 * @property {Number} _time                     - The sprite set's internal time
 * @property {WebGLBuffer} _vertexBuffer        - The sprite set's vertex buffer
 * @property {WebGLBuffer} _indexBuffer         - The sprite set's index buffer
 * @property {Tw2VertexDeclaration} _decl       - The sprite set's vertex declarations
 * @property {Tw2VertexDeclaration} _vdecl      -
 */

class EveSpriteSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.effect = null;
    this.intensity = 0;
    this.skinned = false;
    this.useQuads = null;
    this._time = 0;
    this._vertexBuffer = null;
    this._indexBuffer = null;
    this._instanceBuffer = null;
    this._decl = null;
    this._vdecl = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"].from([{
      usage: "TEXCOORD",
      usageType: 5,
      elements: 1
    }]);
    this._worldSpriteScale = 1;
  }

  /**
   * Alias for this.items
   * @returns {Array}
   */
  get sprites() {
    return this.items;
  }
  /**
   * Alias for this.items
   * @param {Array} arr
   */


  set sprites(arr) {
    this.items = arr;
  }
  /**
   * Initializes the object
   */


  Initialize() {
    this.UseQuads(!!this.useQuads);
    this.Rebuild();
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.effect) this.effect.GetResources(out);
    return out;
  }
  /**
   * Use instanced rendering or 'quad' rendering
   * @param {Boolean} useQuads - Use quad rendering (CPU transform)
   */


  UseQuads(useQuads) {
    this.useQuads = useQuads;
    this._decl = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"].from(useQuads ? EveSpriteSet.quadVertexDeclarations : EveSpriteSet.vertexDeclarations);
    this._dirty = true;
  }
  /**
   * Per frame update
   * @param {Number} dt - Delta time
   * @param {Number} [worldSpriteScale]
   */


  Update(dt, worldSpriteScale) {
    this._time += dt;

    if (this._worldSpriteScale !== undefined && this._worldSpriteScale !== worldSpriteScale) {
      this._worldSpriteScale = worldSpriteScale;
      this._dirty = true;
    }

    super.Update(dt);
  }
  /**
   * Unloads the sprite set's buffers
   * @param {Boolean} [skipEvent]
   */


  Unload(skipEvent) {
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;

    if (this._vertexBuffer) {
      gl.deleteBuffer(this._vertexBuffer);
      this._vertexBuffer = null;
    } // Standard


    if (this._indexBuffer) {
      gl.deleteBuffer(this._indexBuffer);
      this._indexBuffer = null;
    } // Quad


    if (this._instanceBuffer) {
      gl.deleteBuffer(this._instanceBuffer);
      this._instanceBuffer = null;
    }

    super.Unload(skipEvent);
  }
  /**
   * Rebuilds the sprite set's buffers
   */


  Rebuild() {
    this.RebuildItems();
    this._dirty = false;
    const itemCount = this._visibleItems.length;

    if (!itemCount) {
      super.Rebuild();
      return;
    }

    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;

    if (this.useQuads) {
      this._vertexBuffer = gl.createBuffer();
      gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);
      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 1, 2, 2, 3, 0]), gl.STATIC_DRAW);
      gl.bindBuffer(gl.ARRAY_BUFFER, null);
      this._instanceBuffer = gl.createBuffer();
      return;
    }

    const vertexSize = 13,
          array = new Float32Array(itemCount * 4 * vertexSize);

    for (let i = 0; i < itemCount; ++i) {
      const item = this._visibleItems[i],
            offset = i * 4 * vertexSize;
      array[offset] = 0;
      array[offset + vertexSize] = 1;
      array[offset + 2 * vertexSize] = 2;
      array[offset + 3 * vertexSize] = 3;

      for (let j = 0; j < 4; ++j) {
        const vtxOffset = offset + j * vertexSize;
        array[vtxOffset + 1] = item.boneIndex;
        array[vtxOffset + 2] = item.position[0];
        array[vtxOffset + 3] = item.position[1];
        array[vtxOffset + 4] = item.position[2];
        array[vtxOffset + 5] = item.color[0];
        array[vtxOffset + 6] = item.color[1];
        array[vtxOffset + 7] = item.color[2];
        array[vtxOffset + 8] = item.blinkPhase;
        array[vtxOffset + 9] = item.blinkRate;
        array[vtxOffset + 10] = item.minScale * this._worldSpriteScale;
        array[vtxOffset + 11] = item.maxScale * this._worldSpriteScale;
        array[vtxOffset + 12] = item.falloff;
      }
    }

    this._vertexBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);
    gl.bindBuffer(gl.ARRAY_BUFFER, null);
    const indexes = new Uint16Array(itemCount * 6);

    for (let i = 0; i < itemCount; ++i) {
      const offset = i * 6,
            vtxOffset = i * 4;
      indexes[offset] = vtxOffset;
      indexes[offset + 1] = vtxOffset + 2;
      indexes[offset + 2] = vtxOffset + 1;
      indexes[offset + 3] = vtxOffset;
      indexes[offset + 4] = vtxOffset + 3;
      indexes[offset + 5] = vtxOffset + 2;
    }

    this._indexBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);
    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexes, gl.STATIC_DRAW);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);
    this._indexBuffer.count = itemCount * 6;
    super.Rebuild();
  }
  /**
   * Gets render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   * @param {mat4} world
   */


  GetBatches(mode, accumulator, perObjectData, world) {
    if (this.display && mode === global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE && this._vertexBuffer && this._visibleItems.length) {
      const batch = new EveSpriteSetBatch();
      batch.world = world;
      batch.renderMode = global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE;
      batch.spriteSet = this;
      batch.perObjectData = perObjectData;
      accumulator.Commit(batch);
    }
  }
  /**
   * Gets render batches for booster glows
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   * @param {mat4} world
   * @param {Number} boosterGain
   * @param {Number} warpIntensity
   */


  GetBoosterGlowBatches(mode, accumulator, perObjectData, world, boosterGain, warpIntensity) {
    if (this.display && mode === global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE && this._vertexBuffer && this._visibleItems.length) {
      const batch = new EveSpriteSetBatch();
      batch.boosterGlow = true;
      batch.world = world;
      batch.boosterGain = boosterGain;
      batch.warpIntensity = warpIntensity;
      batch.renderMode = global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE;
      batch.spriteSet = this;
      batch.perObjectData = perObjectData;
      accumulator.Commit(batch);
    }
  }
  /**
   * Renders the sprite set
   * @param {String} technique - technique name
   * @param {mat4} world
   * @param {Tw2PerObjectData} perObjectData
   * @returns {Boolean}
   */


  Render(technique, world, perObjectData) {
    if (this.useQuads) {
      return this.RenderQuads(technique, world, perObjectData);
    }

    if (!this.effect || !this.effect.IsGood() || !this._indexBuffer || !this._vertexBuffer) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl;
    d.SetStandardStates(d.RM_ADDITIVE);
    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);

    for (let pass = 0; pass < this.effect.GetPassCount(technique); ++pass) {
      this.effect.ApplyPass(technique, pass);
      if (!this._decl.SetDeclaration(d, this.effect.GetPassInput(technique, pass), 52)) return false;
      d.ApplyShadowState();
      gl.drawElements(gl.TRIANGLES, this._indexBuffer.count, gl.UNSIGNED_SHORT, 0);
    }

    return true;
  }
  /**
   * Renders the sprite set as booster glow
   * @param {String} technique - technique name
   * @param {mat4} world
   * @param {Number} boosterGain
   * @param {Number} warpIntensity
   * @returns {Boolean}
   */


  RenderBoosterGlow(technique, world, boosterGain, warpIntensity) {
    if (!this.effect || !this.effect.IsGood() || !this._instanceBuffer || !this._vertexBuffer) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          pos = _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"].global.vec3_0,
          itemCount = this._visibleItems.length,
          array = new Float32Array(17 * itemCount);
    d.SetStandardStates(d.RM_ADDITIVE);
    let index = 0;

    for (let i = 0; i < itemCount; ++i) {
      const item = this._visibleItems[i];
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(pos, item.position, world);
      array[index++] = pos[0];
      array[index++] = pos[1];
      array[index++] = pos[2];
      array[index++] = world[8];
      array[index++] = item.blinkPhase;
      array[index++] = world[9];
      array[index++] = item.minScale * this._worldSpriteScale;
      array[index++] = item.maxScale * this._worldSpriteScale;
      array[index++] = world[10];
      array[index++] = item.color[0];
      array[index++] = item.color[1];
      array[index++] = item.color[2];
      array[index++] = boosterGain;
      array[index++] = item.warpColor[0];
      array[index++] = item.warpColor[1];
      array[index++] = item.warpColor[2];
      array[index++] = warpIntensity;
    }

    gl.bindBuffer(gl.ARRAY_BUFFER, this._instanceBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);

    for (let pass = 0; pass < this.effect.GetPassCount(technique); ++pass) {
      this.effect.ApplyPass(technique, pass);
      const passInput = this.effect.GetPassInput(technique, pass);
      gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);

      this._vdecl.SetPartialDeclaration(d, passInput, 4);

      gl.bindBuffer(gl.ARRAY_BUFFER, this._instanceBuffer);

      const resetData = this._decl.SetPartialDeclaration(d, passInput, 17 * 4, 0, 1);

      d.ApplyShadowState();
      gl.drawArraysInstanced(gl.TRIANGLES, 0, 6, itemCount);

      this._decl.ResetInstanceDivisors(d, resetData);
    }

    return true;
  }
  /**
   * Renders the sprite set with pre-transformed quads
   * @param {String} technique - technique name
   * @param {mat4} world
   * @param {Tw2PerObjectData} perObjectData
   * @returns {Boolean}
   */


  RenderQuads(technique, world, perObjectData) {
    if (!this.effect || !this.effect.IsGood() || !this._instanceBuffer || !this._vertexBuffer) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl,
          itemCount = this._visibleItems.length,
          array = new Float32Array(17 * itemCount),
          pos = _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"].global.vec3_0,
          bones = perObjectData.vs.Get("JointMat");
    d.SetStandardStates(d.RM_ADDITIVE);
    let index = 0;

    for (let i = 0; i < itemCount; ++i) {
      const item = this._visibleItems[i];

      if (this.skinned) {
        const offset = item.boneIndex * 12;
        pos[0] = bones[offset] * item.position[0] + bones[offset + 1] * item.position[1] + bones[offset + 2] * item.position[2] + bones[offset + 3];
        pos[1] = bones[offset + 4] * item.position[0] + bones[offset + 5] * item.position[1] + bones[offset + 6] * item.position[2] + bones[offset + 7];
        pos[2] = bones[offset + 8] * item.position[0] + bones[offset + 9] * item.position[1] + bones[offset + 10] * item.position[2] + bones[offset + 11];
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(pos, pos, world);
      } else {
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(pos, item.position, world);
      }

      array[index++] = pos[0];
      array[index++] = pos[1];
      array[index++] = pos[2];
      array[index++] = 1;
      array[index++] = item.blinkPhase;
      array[index++] = item.blinkRate;
      array[index++] = item.minScale * this._worldSpriteScale;
      array[index++] = item.maxScale * this._worldSpriteScale;
      array[index++] = item.falloff;
      array[index++] = item.color[0];
      array[index++] = item.color[1];
      array[index++] = item.color[2];
      array[index++] = 1;
      array[index++] = item.warpColor[0];
      array[index++] = item.warpColor[1];
      array[index++] = item.warpColor[2];
      array[index++] = 1;
    }

    gl.bindBuffer(gl.ARRAY_BUFFER, this._instanceBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);

    for (let pass = 0; pass < this.effect.GetPassCount(technique); ++pass) {
      this.effect.ApplyPass(technique, pass);
      const passInput = this.effect.GetPassInput(technique, pass);
      gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);

      this._vdecl.SetPartialDeclaration(d, passInput, 4);

      gl.bindBuffer(gl.ARRAY_BUFFER, this._instanceBuffer);

      const resetData = this._decl.SetPartialDeclaration(d, passInput, 17 * 4, 0, 1);

      d.ApplyShadowState();
      gl.drawArraysInstanced(gl.TRIANGLES, 0, 6, itemCount);

      this._decl.ResetInstanceDivisors(d, resetData);
    }

    return true;
  }
  /**
   * Creates an eve sprite set from a plain object
   * @param {*} values
   * @param {*} [options]
   * @returns {EveSpriteSet}
   */


  static from(values, options) {
    const item = new EveSpriteSet();

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item, values, ["name", "intensity", "skinned", "useQuads"]);

      if (values.effect) {
        item.effect = core_mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2Effect"].from(values.effect);
      }

      if (values.items) {
        for (let i = 0; i < values.items.length; i++) {
          item.CreateItem(values.items[i]);
        }
      }
    }

    if (!options || !options.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * The sprite set's item constructor
   * @type {EveSpriteSetItem}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["effect", r.object], ["name", r.string], ["intensity", r.float], ["skinned", r.boolean], ["sprites", r.array]];
  }

}
EveSpriteSet.Item = EveSpriteSetItem;
EveSpriteSet.vertexDeclarations = [{
  usage: "TEXCOORD",
  usageIndex: 5,
  elements: 2
}, {
  usage: "POSITION",
  usageIndex: 0,
  elements: 3
}, {
  usage: "COLOR",
  usageIndex: 0,
  elements: 3
}, {
  usage: "TEXCOORD",
  usageIndex: 0,
  elements: 1
}, {
  usage: "TEXCOORD",
  usageIndex: 1,
  elements: 1
}, {
  usage: "TEXCOORD",
  usageIndex: 2,
  elements: 1
}, {
  usage: "TEXCOORD",
  usageIndex: 3,
  elements: 1
}, {
  usage: "TEXCOORD",
  usageIndex: 4,
  elements: 1
}];
EveSpriteSet.quadVertexDeclarations = [{
  usage: "POSITION",
  usageIndex: 0,
  elements: 3
}, {
  usage: "TEXCOORD",
  usageIndex: 0,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 1,
  elements: 2
}, {
  usage: "COLOR",
  usageIndex: 0,
  elements: 4
}, {
  usage: "COLOR",
  usageIndex: 1,
  elements: 4
}];

/***/ }),

/***/ "./eve/item/EveTrailsSet.js":
/*!**********************************!*\
  !*** ./eve/item/EveTrailsSet.js ***!
  \**********************************/
/*! exports provided: EveTrailSetRenderBatch, EveTrailsSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveTrailSetRenderBatch", function() { return EveTrailSetRenderBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveTrailsSet", function() { return EveTrailsSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core_batch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core/batch */ "./core/batch/index.js");


/**
 * EveTrailSetRenderBatch
 * TODO: Implement (Probably a forwarding render batch or geometry render batch)
 * @ccp N/A
 *
 * @property {EveTrailsSet} trailsSet
 */

class EveTrailSetRenderBatch extends core_batch__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.trailsSet = null;
  }

  /**
   * Commits the batch
   * @param {String} technique - technique name
   */
  Commit(technique) {
    this.boosters.Render(technique);
  }

}
/**
 * Trails set
 * Todo: Implement
 * @ccp EveTrailSet
 *
 * @property {Tw2Effect} effect           -
 * @property {String} geometryResPath     -
 * @property {Boolean} display            -
 * @property {Tw2GeometryRes} geometryRes -
 */

class EveTrailsSet extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.effect = null;
    this.geometryResPath = "";
    this.display = true;
    this.geometryRes = null;
  }

  /**
   * Initializes the object
   */
  Initialize() {
    if (this.geometryResPath) {
      this.geometryRes = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.geometryResPath, res => this.OnResPrepared(res));
    }
  }
  /**
   * Rebuilds cached data
   * @param {Tw2GeometryRes} res
   */


  OnResPrepared(res) {} //TODO: OnResPrepared

  /**
   * Gets resources
   * @param {Array} [out=[]]
   * @returns {Array<Tw2Resource>}
   */


  GetResources(out = []) {
    if (this.effect) {
      this.effect.GetResources(out);
    }

    if (this.geometryRes && !out.includes(this.geometryRes)) {
      out.push(this.geometryRes);
    }

    return out;
  }
  /**
   * Per frame update
   * @param {Number} dt - delta time
   */


  Update(dt) {} //TODO: Implement

  /**
   * Unloads the object's buffers
   */


  Unload() {} // TODO: Unload buffers

  /**
   * Rebuilds the haze set's buffers
   */


  Rebuild() {} // TODO: Rebuild buffers

  /**
   * Gets the plane set's render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {} // TODO: GetBatches

  /**
   * Renders the haze set
   * @param {String} technique - technique name
   */


  Render(technique) {} // TODO: Render

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["effect", r.object], ["geometryResPath", r.path]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveTrailsSet.__isStaging = 4;

/***/ }),

/***/ "./eve/item/EveTurretSet.js":
/*!**********************************!*\
  !*** ./eve/item/EveTurretSet.js ***!
  \**********************************/
/*! exports provided: EveTurretSetItem, EveTurretSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveTurretSetItem", function() { return EveTurretSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveTurretSet", function() { return EveTurretSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");



/**
 * EveTurretSetItem
 * @ccp N/A
 *
 * @property {Boolean} isJoint              - Identifies if the turret is on a joint
 * @property {?String} locatorName          - The item's locator name
 * @property {Boolean} updateFromLocator    - Allows the turret to be updated from a locator's transforms
 * @property {Boolean} canFireWhenHidden    - Enables firing effects when hidden
 * @property {vec3} position                - The turret's position
 * @property {quat} rotation                - The turret's rotation
 * @property {?Tw2Bone} _bone               - The bone the turret is on
 * @property {mat4} _localTransform         - The turret's local transform
 * @property {quat} _localRotation          - the turret's local rotation
 */

class EveTurretSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.locatorName = null;
    this.updateFromLocator = false;
    this.canFireWhenHidden = false;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this._bone = null;
    this._localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._localRotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
  }

  /**
   * Fires on value changes
   */
  OnValueChanged() {
    this._dirty = true;
    this.UpdateTransforms();
  }
  /**
   * Updates the turret's transforms
   */


  UpdateTransforms() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslation(this._localTransform, this.rotation, this.position);

    if (this._bone) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this._localTransform, this._bone.offsetTransform, this._localTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation(this._localRotation, this._localTransform);
    } else {
      global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(this._localRotation, this.rotation);
    }
  }
  /**
   * Creates a turret item from an object
   * @param {*} [opt={}]
   * @returns {EveTurretSetItem}
   */


  static from(opt = {}) {
    const item = new this();
    global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(item, opt, ["name", "display", "locatorName", "updateFromLocator", "position", "rotation", "canFireWhenHidden"]);
    item.UpdateValues();
    return item;
  }

}
/**
 * EveTurretSet
 * @ccp EveTurretSet
 * TODO: Implement property "bottomClipHeight",
 * TODO: Implement property "chooseRandomLocator",
 * TODO: Implement property "cyclingFireGroupCount",
 * TODO: Implement property "impactSize",
 * TODO: Implement property "laserMissBehaviour",
 * TODO: Implement property "maxCyclingFirePos",
 * TODO: Implement property "projectileMissBehaviour",
 * TODO: Implement property "sysBoneHeight",
 * TODO: Implement property "sysBonePitch01Factor",
 * TODO: Implement property "sysBonePitch02Factor",
 * TODO: Implement property "sysBonePitchFactor",
 * TODO: Implement property "sysBonePitchMax",
 * TODO: Implement property "sysBonePitchMin",
 * TODO: Implement property "sysBonePitchOffset",
 * TODO: Implement property "updatePitchPose",
 * TODO: Implement property "useDynamicBounds",
 * TODO: Implement property "useRandomFiringDelay"
 *
 * @property {Number} bottomClipHeight                  -
 * @property {vec4} boundingSphere                      -
 * @property {Boolean} chooseRandomLocator              -
 * @property {Number} cyclingFireGroupCount             -
 * @property {String} firingEffectResPath               -
 * @property {String} geometryResPath                   -
 * @property {Number} impactSize                        -
 * @property {Boolean} laserMissBehaviour               -
 * @property {String} locatorName                       -
 * @property {Number} maxCyclingFirePos                 -
 * @property {Boolean} projectileMissBehaviour          -
 * @property {Number} sysBoneHeight                     -
 * @property {Number} sysBonePitch01Factor              -
 * @property {Number} sysBonePitch02Factor              -
 * @property {Number} sysBonePitchFactor                -
 * @property {Number} sysBonePitchMax                   -
 * @property {Number} sysBonePitchMin                   -
 * @property {Number} sysBonePitchOffset                -
 * @property {Tw2Effect} turretEffect                   -
 * @property {Boolean} updatePitchPose                  -
 * @property {Boolean} useDynamicBounds                 -
 * @property {Boolean} useRandomFiringDelay             -
 * @property {Tw2AnimationController} _activeAnimation  -
 * @property {Tw2GeometryRes} geometryResource          -
 * @property {?Function} _fireCallback                   -
 * @property {?Function} _fireCallbackPending            -
 * @property {Boolean} _hasCyclingFiringPos              -
 * @property {Tw2AnimationController} _inactiveAnimation -
 * @property {mat4} _parentTransform                        -
 * @property {Number} _state                             -
 * @property {vec3} _targetPosition                      -
 * @property {Object} visible                           -
 * @property {Boolean} visible.turrets                  -
 * @property {Boolean} visible.firingEffects            -
 * @property {Number} _activeTurret                     -
 * @property {Number} _currentCyclingFiresPos           -
 * @property {Boolean} _locatorDirty           -
 * @property {Tw2PerObjectData} _perObjectDataActive    -
 * @property {Tw2PerObjectData} _perObjectDataInactive  -
 * @property {Number} _recheckTimeLeft                  -
 */

class EveTurretSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  constructor(...args) {
    super(...args);
    this.bottomClipHeight = 0;
    this.boundingSphere = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.chooseRandomLocator = false;
    this.cyclingFireGroupCount = 0;
    this.firingEffectResPath = "";
    this.geometryResPath = "";
    this.impactSize = 0;
    this.laserMissBehaviour = false;
    this.locatorName = "";
    this.maxCyclingFirePos = 0;
    this.projectileMissBehaviour = false;
    this.sysBoneHeight = 0;
    this.sysBonePitch01Factor = 0;
    this.sysBonePitch02Factor = 0;
    this.sysBonePitchFactor = 0;
    this.sysBonePitchMax = 0;
    this.sysBonePitchMin = 0;
    this.sysBonePitchOffset = 0;
    this.turretEffect = null;
    this.updatePitchPose = false;
    this.useDynamicBounds = false;
    this.useRandomFiringDelay = false;
    this.firingEffect = null;
    this.geometryResource = null;
    this.visible = {
      turrets: true,
      firingEffects: true
    };
    this._activeAnimation = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2AnimationController"]();
    this._activeTurret = -1;
    this._currentCyclingFiresPos = 0;
    this._fireCallback = null;
    this._fireCallbackPending = false;
    this._hasCyclingFiringPos = false;
    this._inactiveAnimation = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2AnimationController"]();
    this._locatorDirty = true;
    this._parentTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._perObjectDataActive = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveTurretSet.perObjectData);
    this._perObjectDataInactive = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveTurretSet.perObjectData);
    this._state = EveTurretSet.State.IDLE;
    this._targetPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._recheckTimeLeft = 0;
  }

  /**
   * Alias for this.items
   * @returns {Array}
   */
  get turrets() {
    return this.items;
  }
  /**
   * Alias for this.items
   * @param {Array} arr
   */


  set turrets(arr) {
    this.items = arr;
  }
  /**
   * Initializes the Turret Set
   */


  Initialize() {
    if (this.turretEffect && this.geometryResPath !== "") {
      this.geometryResource = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.geometryResPath, res => this.OnResPrepared(res));

      this._activeAnimation.SetGeometryResource(this.geometryResource);

      this._inactiveAnimation.SetGeometryResource(this.geometryResource);
    }

    if (this.firingEffectResPath !== "") {
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetObject(this.firingEffectResPath, object => this.firingEffect = object);
    }

    this.Rebuild();
  }
  /**
   * Initializes turret set's firing effect
   */


  InitializeFiringEffect() {
    if (!this.firingEffect) return;

    if (this.geometryResource && this.geometryResource.models.length) {
      const model = this.geometryResource.models[0];

      for (let i = 0; i < this.firingEffect.GetPerMuzzleEffectCount(); ++i) {
        this.firingEffect.SetMuzzleBoneID(i, model.FindBoneByName(EveTurretSet.positionBoneSkeletonNames[i]));
      }
    }
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.turretEffect) this.turretEffect.GetResources(out);
    if (this.firingEffect) this.firingEffect.GetResources(out);

    if (this.geometryResource && !out.includes(this.geometryResource)) {
      out.push(this.geometryResource);
    }

    return out;
  }
  /**
   * Sets a callback which is called when the turret set fires
   * @param {Function} func
   */


  OnTurretFired(func) {
    this._fireCallback = func;
  }
  /**
   * Sets the target position
   * @param {vec3} v
   */


  SetTargetPosition(v) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this._targetPosition, v);
  }
  /**
   * Helper function for finding out what turret should be firing
   * @returns {Number}
   */


  GetClosestTurret() {
    let closestTurret = -1,
        closestAngle = -2;
    const g = EveTurretSet.global,
          nrmToTarget = g.vec3_0,
          nrmUp = g.vec4_0,
          turretPosition = g.vec4_1;

    for (let i = 0; i < this.items.length; ++i) {
      const item = this.items[i];
      if (!item.display && !item.canFireWhenHidden) continue;
      turretPosition[0] = item._localTransform[12];
      turretPosition[1] = item._localTransform[13];
      turretPosition[2] = item._localTransform[14];
      turretPosition[3] = 1;
      global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(turretPosition, turretPosition, this._parentTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(nrmToTarget, this._targetPosition, turretPosition);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(nrmToTarget, nrmToTarget);
      global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(nrmUp, 0, 1, 0, 0);
      global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(nrmUp, nrmUp, item._localTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(nrmUp, nrmUp, this._parentTransform);
      const angle = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(nrmUp, nrmToTarget);

      if (angle > closestAngle) {
        closestTurret = this.items.indexOf(item);
        closestAngle = angle;
      }
    }

    return closestTurret;
  }
  /**
   * Animation helper function for deactivating a turret set
   */


  EnterStateDeactive() {
    if (this._state === EveTurretSet.State.INACTIVE || this._state === EveTurretSet.State.PACKING) return;

    if (this.turretEffect) {
      this._activeAnimation.StopAllAnimations();

      this._inactiveAnimation.StopAllAnimations();

      this._activeAnimation.PlayAnimation("Pack", false, () => {
        this._state = EveTurretSet.State.INACTIVE;

        this._activeAnimation.PlayAnimation("Inactive", true);
      });

      this._inactiveAnimation.PlayAnimation("Pack", false, () => {
        this._state = EveTurretSet.State.INACTIVE;

        this._inactiveAnimation.PlayAnimation("Inactive", true);
      });

      this._state = EveTurretSet.State.PACKING;
    } else {
      this._state = EveTurretSet.State.INACTIVE;
    }

    this._activeTurret = -1;
    this.DoStopFiring();
  }
  /**
   * Animation helper function for putting a turret set into idle state
   */


  EnterStateIdle() {
    if (this._state === EveTurretSet.State.IDLE || this._state === EveTurretSet.State.UNPACKING) return;

    if (this.turretEffect) {
      this._activeAnimation.StopAllAnimations();

      this._inactiveAnimation.StopAllAnimations();

      if (this._state === EveTurretSet.State.FIRING) {
        this._activeAnimation.PlayAnimation("Active", true);

        this._inactiveAnimation.PlayAnimation("Active", true);
      } else {
        this._activeAnimation.PlayAnimation("Deploy", false, () => {
          this._state = EveTurretSet.State.IDLE;

          this._activeAnimation.PlayAnimation("Active", true);
        });

        this._inactiveAnimation.PlayAnimation("Deploy", false, () => {
          this._state = EveTurretSet.State.IDLE;

          this._inactiveAnimation.PlayAnimation("Active", true);
        });
      }

      this._state = EveTurretSet.State.UNPACKING;
    } else {
      this._state = EveTurretSet.State.IDLE;
    }

    this._activeTurret = -1;
    this.DoStopFiring();
  }
  /**
   * Animation helper function for putting a turret set into a firing state
   */


  EnterStateFiring() {
    if (!this.turretEffect || this._state === EveTurretSet.State.FIRING) {
      this.DoStartFiring();

      if (this.turretEffect) {
        this._activeAnimation.PlayAnimation("Fire", false, () => {
          this._activeAnimation.PlayAnimation("Active", true);
        });
      }

      return;
    }

    this._activeAnimation.StopAllAnimations();

    this._inactiveAnimation.StopAllAnimations();

    if (this._state === EveTurretSet.State.INACTIVE) {
      this._activeAnimation.PlayAnimation("Deploy", false, () => {
        this.DoStartFiring();

        this._activeAnimation.PlayAnimation("Fire", false, () => {
          this._activeAnimation.PlayAnimation("Active", true);
        });
      });

      this._inactiveAnimation.PlayAnimation("Deploy", false, () => {
        this._inactiveAnimation.PlayAnimation("Active", true);
      });

      this._state = EveTurretSet.State.UNPACKING;
    } else {
      this.DoStartFiring();

      this._activeAnimation.PlayAnimation("Fire", false, () => {
        this._activeAnimation.PlayAnimation("Active", true);
      });

      this._inactiveAnimation.PlayAnimation("Active", true);
    }
  }
  /**
   * Rebuilds the turret sets cached data
   */


  OnResPrepared(res) {
    this.geometryResource = res;
    const instancedElement = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexElement"].from({
      usage: "TEXCOORD",
      usageIndex: 1,
      elements: 2
    }),
          meshes = this.geometryResource.meshes,
          active = this._activeAnimation,
          inactive = this._inactiveAnimation;

    for (let i = 0; i < meshes.length; ++i) {
      meshes[i].declaration.elements.push(instancedElement);
      meshes[i].declaration.RebuildHash();
    }

    switch (this._state) {
      case EveTurretSet.State.INACTIVE:
        active.PlayAnimation("Inactive", true);
        inactive.PlayAnimation("Inactive", true);
        break;

      case EveTurretSet.State.IDLE:
        active.PlayAnimation("Active", true);
        inactive.PlayAnimation("Active", true);
        break;

      case EveTurretSet.State.FIRING:
        active.PlayAnimation("Fire", false, () => active.PlayAnimation("Active", true));
        inactive.PlayAnimation("Active", true);
        break;

      case EveTurretSet.State.PACKING:
        this.EnterStateIdle();
        break;

      case EveTurretSet.State.UNPACKING:
        this.EnterStateDeactive();
        break;
    } //return true;

  }
  /**
   * Finds a turret item by name
   * @param {String} name
   * @returns {?EveTurretSetItem}
   */


  FindItemByLocatorName(name) {
    for (let i = 0; i < this.items.length; i++) {
      if (this.items[i].locatorName === name) {
        return this.items[i];
      }
    }

    return null;
  }
  /**
   * Updates the turret set's items that were created from locators
   * - Turrets without locator names are ignored
   * @param {Array<EveLocator2>} locators
   */


  UpdateItemsFromLocators(locators) {
    const g = EveTurretSet.global,
          toRemove = Array.from(this.items),
          norm = g.mat4_0;

    for (let i = 0; i < locators.length; i++) {
      const {
        name,
        transform,
        bone = null
      } = locators[i];
      let item = this.FindItemByLocatorName(name);

      if (!item) {
        item = this.CreateItem({
          name: name,
          locatorName: name,
          updateFromLocator: true
        });
      } else {
        toRemove.splice(toRemove.indexOf(item), 1);
      }

      if (item.updateFromLocator) {
        item._bone = bone;
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(norm, transform);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(norm.subarray(0, 3), norm.subarray(0, 3));
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(norm.subarray(4, 7), norm.subarray(4, 7));
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(norm.subarray(8, 11), norm.subarray(8, 11));
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation(item.rotation, norm);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getTranslation(item.position, norm);
        item.UpdateValues();
      }
    }

    for (let i = 0; i < toRemove.length; i++) {
      if (toRemove[i].locatorName) {
        this.RemoveItem(toRemove[i]);
        i--;
      }
    }

    this.RebuildItemsFromLocators(); // TODO: Leave this for next frame?

    if (this._dirty) this.Rebuild();
  }
  /**
   * Rebuilds the turret set's items from it's parent's locators
   */


  RebuildItemsFromLocators() {
    this._locatorDirty = true;
  }
  /**
   * Updates view dependent data
   * @param {mat4} parentTransform
   */


  UpdateViewDependentData(parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._parentTransform, parentTransform);

    if (this.firingEffect) {
      this.firingEffect.UpdateViewDependentData(parentTransform);
    }
  }
  /**
   * Rebuilds the turret set
   * Todo: Move all rebuild methods here
   */


  Rebuild() {
    this.RebuildItems();
    this._dirty = false;
    super.Rebuild();
  }
  /**
   * Per frame update
   * @param {Number} dt - Delta Time
   */


  Update(dt) {
    super.Update(dt);

    if (this.turretEffect) {
      this._activeAnimation.Update(dt);

      this._inactiveAnimation.Update(dt);
    }

    if (this.firingEffect && this._visibleItems.length) {
      if (this._activeTurret !== -1) {
        if (this.firingEffect.isLoopFiring) {
          if (this._state === EveTurretSet.State.FIRING) {
            this._recheckTimeLeft -= dt;

            if (this._recheckTimeLeft <= 0) {
              this.DoStartFiring();
            }
          }
        }

        const activeTurret = this.items[this._activeTurret];

        if (this._activeAnimation.models.length) {
          const bones = this._activeAnimation.models[0].bonesByName;

          for (let i = 0; i < this.firingEffect.GetPerMuzzleEffectCount(); ++i) {
            const transform = bones[EveTurretSet.positionBoneSkeletonNames[i]].worldTransform,
                  out = this.firingEffect.GetMuzzleTransform(i);
            global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(out, activeTurret._localTransform, transform);
            global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(out, this._parentTransform, out);
          }
        } else {
          for (let i = 0; i < this.firingEffect.GetPerMuzzleEffectCount(); ++i) {
            global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.firingEffect.GetMuzzleTransform(i), this._parentTransform, activeTurret._localTransform);
          }
        }

        if (this._fireCallbackPending) {
          if (this._fireCallback) {
            const transforms = [];

            for (let i = 0; i < this.firingEffect.GetPerMuzzleEffectCount(); ++i) {
              transforms.push(this.firingEffect.GetMuzzleTransform(i));
            }

            this._fireCallback(this, transforms, activeTurret);
          }

          this._fireCallbackPending = false;
        }
      }

      this.firingEffect.SetEndPosition(this._targetPosition);
      this.firingEffect.Update(dt);
    }
  }
  /**
   * Gets turret set render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   * @param {Boolean} [hideFiringEffect]
   */


  GetBatches(mode, accumulator, perObjectData, hideFiringEffect) {
    if (!this.turretEffect || !this.geometryResource || !this.display || !this._visibleItems.length) return;

    if (mode === global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_OPAQUE && this.visible.turrets) {
      const transforms = this._inactiveAnimation.GetBoneMatrices(0);

      if (transforms.length !== 0) {
        this.UpdatePerObjectData(this._perObjectDataInactive.vs, transforms);
        this._perObjectDataInactive.ps = perObjectData.ps;
        const batch = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2ForwardingRenderBatch"]();
        batch.renderMode = mode;
        batch.renderActive = false;
        batch.perObjectData = this._perObjectDataInactive;
        batch.geometryProvider = this;
        accumulator.Commit(batch);

        if (this._state === EveTurretSet.State.FIRING) {
          const transforms = this._activeAnimation.GetBoneMatrices(0);

          if (transforms.length !== 0) {
            this.UpdatePerObjectData(this._perObjectDataActive.vs, transforms, true);
            this._perObjectDataActive.ps = perObjectData.ps;
            const batch = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2ForwardingRenderBatch"]();
            batch.renderActive = true;
            batch.perObjectData = this._perObjectDataActive;
            batch.geometryProvider = this;
            accumulator.Commit(batch);
          }
        }
      }
    }

    this.GetFiringEffectBatches(mode, accumulator, perObjectData, hideFiringEffect);
  }
  /**
   * Gets turret firing effect batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   * @param {Boolean} [hideFiringEffect]
   */


  GetFiringEffectBatches(mode, accumulator, perObjectData, hideFiringEffect) {
    if (this.firingEffect && this.display && this._visibleItems.length && this.visible.firingEffects && !hideFiringEffect) {
      this.firingEffect.GetBatches(mode, accumulator, perObjectData);
    }
  }
  /**
   * Renders the turret set
   * @param batch
   * @param {String} technique - technique name
   * @returns {Boolean}
   */


  Render(batch, technique) {
    if (!this.turretEffect || !this.turretEffect.IsGood() || !this._visibleItems.length) return false;
    let index = 0;

    const customSetter = function (el) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.disableVertexAttribArray(el.location);
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.vertexAttrib2f(el.location, index, index);
    };

    for (let i = 0; i < this.geometryResource.meshes.length; ++i) {
      const decl = this.geometryResource.meshes[i].declaration;
      decl.FindUsage(core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexElement"].Type.TEXCOORD, 1).customSetter = customSetter;
    }

    let rendered = 0;

    for (; index < this.items.length; ++index) {
      if (this.items[index].display) {
        const isActive = this._state === EveTurretSet.State.FIRING && index === this._activeTurret;

        if (batch.renderActive === isActive) {
          this.geometryResource.RenderAreas(0, 0, 1, this.turretEffect, technique);
          rendered++;
        }
      }
    }

    return !!rendered;
  }
  /**
   * Updates per object data
   * @param {Tw2RawData} perObjectData
   * @param transforms
   * @param {Boolean} [skipBoneCalculations]
   */


  UpdatePerObjectData(perObjectData, transforms, skipBoneCalculations) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(perObjectData.Get("shipMatrix"), this._parentTransform);
    const transformCount = transforms.length / 12;
    perObjectData.Get("turretSetData")[0] = transformCount;
    perObjectData.Get("baseCutoffData")[0] = this.bottomClipHeight;
    const translation = perObjectData.Get("turretTranslation"),
          rotation = perObjectData.Get("turretRotation"),
          pose = perObjectData.Get("turretPoseTransAndRot");

    for (let i = 0; i < this._visibleItems.length; ++i) {
      const item = this._visibleItems[i];

      for (let j = 0; j < transformCount; ++j) {
        pose[(i * transformCount + j) * 2 * 4] = transforms[j * 12 + 3];
        pose[(i * transformCount + j) * 2 * 4 + 1] = transforms[j * 12 + 7];
        pose[(i * transformCount + j) * 2 * 4 + 2] = transforms[j * 12 + 11];
        pose[(i * transformCount + j) * 2 * 4 + 3] = 1;
        EveTurretSet.mat3x4toquat(transforms, j, pose, (i * transformCount + j) * 2 + 1);
      }

      if (item._bone && !skipBoneCalculations) {
        item.UpdateTransforms();
      }

      translation[i * 4] = item._localTransform[12];
      translation[i * 4 + 1] = item._localTransform[13];
      translation[i * 4 + 2] = item._localTransform[14];
      translation[i * 4 + 3] = 1;
      rotation[i * 4] = item.rotation[0];
      rotation[i * 4 + 1] = item.rotation[1];
      rotation[i * 4 + 2] = item.rotation[2];
      rotation[i * 4 + 3] = item.rotation[3];
    }
  }
  /**
   * Animation helper function for turret firing
   */


  DoStartFiring() {
    if (this._hasCyclingFiringPos) {
      this._currentCyclingFiresPos = 1 - this._currentCyclingFiresPos;
    }

    if (this.firingEffect) {
      this.firingEffect.PrepareFiring(0, this._hasCyclingFiringPos ? this._currentCyclingFiresPos : -1);
    }

    this._activeTurret = this.GetClosestTurret();
    this._state = EveTurretSet.State.FIRING;
    this._recheckTimeLeft = 2;

    if (this._fireCallback) {
      this._fireCallbackPending = true;
    }
  }
  /**
   * Animation helper function for stopping a turret firing
   */


  DoStopFiring() {
    if (this.firingEffect) {
      this.firingEffect.StopFiring();
    }
  }
  /**
   * The eve turret set's item constructor
   * @type {EveTurretSetItem}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["bottomClipHeight", r.float], ["boundingSphere", r.vector4], ["chooseRandomLocator", r.boolean], ["cyclingFireGroupCount", r.uint], ["firingEffectResPath", r.path], ["geometryResPath", r.path], ["impactSize", r.float], ["laserMissBehaviour", r.boolean], ["locatorName", r.string], ["maxCyclingFirePos", r.uint], ["projectileMissBehaviour", r.boolean], ["sysBoneHeight", r.float], ["sysBonePitchMax", r.float], ["sysBonePitchMin", r.float], ["sysBonePitchFactor", r.float], ["sysBonePitch01Factor", r.float], ["sysBonePitch02Factor", r.float], ["sysBonePitchOffset", r.float], ["turretEffect", r.object], ["updatePitchPose", r.boolean], ["useDynamicBounds", r.boolean], ["useRandomFiringDelay", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveTurretSet.Item = EveTurretSetItem;
EveTurretSet.State = {
  INACTIVE: 0,
  IDLE: 1,
  FIRING: 2,
  PACKING: 2,
  UNPACKING: 4
};
EveTurretSet.worldNames = ["turretWorld0", "turretWorld1", "turretWorld2"];
EveTurretSet.positionBoneSkeletonNames = ["Pos_Fire01", "Pos_Fire02", "Pos_Fire03", "Pos_Fire04", "Pos_Fire05", // Still valid?
"Pos_Fire06", // Still valid?
"Pos_Fire07", // Still valid?
"Pos_Fire08" // Still valid?
];
EveTurretSet.perObjectData = {
  vs: [["baseCutoffData", 4], ["turretSetData", 4], ["shipMatrix", 16], ["turretTranslation", 4 * 24], ["turretRotation", 4 * 24], ["turretPoseTransAndRot", 2 * 4 * 72]]
};

EveTurretSet.mat3x4toquat = function () {
  let m, q;
  return function (mm, index, out, outIndex) {
    if (!m) {
      m = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
      q = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    }

    index *= 12;
    outIndex *= 4;
    m[0] = mm[index];
    m[1] = mm[index + 4];
    m[2] = mm[index + 8];
    m[3] = 0;
    m[4] = mm[index + 1];
    m[5] = mm[index + 5];
    m[6] = mm[index + 9];
    m[7] = 0;
    m[8] = mm[index + 2];
    m[9] = mm[index + 6];
    m[10] = mm[index + 10];
    m[11] = 0;
    m[12] = mm[index + 3];
    m[13] = mm[index + 7];
    m[14] = mm[index + 11];
    m[15] = 1;
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation(q, m);
    out[outIndex] = q[0];
    out[outIndex + 1] = q[1];
    out[outIndex + 2] = q[2];
    out[outIndex + 3] = q[3];
  };
}();

EveTurretSet.__isStaging = 1;

/***/ }),

/***/ "./eve/item/index.js":
/*!***************************!*\
  !*** ./eve/item/index.js ***!
  \***************************/
/*! exports provided: EveBanner, EveBoosterSet2Batch, EveBoosterSet2Item, EveBoosterSet2, EveCurveLineSetItem, EveCurveLineSet, EveCustomMask, EveHazeSetBatch, EveHazeSetItem, EveHazeSet, EveLocator2, EveLocator, EveObjectSetItem, EveObjectSet, EvePlaneSetBatch, EvePlaneSetItem, EvePlaneSet, EveSpaceObjectDecal, EveSpotlightSetBatch, EveSpotlightSetItem, EveSpotlightSet, EveSpriteLineSetBatch, EveSpriteLineSetItem, EveSpriteLineSet, EveSpriteSetBatch, EveSpriteSetItem, EveSpriteSet, EveTrailSetRenderBatch, EveTrailsSet, EveTurretSetItem, EveTurretSet, EveBoosterBatch, EveBoosterSetItem, EveBoosterSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _legacy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legacy */ "./eve/item/legacy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterBatch", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EveBoosterBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSetItem", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EveBoosterSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EveBoosterSet"]; });

/* harmony import */ var _EveBanner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveBanner */ "./eve/item/EveBanner.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBanner", function() { return _EveBanner__WEBPACK_IMPORTED_MODULE_1__["EveBanner"]; });

/* harmony import */ var _EveBoosterSet2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveBoosterSet2 */ "./eve/item/EveBoosterSet2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2Batch", function() { return _EveBoosterSet2__WEBPACK_IMPORTED_MODULE_2__["EveBoosterSet2Batch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2Item", function() { return _EveBoosterSet2__WEBPACK_IMPORTED_MODULE_2__["EveBoosterSet2Item"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet2", function() { return _EveBoosterSet2__WEBPACK_IMPORTED_MODULE_2__["EveBoosterSet2"]; });

/* harmony import */ var _EveCurveLineSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveCurveLineSet */ "./eve/item/EveCurveLineSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveCurveLineSetItem", function() { return _EveCurveLineSet__WEBPACK_IMPORTED_MODULE_3__["EveCurveLineSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveCurveLineSet", function() { return _EveCurveLineSet__WEBPACK_IMPORTED_MODULE_3__["EveCurveLineSet"]; });

/* harmony import */ var _EveCustomMask__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveCustomMask */ "./eve/item/EveCustomMask.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveCustomMask", function() { return _EveCustomMask__WEBPACK_IMPORTED_MODULE_4__["EveCustomMask"]; });

/* harmony import */ var _EveHazeSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveHazeSet */ "./eve/item/EveHazeSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveHazeSetBatch", function() { return _EveHazeSet__WEBPACK_IMPORTED_MODULE_5__["EveHazeSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveHazeSetItem", function() { return _EveHazeSet__WEBPACK_IMPORTED_MODULE_5__["EveHazeSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveHazeSet", function() { return _EveHazeSet__WEBPACK_IMPORTED_MODULE_5__["EveHazeSet"]; });

/* harmony import */ var _EveLocator2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveLocator2 */ "./eve/item/EveLocator2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLocator2", function() { return _EveLocator2__WEBPACK_IMPORTED_MODULE_6__["EveLocator2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLocator", function() { return _EveLocator2__WEBPACK_IMPORTED_MODULE_6__["EveLocator"]; });

/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EveObjectSet */ "./eve/item/EveObjectSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveObjectSetItem", function() { return _EveObjectSet__WEBPACK_IMPORTED_MODULE_7__["EveObjectSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveObjectSet", function() { return _EveObjectSet__WEBPACK_IMPORTED_MODULE_7__["EveObjectSet"]; });

/* harmony import */ var _EvePlaneSet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EvePlaneSet */ "./eve/item/EvePlaneSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSetBatch", function() { return _EvePlaneSet__WEBPACK_IMPORTED_MODULE_8__["EvePlaneSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSetItem", function() { return _EvePlaneSet__WEBPACK_IMPORTED_MODULE_8__["EvePlaneSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlaneSet", function() { return _EvePlaneSet__WEBPACK_IMPORTED_MODULE_8__["EvePlaneSet"]; });

/* harmony import */ var _EveSpaceObjectDecal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EveSpaceObjectDecal */ "./eve/item/EveSpaceObjectDecal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpaceObjectDecal", function() { return _EveSpaceObjectDecal__WEBPACK_IMPORTED_MODULE_9__["EveSpaceObjectDecal"]; });

/* harmony import */ var _EveSpotlightSet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EveSpotlightSet */ "./eve/item/EveSpotlightSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSetBatch", function() { return _EveSpotlightSet__WEBPACK_IMPORTED_MODULE_10__["EveSpotlightSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSetItem", function() { return _EveSpotlightSet__WEBPACK_IMPORTED_MODULE_10__["EveSpotlightSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpotlightSet", function() { return _EveSpotlightSet__WEBPACK_IMPORTED_MODULE_10__["EveSpotlightSet"]; });

/* harmony import */ var _EveSpriteLineSet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./EveSpriteLineSet */ "./eve/item/EveSpriteLineSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSetBatch", function() { return _EveSpriteLineSet__WEBPACK_IMPORTED_MODULE_11__["EveSpriteLineSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSetItem", function() { return _EveSpriteLineSet__WEBPACK_IMPORTED_MODULE_11__["EveSpriteLineSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteLineSet", function() { return _EveSpriteLineSet__WEBPACK_IMPORTED_MODULE_11__["EveSpriteLineSet"]; });

/* harmony import */ var _EveSpriteSet__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./EveSpriteSet */ "./eve/item/EveSpriteSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSetBatch", function() { return _EveSpriteSet__WEBPACK_IMPORTED_MODULE_12__["EveSpriteSetBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSetItem", function() { return _EveSpriteSet__WEBPACK_IMPORTED_MODULE_12__["EveSpriteSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpriteSet", function() { return _EveSpriteSet__WEBPACK_IMPORTED_MODULE_12__["EveSpriteSet"]; });

/* harmony import */ var _EveTrailsSet__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./EveTrailsSet */ "./eve/item/EveTrailsSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTrailSetRenderBatch", function() { return _EveTrailsSet__WEBPACK_IMPORTED_MODULE_13__["EveTrailSetRenderBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTrailsSet", function() { return _EveTrailsSet__WEBPACK_IMPORTED_MODULE_13__["EveTrailsSet"]; });

/* harmony import */ var _EveTurretSet__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./EveTurretSet */ "./eve/item/EveTurretSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTurretSetItem", function() { return _EveTurretSet__WEBPACK_IMPORTED_MODULE_14__["EveTurretSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTurretSet", function() { return _EveTurretSet__WEBPACK_IMPORTED_MODULE_14__["EveTurretSet"]; });

















/***/ }),

/***/ "./eve/item/legacy/EveBoosterSet.js":
/*!******************************************!*\
  !*** ./eve/item/legacy/EveBoosterSet.js ***!
  \******************************************/
/*! exports provided: EveBoosterBatch, EveBoosterSetItem, EveBoosterSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveBoosterBatch", function() { return EveBoosterBatch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSetItem", function() { return EveBoosterSetItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet", function() { return EveBoosterSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../EveObjectSet */ "./eve/item/EveObjectSet.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core_mesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core/mesh */ "./core/mesh/index.js");
/* harmony import */ var _EveSpriteSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../EveSpriteSet */ "./eve/item/EveSpriteSet.js");






/**
 * Booster render batch
 * @ccp N/A
 *
 * @property {EveBoosterSet} boosters
 */

class EveBoosterBatch extends core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderBatch"] {
  constructor(...args) {
    super(...args);
    this.boosters = null;
  }

  /**
   * Commits the batch
   * @param {String} technique - technique name
   */
  Commit(technique) {
    this.boosters.Render(technique);
  }

}
/**
 * Booster
 * TODO: Is this deprecated?
 * @ccp N/A
 *
 * @property {Number} atlas0             - The booster's atlas index 0
 * @property {Number} atlas1             - The booster's atlas index 1
 * @property {*} customValues            - An optional object containing custom values
 * @property {?String} locatorName       - The booster's locator name, if it was built from one
 * @property {Number} seed               - A random seed which affects any glows built from this booster
 * @property {mat4} transform            - The booster's local transform
 * @property {Boolean} updateFromLocator - Sets whether the booster should be updated when it's locator is
 * @property {{}} visible                - Visibility options
 * @property {Boolean} visible.halo      - Toggles halo visibility
 * @property {Boolean} visible.symHalo   - Toggles symmetrical halo visibility
 * @property {Boolean} visible.glow      - Toggles glow visibility
 * @property {Boolean} visible.trail     - Toggles trail visibility (not implemented)
 * @property {Number} wavePhase          - A random seed which affects the booster wave pattern
 */

class EveBoosterSetItem extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSetItem"] {
  constructor(...args) {
    super(...args);
    this.atlas0 = 0;
    this.atlas1 = 0;
    this.customValues = null;
    this.locatorName = null;
    this.seed = Math.random() * 7;
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.updateFromLocator = false;
    this.visible = {
      glow: true,
      symHalo: true,
      halo: true,
      trail: true,
      customValues: true
    };
    this.wavePhase = Math.random();
  }

  /**
   * Gets the item's position
   * @param {vec3} out
   * @returns {vec3} out
   */
  GetPosition(out) {
    return global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getTranslation(out, this.transform);
  }
  /**
   * Gets the item's direction
   * @param {vec3} out
   * @returns {vec3} out
   */


  GetDirection(out) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(out, this.transform[8], this.transform[9], this.transform[10]);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(out, out);
    const scale = this.GetScale();
    if (scale < 3) global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(out, out, scale / 3);
    return out;
  }
  /**
   * Gets the item's scale
   * @returns {Number}
   */


  GetScale() {
    const tr = this.transform;
    return Math.max(global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length([tr[0], tr[1], tr[2]]), global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length([tr[4], tr[5], tr[6]]));
  }
  /**
   * Creates an item from an object
   * @param {*} [values]
   * @returns {EveBoosterSetItem}
   */


  static from(values) {
    const item = new this();

    if (values) {
      global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(item.visible, values.visible, ["glow", "symHalo", "halo", "trail"]);
      global__WEBPACK_IMPORTED_MODULE_0__["util"].assignIfExists(item, values, ["name", "display", "seed", "wavePhase", "transform", "locatorName", "updateFromLocator", "atlas0", "atlas1"]);
    }

    return item;
  }

}
/**
 * Booster set
 * TODO: Is this deprecated?
 * @ccp EveBoosterSet
 * @property {Number} maxVel                   - (Not implemented)
 * @property {Boolean} alwaysOn                - (Not implemented)
 * @property {Tw2Effect} effect                - The booster's booster effect
 * @property {Number} glowDistance             - The distance between the booster's locators and glow sprites
 * @property {Number} glowScale                - The base scale of the booster's glow sprites
 * @property {vec4} glowColor                  - The color of the booster set's glow sprites
 * @property {?EveSpriteSet} glows             - The booster's glows (sprites)
 * @property {vec4} warpGlowColor              - The color of the booster set's glow sprites when warping (Not implemented)
 * @property {Number} haloDistance             - The distance between the booster set's locators and halo sprites
 * @property {Number} haloScaleX               - The base vertical scale of the booster set's halos
 * @property {Number} haloScaleY               - The base horizontal scale of the booster set's halos
 * @property {vec4} haloColor                  - The color of the booster set's halo sprites
 * @property {vec4} warpHaloColor              - The color of the booster set's halo sprites when warping (Not implemented)
 * @property {vec4} trailSize                  - The booster set's trail size (Not implemented)
 * @property {vec4} trailColor                 - The booster set's trail color (Not implemented)
 * @property {Number} symHaloDistance          - The distance between the booster set's locators and symmetrical halo sprites
 * @property {Number} symHaloScale             - The base scale of the booster set's symmetrical halos
 * @property {{}} visible                      - Visibility controls
 * @property {Boolean} visible.glows           - Toggles glow visibility
 * @property {Boolean} visible.symHalos        - Toggles symmetrical halo visibility
 * @property {Boolean} visible.halos           - Toggles halo visibility
 * @property {Boolean} visible.trails          - Toggles trails visibility (Not implemented)
 * @property {mat4} _parentTransform           - The booster set's parent's transform
 * @property {WebGLBuffer} _positions          - The booster set's webgl buffer
 * @property {Tw2VertexDeclaration} _decl      - The booster set's vertex declarations
 * @property {Tw2PerObjectData} _perObjectData - The booster set's shader data
 * @property {Boolean} _locatorDirty           - Identifies that the booster set needs to be rebuilt from locators
 * @class
 */

class EveBoosterSet extends _EveObjectSet__WEBPACK_IMPORTED_MODULE_2__["EveObjectSet"] {
  constructor(...args) {
    super(...args);
    this.alwaysOn = true;
    this.effect = null;
    this.glowColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.glows = null;
    this.glowScale = 1.0;
    this.haloColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.haloScaleX = 1.0;
    this.haloScaleY = 1.0;
    this.maxVel = 250;
    this.symHaloScale = 1.0;
    this.trailColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.trailSize = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.warpGlowColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.warpHaloColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.glowDistance = 2.5;
    this.haloDistance = 3.01;
    this.symHaloDistance = 3;
    this.visible = {
      glows: true,
      symHalos: true,
      halos: true,
      trails: true
    };
    this._parentTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._positions = null;
    this._decl = core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"].from(EveBoosterSet.vertexDeclarations);
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveBoosterSet.perObjectData);
    this._locatorDirty = true;
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.effect) this.effect.GetResources(out);
    return out;
  }
  /**
   * Rebuilds a booster set's items
   * @param {Boolean} [skipUpdate]
   */


  RebuildItems(skipUpdate) {
    const glows = this.glows,
          g = EveBoosterSet.global,
          spritePos = g.vec3_0;
    if (glows) glows.ClearItems();
    this._visibleItems = [];

    for (let i = 0; i < this.items.length; i++) {
      const item = this.items[i]; //item.SetParent(this);

      if (item.display) {
        this._visibleItems.push(item);

        if (glows) {
          const src = item.customValues && item.customValues.display ? item.customValues : this,
                pos = item.GetPosition(g.vec3_1),
                dir = item.GetDirection(g.vec3_2),
                scale = item.GetScale();

          if (this.visible.glows && item.visible.glow) {
            glows.CreateItem({
              name: item.name + "_glow",
              position: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(spritePos, pos, global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(spritePos, dir, src.glowDistance)),
              blinkRate: item.seed,
              blinkPhase: item.seed,
              minScale: src.glowScale * scale,
              maxScale: src.glowScale * scale,
              color: src.glowColor,
              warpColor: src.warpGlowColor
            });
          }

          if (this.visible.symHalos && item.visible.symHalo) {
            glows.CreateItem({
              name: item.name + "_symHalo",
              position: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(spritePos, pos, global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(spritePos, dir, src.symHaloDistance)),
              blinkRate: item.seed,
              blinkPhase: item.seed + 1,
              minScale: src.symHaloScale * scale,
              maxScale: src.symHaloScale * scale,
              color: src.haloColor,
              warpColor: src.warpHaloColor
            });
          }

          if (this.visible.halos && item.visible.halo) {
            glows.CreateItem({
              name: item.name + "_halo",
              position: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(spritePos, pos, global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(spritePos, dir, src.haloDistance)),
              blinkRate: item.seed,
              blinkPhase: item.seed + 1,
              minScale: src.haloScaleX * scale,
              maxScale: src.haloScaleY * scale,
              color: src.haloColor,
              warpColor: src.warpHaloColor
            });
          }
        }

        item._dirty = false;
      }
    }

    this._dirty = true;
  }
  /**
   * Finds a booster item that belongs to a locator by it's name
   * @param {String} locatorName
   * @returns {?EveBoosterSetItem}
   */


  FindItemByLocatorName(locatorName) {
    for (let i = 0; i < this.items.length; i++) {
      if (this.items[i].locatorName && this.items[i].locatorName === locatorName) {
        return this.items[i];
      }
    }

    return null;
  }
  /**
   * Updates booster items that were built from locators
   * @param {Array.<EveLocator2>} locators
   */


  UpdateItemsFromLocators(locators) {
    const items = Array.from(this.items);

    for (let i = 0; i < locators.length; i++) {
      const {
        name,
        transform,
        atlasIndex0,
        atlasIndex1
      } = locators[i];
      let item = this.FindItemByLocatorName(name);

      if (!item) {
        this.CreateItem({
          name: name,
          locatorName: name,
          updateFromLocator: true,
          atlas0: atlasIndex0,
          atlas1: atlasIndex1,
          transform: transform
        });
      } else {
        items.splice(items.indexOf(item), 1);

        if (item.updateFromLocator) {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(item.transform, transform);
          item.atlas0 = atlasIndex0;
          item.atlas1 = atlasIndex1;
          item.UpdateValues();
        }
      }
    }

    for (let i = 0; i < items.length; i++) {
      if (items[i].locatorName !== null) {
        this.RemoveItem(items[i]);
        i--;
      }
    }

    this._locatorDirty = false;

    if (this._dirty) {
      this.Rebuild();
    }
  }
  /**
   * Rebuilds the booster set from it's parent's locators
   */


  RebuildItemsFromLocators() {
    this._locatorDirty = true;
  }
  /**
   * Per frame update
   * @param {Number} dt - DeltaTime
   * @param {mat4} parentMatrix
   * @param {Number} [worldSpriteScale]
   */


  Update(dt, parentMatrix, worldSpriteScale) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._parentTransform, parentMatrix);
    super.Update(dt);

    if (this.glows) {
      this.glows.Update(dt, worldSpriteScale);
    }
  }
  /**
   * Unloads the booster's buffers
   * @param {Boolean} [skipEvent]
   */


  Unload(skipEvent) {
    if (this._positions) {
      global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.deleteBuffer(this._positions);
      this._positions = null;
    }

    if (this.glows) {
      this.glows.Unload(skipEvent);
    }

    super.Unload(skipEvent);
  }
  /**
   * Rebuilds the boosters
   */


  Rebuild() {
    this.RebuildItems();
    const itemCount = this._visibleItems.length;
    this._dirty = false;

    if (!itemCount) {
      super.Rebuild();
      return;
    }

    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          box = EveBoosterSet._box,
          data = new Float32Array(itemCount * box.length * 6 * 28),
          order = [0, 3, 1, 3, 2, 1];
    let index = 0;

    for (let i = 0; i < itemCount; ++i) {
      const item = this._visibleItems[i];

      for (let b = 0; b < box.length; ++b) {
        for (let j = 0; j < order.length; ++j) {
          data[index++] = box[b][order[j]][0];
          data[index++] = box[b][order[j]][1];
          data[index++] = box[b][order[j]][2];
          data[index++] = 0;
          data[index++] = 0;
          data.set(item.transform, index);
          index += 16;
          data[index++] = 0;
          data[index++] = 1;
          data[index++] = 1;
          data[index++] = 1;
          data[index++] = item.wavePhase;
          data[index++] = item.atlas0;
          data[index++] = item.atlas1;
        }
      }
    }

    this._positions = d.gl.createBuffer();
    d.gl.bindBuffer(d.gl.ARRAY_BUFFER, this._positions);
    d.gl.bufferData(d.gl.ARRAY_BUFFER, data, d.gl.STATIC_DRAW);
    d.gl.bindBuffer(d.gl.ARRAY_BUFFER, null);
    this._positions.count = itemCount * 12 * 3;
    if (this.glows) this.glows.Rebuild();
    super.Rebuild();
  }
  /**
   * Gets render batches
   * @param {Number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} perObjectData
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.display || mode !== global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE || !this._positions || !this._visibleItems.length) return;

    if (this.effect) {
      const batch = new EveBoosterBatch();
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("WorldMat"), this._parentTransform);

      this._perObjectData.vs.Set("Shipdata", perObjectData.vs.Get("Shipdata"));

      this._perObjectData.ps = perObjectData.ps;
      batch.perObjectData = this._perObjectData;
      batch.boosters = this;
      batch.renderMode = global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_ADDITIVE;
      accumulator.Commit(batch);
    }

    if (this.glows) {
      this.glows.GetBoosterGlowBatches(mode, accumulator, perObjectData, this._parentTransform, perObjectData.vs.Get("Shipdata")[0], 0);
    }
  }
  /**
   * Renders the accumulated batches
   * @param {String} technique - technique name
   * @returns {Boolean}
   */


  Render(technique) {
    if (!this.effect || !this.effect.IsGood() || !this._positions) return false;
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          gl = d.gl;
    gl.bindBuffer(gl.ARRAY_BUFFER, this._positions);

    for (let pass = 0; pass < this.effect.GetPassCount(technique); ++pass) {
      this.effect.ApplyPass(technique, pass);
      if (!this._decl.SetDeclaration(d, this.effect.GetPassInput(technique, pass), 112)) return false;
      d.ApplyShadowState();
      gl.drawArrays(gl.TRIANGLES, 0, this._positions.count);
    }

    return true;
  }
  /**
   * Creates an eve booster from a plain object
   * @param {*} [values]
   * @param {*} [options]
   * @returns {EveBoosterSet}
   */


  static from(values, options) {
    const item = new EveBoosterSet();

    if (values) {
      Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item, values, ["alwaysOn", "glowColor", "glowScale", "haloColor", "haloScaleX", "haloScaleY", "maxVel", "symHaloScale", "trailColor", "trailSize", "warpGlowColor", "name", "display", "glowDistance", "haloDistance", "symHaloDistance", "warpHaloColor"]); // Allow for ccp spelling mistakes

      if (values.warpHalpColor !== undefined) {
        item.warpHaloColor = values.warpHalpColor;
      }

      if (values.visible) {
        Object(global_util__WEBPACK_IMPORTED_MODULE_3__["assignIfExists"])(item.visible, values.visible, ["glows", "symHalos", "halos", "trails"]);
      }

      if (values.effect) {
        item.effect = core_mesh__WEBPACK_IMPORTED_MODULE_4__["Tw2Effect"].from(values.effect);
      }

      if (values.glows) {
        item.glows = _EveSpriteSet__WEBPACK_IMPORTED_MODULE_5__["EveSpriteSet"].from(values.glows);
      }

      if (values.items) {
        for (let i = 0; i < values.items.length; i++) {
          item.CreateItem(values.items[i]);
        }
      }
    }

    if (!options || !options.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * The booster set's item constructor
   * @type {EveBoosterSetItem}
   */


}
EveBoosterSet.Item = EveBoosterSetItem;
EveBoosterSet.perObjectData = {
  vs: [["WorldMat", 16], ["Shipdata", 4]]
};
EveBoosterSet.vertexDeclarations = [{
  usage: "POSITION",
  usageIndex: 0,
  elements: 3
}, {
  usage: "TEXCOORD",
  usageIndex: 0,
  elements: 2
}, {
  usage: "TEXCOORD",
  usageIndex: 1,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 2,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 3,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 4,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 5,
  elements: 4
}, {
  usage: "TEXCOORD",
  usageIndex: 6,
  elements: 1
}, {
  usage: "TEXCOORD",
  usageIndex: 7,
  elements: 2
}];
EveBoosterSet._box = [[[-1.0, -1.0, 0.0], [1.0, -1.0, 0.0], [1.0, 1.0, 0.0], [-1.0, 1.0, 0.0]], [[-1.0, -1.0, -1.0], [-1.0, 1.0, -1.0], [1.0, 1.0, -1.0], [1.0, -1.0, -1.0]], [[-1.0, -1.0, 0.0], [-1.0, 1.0, 0.0], [-1.0, 1.0, -1.0], [-1.0, -1.0, -1.0]], [[1.0, -1.0, 0.0], [1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [1.0, 1.0, 0.0]], [[-1.0, -1.0, 0.0], [-1.0, -1.0, -1.0], [1.0, -1.0, -1.0], [1.0, -1.0, 0.0]], [[-1.0, 1.0, 0.0], [1.0, 1.0, 0.0], [1.0, 1.0, -1.0], [-1.0, 1.0, -1.0]]];

/***/ }),

/***/ "./eve/item/legacy/index.js":
/*!**********************************!*\
  !*** ./eve/item/legacy/index.js ***!
  \**********************************/
/*! exports provided: EveBoosterBatch, EveBoosterSetItem, EveBoosterSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveBoosterSet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveBoosterSet */ "./eve/item/legacy/EveBoosterSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterBatch", function() { return _EveBoosterSet__WEBPACK_IMPORTED_MODULE_0__["EveBoosterBatch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSetItem", function() { return _EveBoosterSet__WEBPACK_IMPORTED_MODULE_0__["EveBoosterSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveBoosterSet", function() { return _EveBoosterSet__WEBPACK_IMPORTED_MODULE_0__["EveBoosterSet"]; });



/***/ }),

/***/ "./eve/object/EveEffectRoot2.js":
/*!**************************************!*\
  !*** ./eve/object/EveEffectRoot2.js ***!
  \**************************************/
/*! exports provided: EveEffectRoot2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveEffectRoot2", function() { return EveEffectRoot2; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legacy/EveObject */ "./eve/object/legacy/EveObject.js");


/**
 * EveEffectRoot2
 * TODO: Implement
 * @ccp EveEffectRoot2
 *
 * @property {String} name                          -
 * @property {vec3} boundingSphereCenter            -
 * @property {Number} boundingSphereRadius          -
 * @property {Array.<Tw2CurveSet>} curveSets        -
 * @property {Number} duration                      -
 * @property {Boolean} dynamicLOD                   -
 * @property {Array.<EveChild>} effectChildren      -
 * @property {Array.<Tr2PointLight>} lights         -
 * @property {Array} observers                      -
 * @property {quat} rotation                        -
 * @property {vec3} scaling                         -
 * @property {vec4} secondaryLightingEmissiveColor  -
 * @property {Number} secondaryLightingSphereRadius -
 * @property {vec3} translation                     -
 */

class EveEffectRoot2 extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.boundingSphereCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundingSphereRadius = 0;
    this.curveSets = [];
    this.duration = 0;
    this.dynamicLOD = false;
    this.effectChildren = [];
    this.lights = [];
    this.observers = [];
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.secondaryLightingEmissiveColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.secondaryLightingSphereRadius = 0;
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boundingSphereCenter", r.vector3], ["boundingSphereRadius", r.float], ["curveSets", r.array], ["duration", r.float], ["dynamicLOD", r.boolean], ["effectChildren", r.array], ["lights", r.array], ["name", r.string], ["observers", r.array], ["rotation", r.vector4], ["scaling", r.vector3], ["secondaryLightingEmissiveColor", r.color], ["secondaryLightingSphereRadius", r.float], ["translation", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveEffectRoot2.__isStaging = 4;

/***/ }),

/***/ "./eve/object/EveMissile.js":
/*!**********************************!*\
  !*** ./eve/object/EveMissile.js ***!
  \**********************************/
/*! exports provided: EveMissileWarhead, EveMissile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveMissileWarhead", function() { return EveMissileWarhead; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveMissile", function() { return EveMissile; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./legacy/EveObject */ "./eve/object/legacy/EveObject.js");



/**
 * EveMissileWarhead
 * @ccp EveMissileWarhead
 * todo: Implement "acceleration"
 * todo: Implement "impactDuration"
 * todo: Implement "pathOffsetNoiseScale"
 * todo: Implement "pathOffsetNoiseSpeed"
 * todo: Implement "warheadLength"
 * todo: Implement "warheadRadius"
 *
 * @property {Number} acceleration                         -
 * @property {Number} durationEjectPhase                   -
 * @property {Number} impactDuration                       -
 * @property {Number} impactSize                           -
 * @property {Number} maxExplosionDistance                 -
 * @property {Tw2Mesh} mesh                                -
 * @property {Array.<ParticleEmitterGPU>} particleEmitters -
 * @property {Number} pathOffsetNoiseScale                 -
 * @property {Number} pathOffsetNoiseSpeed                 -
 * @property {EveSpriteSet} spriteSet                      -
 * @property {Number} startEjectVelocity                   -
 * @property {Number} warheadLength                        -
 * @property {Number} warheadRadius                        -
 * @property {Boolean} display                             -
 * @property {Tw2PerObjectData} _perObjectData             -
 * @property {Number} _state                               -
 * @property {Number} _time                                -
 * @property {mat4} _transform                             -
 * @property {vec3} _velocity                              -
 */

class EveMissileWarhead extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.acceleration = 1;
    this.durationEjectPhase = 0;
    this.impactDuration = 0.6;
    this.impactSize = 0;
    this.maxExplosionDistance = 40;
    this.mesh = null;
    this.particleEmitters = [];
    this.pathOffsetNoiseScale = 0;
    this.pathOffsetNoiseSpeed = 0;
    this.spriteSet = null;
    this.startEjectVelocity = 0;
    this.warheadLength = 0;
    this.warheadRadius = 0;
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveMissileWarhead.perObjectData);
    this._state = EveMissileWarhead.State.READY;
    this._time = 0;
    this._transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._velocity = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Initializes the warhead
   */
  Initialize() {
    if (this.spriteSet) this.spriteSet.UseQuads(true);
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.mesh) this.mesh.GetResources(out);
    if (this.spriteSet) this.spriteSet.GetResources(out);
    return out;
  }
  /**
   * Sets up the warhead for rendering
   * @param {mat4} transform - Initial local to world transform
   */


  Launch(transform) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._transform, transform);
    this._velocity[0] = transform[8] * this.startEjectVelocity;
    this._velocity[1] = transform[9] * this.startEjectVelocity;
    this._velocity[2] = transform[10] * this.startEjectVelocity;
    this._time = 0;
    this._state = EveMissileWarhead.State.IN_FLIGHT;
  }
  /**
   * Per frame view dependent data update
   */


  UpdateViewDependentData() {
    if (!this.display || this._state === EveMissileWarhead.State.DEAD) return;
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("WorldMat"), this._transform);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("WorldMatLast"), this._transform);
  }
  /**
   * Per frame update
   * @param {Number} dt - Time since previous frame
   * @param {vec3} missilePosition - Missile position
   * @param {vec3} missileTarget - Missile target position
   */


  Update(dt, missilePosition, missileTarget) {
    if (this._state === EveMissileWarhead.State.IN_FLIGHT) {
      const g = _legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"].global,
            position = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getTranslation(g.vec3_0, this._transform),
            tmp = g.vec3_1,
            x = g.vec3_2,
            y = g.vec3_3;
      this._time += dt;

      if (this._time > this.durationEjectPhase) {
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(position, this._velocity, missilePosition);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(position, position, missilePosition, 1 - Math.exp(-dt * 0.9999));
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].setTranslation(this._transform, position);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(tmp, missileTarget, position);

        if (global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length(tmp) < this.maxExplosionDistance) {
          console.log(position, tmp);
          this._state = EveMissileWarhead.State.DEAD;
        }
      } else {
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(tmp, this._velocity, dt);
        this._transform[12] += tmp[0];
        this._transform[13] += tmp[1];
        this._transform[14] += tmp[2];
      }

      const z = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(tmp, this._velocity);

      if (Math.abs(z[0]) < 0.99) {
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(x, z, [1, 0, 0]);
      } else {
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(x, z, [0, 1, 0]);
      }

      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(x, x);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(y, x, z);
      this._transform[0] = x[0];
      this._transform[1] = x[1];
      this._transform[2] = x[2];
      this._transform[4] = y[0];
      this._transform[5] = y[1];
      this._transform[6] = y[2];
      this._transform[8] = z[0];
      this._transform[9] = z[1];
      this._transform[10] = z[2];
    }

    if (this.spriteSet) {
      this.spriteSet.Update(dt);
    }
  }
  /**
   * Accumulates render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (this.display && this.mesh && this._state !== EveMissileWarhead.State.DEAD) {
      if (this.mesh) {
        this.mesh.GetBatches(mode, accumulator, this._perObjectData);
      }

      if (this.spriteSet) {
        this.spriteSet.GetBatches(mode, accumulator, this._perObjectData, this._transform);
      }
    }
  }
  /**
   * Per object data
   * @type {*}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["acceleration", r.float], ["durationEjectPhase", r.float], ["impactDuration", r.float], ["impactSize", r.float], ["maxExplosionDistance", r.float], ["mesh", r.object], ["particleEmitters", r.array], ["pathOffsetNoiseScale", r.float], ["pathOffsetNoiseSpeed", r.float], ["spriteSet", r.object], ["startEjectVelocity", r.float], ["warheadLength", r.float], ["warheadRadius", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
/**
 * EveMissile
 * @ccp EveMissile
 * Todo: Implement "boundingSphereRadius"
 * Todo: Implement "modelTranslationCurve"
 * Todo: Are "curveSets" deprecated?
 *
 * @property {String} name                                                  -
 * @property {Boolean} display                                              -
 * @property {Array} warheads                                               -
 * @property {Array} curveSets                                              -
 * @property {vec3} boundingSphereCenter                                    -
 * @property {Number} boundingSphereRadius                                  -
 * @property {Tr2TranslationAdapter} modelTranslationCurve                  -
 * @property {Number} speed                                                 -
 * @property {vec3} _position                                               -
 * @property {vec3} _target                                                 -
 * @property {?function(EveMissileWarhead): void} _warheadExplosionCallback -
 * @property {?function(EveMissile): void} _missileFinishedCallback         -
 */

EveMissileWarhead.perObjectData = {
  vs: [["WorldMat", 16], ["WorldMatLast", 16], ["Shipdata", [0, 1, 0, -10]], ["Clipdata1", 4], ["JointMat", 696]],
  ps: [["Shipdata", [0, 1, 0, 1]], ["Clipdata1", 4], ["Clipdata2", 4]]
};
EveMissileWarhead.State = {
  READY: 0,
  IN_FLIGHT: 1,
  DEAD: 2
};
EveMissileWarhead.__isStaging = 2;
class EveMissile extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.boundingSphereCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundingSphereRadius = 0;
    this.modelTranslationCurve = null;
    this.warheads = [];
    this.curveSets = [];
    this.speed = 1;
    this._position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._target = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._warheadExplosionCallback = null;
    this._missileFinishedCallback = null;
  }

  /**
   * Sets a callback which is fired when a warhead explodes
   * @param {Function} callback
   */
  OnWarheadExplosion(callback) {
    this._warheadExplosionCallback = callback;
  }
  /**
   * Sets a callback which is fired when a missile has finished
   * @param {Function} callback
   */


  OnMissileFinished(callback) {
    this._missileFinishedCallback = callback;
  }
  /**
   * Prepares missile for rendering
   * @param {vec3} position - Missile starting _position
   * @param {Array} turretTransforms - Turret muzzle local to world transforms
   * @param {vec3} target - Target position
   */


  Launch(position, turretTransforms, target) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this._position, position);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(this._target, target);

    if (this.warheads.length > turretTransforms.length) {
      this.warheads.splice(turretTransforms.length);
    } else {
      while (this.warheads.length < turretTransforms.length) {
        this.warheads.push(this.constructor.CloneWarhead(this.warheads[0]));
      }
    }

    for (let i = 0; i < this.warheads.length; ++i) {
      this.warheads[0].Launch(turretTransforms[i]);
    }
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    for (let i = 0; i < this.warheads.length; ++i) {
      this.warheads[i].GetResources(out);
    }

    return out;
  }
  /**
   * Per frame view dependent data update
   */


  UpdateViewDependentData() {
    for (let i = 0; i < this.warheads.length; ++i) {
      this.warheads[i].UpdateViewDependentData();
    }
  }
  /**
   * Per frame update
   * @param {Number} dt - Time since previous frame
   */


  Update(dt) {
    const tmp = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(_legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"].global.vec3_0, this._target, this._position),
          distance = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].length(tmp);

    if (distance > 0.1) {
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(tmp, tmp);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(tmp, tmp, Math.min(dt * this.speed, distance));
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(this._position, this._position, tmp);
    }

    for (let i = 0; i < this.curveSets.length; ++i) {
      this.curveSets[i].Update(dt);
    }

    let checkDead = false;

    for (let i = 0; i < this.warheads.length; ++i) {
      const _state = this.warheads[i]._state;
      this.warheads[i].Update(dt, this._position, this._target);

      if (_state !== EveMissileWarhead.State.DEAD && this.warheads[i]._state === EveMissileWarhead.State.DEAD) {
        if (this._warheadExplosionCallback) {
          this._warheadExplosionCallback(this.warheads[i]);
        }

        checkDead = true;
      }
    }

    if (checkDead && this._missileFinishedCallback) {
      for (let i = 0; i < this.warheads.length; ++i) {
        if (this.warheads[i]._state !== EveMissileWarhead.State.DEAD) {
          return;
        }
      }

      this._missileFinishedCallback(this);
    }
  }
  /**
   * Accumulates render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (!this.display) return;

    for (let i = 0; i < this.warheads.length; ++i) {
      this.warheads[i].GetBatches(mode, accumulator);
    }
  }
  /**
   * Clones a warhead
   * @param {EveMissileWarhead} sourceWarhead
   * @returns {EveMissileWarhead}
   */


  static CloneWarhead(sourceWarhead) {
    const warhead = new EveMissileWarhead();
    warhead.mesh = sourceWarhead.mesh;
    warhead.spriteSet = sourceWarhead.spriteSet;
    return warhead;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["boundingSphereCenter", r.vector3], ["boundingSphereRadius", r.float], ["modelTranslationCurve", r.object], ["name", r.string], ["warheads", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveMissile.__isStaging = 2;

/***/ }),

/***/ "./eve/object/EveMobile.js":
/*!*********************************!*\
  !*** ./eve/object/EveMobile.js ***!
  \*********************************/
/*! exports provided: EveMobile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveMobile", function() { return EveMobile; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legacy/EveObject */ "./eve/object/legacy/EveObject.js");


/**
 * EveMobile
 * TODO: Implement
 * @ccp EveMobile
 *
 * @property {String} name                         -
 * @property {Array.<EveObjectSet>} attachments    -
 * @property {vec3} boundingSphereCenter           -
 * @property {Number} boundingSphereRadius         -
 * @property {Array.<EveObject>} children          -
 * @property {Array.<StateController>} controllers -
 * @property {Array.<Tw2CurveSet>} curveSets       -
 * @property {Array.<EveObjectSet>} locatorSets    -
 * @property {Tr2MeshLod} meshLod                  -
 * @property {Array.<TriObserverLocal>} observers  -
 * @property {Tr2Effect} shadowEffect              -
 */

class EveMobile extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.attachments = [];
    this.boundingSphereCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundingSphereRadius = 0;
    this.children = [];
    this.controllers = [];
    this.curveSets = [];
    this.locatorSets = [];
    this.meshLod = null;
    this.observers = [];
    this.shadowEffect = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["attachments", r.array], ["boundingSphereCenter", r.vector3], ["boundingSphereRadius", r.float], ["children", r.array], ["controllers", r.array], ["curveSets", r.array], ["locatorSets", r.array], ["name", r.string], ["meshLod", r.object], ["observers", r.array], ["shadowEffect", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveMobile.__isStaging = 4;

/***/ }),

/***/ "./eve/object/EveRootTransform.js":
/*!****************************************!*\
  !*** ./eve/object/EveRootTransform.js ***!
  \****************************************/
/*! exports provided: EveRootTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveRootTransform", function() { return EveRootTransform; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legacy/EveObject */ "./eve/object/legacy/EveObject.js");


/**
 * EveRootTransform
 * TODO: Implement
 * @ccp EveRootTransform
 *
 * @property {String} name                       -
 * @property {Number} boundingSphereRadius       -
 * @property {Array.<EveObject>} children        -
 * @property {Array.<Tw2CurveSet>} curveSets     -
 * @property {Boolean} display                   -
 * @property {Tw2Mesh} mesh                      -
 * @property {Number} modifier                   -
 * @property {Array} observers                   -
 * @property {quat} rotation                     -
 * @property {Tr2CurveConstant} rotationCurve    -
 * @property {vec3} scaling                      -
 * @property {Number} sortValueMultiplier        -
 * @property {vec3} translation                  -
 * @property {Tr2CurveConstant} translationCurve -
 */

class EveRootTransform extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.boundingSphereRadius = 0;
    this.children = [];
    this.curveSets = [];
    this.display = false;
    this.mesh = null;
    this.modifier = 0;
    this.observers = [];
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.rotationCurve = null;
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.sortValueMultiplier = 0;
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.translationCurve = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boundingSphereRadius", r.float], ["children", r.array], ["curveSets", r.array], ["display", r.boolean], ["mesh", r.object], ["modifier", r.uint], ["name", r.string], ["observers", r.array], ["position", r.vector3], ["rotation", r.vector4], ["rotationCurve", r.object], ["scaling", r.vector3], ["sortValueMultiplier", r.float], ["translation", r.vector3], ["translationCurve", r.object], ["useDistanceBasedScale", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveRootTransform.__isStaging = 4;

/***/ }),

/***/ "./eve/object/EveShip2.js":
/*!********************************!*\
  !*** ./eve/object/EveShip2.js ***!
  \********************************/
/*! exports provided: EveShip2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveShip2", function() { return EveShip2; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legacy/EveObject */ "./eve/object/legacy/EveObject.js");


/**
 * EveShip2
 * TODO: Implement
 * @ccp EveShip2
 *
 * @property {Array.<EveObjectSet>} attachments        -
 * @property {EveBoosterSet2} boosters                 -
 * @property {vec3} boundingSphereCenter               -
 * @property {Number} boundingSphereRadius             -
 * @property {Array.<EveObject>} children              -
 * @property {Array.<EveCustomMask>} customMasks       -
 * @property {Array.<EveSpaceObjectDecal>} decals      -
 * @property {String} dna                              -
 * @property {Array.<EveLocatorSets>} locatorSets      -
 * @property {Array.<EveLocator2>} locators            -
 * @property {Tw2Mesh|Tw2InstancedMesh|Tr2MeshLod} mesh -
 * @property {Curve|CurveAdapter} rotationCurve        -
 * @property {Tr2Effect} shadowEffect                  -
 * @property {vec3} shapeEllipsoidCenter               -
 * @property {vec3} shapeEllipsoidRadius               -
 * @property {Curve|CurveAdapter} translationCurve     -
 */

class EveShip2 extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.attachments = [];
    this.boosters = null;
    this.boundingSphereCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundingSphereRadius = 0;
    this.children = [];
    this.customMasks = [];
    this.decals = [];
    this.dna = "";
    this.locatorSets = [];
    this.locators = [];
    this.mesh = null;
    this.rotationCurve = null;
    this.shadowEffect = null;
    this.shapeEllipsoidCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.shapeEllipsoidRadius = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.translationCurve = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["attachments", r.array], ["boosters", r.object], ["boundingSphereCenter", r.vector3], ["boundingSphereRadius", r.float], ["children", r.array], ["customMasks", r.array], ["decals", r.array], ["dna", r.string], ["locatorSets", r.array], ["locators", r.array], ["mesh", r.object], ["name", r.string], ["meshLod", r.object], ["rotationCurve", r.object], ["shadowEffect", r.object], ["shapeEllipsoidCenter", r.vector3], ["shapeEllipsoidRadius", r.vector3], ["translationCurve", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveShip2.__isStaging = 4;
EveShip2.__isShip = true;

/***/ }),

/***/ "./eve/object/EveStation2.js":
/*!***********************************!*\
  !*** ./eve/object/EveStation2.js ***!
  \***********************************/
/*! exports provided: EveStation2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveStation2", function() { return EveStation2; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./legacy/EveObject */ "./eve/object/legacy/EveObject.js");


/**
 * EveStation2
 * TODO: Implement
 * @ccp EveStation2
 *
 * @property {Array.<EveObjectSet>} attachments       -
 * @property {vec3} boundingSphereCenter              -
 * @property {Number} boundingSphereRadius            -
 * @property {Array.<EveObject>} children             -
 * @property {Array.<Tw2CurveSet>} curveSets          -
 * @property {Array.<EveSpaceObjectDecal>} decals     -
 * @property {Array.<EveChild>} effectChildren        -
 * @property {Array.<Tr2PointLight>} lights           -
 * @property {Array.<EveLocatorSets>} locatorSets     -
 * @property {Array.<EveLocator2>} locators           -
 * @property {Tw2Mesh} mesh                           -
 * @property {Tr2MeshLod} meshLod                     -
 * @property {Tr2RotationAdapter} modelRotationCurve  -
 * @property {Number} modelScale                      -
 * @property {Array.<TriObserverLocal>} observers     -
 * @property {Tr2RotationAdapter} rotationCurve       -
 * @property {Tr2Effect} shadowEffect                 -
 * @property {Tr2TranslationAdapter} translationCurve -
 */

class EveStation2 extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_1__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.attachments = [];
    this.boundingSphereCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundingSphereRadius = 0;
    this.children = [];
    this.curveSets = [];
    this.decals = [];
    this.effectChildren = [];
    this.lights = [];
    this.locatorSets = [];
    this.locators = [];
    this.mesh = null;
    this.meshLod = null;
    this.modelRotationCurve = null;
    this.modelScale = 0;
    this.observers = [];
    this.rotationCurve = null;
    this.shadowEffect = null;
    this.translationCurve = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["attachments", r.array], ["boundingSphereCenter", r.vector3], ["boundingSphereRadius", r.float], ["children", r.array], ["curveSets", r.array], ["decals", r.array], ["effectChildren", r.array], ["lights", r.array], ["locatorSets", r.array], ["locators", r.array], ["name", r.string], ["mesh", r.object], ["meshLod", r.object], ["modelScale", r.float], ["observers", r.array], ["rotationCurve", r.object], ["modelRotationCurve", r.object], ["shadowEffect", r.object], ["translationCurve", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveStation2.__isStaging = 4;

/***/ }),

/***/ "./eve/object/EveTransform.js":
/*!************************************!*\
  !*** ./eve/object/EveTransform.js ***!
  \************************************/
/*! exports provided: EveTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveTransform", function() { return EveTransform; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./legacy/EveObject */ "./eve/object/legacy/EveObject.js");



/**
 * EveTransform
 * TODO: Implement "distanceBasedScaleArg1"
 * TODO: Implement "distanceBasedScaleArg2"
 * TODO: Implement "overrideBoundsMax"
 * TODO: Implement "overrideBoundsMin"
 * TODO: Implement "sortValueMultiplier"
 * TODO: Implement "useDistanceBasedScale"
 * TODO: Implement "useLodLevel"
 * TODO: Implement "visibilityThreshold"
 * @ccp EveTransform
 *
 * @property {String} name                                                 -
 * @property {Array.<EveObject>} children                                  -
 * @property {Array.<Tw2CurveSet>} curveSets                               -
 * @property {Boolean} display                                             -
 * @property {Number} distanceBasedScaleArg1                               -
 * @property {Number} distanceBasedScaleArg2                               -
 * @property {Boolean} hideOnLowQuality                                    -
 * @property {Tw2Mesh|Tr2MeshLod} mesh                                     -
 * @property {Number} modifier                                             -
 * @property {Array.<TriObserverLocal>} observers                          -
 * @property {vec3} overrideBoundsMax                                      -
 * @property {vec3} overrideBoundsMin                                      -
 * @property {Array.<ParticleEmitter|ParticleEmitterGPU>} particleEmitters -
 * @property {Array.<ParticleSystem>} particleSystems                      -
 * @property {quat} rotation                                               -
 * @property {vec3} scaling                                                -
 * @property {Number} sortValueMultiplier                                  -
 * @property {vec3} translation                                            -
 * @property {Boolean} update                                              -
 * @property {Boolean} useDistanceBasedScale                               -
 * @property {Boolean} useLodLevel                                         -
 * @property {Number} visibilityThreshold                                  -
 * @property {Object} visible                                              -
 * @property {mat4} localTransform                                         -
 * @property {mat4} worldTransform                                         -
 * @property {Tw2PerObjectData} _perObjectData                             -
 */

class EveTransform extends _legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.children = [];
    this.curveSets = [];
    this.display = true;
    this.distanceBasedScaleArg1 = 0.2;
    this.distanceBasedScaleArg2 = 0.63;
    this.hideOnLowQuality = false;
    this.mesh = null;
    this.modifier = EveTransform.Modifier.NONE;
    this.observers = [];
    this.overrideBoundsMax = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.overrideBoundsMin = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.particleEmitters = [];
    this.particleSystems = [];
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.sortValueMultiplier = 1.0;
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.update = false;
    this.useDistanceBasedScale = false;
    this.useLodLevel = false;
    this.visibilityThreshold = 0;
    this.visible = {
      mesh: true,
      children: true
    };
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveTransform.perObjectData);
  }

  /**
   * Initializes the EveTransform
   */
  Initialize() {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, this.translation, this.scaling);
  }
  /**
   * Sets the object's local transform
   * @param {mat4} m
   */


  SetTransform(m) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation(this.rotation, m);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getScaling(this.scaling, m);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getTranslation(this.translation, m);
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.mesh) this.mesh.GetResources(out);

    for (let i = 0; i < this.children.length; i++) {
      this.children[i].GetResources(out);
    }

    return out;
  }
  /**
   * Per frame update
   * @param {mat4} parentTransform
   */


  UpdateViewDependentData(parentTransform) {
    const d = global__WEBPACK_IMPORTED_MODULE_0__["device"],
          g = _legacy_EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"].global,
          finalScale = g.vec3_0,
          parentScale = g.vec3_1,
          dir = g.vec3_2,
          viewInv = d.viewInverse;

    if (!parentTransform) {
      parentTransform = g.mat4_ID;
    }

    global__WEBPACK_IMPORTED_MODULE_0__["quat"].normalize(this.rotation, this.rotation);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, this.translation, this.scaling);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getScaling(parentScale, parentTransform);

    switch (this.modifier) {
      case EveTransform.Modifier.BILLBOARD:
      case EveTransform.Modifier.SIMPLE_HALO:
        const dirNorm = g.vec3_3;
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.worldTransform, parentTransform, this.localTransform);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].multiply(finalScale, this.scaling, parentScale);

        if (this.modifier === EveTransform.Modifier.SIMPLE_HALO) {
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(dir, d.GetEyePosition(dir), this.worldTransform.subarray(12));
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(dirNorm, this.worldTransform.subarray(8));
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(dir, dir);
          let scale = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(dir, dirNorm);
          if (scale < 0) scale = 0;
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(finalScale, finalScale, scale * scale);
        }

        this.worldTransform[0] = viewInv[0] * finalScale[0];
        this.worldTransform[1] = viewInv[1] * finalScale[0];
        this.worldTransform[2] = viewInv[2] * finalScale[0];
        this.worldTransform[4] = viewInv[4] * finalScale[1];
        this.worldTransform[5] = viewInv[5] * finalScale[1];
        this.worldTransform[6] = viewInv[6] * finalScale[1];
        this.worldTransform[8] = viewInv[8] * finalScale[2];
        this.worldTransform[9] = viewInv[9] * finalScale[2];
        this.worldTransform[10] = viewInv[10] * finalScale[2];
        break;

      case EveTransform.Modifier.EVE_CAMERA_ROTATION:
        const translation = g.vec3_3;
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(translation, this.translation, parentTransform);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, translation, this.scaling);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.worldTransform, viewInv, this.localTransform);
        this.worldTransform[12] = this.localTransform[12];
        this.worldTransform[13] = this.localTransform[13];
        this.worldTransform[14] = this.localTransform[14];
        break;

      case EveTransform.Modifier.EVE_CAMERA_ROTATION_ALIGNED:
      case EveTransform.Modifier.EVE_SIMPLE_HALO:
        const camFwd = g.vec3_3,
              right = g.vec3_4,
              up = g.vec3_5,
              forward = g.vec3_6,
              dirToCamNorm = g.vec3_7,
              parentT = g.mat4_0,
              alignMat = g.mat4_1,
              rotationT = g.mat4_2; // 3 4 3 3 3 4 3 3

        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].translate(this.worldTransform, parentTransform, this.translation);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(parentT, parentTransform);
        d.GetEyePosition(dir);
        dir[0] -= this.worldTransform[12];
        dir[1] -= this.worldTransform[13];
        dir[2] -= this.worldTransform[14];
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(camFwd, dir);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(camFwd, camFwd, parentT);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].divide(camFwd, camFwd, parentScale);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(camFwd, camFwd);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(right, d.view[0], d.view[4], d.view[8]);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(right, right, parentT);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(right, right);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(up, camFwd, right);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(up, up);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(right, up, camFwd);
        alignMat[0] = right[0];
        alignMat[1] = right[1];
        alignMat[2] = right[2];
        alignMat[4] = up[0];
        alignMat[5] = up[1];
        alignMat[6] = up[2];
        alignMat[8] = camFwd[0];
        alignMat[9] = camFwd[1];
        alignMat[10] = camFwd[2];
        alignMat[15] = 1;
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromQuat(rotationT, this.rotation);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(alignMat, alignMat, rotationT);

        if (this.modifier === EveTransform.Modifier.EVE_SIMPLE_HALO) {
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(forward, this.worldTransform.subarray(8));
          global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(dirToCamNorm, dir);
          let scale = -global__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(dirToCamNorm, forward);
          if (scale < 0) scale = 0;
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.worldTransform, this.worldTransform, alignMat);
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].scale(this.worldTransform, this.worldTransform, [this.scaling[0] * scale, this.scaling[1] * scale, this.scaling[2] * scale]);
        } else {
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].scale(this.worldTransform, this.worldTransform, this.scaling);
          global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.worldTransform, this.worldTransform, alignMat);
        }

        break;

      case EveTransform.Modifier.LOOK_AT_CAMERA:
        const lookAt = g.mat4_0;
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.worldTransform, parentTransform, this.localTransform);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].lookAt(lookAt, viewInv.subarray(12), this.worldTransform.subarray(12), [0, 1, 0]);
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(lookAt, lookAt);
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].multiply(finalScale, this.scaling, parentScale);
        this.worldTransform[0] = lookAt[0] * finalScale[0];
        this.worldTransform[1] = lookAt[1] * finalScale[0];
        this.worldTransform[2] = lookAt[2] * finalScale[0];
        this.worldTransform[4] = lookAt[4] * finalScale[1];
        this.worldTransform[5] = lookAt[5] * finalScale[1];
        this.worldTransform[6] = lookAt[6] * finalScale[1];
        this.worldTransform[8] = lookAt[8] * finalScale[2];
        this.worldTransform[9] = lookAt[9] * finalScale[2];
        this.worldTransform[10] = lookAt[10] * finalScale[2];
        break;

      default:
        global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.worldTransform, parentTransform, this.localTransform);
    }

    for (let i = 0; i < this.children.length; ++i) {
      this.children[i].UpdateViewDependentData(this.worldTransform);
    }
  }
  /**
   * Per frame update
   * @param {Number} dt - delta time
   */


  Update(dt) {
    for (let i = 0; i < this.children.length; ++i) {
      this.children[i].Update(dt);
    }

    for (let i = 0; i < this.particleEmitters.length; ++i) {
      this.particleEmitters[i].Update(dt);
    }

    for (let i = 0; i < this.particleSystems.length; ++i) {
      this.particleSystems[i].Update(dt);
    }

    for (let i = 0; i < this.curveSets.length; ++i) {
      this.curveSets[i].Update(dt);
    }
  }
  /**
   * Gets render batches for accumulation
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   * @param {Tw2PerObjectData} [perObjectData]
   */


  GetBatches(mode, accumulator, perObjectData) {
    if (!this.display) return;

    if (this.visible.mesh && this.mesh) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.ffe.Get("World"), this.worldTransform);
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this._perObjectData.ffe.Get("WorldInverseTranspose"), this.worldTransform);

      if (perObjectData) {
        this._perObjectData.vs = perObjectData.vs;
        this._perObjectData.ps = perObjectData.ps;
      }

      this.mesh.GetBatches(mode, accumulator, this._perObjectData);
    }

    if (this.visible.children) {
      for (let i = 0; i < this.children.length; ++i) {
        this.children[i].GetBatches(mode, accumulator, perObjectData);
      }
    }
  }
  /**
   * multiply3x3
   */


  static Multiply3x3(a, b, c) {
    c || (c = b);
    let d = b[0],
        e = b[1];
    b = b[2];
    c[0] = a[0] * d + a[4] * e + a[8] * b;
    c[1] = a[1] * d + a[5] * e + a[9] * b;
    c[2] = a[2] * d + a[6] * e + a[10] * b;
    return c;
  }
  /**
   * Per object data
   * @type {*}
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["children", r.array], ["curveSets", r.array], ["display", r.boolean], ["distanceBasedScaleArg1", r.float], ["distanceBasedScaleArg2", r.float], ["hideOnLowQuality", r.boolean], ["name", r.string], ["mesh", r.object], ["meshLod", r.object], ["modifier", r.uint], ["observers", r.array], ["overrideBoundsMax", r.vector3], ["overrideBoundsMin", r.vector3], ["particleEmitters", r.array], ["particleSystems", r.array], ["rotation", r.vector4], ["scaling", r.vector3], ["sortValueMultiplier", r.float], ["translation", r.vector3], ["update", r.boolean], ["useDistanceBasedScale", r.boolean], ["useLodLevel", r.boolean], ["visibilityThreshold", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveTransform.perObjectData = {
  ffe: [["World", 16], ["WorldInverseTranspose", 16]]
};
EveTransform.Modifier = {
  NONE: 0,
  BILLBOARD: 1,
  TRANSLATE_WITH_CAMERA: 2,
  LOOK_AT_CAMERA: 3,
  SIMPLE_HALO: 4,
  EVE_CAMERA_ROTATION_ALIGNED: 100,
  EVE_BOOSTER: 101,
  EVE_SIMPLE_HALO: 102,
  EVE_CAMERA_ROTATION: 103
};
EveTransform.__isStaging = 1;

/***/ }),

/***/ "./eve/object/index.js":
/*!*****************************!*\
  !*** ./eve/object/index.js ***!
  \*****************************/
/*! exports provided: EveEffectRoot2, EveMissileWarhead, EveMissile, EveMobile, EveRootTransform, EveShip2, EveStation2, EveTransform, EveEffectRoot, EvePlanet, EveShip, EveSpaceObject, EveStation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _legacy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legacy */ "./eve/object/legacy/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveEffectRoot", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EveEffectRoot"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlanet", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EvePlanet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveShip", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EveShip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpaceObject", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EveSpaceObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStation", function() { return _legacy__WEBPACK_IMPORTED_MODULE_0__["EveStation"]; });

/* harmony import */ var _EveEffectRoot2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveEffectRoot2 */ "./eve/object/EveEffectRoot2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveEffectRoot2", function() { return _EveEffectRoot2__WEBPACK_IMPORTED_MODULE_1__["EveEffectRoot2"]; });

/* harmony import */ var _EveMissile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveMissile */ "./eve/object/EveMissile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMissileWarhead", function() { return _EveMissile__WEBPACK_IMPORTED_MODULE_2__["EveMissileWarhead"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMissile", function() { return _EveMissile__WEBPACK_IMPORTED_MODULE_2__["EveMissile"]; });

/* harmony import */ var _EveMobile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveMobile */ "./eve/object/EveMobile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveMobile", function() { return _EveMobile__WEBPACK_IMPORTED_MODULE_3__["EveMobile"]; });

/* harmony import */ var _EveRootTransform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveRootTransform */ "./eve/object/EveRootTransform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveRootTransform", function() { return _EveRootTransform__WEBPACK_IMPORTED_MODULE_4__["EveRootTransform"]; });

/* harmony import */ var _EveShip2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveShip2 */ "./eve/object/EveShip2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveShip2", function() { return _EveShip2__WEBPACK_IMPORTED_MODULE_5__["EveShip2"]; });

/* harmony import */ var _EveStation2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveStation2 */ "./eve/object/EveStation2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStation2", function() { return _EveStation2__WEBPACK_IMPORTED_MODULE_6__["EveStation2"]; });

/* harmony import */ var _EveTransform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EveTransform */ "./eve/object/EveTransform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTransform", function() { return _EveTransform__WEBPACK_IMPORTED_MODULE_7__["EveTransform"]; });










/***/ }),

/***/ "./eve/object/legacy/EveEffectRoot.js":
/*!********************************************!*\
  !*** ./eve/object/legacy/EveEffectRoot.js ***!
  \********************************************/
/*! exports provided: EveEffectRoot */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveEffectRoot", function() { return EveEffectRoot; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObject */ "./eve/object/legacy/EveObject.js");
/* harmony import */ var _EveSpaceObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveSpaceObject */ "./eve/object/legacy/EveSpaceObject.js");




/**
 * EveEffectRoot root objects for FX, can be put into scene's objects array
 * TODO: Implement LOD
 *
 * @property {String} name
 * @property {Boolean} display
 * @property {[{}]} curveSets
 * @property {[{}]} effectChildren
 * @property {vec3} scaling
 * @property {quat} rotation
 * @property {vec3} translation
 * @property {mat4} localTransform
 * @property {vec3} boundingSphereCenter
 * @property {number} boundingSphereRadius
 * @property {number} duration
 * @property {Tw2PerObjectData} _perObjectData
 * @class
 */

class EveEffectRoot extends _EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.curveSets = [];
    this.effectChildren = [];
    this.duration = 0;
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.localTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.boundingSphereCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundingSphereRadius = 0;
    this._worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(_EveSpaceObject__WEBPACK_IMPORTED_MODULE_3__["EveSpaceObject"].perObjectData);
  }

  /**
   * Sets the object's local transform
   * @param {mat4} m
   */
  SetTransform(m) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation(this.rotation, m);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getScaling(this.scaling, m);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].getTranslation(this.translation, m);
  }
  /**
   * Gets effect root res objects
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2EffectRes|Tw2TextureRes>} [out]
   */


  GetResources(out = []) {
    for (let i = 0; i < this.effectChildren.length; ++i) {
      this.effectChildren[i].GetResources(out);
    }

    return out;
  }
  /**
   * Starts playing the effectRoot's curveSets if they exist
   */


  Start() {
    for (let i = 0; i < this.curveSets.length; ++i) {
      this.curveSets[i].Play();
    }
  }
  /**
   * Stops the effectRoot's curveSets from playing
   */


  Stop() {
    for (let i = 0; i < this.curveSets.length; ++i) {
      this.curveSets[i].Stop();
    }
  }
  /**
   * Internal per frame update
   * @param {undefined|mat4} parentTransform
   */


  UpdateViewDependentData(parentTransform) {
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromRotationTranslationScale(this.localTransform, this.rotation, this.translation, this.scaling);

    if (parentTransform) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this._worldTransform, parentTransform, this.localTransform);
    } else {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._worldTransform, this.localTransform);
    }
  }
  /**
   * Internal per frame update
   * @param {number} dt - Delta Time
   */


  Update(dt) {
    for (let i = 0; i < this.curveSets.length; ++i) {
      this.curveSets[i].Update(dt);
    }

    for (let i = 0; i < this.effectChildren.length; ++i) {
      this.effectChildren[i].Update(dt, this._worldTransform);
    }
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (!this.display) return;

    for (let i = 0; i < this.effectChildren.length; ++i) {
      this.effectChildren[i].GetBatches(mode, accumulator, this._perObjectData);
    }
  }

}

/***/ }),

/***/ "./eve/object/legacy/EveObject.js":
/*!****************************************!*\
  !*** ./eve/object/legacy/EveObject.js ***!
  \****************************************/
/*! exports provided: EveObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveObject", function() { return EveObject; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _dec2, _dec3, _dec4, _class, _class2, _class3, _temp;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

let EveObject = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec3 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec4 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_class2 = (_temp = _class3 = class EveObject extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.display = true;
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]]
   * @returns {Array<Tw2Resource>} out
   */
  GetResources(out = []) {}
  /**
   * Per frame update
   * @param {number} dt - delta time
   */


  Update(dt) {}
  /**
   * Accumulates batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {}
  /**
   * Global and scratch variables
   * @type {*}
   */


}, _class3.global = {
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_1: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_2: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_3: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_4: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_5: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_6: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_7: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create(),
  mat4_1: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create(),
  mat4_2: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create(),
  mat4_ID: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
}, _temp), (_applyDecoratedDescriptor(_class2.prototype, "GetResources", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "GetResources"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "Update", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "Update"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "GetBatches", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "GetBatches"), _class2.prototype)), _class2)) || _class);

/***/ }),

/***/ "./eve/object/legacy/EvePlanet.js":
/*!****************************************!*\
  !*** ./eve/object/legacy/EvePlanet.js ***!
  \****************************************/
/*! exports provided: EvePlanet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EvePlanet", function() { return EvePlanet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveTransform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../EveTransform */ "./eve/object/EveTransform.js");
/* harmony import */ var _EveObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveObject */ "./eve/object/legacy/EveObject.js");




/**
 * EvePlanet
 *
 * @property {EveTransform} highDetail               - The planet's model
 * @property {Tw2Effect} effectHeight                - The effect used to create the planet's height maps
 * @property {Tw2RenderTarget} heightMap             - A render target for the height map
 * @property {EveTransform} zOnlyModel               - The planet's z-only model
 * @property {number} itemID                         - The planet's item id, used for randomisation
 * @property {String} heightMapResPath1              - The res path for the planet's 1st height map
 * @property {String} heightMapResPath2              - The res path for the planet's 2nd height map
 * @property {Boolean} heightDirty                   - Identifies if the planet needs it's height map rebuilt
 * @property {Array} lockedResources                 - Resources which are keep alive until the height map is built
 * @property {Array.<Tw2Resource>} watchedResources  - Resources which are watched until the height map is built
 * @property {Number} _lod                           - The current lod level
 * @property {Boolean} _useLOD                       - Identifies if lod is being used
 * @property {EveTransform} _atmosphere              - A reference to the atmosphere used when creating the planet
 */

class EvePlanet extends _EveObject__WEBPACK_IMPORTED_MODULE_3__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.highDetail = new _EveTransform__WEBPACK_IMPORTED_MODULE_2__["EveTransform"]();
    this.effectHeight = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2Effect"]();
    this.heightMap = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2RenderTarget"]();
    this.zOnlyModel = null;
    this.itemID = 0;
    this.heightMapResPath1 = "";
    this.heightMapResPath2 = "";
    this.heightDirty = false;
    this.lockedResources = [];
    this.watchedResources = [];
    this._lod = 3;
    this._useLOD = true;
    this._atmosphere = null;
    this._planet = null;
  }

  /**
   * Creates the planet from an options object
   * @param {{}} options={}                   - an object containing the planet's options
   * @param {String} options.name             - the planet's name
   * @param {number} options.itemID           - the item id is used for randomization
   * @param {String} options.resPath          - .red file for a planet, or planet template
   * @param {String} [options.atmospherePath] - optional .red file for a planet's atmosphere
   * @param {String} options.heightMap1       - the planet's first height map
   * @param {String} options.heightMap2       - the planet's second height map
   * @param {function} [onLoaded]             - an optional callback which is fired when the planet has loaded
   */
  Create(options = {}, onLoaded) {
    const {
      name = "",
      itemID = 0,
      resPath,
      atmospherePath,
      heightMap1,
      heightMap2
    } = options;
    this.name = name;
    this.itemID = itemID;
    this.heightMapResPath1 = heightMap1;
    this.heightMapResPath2 = heightMap2;
    this.highDetail.children = [];
    this.heightDirty = true;
    let loadingParts = 1;
    if (resPath) loadingParts++;
    if (atmospherePath) loadingParts++;
    /**
     * Handles the optional onLoaded callback which is fired when all parts have loaded
     */

    function onPartLoaded() {
      loadingParts--;

      if (loadingParts < 1 && onLoaded) {
        onLoaded();
      }
    }

    if (resPath) {
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetObject(resPath, obj => {
        this._planet = obj;
        EvePlanet.MeshLoaded(this, obj);
        onPartLoaded();
      });
    }

    if (atmospherePath) {
      global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetObject(atmospherePath, obj => {
        this._atmosphere = obj;
        this.highDetail.children.push(obj);
        onPartLoaded();
      });
    }

    global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetObject("res:/dx9/model/worldobject/planet/planetzonly.red", obj => {
      this.zOnlyModel = obj;
      onPartLoaded();
    });
  }
  /**
   * Resets LOD
   */


  ResetLod() {
    this._lod = 3;
  }
  /**
   * Updates LOD
   * @param {Tw2Frustum}frustum
   */


  UpdateLod(frustum) {
    const {
      scaling,
      translation
    } = this.highDetail;
    this._lod = !this._useLOD || !frustum.IsSphereVisible(translation, scaling[0]) ? 0 : 3;
  }
  /**
   * Toggles LOD calculations
   * @param {Boolean} bool
   */


  UseLOD(bool) {
    this._useLOD = bool;
  }
  /**
   * Sets the object's local transform
   * @param {mat4} m
   */


  SetTransform(m) {
    this.highDetail.SetTransform(m);
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.highDetail) this.highDetail.GetResources(out);
    if (this.effectHeight) this.effectHeight.GetResources(out);
    return out;
  }
  /**
   * GetPlanetResources
   * Todo: Replace this, using this.GetResources();
   * @param obj
   * @param visited
   * @param result
   */


  GetPlanetResources(obj, visited, result) {
    if (visited.includes(obj)) return;
    visited.push(obj);

    if (obj && obj.constructor.__isResource) {
      result.push(obj);
      return;
    }

    for (let prop in obj) {
      if (obj.hasOwnProperty(prop)) {
        if (global__WEBPACK_IMPORTED_MODULE_0__["util"].isObjectLike(obj[prop])) {
          this.GetPlanetResources(obj[prop], visited, result);
        }
      }
    }
  }
  /**
   * Updates view dependent data
   * @param {mat4} parentTransform
   */


  UpdateViewDependentData(parentTransform) {
    this.highDetail.UpdateViewDependentData(parentTransform);

    if (this.zOnlyModel) {
      this.zOnlyModel.translation = this.highDetail.translation;
      this.zOnlyModel.scaling = this.highDetail.scaling;
      this.zOnlyModel.UpdateViewDependentData(parentTransform);
    }
  }
  /**
   * Per frame update
   * @param {number} dt - delta time
   */


  Update(dt) {
    if (this.display && this._useLOD) {
      this.highDetail.Update(dt);
    }
  }
  /**
   * Creates the planet's height map
   * TODO: Figure out why this doesn't always work
   */


  CreateHeightMap() {
    this.heightMap.Set();
    global__WEBPACK_IMPORTED_MODULE_0__["device"].SetStandardStates(global__WEBPACK_IMPORTED_MODULE_0__["device"].RM_FULLSCREEN);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.clearColor(0.0, 0.0, 0.0, 0.0);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.clear(global__WEBPACK_IMPORTED_MODULE_0__["device"].gl.COLOR_BUFFER_BIT);
    global__WEBPACK_IMPORTED_MODULE_0__["device"].RenderFullScreenQuad(this.effectHeight);
    this.heightMap.Unset();
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (this.display && this.heightDirty && this.watchedResources.length && this.heightMapResPath1 !== "") {
      for (let i = 0; i < this.watchedResources.length; ++i) {
        if (this.watchedResources[i] && !this.watchedResources[i].IsGood()) return;
      }

      this.watchedResources = [];
      this.CreateHeightMap();
      this.heightDirty = false;

      for (let i = 0; i < this.lockedResources.length; ++i) {
        if (!this.lockedResources[i]) continue;
        this.lockedResources[i].doNotPurge--;
      }

      const mainMesh = this.highDetail.children[0].mesh;
      let originalEffect = null;

      if (mainMesh.transparentAreas.length) {
        originalEffect = mainMesh.transparentAreas[0].effect;
      } else if (mainMesh.opaqueAreas.length) {
        originalEffect = mainMesh.opaqueAreas[0].effect;
      }

      if (originalEffect) {
        originalEffect.parameters["HeightMap"].textureRes = this.heightMap.texture;
      }
    }

    if (this.display && this._lod) {
      this.highDetail.GetBatches(mode, accumulator);
    }
  }
  /**
   * Gets z buffer only batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetZOnlyBatches(mode, accumulator) {
    if (this.display && this._lod && this.zOnlyModel) {
      this.zOnlyModel.GetBatches(mode, accumulator);
    }
  }
  /**
   * Internal helper function that fires when a planet's mesh has loaded
   * @property {EvePlanet} planet
   * @property {*} obj
   */


  static MeshLoaded(planet, obj) {
    planet.highDetail.children.unshift(obj);
    planet.lockedResources.splice(0);
    planet.GetPlanetResources(planet.highDetail, [], planet.lockedResources);
    let mainMesh = planet.highDetail.children[0].mesh,
        originalEffect = null,
        resPath;

    if (mainMesh.transparentAreas.length) {
      originalEffect = mainMesh.transparentAreas[0].effect;
      resPath = originalEffect.effectFilePath;
    } else if (mainMesh.opaqueAreas.length) {
      originalEffect = mainMesh.opaqueAreas[0].effect;
      resPath = originalEffect.effectFilePath;
    } else {
      resPath = "res:/Graphics/Effect/Managed/Space/Planet/EarthlikePlanet.fx";
    }

    resPath = resPath.replace(".fx", "BlitHeight.fx");
    planet.watchedResources.splice(0);

    for (let param in originalEffect.parameters) {
      if (originalEffect.parameters.hasOwnProperty(param)) {
        planet.effectHeight.parameters[param] = originalEffect.parameters[param];

        if ("textureRes" in originalEffect.parameters[param]) {
          planet.watchedResources.push(originalEffect.parameters[param].textureRes);
        }
      }
    }

    for (let i = 0; i < planet.highDetail.children[0].children.length; ++i) {
      mainMesh = planet.highDetail.children[0].children[i].mesh;
      if (!mainMesh) continue;
      originalEffect = null;

      if (mainMesh.transparentAreas.length) {
        originalEffect = mainMesh.transparentAreas[0].effect;
      } else if (mainMesh.opaqueAreas.length) {
        originalEffect = mainMesh.opaqueAreas[0].effect;
      } else {
        continue;
      }

      for (let param in originalEffect.parameters) {
        if (originalEffect.parameters.hasOwnProperty(param)) {
          planet.effectHeight.parameters[param] = originalEffect.parameters[param];

          if ("textureRes" in originalEffect.parameters[param]) {
            planet.watchedResources.push(originalEffect.parameters[param].textureRes);
          }
        }
      }
    }

    const NormalHeight1 = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"]("NormalHeight1", planet.heightMapResPath1);
    NormalHeight1.Initialize();
    planet.watchedResources.push(NormalHeight1.textureRes);
    planet.lockedResources.push(NormalHeight1.textureRes);
    planet.effectHeight.parameters.NormalHeight1 = NormalHeight1;
    const NormalHeight2 = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2TextureParameter"]("NormalHeight2", planet.heightMapResPath2);
    NormalHeight2.Initialize();
    planet.watchedResources.push(NormalHeight2.textureRes);
    planet.lockedResources.push(NormalHeight2.textureRes);
    planet.effectHeight.parameters.NormalHeight2 = NormalHeight2;
    planet.effectHeight.parameters.Random = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2FloatParameter"]("Random", planet.itemID % 100);
    planet.effectHeight.parameters.TargetTextureHeight = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2FloatParameter"]("TargetTextureHeight", 1024);
    planet.effectHeight.effectFilePath = resPath;
    planet.effectHeight.Initialize();
    planet.heightDirty = true;
    planet.heightMap.Create(2048, 1024, false);
    planet.watchedResources.push(planet.effectHeight.effectRes);

    for (let i = 0; i < planet.lockedResources.length; ++i) {
      if (!planet.lockedResources[i]) continue;
      planet.lockedResources[i].doNotPurge++;

      if (planet.lockedResources[i].IsPurged()) {
        planet.lockedResources[i].Reload();
      }
    }
  }
  /**
   * Identifies the object is a planet
   * @type {boolean}
   * @private
   */


}
EvePlanet.__isPlanet = true;

/***/ }),

/***/ "./eve/object/legacy/EveShip.js":
/*!**************************************!*\
  !*** ./eve/object/legacy/EveShip.js ***!
  \**************************************/
/*! exports provided: EveShip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveShip", function() { return EveShip; });
/* harmony import */ var _EveSpaceObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveSpaceObject */ "./eve/object/legacy/EveSpaceObject.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/util */ "./global/util/index.js");


/**
 * EveShip
 *
 * @property {Array.<EveBoosterSet>} boosters
 * @property {Array.<EveTurretSet>} turretSets
 * @property {number} boosterGain
 * @class
 */

class EveShip extends _EveSpaceObject__WEBPACK_IMPORTED_MODULE_0__["EveSpaceObject"] {
  constructor(...args) {
    super(...args);
    this.boosters = null;
    this.turretSets = [];
    this.boosterGain = 1;
  }

  /**
   * Initializes the Eve Ship
   */
  Initialize() {
    super.Initialize();

    if (this.boosters) {
      this.RebuildBoosterSet();
    }
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    super.GetResources(out);

    for (let i = 0; i < this.turretSets.length; i++) {
      this.turretSets[i].GetResources(out);
    }

    if (this.boosters) {
      this.boosters.GetResources(out);
    }

    return out;
  }
  /**
   * Rebuilds the ship's booster set
   */


  RebuildBoosterSet() {
    if (this.boosters) {
      this.boosters.UpdateItemsFromLocators(this.FindLocatorsByPrefix("locator_booster"));
    }
  }
  /**
   * Rebuilds turret sets
   */


  RebuildTurretPositions() {
    for (let i = 0; i < this.turretSets.length; i++) {
      this.RebuildTurretSet(i);
    }
  }
  /**
   * Rebuilds a turret set
   * @param {EveTurretSet|number} index
   */


  RebuildTurretSet(index) {
    // Allow rebuilding from a turret
    if (!Object(global_util__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(index)) {
      index = this.turretSets.indexOf(index);
    }

    if (this.turretSets[index] === undefined) return;
    const turretSet = this.turretSets[index],
          prefix = turretSet.locatorName,
          count = this.GetLocatorCount(prefix),
          locators = [];

    for (let j = 0; j < count; ++j) {
      const name = prefix + String.fromCharCode("a".charCodeAt(0) + j),
            locator = this.FindLocatorByName(name);

      if (locator) {
        locator.FindBone(this.animation);
        locators.push(locator);
      }
    }

    turretSet.UpdateItemsFromLocators(locators);
  }
  /**
   * Updates view dependant data
   * @param {mat4} parentTransform
   * @param {Number} dt
   */


  UpdateViewDependentData(parentTransform, dt) {
    super.UpdateViewDependentData(parentTransform, dt);

    for (let i = 0; i < this.turretSets.length; ++i) {
      this.turretSets[i].UpdateViewDependentData(this._worldTransform);
    }
  }
  /**
   * Per frame update
   * @param {number} dt - deltaTime
   */


  Update(dt) {
    super.Update(dt);

    if (this.boosters) {
      if (this.boosters._locatorDirty) {
        this.RebuildBoosterSet();
      }

      this.boosters.Update(dt, this._worldTransform, this._worldSpriteScale);
    }

    for (let i = 0; i < this.turretSets.length; ++i) {
      if (this.turretSets[i]._locatorDirty) {
        this.RebuildTurretSet(i);
      }

      this.turretSets[i].Update(dt);
    }
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (this.display) {
      super.GetBatches(mode, accumulator);
      this._perObjectData.vs.Get("Shipdata")[0] = this.boosterGain;
      this._perObjectData.ps.Get("Shipdata")[0] = this.boosterGain;

      if (this.boosters && this.visible.boosters) {
        this.boosters.GetBatches(mode, accumulator, this._perObjectData);
      }

      if (this.visible.turretSets) {
        if (this.lod > 1) {
          for (let i = 0; i < this.turretSets.length; ++i) {
            this.turretSets[i].GetBatches(mode, accumulator, this._perObjectData, this.visible.firingEffects);
          }
        } else if (this.visible.firingEffects) {
          for (let i = 0; i < this.turretSets.length; ++i) {
            if (this.turretSets[i].firingEffect) {
              this.turretSets[i].firingEffect.GetBatches(mode, accumulator, this._perObjectData);
            }
          }
        }
      }
    }
  }
  /**
   * Identifies the object is a ship
   * @type {boolean}
   * @private
   */


}
EveShip.__isShip = true;

/***/ }),

/***/ "./eve/object/legacy/EveSpaceObject.js":
/*!*********************************************!*\
  !*** ./eve/object/legacy/EveSpaceObject.js ***!
  \*********************************************/
/*! exports provided: EveSpaceObject, EveStation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpaceObject", function() { return EveSpaceObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveStation", function() { return EveSpaceObject; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _EveObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveObject */ "./eve/object/legacy/EveObject.js");
/* harmony import */ var _item__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../item */ "./eve/item/index.js");




/**
 * EveSpaceObject
 *
 * @property {String} name
 * @property {Boolean} display                             - Enables/ disables visibility
 * @property {{}} visible                                  - Visibility options for the space object's elements
 * @property {Boolean} visible.mesh                        - Enables/ disables mesh visibility
 * @property {Boolean} visible.children                    - Enables/ disables child visibility
 * @property {Boolean} visible.effectChildren              - Enables/ disables effect child visibility
 * @property {Boolean} visible.spriteSets                  - Enables/ disables sprite visibility
 * @property {Boolean} visible.decals                      - Enables/ disables decal visibility
 * @property {Boolean} visible.spotlightSets               - Enables/ disables spotlight visibility
 * @property {Boolean} visible.planeSets                   - Enables/ disables plane visibility
 * @property {Boolean} visible.lineSets                    - Enables/ disables lines visibility
 * @property {Boolean} visible.overlayEffects              - Enables/ disables overlay effect visibility
 * @property {Boolean} visible.killmarks                   - Enables/ disables killmark visibility
 * @property {Boolean} visible.customMasks                 - Enables/ disables custom mask visibility
 * @property {Boolean} visible.turretSets      - Enables/ disables turret set batch accumulation
 * @property {Boolean} visible.boosters        - Enables/ disables booster batch accumulation
 * @property {Number} lod
 * @property {Tw2Mesh} mesh
 * @property {Array.<EveLocator2>} locators
 * @property {Array.<EveSpriteSet>} spriteSets
 * @property {Array.<EveTurretSet>} turretSets
 * @property {Array.<EveSpaceObjectDecal>} decals
 * @property {Array.<EveSpotlightSet>} spotlightSets
 * @property {Array.<EvePlaneSet>} planeSets
 * @property {Array.<Tw2CurveSet>} curveSets
 * @property {Array.<EveCurveLineSet>} lineSets
 * @property {Array.<EveMeshOverlayEffect>} overlayEffects
 * @property {Array.<{}>} children
 * @property {vec3} boundingSphereCenter
 * @property {Number} boundingSphereRadius
 * @property {vec3} shapeEllipsoidRadius
 * @property {vec3} shapeEllipsoidCenter
 * @property {mat4} transform
 * @property {Tw2AnimationController} animation
 * @property {number} killCount                            - number of kills to show on kill counter decals
 * @property {Tw2PerObjectData} _perObjectData
 * @property {mat4} _worldTransform
 * @property {Number} _worldSpriteScale
 * @class
 */

class EveSpaceObject extends _EveObject__WEBPACK_IMPORTED_MODULE_2__["EveObject"] {
  constructor(...args) {
    super(...args);
    this.visible = {
      mesh: true,
      children: true,
      effectChildren: true,
      planeSets: true,
      spotlightSets: true,
      decals: true,
      spriteSets: true,
      overlayEffects: true,
      lineSets: true,
      killmarks: true,
      customMasks: true,
      turretSets: true,
      boosters: true
    };
    this.mesh = null;
    this.animation = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2AnimationController"]();
    this.locators = [];
    this.spriteSets = [];
    this.turretSets = [];
    this.decals = [];
    this.spotlightSets = [];
    this.planeSets = [];
    this.curveSets = [];
    this.lineSets = [];
    this.overlayEffects = [];
    this.children = [];
    this.effectChildren = [];
    this.customMasks = [];
    this.lod = 3;
    this.killCount = 0;
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.boundingSphereCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.boundingSphereRadius = 0;
    this.shapeEllipsoidRadius = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.shapeEllipsoidCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._worldSpriteScale = 1;
    this._worldTransform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this._perObjectData = core__WEBPACK_IMPORTED_MODULE_1__["Tw2PerObjectData"].from(EveSpaceObject.perObjectData);
  }

  /**
   * Initializes the EveSpaceObject
   */
  Initialize() {
    if (this.mesh) {
      this.animation.SetGeometryResource(this.mesh.geometryResource);

      for (let i = 0; i < this.decals.length; ++i) {
        this.decals[i].SetParentGeometry(this.mesh.geometryResource);
      }
    }
  }
  /**
   * Sets the object's local transform
   * @param {mat4} m
   * @param {mat4} offset
   */


  SetTransform(m, offset) {
    if (offset) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.transform, m, offset);
    } else {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this.transform, m);
    }
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.mesh) this.mesh.GetResources(out);
    if (this.animation) this.animation.GetResources(out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.spriteSets, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.turretSets, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.decals, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.spotlightSets, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.planeSets, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.lineSets, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.overlayEffects, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.effectChildren, "GetResources", out);
    global__WEBPACK_IMPORTED_MODULE_0__["util"].perArrayChild(this.children, "GetResources", out);
    return out;
  }
  /**
   * Resets the lod
   */


  ResetLod() {
    this.lod = 3;
  }
  /**
   * Updates the lod
   * @param {Tw2Frustum} frustum
   */


  UpdateLod(frustum) {
    if (!this._useLOD) {
      this.lod = 3;
    } else {
      const center = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformMat4(EveSpaceObject.global.vec3_0, this.boundingSphereCenter, this._worldTransform);

      if (frustum.IsSphereVisible(center, this.boundingSphereRadius)) {
        const size = frustum.GetPixelSizeAcross(center, this.boundingSphereRadius);

        if (size <= EveSpaceObject.LOD_THRESHOLD_NONE) {
          this.lod = 0;
        } else if (size <= EveSpaceObject.LOD_THRESHOLD_LOW) {
          this.lod = 1;
        } else if (size <= EveSpaceObject.LOD_THRESHOLD_MEDIUM) {
          this.lod = 2;
        } else {
          this.lod = 3;
        }
      } else {
        this.lod = 0;
      }
    }

    if (this.mesh && "SetQuality" in this.mesh) {
      this.mesh.SetQuality(3 - this.lod);
    }
  }
  /**
   * Toggles LOD calculations
   * @param {Boolean} bool
   */


  UseLOD(bool) {
    this._useLOD = bool;
  }
  /**
   * Finds all turret prefixes
   * @param {Array<String>} [out=[]] - Receiving array
   * @returns {Array<String>} out    - Receiving array
   */


  FindTurretPrefixes(out = []) {
    function add(match) {
      if (!match) return false;
      const name = match[0].substring(0, match[0].length - 1);
      if (!out.includes(name)) out.push(name);
      return true;
    }

    for (let i = 0; i < this.locators.length; i++) {
      const name = this.locators[i].name;

      if (!add(/^locator_turret_([0-9]+)[a-z]$/i.exec(name))) {
        add(/^locator_xl_([0-9]+)[a-z]$/i.exec(name));
      }
    }

    out.sort();
    return out;
  }
  /**
   * Gets locator count for a specific locator group
   * @param {String} prefix
   * @returns {number}
   */


  GetLocatorCount(prefix) {
    const locators = this.FindLocatorsByPrefix(prefix);
    return locators.length;
  }
  /**
   * Finds a locator's joint by name
   * @param {String} name
   * @returns {?mat4}
   */


  FindLocatorJointByName(name) {
    const locator = this.FindLocatorBoneByName(name);
    return locator ? locator.worldTransform : null;
  }
  /**
   * Finds a locator's transform by it's name
   * @param {String} name
   * @returns {?mat4}
   */


  FindLocatorTransformByName(name) {
    const locator = this.FindLocatorByName(name);
    return locator ? locator.transform : null;
  }
  /**
   * Checks if a locator prefix exists
   * @param {String} prefix
   * @returns {Boolean}
   */


  HasLocatorPrefix(prefix) {
    for (let i = 0; i < this.locators.length; i++) {
      if (this.locators[i].name.indexOf(prefix) === 0) {
        return true;
      }
    }

    return false;
  }
  /**
   * Finds a locator's bone by it's name
   * @param {String} name
   * @returns {?Tw2Bone} null if not found
   */


  FindLocatorBoneByName(name) {
    return this.animation.FindBoneForMesh(name, 0);
  }
  /**
   * Finds a locator by name
   * @param {String} name
   * @returns {?EveLocator2}
   */


  FindLocatorByName(name) {
    for (let i = 0; i < this.locators.length; i++) {
      if (this.locators[i].name === name) {
        return this.locators[i];
      }
    }

    return null;
  }
  /**
   * Finds locators with a given prefix
   * @param {String} prefix
   * @param {Array} [out=[]}
   * @returns {Array<EveLocator2>}
   */


  FindLocatorsByPrefix(prefix, out = []) {
    for (let i = 0; i < this.locators.length; i++) {
      if (this.locators[i].name.indexOf(prefix) === 0) {
        out.push(this.locators[i]);
      }
    }

    return out;
  }
  /**
   * A Per frame function that updates view dependent data
   * @param {undefined|mat4} parentTransform
   * @param {Number} dt
   */


  UpdateViewDependentData(parentTransform, dt) {
    if (parentTransform) {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this._worldTransform, parentTransform, this.transform);
    } else {
      global__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this._worldTransform, this.transform);
    }

    this._worldSpriteScale = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].maxScaleOnAxis(this._worldTransform);

    for (let i = 0; i < this.children.length; ++i) {
      this.children[i].UpdateViewDependentData(this._worldTransform);
    }

    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("WorldMat"), this._worldTransform);
    global__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this._perObjectData.vs.Get("WorldMatLast"), this._worldTransform);

    const center = this._perObjectData.vs.Get("EllipsoidCenter"),
          radii = this._perObjectData.vs.Get("EllipsoidRadii");

    if (this.shapeEllipsoidRadius[0] > 0) {
      center[0] = this.shapeEllipsoidCenter[0];
      center[1] = this.shapeEllipsoidCenter[1];
      center[2] = this.shapeEllipsoidCenter[2];
      radii[0] = this.shapeEllipsoidRadius[0];
      radii[1] = this.shapeEllipsoidRadius[1];
      radii[2] = this.shapeEllipsoidRadius[2];
    } else if (this.mesh && this.mesh.IsGood()) {
      const {
        maxBounds,
        minBounds
      } = this.mesh.geometryResource;
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(center, maxBounds, minBounds);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(center, center, 0.5 * 1.732050807);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(radii, maxBounds, minBounds);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(radii, radii, 0.5);
    }

    for (let i = 0; i < this.customMasks.length; ++i) {
      this.customMasks[i].UpdatePerObjectData(this._worldTransform, this._perObjectData, i, this.visible.customMasks);
    }

    if (this.animation.animations.length) {
      this._perObjectData.vs.Set("JointMat", this.animation.GetBoneMatrices(0));
    }

    for (let i = 0; i < this.lineSets.length; ++i) {
      this.lineSets[i].UpdateViewDependentData(this._worldTransform);
    }
  }
  /**
   * Per frame update
   * @param {Number} dt - delta time
   */


  Update(dt) {
    if (this.lod > 0) {
      for (let i = 0; i < this.spriteSets.length; ++i) {
        this.spriteSets[i].Update(dt, this._worldSpriteScale);
      }

      for (let i = 0; i < this.planeSets.length; i++) {
        this.planeSets[i].Update(dt);
      }

      for (let i = 0; i < this.spotlightSets.length; i++) {
        this.spotlightSets[i].Update(dt);
      }

      for (let i = 0; i < this.children.length; ++i) {
        this.children[i].Update(dt);
      }

      for (let i = 0; i < this.effectChildren.length; ++i) {
        this.effectChildren[i].Update(dt, this._worldTransform, this.lod);
      }

      for (let i = 0; i < this.curveSets.length; ++i) {
        this.curveSets[i].Update(dt);
      }

      for (let i = 0; i < this.overlayEffects.length; ++i) {
        this.overlayEffects[i].Update(dt);
      }

      for (let i = 0; i < this.lineSets.length; i++) {
        this.lineSets[i].Update(dt);
      }

      this.animation.Update(dt);
    }
  }
  /**
   * Gets render batches
   * @param {number} mode
   * @param {Tw2BatchAccumulator} accumulator
   */


  GetBatches(mode, accumulator) {
    if (this.display) {
      const show = this.visible;

      if (show.mesh && this.mesh && this.lod > 0) {
        this.mesh.GetBatches(mode, accumulator, this._perObjectData);
      }

      if (this.lod > 1) {
        if (show.spriteSets) {
          for (let i = 0; i < this.spriteSets.length; i++) {
            this.spriteSets[i].GetBatches(mode, accumulator, this._perObjectData, this._worldTransform);
          }
        }

        if (show.spotlightSets) {
          for (let i = 0; i < this.spotlightSets.length; i++) {
            this.spotlightSets[i].GetBatches(mode, accumulator, this._perObjectData);
          }
        }

        if (show.planeSets) {
          for (let i = 0; i < this.planeSets.length; i++) {
            this.planeSets[i].GetBatches(mode, accumulator, this._perObjectData);
          }
        }

        if (show.decals) {
          for (let i = 0; i < this.decals.length; i++) {
            this.decals[i].GetBatches(mode, accumulator, this._perObjectData, show.killmarks ? this.killCount : 0);
          }
        }

        if (show.lineSets) {
          for (let i = 0; i < this.lineSets.length; i++) {
            this.lineSets[i].GetBatches(mode, accumulator);
          }
        }

        if (show.overlayEffects && this.mesh && this.mesh.IsGood()) {
          for (let i = 0; i < this.overlayEffects.length; i++) {
            this.overlayEffects[i].GetBatches(mode, accumulator, this._perObjectData, this.mesh);
          }
        }
      }

      if (show.children) {
        for (let i = 0; i < this.children.length; i++) {
          this.children[i].GetBatches(mode, accumulator, this._perObjectData);
        }
      }

      if (show.effectChildren) {
        for (let i = 0; i < this.effectChildren.length; i++) {
          this.effectChildren[i]._parentLod = this.lod;
          this.effectChildren[i].GetBatches(mode, accumulator, this._perObjectData);
        }
      }
    }
  }
  /**
   * RenderDebugInfo
   * @param debugHelper
   */


  RenderDebugInfo(debugHelper) {
    this.animation.RenderDebugInfo(debugHelper);
  }
  /**
   * LOD threshold for hiding object
   * @type {number}
   */


}
EveSpaceObject.LOD_THRESHOLD_NONE = 100;
EveSpaceObject.LOD_THRESHOLD_LOW = 200;
EveSpaceObject.LOD_THRESHOLD_MEDIUM = 500;
EveSpaceObject.perObjectData = {
  vs: [["WorldMat", 16], ["WorldMatLast", 16], ["Shipdata", [0, 1, 0, -10]], ["Clipdata1", 4], ["EllipsoidRadii", 4], ["EllipsoidCenter", 4], ["CustomMaskMatrix0", global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity([])], ["CustomMaskMatrix1", global__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity([])], ["CustomMaskData0", [1, 0, 0, 0]], ["CustomMaskData1", [1, 0, 0, 0]], ["JointMat", 696]],
  ps: [["Shipdata", [0, 1, 0, 1]], ["Clipdata1", 4], ["Clipdata2", 4], ["ShLighting", 4 * 7], ["CustomMaskMaterialID0", 4], ["CustomMaskMaterialID1", 4], ["CustomMaskTarget0", 4], ["CustomMaskTarget1", 4]]
};


/***/ }),

/***/ "./eve/object/legacy/index.js":
/*!************************************!*\
  !*** ./eve/object/legacy/index.js ***!
  \************************************/
/*! exports provided: EveEffectRoot, EvePlanet, EveShip, EveSpaceObject, EveStation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveEffectRoot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveEffectRoot */ "./eve/object/legacy/EveEffectRoot.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveEffectRoot", function() { return _EveEffectRoot__WEBPACK_IMPORTED_MODULE_0__["EveEffectRoot"]; });

/* harmony import */ var _EvePlanet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EvePlanet */ "./eve/object/legacy/EvePlanet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EvePlanet", function() { return _EvePlanet__WEBPACK_IMPORTED_MODULE_1__["EvePlanet"]; });

/* harmony import */ var _EveShip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveShip */ "./eve/object/legacy/EveShip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveShip", function() { return _EveShip__WEBPACK_IMPORTED_MODULE_2__["EveShip"]; });

/* harmony import */ var _EveSpaceObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveSpaceObject */ "./eve/object/legacy/EveSpaceObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpaceObject", function() { return _EveSpaceObject__WEBPACK_IMPORTED_MODULE_3__["EveSpaceObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveStation", function() { return _EveSpaceObject__WEBPACK_IMPORTED_MODULE_3__["EveStation"]; });






/***/ }),

/***/ "./eve/particle/EveParticleDirectForce.js":
/*!************************************************!*\
  !*** ./eve/particle/EveParticleDirectForce.js ***!
  \************************************************/
/*! exports provided: EveParticleDirectForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveParticleDirectForce", function() { return EveParticleDirectForce; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var particle_force_Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! particle/force/Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");


/**
 * EveParticleDirectForce
 * Todo: Is this just a copy of Tw2ParticleDirectForce?
 *
 * @property {vec3} force -
 */

class EveParticleDirectForce extends particle_force_Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.force = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["force", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveParticleDirectForce.__isStaging = 4;

/***/ }),

/***/ "./eve/particle/EveParticleDragForce.js":
/*!**********************************************!*\
  !*** ./eve/particle/EveParticleDragForce.js ***!
  \**********************************************/
/*! exports provided: EveParticleDragForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveParticleDragForce", function() { return EveParticleDragForce; });
/* harmony import */ var particle_force_Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! particle/force/Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");

/**
 * EveParticleDragForce
 * Todo: Is this just a copy of Tw2ParticleDragForce?
 *
 * @property {Number} drag -
 */

class EveParticleDragForce extends particle_force_Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_0__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.drag = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["drag", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveParticleDragForce.__isStaging = 4;

/***/ }),

/***/ "./eve/particle/index.js":
/*!*******************************!*\
  !*** ./eve/particle/index.js ***!
  \*******************************/
/*! exports provided: EveParticleDirectForce, EveParticleDragForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveParticleDirectForce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveParticleDirectForce */ "./eve/particle/EveParticleDirectForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveParticleDirectForce", function() { return _EveParticleDirectForce__WEBPACK_IMPORTED_MODULE_0__["EveParticleDirectForce"]; });

/* harmony import */ var _EveParticleDragForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveParticleDragForce */ "./eve/particle/EveParticleDragForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveParticleDragForce", function() { return _EveParticleDragForce__WEBPACK_IMPORTED_MODULE_1__["EveParticleDragForce"]; });




/***/ }),

/***/ "./eve/pi/EveConnector.js":
/*!********************************!*\
  !*** ./eve/pi/EveConnector.js ***!
  \********************************/
/*! exports provided: EveConnector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveConnector", function() { return EveConnector; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveConnector
 * @ccp EveConnector
 * Todo: Implement
 *
 * @property {vec4} animationColor                -
 * @property {Number} animationScale              -
 * @property {Number} animationSpeed              -
 * @property {vec4} color                         -
 * @property {EveLocalPositionCurve} destObject   -
 * @property {vec3} destPosition                  -
 * @property {Boolean} isAnimated                 -
 * @property {Number} lineWidth                   -
 * @property {EveLocalPositionCurve} sourceObject -
 * @property {Number} type                        -
 */

class EveConnector extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.animationColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.animationScale = 0;
    this.animationSpeed = 0;
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.destObject = null;
    this.destPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.isAnimated = false;
    this.lineWidth = 0;
    this.sourceObject = null;
    this.type = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["animationColor", r.color], ["animationScale", r.float], ["animationSpeed", r.float], ["color", r.color], ["destObject", r.object], ["destPosition", r.vector3], ["isAnimated", r.boolean], ["lineWidth", r.float], ["sourceObject", r.object], ["sourcePosition", r.vector3], ["type", r.uint]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveConnector.__isStaging = 4;

/***/ }),

/***/ "./eve/pi/EveLocalPositionCurve.js":
/*!*****************************************!*\
  !*** ./eve/pi/EveLocalPositionCurve.js ***!
  \*****************************************/
/*! exports provided: EveLocalPositionCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveLocalPositionCurve", function() { return EveLocalPositionCurve; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveLocalPositionCurve
 * @ccp EveLocalPositionCurve
 * TODO: Implement
 *
 * @property {vec3} value -
 */

class EveLocalPositionCurve extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["value", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveLocalPositionCurve.__isStaging = 3;

/***/ }),

/***/ "./eve/pi/EveSpherePin.js":
/*!********************************!*\
  !*** ./eve/pi/EveSpherePin.js ***!
  \********************************/
/*! exports provided: EveSpherePin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSpherePin", function() { return EveSpherePin; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSpherePin
 * @ccp EveSpherePin
 * TODO: Implement
 *
 * @property {String} name                   -
 * @property {vec3} centerNormal             -
 * @property {vec4} color                    -
 * @property {Array.<Tw2CurveSet>} curveSets -
 * @property {Boolean} enablePicking         -
 * @property {String} geometryResPath        -
 * @property {vec4} pinColor                 -
 * @property {Tw2Effect} pinEffect           -
 * @property {Number} pinMaxRadius           -
 * @property {Number} pinRadius              -
 * @property {Number} pinRotation            -
 * @property {Number} sortValueMultiplier    -
 */

class EveSpherePin extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.centerNormal = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.curveSets = [];
    this.enablePicking = false;
    this.geometryResPath = "";
    this.pinColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.pinEffect = null;
    this.pinMaxRadius = 0;
    this.pinRadius = 0;
    this.pinRotation = 0;
    this.sortValueMultiplier = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["centerNormal", r.vector3], ["color", r.color], ["curveSets", r.array], ["enablePicking", r.boolean], ["geometryResPath", r.path], ["name", r.string], ["pinColor", r.color], ["pinEffect", r.object], ["pinMaxRadius", r.float], ["pinRadius", r.float], ["pinRotation", r.float], ["sortValueMultiplier", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveSpherePin.__isStaging = 4;

/***/ }),

/***/ "./eve/pi/index.js":
/*!*************************!*\
  !*** ./eve/pi/index.js ***!
  \*************************/
/*! exports provided: EveConnector, EveLocalPositionCurve, EveSpherePin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveConnector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveConnector */ "./eve/pi/EveConnector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveConnector", function() { return _EveConnector__WEBPACK_IMPORTED_MODULE_0__["EveConnector"]; });

/* harmony import */ var _EveLocalPositionCurve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveLocalPositionCurve */ "./eve/pi/EveLocalPositionCurve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveLocalPositionCurve", function() { return _EveLocalPositionCurve__WEBPACK_IMPORTED_MODULE_1__["EveLocalPositionCurve"]; });

/* harmony import */ var _EveSpherePin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveSpherePin */ "./eve/pi/EveSpherePin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSpherePin", function() { return _EveSpherePin__WEBPACK_IMPORTED_MODULE_2__["EveSpherePin"]; });





/***/ }),

/***/ "./eve/ui/EveTacticalOverlay.js":
/*!**************************************!*\
  !*** ./eve/ui/EveTacticalOverlay.js ***!
  \**************************************/
/*! exports provided: EveTacticalOverlay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveTacticalOverlay", function() { return EveTacticalOverlay; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveTacticalOverlay
 * @ccp EveTacticalOverlay
 * TODO: Implement
 *
 * @property {Tw2Effect} anchorEffect      -
 * @property {Number} arcSegmentMultiplier -
 * @property {Tw2Effect} connectorEffect   -
 * @property {Number} segmentsHigh         -
 * @property {Number} segmentsLow          -
 * @property {Number} segmentsMedium       -
 * @property {Number} targetMaxSegments    -
 * @property {Tw2Effect} velocityEffect    -
 */

class EveTacticalOverlay extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.anchorEffect = null;
    this.arcSegmentMultiplier = 0;
    this.connectorEffect = null;
    this.segmentsHigh = 0;
    this.segmentsLow = 0;
    this.segmentsMedium = 0;
    this.targetMaxSegments = 0;
    this.velocityEffect = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["anchorEffect", r.object], ["arcSegmentMultiplier", r.float], ["connectorEffect", r.object], ["segmentsLow", r.float], ["segmentsMedium", r.float], ["segmentsHigh", r.float], ["targetMaxSegments", r.float], ["velocityEffect", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveTacticalOverlay.__isStaging = 4;

/***/ }),

/***/ "./eve/ui/EveUiObject.js":
/*!*******************************!*\
  !*** ./eve/ui/EveUiObject.js ***!
  \*******************************/
/*! exports provided: EveUiObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveUiObject", function() { return EveUiObject; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveUiObject
 * @ccp EveUiObject
 * TODO: Implement
 *
 * @property {String} name                 -
 * @property {Number} boundingSphereRadius -
 * @property {Tw2Mesh} mesh                -
 * @property {Number} modelScale           -
 */

class EveUiObject extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.boundingSphereRadius = 0;
    this.mesh = null;
    this.modelScale = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boundingSphereRadius", r.float], ["name", r.string], ["mesh", r.object], ["modelScale", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
EveUiObject.__isStaging = 4;

/***/ }),

/***/ "./eve/ui/index.js":
/*!*************************!*\
  !*** ./eve/ui/index.js ***!
  \*************************/
/*! exports provided: EveTacticalOverlay, EveUiObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveTacticalOverlay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveTacticalOverlay */ "./eve/ui/EveTacticalOverlay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveTacticalOverlay", function() { return _EveTacticalOverlay__WEBPACK_IMPORTED_MODULE_0__["EveTacticalOverlay"]; });

/* harmony import */ var _EveUiObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveUiObject */ "./eve/ui/EveUiObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveUiObject", function() { return _EveUiObject__WEBPACK_IMPORTED_MODULE_1__["EveUiObject"]; });




/***/ }),

/***/ "./global/Tw2Library.js":
/*!******************************!*\
  !*** ./global/Tw2Library.js ***!
  \******************************/
/*! exports provided: tw2, resMan, device */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tw2", function() { return tw2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resMan", function() { return resMan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "device", function() { return device; });
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./meta */ "./global/meta/index.js");
/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./class */ "./global/class/index.js");
/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./engine */ "./global/engine/index.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math */ "./global/math/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ "./global/util/index.js");
/* harmony import */ var _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./engine/Tw2Constant */ "./global/engine/Tw2Constant.js");
/* harmony import */ var core_reader_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core/reader/Tw2BlackPropertyReaders */ "./core/reader/Tw2BlackPropertyReaders.js");
/* harmony import */ var core_Tw2Error__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core/Tw2Error */ "./core/Tw2Error.js");
var _class, _temp;

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }










/**
 *
 * @param {Tw2ResMan} resMan
 * @param {Tw2Device} device
 * @param {Tw2Logger} logger
 * @param {Object} math
 * @param {Object} util
 * @param {Object} consts
 * @param {Object} _store
 * @param {Boolean} _debug
 */

let Tw2Library = Object(_meta__WEBPACK_IMPORTED_MODULE_0__["singleton"])(_class = (_temp = class Tw2Library extends _class__WEBPACK_IMPORTED_MODULE_1__["Tw2EventEmitter"] {
  /**
   * Alias for device.gl
   * @returns {*}
   */
  get gl() {
    return this.device.gl;
  }
  /**
   * Alias for device.now
   * @returns {number}
   */


  get now() {
    return this.device.now;
  }
  /**
   * Alias for device.frameCounter
   * @returns {number}
   */


  get frame() {
    return this.device.frameCounter;
  }
  /**
   * Alias for device.canvas
   * @returns {*}
   */


  get canvas() {
    return this.device.canvas;
  }
  /**
   * Alias for device.dt
   * @returns {number}
   */


  get dt() {
    return this.device.dt;
  }
  /**
   * Alias for device.viewportWidth
   * @returns {number}
   */


  get width() {
    return this.device.viewportWidth;
  }
  /**
   * Alias for device.viewportHeight
   * @returns {number}
   */


  get height() {
    return this.device.viewportHeight;
  }
  /**
   * Alias for device.viewportAspect
   * @returns {number}
   */


  get aspect() {
    return this.device.viewportAspect;
  }
  /**
   * Constructor
   */


  constructor() {
    super();
    this.math = _math__WEBPACK_IMPORTED_MODULE_3__;
    this.util = _util__WEBPACK_IMPORTED_MODULE_4__;
    this.consts = _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__;
    this.logger = new _engine__WEBPACK_IMPORTED_MODULE_2__["Tw2Logger"](this);
    this.resMan = new _engine__WEBPACK_IMPORTED_MODULE_2__["Tw2ResMan"](this);
    this.device = new _engine__WEBPACK_IMPORTED_MODULE_2__["Tw2Device"](this);
    this._store = {
      black: new Map(),
      variable: new Map(),
      extension: new Map(),
      class: new Map(),
      path: new Map(),
      dynamicPath: new Map(),
      type: new Map()
    };
    this._debug = false;
    let eveSof;
    Object.defineProperty(this, "eveSof", {
      get: () => {
        if (!eveSof) {
          const Constructor = this.GetClass("EveSOF");
          eveSof = new Constructor(this);
        }

        return eveSof;
      }
    });
    _class__WEBPACK_IMPORTED_MODULE_1__["Tw2EventEmitter"].defaultLogger = this;
  }
  /**
   * Sets debug mode
   * @param {Boolean} bool
   */


  SetDebug(bool) {
    if (this._debug === bool) return;
    this._debug = bool;

    this._store.class.forEach(Constructor => {
      if ("DEBUG_ENABLED" in Constructor) {
        Constructor.DEBUG_ENABLED = bool;
      }
    });

    this.logger.Debug(bool);
    this.emit("debug_mode", bool);
    this.Log("warn", "Debugging ".concat(bool ? "enabled" : "disabled"));
  }
  /**
   * Sets an object's tw2 instantiation
   * @param {*} target
   */


  SetLibrary(target) {
    if ("tw2" in target) {
      Reflect.defineProperty(target, "tw2", {
        value: this,
        writable: false,
        configurable: false
      });
    }
  }
  /**
   * Initializes the library
   * @param {{}} [options]
   * @param {String|HTMLCanvasElement} [options.canvas] - Canvas element or id
   * @param {{}} [options.device]                       - Optional device parameters
   * @param {{}} [options.resMan]                       - Optional resMan parameters
   * @param {{}} [options.store]                        - Optional store parameters
   * @param {{}} [options.glParams]                     - Optional gl parameters
   * @param {Function} [options.render]                 - Optional render function
   */


  Initialize(options = {}) {
    this.Register(options);
    this.device.CreateDevice(options.canvas, options.glParams);

    if (options.render) {
      this.on("tick", options.render);

      const tick = () => {
        this.RequestAnimationFrame(tick);
        this.StartFrame();
        this.EndFrame();
      };

      this.RequestAnimationFrame(tick);
    }
  }
  /**
   * Start frame
   */


  StartFrame() {
    this.device.StartFrame();
    this.resMan.Tick(this.device);
  }
  /**
   * End frame
   */


  EndFrame() {
    this.emit("tick", this.device.dt);
    this.device.EndFrame();
  }
  /**
   * Requests an animation frame
   * @param callback
   * @returns {*}
   */


  RequestAnimationFrame(callback) {
    return this.device.RequestAnimationFrame(callback);
  }
  /**
   * Cancels an animation frame
   * @param id
   * @returns {*}
   */


  CancelAnimationFrame(id) {
    return this.device.CancelAnimationFrame(id);
  }
  /**
   * Outputs a log to console
   * @param {String} logType
   * @param {String|{}} log
   * @param {String} [fallbackTitle]
   * @returns {*}
   */


  Log(logType, log, fallbackTitle = "Library") {
    return this.logger.Log(logType, log, fallbackTitle);
  }
  /**
   * Registers library options
   * @param {*} options
   * @param {Boolean} options.uuid
   * @param {Boolean} options.debug
   * @param {*} options.logger
   * @param {*} options.client
   * @param {*} options.resMan
   * @param {*} options.device
   * @param {*} options.store
   */


  Register(options = {}) {
    if (options.uuid) Object(_util__WEBPACK_IMPORTED_MODULE_4__["enableUUID"])(options.uuid);
    if (options.logger) this.logger.Register(options.logger);
    if (options.debug) this.SetDebug(true);
    if (options.resMan) this.resMan.Register(options.resMan);
    if (options.device) this.device.Register(options.device);
    const {
      store
    } = options;

    if (store) {
      // Type must be first
      if (store.type) {
        setStoreKeyValues(this, "type", store.type);
      }

      for (const key in store) {
        if (store.hasOwnProperty(key) && key !== "type") {
          setStoreKeyValues(this, key, store[key]);
        }
      }
    }
  }
  /**
   * Gets a res path's full url
   * @param {String} resPath
   * @returns {String}
   */


  GetFullURL(resPath) {
    return this.resMan.BuildUrl(resPath);
  }
  /**
   * Sets the device's standard states
   * @param {Number} renderMode
   */


  SetStandardStates(renderMode) {
    this.device.SetStandardStates(renderMode);
    return this;
  }
  /**
   * Sets the gl color mask
   * @param colorMask
   * @returns {Tw2Library}
   */


  GLColorMask(colorMask) {
    this.device.gl.colorMask(colorMask[0], colorMask[1], colorMask[2], colorMask[3]);
    return this;
  }
  /**
   * Sets the gl clear color
   * @param clearColor
   * @returns {Tw2Library}
   */


  GLClearColor(clearColor) {
    this.device.gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);
    return this;
  }
  /**
   * Sets gl clear depth
   * @param value
   * @returns {Tw2Library}
   */


  GLClearDepth(value) {
    this.device.gl.clearDepth(value);
    return this;
  }
  /**
   * Sets the gl viewport
   * @param viewport
   * @returns {Tw2Library}
   */


  GLViewport(viewport) {
    this.device.gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);
    return this;
  }
  /**
   * Clears gl
   * @param value
   * @returns {Tw2Library}
   */


  GLClear(value) {
    this.device.gl.clear(value);
    return this;
  }
  /**
   * Sets the device projection matrix
   * @param {mat4} m
   * @returns {Tw2Library}
   */


  SetProjectionMatrix(m) {
    this.device.SetProjection(m);
    return this;
  }
  /**
   * Sets the device view matrix
   * @param {mat4} m
   * @returns {Tw2Library}
   */


  SetViewMatrix(m) {
    this.device.SetView(m);
    return this;
  }
  /**
   * Gets a device gl extension
   * @param {String} name
   * @returns {*}
   */


  GetDeviceExtension(name) {
    return this.device.GetExtension(name);
  }
  /**
   * Gets a resource
   * @param {String} resPath
   * @param {Function} [onResolved]
   * @param {Function} [onRejected]
   * @returns {Tw2Resource}
   */


  GetResource(resPath, onResolved, onRejected) {
    return this.resMan.GetResource(resPath, onResolved, onRejected);
  }
  /**
   * Gets a resource asynchronously
   * @param {String} resPath
     * @returns {Promise<Tw2Resource>}
   */


  FetchResource(resPath) {
    var _this = this;

    return _asyncToGenerator(function* () {
      return _this.resMan.FetchResource(resPath);
    })();
  }
  /**
   * Gets an object asynchronously
   * @param {String} resPath
   * @param {String|Class|Function|Array<String|Class|Function>} [expectedConstructor]
   * @returns {Promise<*>}
   */


  FetchObject(resPath, expectedConstructor) {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      let result;

      if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isDNA"])(resPath)) {
        result = yield _this2.eveSof.FetchObject(resPath);
      } else {
        result = yield _this2.resMan.FetchObject(resPath);
      }

      if (!_this2.IsClass(result, expectedConstructor)) {
        throw new Error("Unexpected constructor");
      }

      return result;
    })();
  }
  /**
   * Fetches a resPath's build constructor
   * TODO: Add planets, moons and scenes?
   * @param {String} resPath
   * @returns {Promise<number>}
   */


  FetchBuildClass(resPath) {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      return Object(_util__WEBPACK_IMPORTED_MODULE_4__["isDNA"])(resPath) ? yield _this3.eveSof.FetchHullBuildClass(resPath) : 2;
    })();
  }
  /**
   * Checks if an object is a valid class
   * @param {*} object
   * @param {String|Class|Function|Array<String|Class|Function>}expectedConstructor
   * @returns {boolean}
   */


  IsClass(object, expectedConstructor) {
    if (!expectedConstructor) {
      return true;
    }

    expectedConstructor = Object(_util__WEBPACK_IMPORTED_MODULE_4__["toArray"])(expectedConstructor);
    let isGood;

    for (let i = 0; i < expectedConstructor.length; i++) {
      let Constructor = expectedConstructor[i],
          exclude = false;

      if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(Constructor)) {
        if (Constructor.charAt(0) === "!") {
          exclude = true;
          Constructor = Constructor.substring(1);
        }

        if (Constructor === "Array") Constructor = Array;else if (Constructor === "Object") Constructor = Object;else Constructor = this.GetClass(Constructor);
      }

      if (object instanceof Constructor) {
        isGood = !exclude;
        break;
      }
    }

    return isGood;
  }
  /**
   * Creates a variable from values and/or type
   * @param {String} name
   * @param {*} [value]
   * @param {String| Function} [Type]
   * @returns {*}
   */


  CreateVariable(name, value, Type) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isPlain"])(value)) {
      Type = value["Type"] || value["type"];
      value = value["value"];
    }

    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isFunction"])(Type)) return new Type(name, value);
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(Type)) Type = this.GetType(Type);
    if (!Type) Type = this.GetTypeByValue(value);
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isFunction"])(Type)) return new Type(name, value);
    throw new Error("Could not identify variable type");
  }
  /**
   * Checks if a store variable exists
   * @param name
   * @returns {*}
   */


  HasVariable(name) {
    return hasStoreKey(this, "variable", name);
  }
  /**
   * Gets a store variable by it's name
   * @param name
   * @returns {*}
   */


  GetVariable(name) {
    return getStoreKey(this, "variable", name);
  }
  /**
   * Gets a store variable's value
   * @param name
   * @param out
   * @returns {*}
   */


  GetVariableValue(name, out) {
    const variable = this.GetVariable(name);
    if (variable.GetValue) return variable.GetValue(out);
    throw new Error("Variable missing 'GetValue' method");
  }
  /**
   * Sets a store variable
   * @param {String} name
   * @param {*} variable
   * @returns {Function}
   */


  SetVariable(name, variable) {
    if (!Object(_util__WEBPACK_IMPORTED_MODULE_4__["isObjectObject"])(variable)) {
      variable = this.CreateVariable(name, variable);
    }

    return setStoreKey(this, "variable", name, variable);
  }
  /**
   * Sets a store variable's value
   * @param name
   * @param value
   * @param {*} [opt]
   * @returns {void|*|Boolean}
   */


  SetVariableValue(name, value, opt) {
    const variable = this.GetVariable(name);
    if (variable.SetValue) return variable.SetValue(value, opt);
    throw new Error("Variable missing 'SetValue' method");
  }
  /**
   * Checks if a resource constructor exists for a file extension
   * @param extension
   * @returns {*}
   */


  HasExtension(extension) {
    return hasStoreKey(this, "extension", extension);
  }
  /**
   * Gets a file extension's resource constructor
   * @param extension
   * @returns {*}
   */


  GetExtension(extension) {
    return getStoreKey(this, "extension", extension);
  }
  /**
   * Sets a file extension's resource constructor
   * @param extension
   * @param value
   * @returns {*}
   */


  SetExtension(extension, value) {
    return setStoreKey(this, "extension", extension, value, {
      isValue: _util__WEBPACK_IMPORTED_MODULE_4__["isFunction"]
    });
  }
  /**
   * Checks if there is a black definition for a given class/ function name
   * @param name
   * @returns {*}
   */


  HasBlack(name) {
    return hasStoreKey(this, "black", name, {
      isClassName: true
    });
  }
  /**
   * Gets a black definition for a given class/ function name
   * @param name
   * @returns {*}
   */


  GetBlack(name) {
    return getStoreKey(this, "black", name, {
      isClassName: true
    });
  }
  /**
   * Sets a black definition for a given class/ function name
   * @param {String} name
   * @param {Function|Array} values
   * @returns {Map}
   */


  SetBlack(name, values) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isFunction"])(values)) values = values(core_reader_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_6__);
    return setStoreKey(this, "black", name, values, {
      isValue: _util__WEBPACK_IMPORTED_MODULE_4__["isArray"],
      onBeforeSet: value => new Map(value)
    });
  }
  /**
   * Checks if a class exists
   * @param name
   * @returns {*}
   */


  HasClass(name) {
    return hasStoreKey(this, "class", name, {
      isClassName: true
    });
  }
  /**
   * Gets a class by it's name
   * @param name
   * @returns {*}
   */


  GetClass(name) {
    return getStoreKey(this, "class", name, {
      isClassName: true
    });
  }
  /**
   * Sets a class
   * @param {String} name
   * @param {Class|Function} Constructor
   * @returns {Class|Function}
   */


  SetClass(name, Constructor) {
    const Value = setStoreKey(this, "class", name, Constructor, {
      isValue: _util__WEBPACK_IMPORTED_MODULE_4__["isFunction"]
    });
    Tw2Library.prototype[name] = Value;

    if ("DEBUG_ENABLED" in Value) {
      Value.DEBUG_ENABLED = this._debug;
    }

    if (Value.black) {
      this.SetBlack(name, Value.black);
    }

    return Value;
  }
  /**
   * Checks if a resource path exists for a prefix
   * @param {String} prefix
   * @returns {Boolean}
   */


  HasPath(prefix) {
    return hasStoreKey(this, "path", prefix);
  }
  /**
   * Gets a resource path from it's prefix
   * @param {String} prefix
   * @returns {String}
   */


  GetPath(prefix) {
    return getStoreKey(this, "path", prefix);
  }
  /**
   * Sets a resource path by it's prefix
   * @param {String} prefix
   * @param {String} path
   * @returns {String}
   */


  SetPath(prefix, path) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(path) && path.charAt(path.length - 1) !== "/") path += "/";
    return setStoreKey(this, "path", prefix, path, {
      isValue: _util__WEBPACK_IMPORTED_MODULE_4__["isString"],
      onBeforeSet: value => value.toLowerCase()
    });
  }
  /**
   * Checks if a dynamic path exists
   * @param prefix
   * @returns {*}
   */


  HasDynamicPath(prefix) {
    return hasStoreKey(this, "dynamicPath", prefix);
  }
  /**
   * Gets a dynamic path by it's prefix
   * @param {String} prefix
   * @returns {*}
   */


  GetDynamicPath(prefix) {
    return getStoreKey(this, "dynamicPath", prefix);
  }
  /**
   * Sets a dynamic path by it's prefix
   * @param prefix
   * @param value
   * @returns {*}
   */


  SetDynamicPath(prefix, value) {
    return setStoreKey(this, "dynamicPath", prefix, value, {
      isValue(a) {
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_4__["isArray"])(a)) return false;

        for (let i = 0; i < a.length; i++) {
          if (!Object(_util__WEBPACK_IMPORTED_MODULE_4__["isString"])(a[i])) return false;
        }

        return true;
      },

      onBeforeSet(x) {
        x.forEach(value => value.toLowerCase());
      }

    });
  }
  /**
   * Checks if a type exists
   * @param {String} name
   * @returns {Boolean}
   */


  HasType(name) {
    return hasStoreKey(this, "type", name);
  }
  /**
   * Gets a type by name
   * @param {String} name
   * @returns {Function}
   */


  GetType(name) {
    return getStoreKey(this, "type", name);
  }
  /**
   * Gets a type by value
   * @param {*} value
   */


  GetTypeByValue(value) {
    const types = this._store.type;

    for (let [key, type] of types) {
      if ("isValue" in type && type.isValue(value)) return type;
    }

    throw new Error("Could not identify a type from the given value");
  }
  /**
   * Sets a type
   * @param {String} name
   * @param {Function} Constructor
   * @returns {Function} Constructor
   */


  SetType(name, Constructor) {
    return setStoreKey(this, "type", name, Constructor, _util__WEBPACK_IMPORTED_MODULE_4__["isFunction"]);
  }

}, _temp)) || _class;
/**
 * Lazy loads a class
 * @param {Tw2Library} library
 * @param {String} propertyName
 * @param {String} className
 * @param args
 */


function lazyLoadClass(library, propertyName, className, ...args) {
  let value;
  Object.defineProperty(library, propertyName, {
    get: function () {
      if (!value) {
        const Constructor = library.GetClass(className);
        value = new Constructor(...args);
      }

      return value;
    }
  });
}
/**
 * Validates a store
 * @param library
 * @param storeType
 */


function validateStore(library, storeType) {
  if (!library._store[storeType]) {
    throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_7__["ErrStoreInvalid"]({
      store: storeType
    });
  }
}
/**
 * Checks if a value exists for a store key
 * @param library
 * @param storeType
 * @param key
 * @param options
 * @returns {*}
 */


function hasStoreKey(library, storeType, key, options) {
  validateStore(library, storeType);
  const store = library._store[storeType];
  return store.has(key) || options && options.isClassName && Object(_util__WEBPACK_IMPORTED_MODULE_4__["isTr2OrTri"])(key) && store.has(Object(_util__WEBPACK_IMPORTED_MODULE_4__["toTw2"])(key));
}
/**
 * Gets a store key's value
 * @param library
 * @param storeType
 * @param key
 * @param options
 * @returns {*}
 */


function getStoreKey(library, storeType, key, options) {
  validateStore(library, storeType);
  const store = library._store[storeType];

  if (store.has(key)) {
    return library._store[storeType].get(key);
  } // Allow substituting of Tr2 and Tri names
  else if (options && options.isClassName && Object(_util__WEBPACK_IMPORTED_MODULE_4__["isTr2OrTri"])(key)) {
      const newKey = Object(_util__WEBPACK_IMPORTED_MODULE_4__["toTw2"])(key);

      if (store.has(newKey)) {
        const Substitute = store.get(newKey);
        library.emit("store.substituted", storeType, newKey, Substitute, key);
        return Substitute;
      }
    }

  library.emit("store.missing", storeType, key);
  throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_7__["ErrStoreValueMissing"]({
    store: storeType,
    key
  });
}
/**
 * Sets a store key's value
 * @param library
 * @param storeType
 * @param key
 * @param value
 * @param {*} [options]
 * @param {Array<String>} [options.reserved]
 * @param {Function} [options.isValue]
 * @param {Function} [options.onBeforeSet]
 * @returns {*}
 */


function setStoreKey(library, storeType, key, value, options) {
  validateStore(library, storeType);

  if (!value) {
    throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_7__["ErrStoreValueInvalid"]({
      store: storeType,
      key
    });
  }

  if (options) {
    if (options.reserved && options.reserved.includes(key)) {
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_7__["ErrStoreKeyReserved"]({
        store: storeType,
        key
      });
    }

    if (options.isValue && !options.isValue(value)) {
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_7__["ErrStoreValueInvalid"]({
        store: storeType,
        key
      });
    }

    if (options.onBeforeSet) {
      value = options.onBeforeSet(value);
    }
  }

  library._store[storeType].set(key, value);

  library.emit("store.set", storeType, key, value).msg("debug", {
    name: "Store",
    message: "".concat(storeType, " registered: ").concat(key)
  });
  return value;
}
/**
 * Sets store key values from an object or array of objects
 * @param library
 * @param storeType
 * @param values
 */


function setStoreKeyValues(library, storeType, values) {
  // Use the library method for setting in case of custom stuff(tm)
  const setFunction = "Set" + storeType.charAt(0).toUpperCase() + storeType.substring(1);

  if (!library[setFunction]) {
    throw new Error("Invalid store value setter '".concat(setFunction, "'"));
  }

  values = Object(_util__WEBPACK_IMPORTED_MODULE_4__["toArray"])(values);

  for (let i = 0; i < values.length; i++) {
    for (const key in values[i]) {
      if (values[i].hasOwnProperty(key)) {
        library[setFunction](key, values[i][key]);
      }
    }
  }
}

const tw2 = new Tw2Library(),
      // Temporarily export resMan and device
resMan = tw2.resMan,
      device = tw2.device;


/***/ }),

/***/ "./global/class/Tw2BaseClass.js":
/*!**************************************!*\
  !*** ./global/class/Tw2BaseClass.js ***!
  \**************************************/
/*! exports provided: Tw2BaseClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2BaseClass", function() { return Tw2BaseClass; });
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../meta */ "./global/meta/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./global/util/index.js");
/* harmony import */ var _Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2EventEmitter */ "./global/class/Tw2EventEmitter.js");
var _class, _class2, _class3, _temp;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }




/**
 * Tw2BaseClass
 */

let Tw2BaseClass = Object(_meta__WEBPACK_IMPORTED_MODULE_0__["abstract"])(_class = (_class2 = (_temp = _class3 = class Tw2BaseClass extends _Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_2__["Tw2EventEmitter"] {
  constructor() {
    super();
    Tw2BaseClass.defineID(this);
  }
  /**
   * Copies another object's values
   * @param {*} a
   * @param {*} [opt]
   * @returns {*}
   */


  Copy(a, opt) {
    return this.constructor.copy(this, a, opt);
  }
  /**
   * Clones the object
   * @param [opt]
   * @returns {*}
   */


  Clone(opt) {
    return this.constructor.clone(this, opt);
  }
  /**
   * Sets the object's values from a plain object
   * @param [values]
   * @param [opt]
   * @returns {Boolean}
   */


  Set(values, opt) {
    return this.constructor.set(this, values, opt);
  }
  /**
   * Gets the object's values as a plain object
   * @param [out]
   * @param [opt]
   * @returns {*}
   */


  Get(out, opt) {
    return this.constructor.get(this, out, opt);
  }
  /**
   * Internal handler for value changes
   * @param [opt]
   */


  OnValueChanged(opt) {}
  /**
   * Triggers update handlers
   * @param {*} [opt]
   */


  UpdateValues(opt) {
    this.OnValueChanged(opt);

    if (!opt || !opt["skipEvents"]) {
      this.emit("modified", this, opt);
    }
  }
  /**
   * Adds a method which is called when "UpdateValues" is called
   * @param {Function} method
   * @param {*} [context]
   * @param {Boolean} [once]
   */


  OnModified(method, context, once) {
    this.on("modified", method, context, once);
  }
  /**
   * Removes a method from being called when "UpdateValues" is called
   * @param {Function} method
   */


  OffModified(method) {
    this.off("modified", method);
  }
  /**
   * Internal handler for object destruction
   * @param [opt]
   */


  OnDestroy(opt) {}
  /**
   * Destroys the object
   * @param {*} [opt]
   */


  Destroy(opt) {
    this.OnDestroy(opt);

    if (!opt || !opt["skipEvents"]) {
      this.emit("destroy", this, opt);
    }

    this.del("*");
  }
  /**
   * Traverses the object and it's array properties which have objects as elements
   * @param {Function} callback
   * @param {*} [parent]
   * @param {String} [path]
   * @param {Set} [visited=new Set()]
   * @returns {*}
   */


  Traverse(callback, parent, path = "", visited = new Set()) {
    if (visited.has(this)) return;
    visited.add(this);
    const result = callback(this, parent, path);
    if (result) return result;

    function onChild(child, parent, path) {
      let result;

      if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(child.Traverse)) {
        result = child.Traverse(callback, parent, path, visited);
      } else if (!visited.has(child)) {
        visited.add(child);
        result = callback(child, parent, path);
      }

      if (result) return result;
    }

    return perChild(this, onChild, path);
  }
  /**
   * Internal handler for copying one object's values to another
   * @param {*} a
   * @param {*} b
   * @param {*} [opt]
   * @private
   */


  static copy(a, b, opt = {}) {
    opt.verb = "copy";
    const values = this.get(b, {}, {
      skipIDs: true
    });
    return this.set(a, values, opt);
  }
  /**
   * Internal handler for cloning an object
   * @param {*} a
   * @param {*} [opt={}]
   * @returns {*}
   * @private
   */


  static clone(a, opt = {}) {
    const values = this.get(a, {}, {
      skipIDs: true
    });
    return this.from(values, opt);
  }
  /**
   * Creates an object from values
   * @param [values]
   * @param [opt={}]
   * @returns {*}
   * @private
   */


  static from(values, opt = {}) {
    if (values && values instanceof this) {
      return values;
    }

    const item = new this();
    let hasInitialize = "Initialize" in item;

    if (values && Object.keys(values)) {
      this.set(item, values, {
        skipUpdate: hasInitialize,
        verb: "create"
      });
    }

    if (hasInitialize && !opt.skipUpdate) {
      item.Initialize();
    }

    return item;
  }
  /**
   * Internal handler for setting an object's values from a plain object
   * @param {*} a
   * @param {*} [values]
   * @param {*} [opt]
   * @returns {boolean}
   * @private
   */


  static set(a, values, opt = {}) {}
  /**
   * Internal handler for getting an object's value as a plain object
   * @param {*} a
   * @param {*} [out={}]
   * @param {*} [opt]
   * @param {Boolean} [opt.skipID]
   * @param {Boolean} [opt.skipType]
   * @param {Boolean} [opt.skipVerb]
   * @returns {*} out
   * @private
   */


  static get(a, out = {}, opt = {}) {}
  /**
   * Defines an unwritable unique id property on an object
   * @param {*} target
   */


  static defineID(target) {
    Reflect.defineProperty(target, "_id", {
      value: Object(_util__WEBPACK_IMPORTED_MODULE_1__["generateID"])(),
      writable: false,
      configurable: true
    });
  }
  /**
   *
   * @type {*}
   */


}, _class3.black = null, _class3.__category = null, _class3.__keys = null, _temp), (_applyDecoratedDescriptor(_class2, "set", [_meta__WEBPACK_IMPORTED_MODULE_0__["abstract"]], Object.getOwnPropertyDescriptor(_class2, "set"), _class2), _applyDecoratedDescriptor(_class2, "get", [_meta__WEBPACK_IMPORTED_MODULE_0__["abstract"]], Object.getOwnPropertyDescriptor(_class2, "get"), _class2)), _class2)) || _class;
/**
 * Fires a callback on an object's child lists and types, and no further
 * @param {*} obj
 * @param {Function} callback
 * @param {String} [path="root"]
 * @returns {!*}
 */

function perChild(obj, callback, path = "") {
  const {
    list,
    type
  } = getKeys(obj);

  if (list) {
    for (let i = 0; i < list.length; i++) {
      const key = list[i],
            arr = obj[key];

      for (let x = 0; x < arr.length; x++) {
        const item = arr[x];

        if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObjectObject"])(item)) {
          let currentPath = "".concat(path, "/").concat(key, "/").concat(x);
          const result = callback(item, obj, currentPath);
          if (result) return result;
        }
      }
    }
  }

  if (type) {
    for (let i = 0; i < type.length; i++) {
      const key = type[i],
            item = obj[key];

      if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObjectObject"])(item)) {
        let currentPath = "".concat(path, "/").concat(key);
        const result = callback(item, obj, currentPath);
        if (result) return result;
      }
    }
  }
}
/**
 * Temporary method for getting an object's keys
 * TODO: Replace with schemas
 * @param {*} obj
 */


function getKeys(obj) {
  if (obj.constructor.hasOwnProperty("__keys") && obj.constructor.__keys !== null) {
    return obj.constructor.__keys;
  }

  const keys = obj.constructor.__keys = {};

  function add(name, key) {
    if (!keys[name]) {
      keys[name] = [];
    }

    if (!keys[name].includes(key)) {
      keys[name].push(key);
    }
  }

  for (const key in obj) {
    if (obj.hasOwnProperty(key)) {
      // Don't cache privates
      if (key.charAt(0) === "_") {
        continue;
      }

      const value = obj[key];

      if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isPrimary"])(value)) {
        add("primary", key);
      } else if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(value)) {
        // Assumes empty arrays are lists
        // Assumes if first element is a primary value that is all it contains
        if (value.length && Object(_util__WEBPACK_IMPORTED_MODULE_1__["isPrimary"])(value[0])) {
          add("array", key);
        } else {
          add("list", key);
        }
      } else if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isTyped"])(value)) {
        add("typed", key);
      } else if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isPlain"])(value)) {
        add("plain", key);
      } else if (value === null || Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObjectObject"])(value)) {
        add("type", key);
      }
    }
  }

  return obj.constructor.__keys;
}

/***/ }),

/***/ "./global/class/Tw2EventEmitter.js":
/*!*****************************************!*\
  !*** ./global/class/Tw2EventEmitter.js ***!
  \*****************************************/
/*! exports provided: Tw2EventEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2EventEmitter", function() { return Tw2EventEmitter; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./global/util/index.js");
/**
 * Emitter privates
 * @type {WeakMap<object, *>}
 */

const PRIVATE = new WeakMap();
/**
 * Tw2EventEmitter
 */

class Tw2EventEmitter {
  /**
   * Emits an event
   * @param {String} eventName
   * @param {*} args
   * @returns {Tw2EventEmitter}
   */
  emit(eventName, ...args) {
    const events = PRIVATE.get(this);
    if (!events) return this;
    eventName = eventName.toLowerCase();

    if (eventName in events) {
      events[eventName].forEach((value, key) => {
        key.call(value.context, ...args);
        if (value.once) events[eventName].delete(key);
      });

      if (events[eventName].size === 0) {
        Reflect.deleteProperty(events, eventName);
      }
    }

    return this;
  }
  /**
   * Adds events from a plain object
   * @param {Object} options
   * @returns {Tw2EventEmitter}
   */


  add(options) {
    if (!options) return this;

    for (let key in options) {
      if (options.hasOwnProperty(key)) {
        let listener = options[key],
            eventName = key,
            context,
            once; // Append ".once" to event name to fire only once

        if (key.indexOf(".once") !== -1) {
          if (key.lastIndexOf(".once") === key.length - 5) {
            eventName = key.substring(0, key.length - 5);
            once = true;
          }
        } // options as an array/ arguments


        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(listener)) {
          listener = listener[0];
          if (listener[1]) context = listener[1]; // .once in property key overrides array argument

          if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"])(listener[2]) && !Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBoolean"])(once)) once = listener[2];
        }

        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(listener)) {
          throw new Error("Invalid listener");
        }

        this.on(eventName, listener, context, once);
      }
    }

    return this;
  }
  /**
   * Adds a listener to an event
   * @param {Array|String} eventName
   * @param {Function} listener
   * @param {*} [context=undefined]
   * @param {Boolean} [once=false]
   * @returns {Tw2EventEmitter}
   */


  on(eventName, listener, context = undefined, once = false) {
    let events = PRIVATE.get(this);

    if (!events) {
      events = {};
      PRIVATE.set(this, events);
    }

    eventName = eventName.toLowerCase();

    if (!events[eventName]) {
      events[eventName] = new Map();
    } // Allow intercepting of a listener when its first added


    if (!events[eventName].has(listener) && this.constructor.onListener) {
      if (this.constructor.onListener(eventName, listener, context) && once) {
        return this;
      }
    }

    events[eventName].set(listener, {
      context: context,
      once: once
    });
    return this;
  }
  /**
   * Adds a listener to an event, and clears it after it's first emit
   * @param {String} eventName
   * @param {Function} listener
   * @param {*} [context]
   * @returns {Tw2EventEmitter}
   */


  once(eventName, listener, context) {
    return this.on(eventName, listener, context, true);
  }
  /**
   * Removes a listener from a specific event or from all events by passing "*"
   * @param {String} eventName
   * @param {Function} listener
   * @returns {Tw2EventEmitter}
   */


  off(eventName, listener) {
    const events = PRIVATE.get(this);
    if (!events) return this; // Remove listener from all events

    if (eventName === "*") {
      for (const eventName in events) {
        if (events.hasOwnProperty(eventName)) {
          events[eventName].delete(listener);

          if (events[eventName].size === 0) {
            Reflect.deleteProperty(events, eventName);
          }
        }
      }

      return this;
    }

    eventName = eventName.toLowerCase();

    if (eventName in events) {
      events[eventName].delete(listener);

      if (events[eventName].size === 0) {
        Reflect.deleteProperty(events, eventName);
      }
    }

    return this;
  }
  /**
   * Binds an event to another event emitter
   * @param {Tw2EventEmitter} target  - The target event emitter
   * @param {String} eventName        - The event name
   * @param {Function} [func]         - An optional function to call before emitting the event on the child
   * @returns {Tw2EventEmitter}
   */


  bind(target, eventName, func) {
    function listener(...args) {
      if (func) func.call(target, ...args);
      target.emit(eventName, ...args);
    }

    listener._target = target;
    return this.on(eventName, listener);
  }
  /**
   * Unbinds an event from another event emitter
   * @param {Tw2EventEmitter|String} target
   * @param {String} [eventName="*"]
   */


  unbind(target, eventName) {
    if (!target) return this;
    const events = PRIVATE.get(this);
    if (events) return; // Unbind all events

    if (eventName === "*") {
      for (const e in events) {
        if (events.hasOwnProperty(e)) {
          events[e].forEach((value, listener) => {
            if (listener._target === target) {
              this.off(e, listener);
            }
          });
        }
      }

      return this;
    }

    eventName = eventName.toLowerCase();

    if (eventName in events) {
      events[eventName].forEach((value, listener) => {
        if (listener._target === target) {
          this.off(eventName, listener);
        }
      });
    }

    return this;
  }
  /**
   * Checks if a listener exists on an event, or on any event by passing "*"
   * @param {String} eventName
   * @param {String|Function} listener
   * @returns {boolean}
   */


  has(eventName, listener) {
    const events = PRIVATE.get(this);
    if (!events) return false; // Check all events

    if (eventName === "*") {
      for (const key in events) {
        if (events.hasOwnProperty(key)) {
          if (events[key].has(listener)) {
            return true;
          }
        }
      }

      return false;
    }

    if (listener && eventName in events) {
      return listener === "*" ? !!events[eventName].size : events[eventName].has(listener);
    }

    return false;
  }
  /**
   * Clears an event and it's listeners, or all events by passing "*"
   * @param {String} eventName
   * @returns {Tw2EventEmitter}
   */


  del(eventName) {
    const events = PRIVATE.get(this);
    if (!events) return this; // Clear all

    if (eventName === "*") {
      this.emit("kill");

      for (const e in events) {
        if (events.hasOwnProperty(e)) {
          events[e].clear();
          Reflect.deleteProperty(events, e);
        }
      }

      PRIVATE.delete(this);
      return this;
    }

    eventName = eventName.toLowerCase();

    if (eventName in events) {
      events[eventName].clear();
      Reflect.deleteProperty(events, eventName);
    }

    return this;
  }
  /**
   * Logs a message
   * @param {String} type
   * @param {*|Error|Tw2Error} log
   * @returns {eventLog|*}
   */


  msg(type, log) {
    if (this.constructor.defaultLogger) {
      return this.constructor.defaultLogger.Log(type, log, this.constructor.__category);
    }

    return log;
  }
  /**
   * Fires before a listener is added
   * @param {String} eventName
   * @param {Function} listener
   * @param {*} context
   * @returns {Boolean} true if fired immediately
   * @type {null|Function}
   */


}
Tw2EventEmitter.onListener = null;
Tw2EventEmitter.defaultLogger = null;
Tw2EventEmitter.__category = null;

/***/ }),

/***/ "./global/class/Tw2Notifications.js":
/*!******************************************!*\
  !*** ./global/class/Tw2Notifications.js ***!
  \******************************************/
/*! exports provided: Tw2Notifications */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Notifications", function() { return Tw2Notifications; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./global/util/index.js");

/**
 * Tw2Notification
 */

class Tw2Notifications {
  /**
   * Registers a notification
   * @param {*} notification
   */
  RegisterNotification(notification) {
    if (this.HasNotification(notification)) {
      return;
    }

    if (this.constructor.onNotification && this.constructor.onNotification(this, notification)) {
      return;
    }

    this._notifications = this._notifications || new Set();

    this._notifications.add(notification);
  }
  /**
   * Updates notifications
   * @param {String} funcName
   * @param {Error|Tw2Error} [err]
   */


  UpdateNotifications(funcName, err) {
    if (this._notifications) {
      this._notifications.forEach(notification => {
        let remove = false;

        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(notification)) {
          remove = notification(this, err, funcName);
        } else if (funcName && funcName in notification) {
          remove = notification[funcName](this, err);
        }

        if (remove) {
          this.UnregisterNotification(notification);
        }
      });

      if (this._notifications.size === 0) {
        this.ClearNotifications();
      }
    }
  }
  /**
   * Checks if a notification exists
   * @param {*} notification
   * @returns {boolean}
   */


  HasNotification(notification) {
    return this._notifications ? this._notifications.has(notification) : false;
  }
  /**
   * Unregisters a notification
   * @param {*} notification
   */


  UnregisterNotification(notification) {
    if (this._notifications) {
      this._notifications.delete(notification);
    }
  }
  /**
   * Clears notifications
   */


  ClearNotifications() {
    if (this._notifications) {
      this._notifications.clear();

      Reflect.deleteProperty(this, "_notifications");
    }
  }
  /**
   * Fires when a notification is registered
   * @type {null| Function}
   * @param {*} target
   * @param {*} notification
   * @returns {boolean}
   */


}
Tw2Notifications.onNotification = null;

/***/ }),

/***/ "./global/class/Tw2Schema.js":
/*!***********************************!*\
  !*** ./global/class/Tw2Schema.js ***!
  \***********************************/
/*! exports provided: Tw2Schema */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Schema", function() { return Tw2Schema; });
/**
 * Tw2Schema
 * TODO: Implement
 */
class Tw2Schema {}

/***/ }),

/***/ "./global/class/index.js":
/*!*******************************!*\
  !*** ./global/class/index.js ***!
  \*******************************/
/*! exports provided: Tw2BaseClass, Tw2EventEmitter, Tw2Notifications, Tw2Schema */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2BaseClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2BaseClass */ "./global/class/Tw2BaseClass.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BaseClass", function() { return _Tw2BaseClass__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"]; });

/* harmony import */ var _Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2EventEmitter */ "./global/class/Tw2EventEmitter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EventEmitter", function() { return _Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_1__["Tw2EventEmitter"]; });

/* harmony import */ var _Tw2Notifications__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2Notifications */ "./global/class/Tw2Notifications.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Notifications", function() { return _Tw2Notifications__WEBPACK_IMPORTED_MODULE_2__["Tw2Notifications"]; });

/* harmony import */ var _Tw2Schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2Schema */ "./global/class/Tw2Schema.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Schema", function() { return _Tw2Schema__WEBPACK_IMPORTED_MODULE_3__["Tw2Schema"]; });






/***/ }),

/***/ "./global/engine/Tw2Constant.js":
/*!**************************************!*\
  !*** ./global/engine/Tw2Constant.js ***!
  \**************************************/
/*! exports provided: Type, TypeCategory, TypeTypeCategory, TypeLength, GL_COLOR_BUFFER_BIT, GL_DEPTH_BUFFER_BIT, GL_STENCIL_BUFFER_BIT, GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP, GL_TEXTURE_3D, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_HALF_FLOAT_OES, GL_HALF_FLOAT, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT32F, GL_FLOAT_VEC2, GL_FLOAT_VEC3, GL_FLOAT_VEC4, GL_INT_VEC2, GL_INT_VEC3, GL_INT_VEC4, GL_BOOL, GL_BOOL_VEC2, GL_BOOL_VEC3, GL_BOOL_VEC4, GL_FLOAT_MAT2, GL_FLOAT_MAT3, GL_FLOAT_MAT4, GL_TYPE_LENGTH, GL_SAMPLER_2D, GL_SAMPLER_3D, GL_SAMPLER_CUBE, GL_DEPTH_COMPONENT, GL_ALPHA, GL_RGB, GL_RGBA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_DEPTH_STENCIL, GL_UNSIGNED_INT_24_8_WEBGL, GL_R8, GL_R16F, GL_R32F, GL_R8UI, GL_RG8, GL_RG16F, GL_RG32F, GL_RGB8, GL_SRGB8, GL_RGB565, GL_R11F_G11F_B10F, GL_RGB9_E5, GL_RGB16F, GL_RGB32F, GL_RGB8UI, GL_RGBA8, GL_RGB5_A1, GL_RGBA16F, GL_RGBA32F, GL_RGBA8UI, GL_RGBA16I, GL_RGBA16UI, GL_RGBA32I, GL_RGBA32UI, GL_NEAREST, GL_LINEAR, GL_NEAREST_MIPMAP_NEAREST, GL_LINEAR_MIPMAP_NEAREST, GL_NEAREST_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_LINEAR, GL_REPEAT, GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, GL_ZERO, GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_DST_ALPHA, GL_ONE_MINUS_DST_ALPHA, GL_DST_COLOR, GL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA_SATURATE, GL_CONSTANT_COLOR, GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA, GL_ONE_MINUS_CONSTANT_ALPHA, GL_VERTEX_SHADER, GL_FRAGMENT_SHADER, GL_FRONT, GL_BACK, GL_FRONT_AND_BACK, GL_NEVER, GL_LESS, GL_EQUAL, GL_LEQUAL, GL_GREATER, GL_NOTEQUAL, GL_GEQUAL, GL_ALWAYS, GL_KEEP, GL_REPLACE, GL_INCR, GL_DECR, GL_INCR_WRAP, GL_DECR_WRAP, GL_INVERT, GL_STREAM_DRAW, GL_STATIC_DRAW, GL_DYNAMIC_DRAW, GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_POINTS, GL_LINES, GL_LINE_LOOP, GL_LINE_STRIP, GL_TRIANGLES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_CW, GL_CCW, GL_CULL_FACE, GL_DEPTH_TEST, GL_BLEND, RM_ANY, RM_OPAQUE, RM_DECAL, RM_TRANSPARENT, RM_ADDITIVE, RM_DEPTH, RM_FULLSCREEN, RM_PICKABLE, RM_DISTORTION, RS_ZENABLE, RS_FILLMODE, RS_SHADEMODE, RS_ZWRITEENABLE, RS_ALPHATESTENABLE, RS_LASTPIXEL, RS_SRCBLEND, RS_DESTBLEND, RS_CULLMODE, RS_ZFUNC, RS_ALPHAREF, RS_ALPHAFUNC, RS_DITHERENABLE, RS_ALPHABLENDENABLE, RS_FOGENABLE, RS_SPECULARENABLE, RS_FOGCOLOR, RS_FOGTABLEMODE, RS_FOGSTART, RS_FOGEND, RS_FOGDENSITY, RS_RANGEFOGENABLE, RS_STENCILENABLE, RS_STENCILFAIL, RS_STENCILZFAIL, RS_STENCILPASS, RS_STENCILFUNC, RS_STENCILREF, RS_STENCILMASK, RS_STENCILWRITEMASK, RS_TEXTUREFACTOR, RS_WRAP0, RS_WRAP1, RS_WRAP2, RS_WRAP3, RS_WRAP4, RS_WRAP5, RS_WRAP6, RS_WRAP7, RS_CLIPPING, RS_LIGHTING, RS_AMBIENT, RS_FOGVERTEXMODE, RS_COLORVERTEX, RS_LOCALVIEWER, RS_NORMALIZENORMALS, RS_DIFFUSEMATERIALSOURCE, RS_SPECULARMATERIALSOURCE, RS_AMBIENTMATERIALSOURCE, RS_EMISSIVEMATERIALSOURCE, RS_VERTEXBLEND, RS_CLIPPLANEENABLE, RS_POINTSIZE, RS_POINTSIZE_MIN, RS_POINTSPRITEENABLE, RS_POINTSCALEENABLE, RS_POINTSCALE_A, RS_POINTSCALE_B, RS_POINTSCALE_C, RS_MULTISAMPLEANTIALIAS, RS_MULTISAMPLEMASK, RS_PATCHEDGESTYLE, RS_DEBUGMONITORTOKEN, RS_POINTSIZE_MAX, RS_INDEXEDVERTEXBLENDENABLE, RS_COLORWRITEENABLE, RS_TWEENFACTOR, RS_BLENDOP, RS_POSITIONDEGREE, RS_NORMALDEGREE, RS_SCISSORTESTENABLE, RS_SLOPESCALEDEPTHBIAS, RS_ANTIALIASEDLINEENABLE, RS_TWOSIDEDSTENCILMODE, RS_CCW_STENCILFAIL, RS_CCW_STENCILZFAIL, RS_CCW_STENCILPASS, RS_CCW_STENCILFUNC, RS_COLORWRITEENABLE1, RS_COLORWRITEENABLE2, RS_COLORWRITEENABLE3, RS_BLENDFACTOR, RS_SRGBWRITEENABLE, RS_DEPTHBIAS, RS_SEPARATEALPHABLENDENABLE, RS_SRCBLENDALPHA, RS_DESTBLENDALPHA, RS_BLENDOPALPHA, CULL_NONE, CULL_CW, CULL_CCW, CMP_NEVER, CMP_LESS, CMP_EQUAL, CMP_LEQUAL, CMP_GREATER, CMP_NOTEQUAL, CMP_GREATEREQUAL, CMP_ALWAYS, BLEND_ZERO, BLEND_ONE, BLEND_SRCCOLOR, BLEND_INVSRCCOLOR, BLEND_SRCALPHA, BLEND_INVSRCALPHA, BLEND_DESTALPHA, BLEND_INVDESTALPHA, BLEND_DESTCOLOR, BLEND_INVDESTCOLOR, BLEND_SRCALPHASAT, BLEND_BOTHSRCALPHA, BLEND_BOTHINVSRCALPHA, BLEND_BLENDFACTOR, BLEND_INVBLENDFACTOR, BLENDOP_ADD, BLENDOP_SUBTRACT, BLENDOP_REVSUBTRACT, BLENDOP_MIN, BLENDOP_MAX, TF_ALPHA, TF_LUMINANCE, TF_LUMINANCE_ALPHA, TF_RGB, TF_RGBA, TF_RED, TF_R, TF_RG, TF_RED_INTEGER, TF_R_INTEGER, TF_RG_INTEGER, TF_RGB_INTEGER, TF_RGBA_INTEGER, TT_UNSIGNED_BYTE, TT_UNSIGNED_INT, TT_FLOAT, TT_HALF_FLOAT, TT_BYTE, TT_SHORT, TT_UNSIGNED_SHORT, TT_INT, TT_UNSIGNED_INTEGER, TT_UNSIGNED_SHORT_4_4_4_4, TT_UNSIGNED_SHORT_5_5_5_1, TT_UNSIGNED_SHORT_5_6_5, TT_UNSIGNED_INT_2_10_10_10_REV, TT_UNSIGNED_INT_24_8, TT_UNSIGNED_INT_10F_11F_11F_REV, TT_UNSIGNED_INT_5_9_9_9_REV, TT_FLOAT_32_UNSIGNED_INT_24_8_REV, WrapModes, BlendTable, FilterMode, MipFilterMode, DDS_MAGIC, DDSD_CAPS, DDSD_HEIGHT, DDSD_WIDTH, DDSD_PITCH, DDSD_PIXELFORMAT, DDSD_MIPMAPCOUNT, DDSD_LINEARSIZE, DDSD_DEPTH, DDSCAPS_COMPLEX, DDSCAPS_MIPMAP, DDSCAPS_TEXTURE, DDSCAPS2_CUBEMAP, DDSCAPS2_CUBEMAP_POSITIVEX, DDSCAPS2_CUBEMAP_NEGATIVEX, DDSCAPS2_CUBEMAP_POSITIVEY, DDSCAPS2_CUBEMAP_NEGATIVEY, DDSCAPS2_CUBEMAP_POSITIVEZ, DDSCAPS2_CUBEMAP_NEGATIVEZ, DDSCAPS2_VOLUME, DDPF_ALPHAPIXELS, DDPF_ALPHA, DDPF_FOURCC, DDPF_RGB, DDPF_YUV, DDPF_LUMINANCE, DDS_HEADER_LENGTH_INT, DDS_HEADER_OFFSET_MAGIC, DDS_HEADER_OFFSET_SIZE, DDS_HEADER_OFFSET_FLAGS, DDS_HEADER_OFFSET_HEIGHT, DDS_HEADER_OFFSET_WIDTH, DDS_HEADER_OFFSET_MIPMAP_COUNT, DDS_HEADER_OFFSET_PF_FLAGS, DDS_HEADER_OFFSET_PF_FOURCC, DDS_HEADER_OFFSET_RGB_BPP, DDS_HEADER_OFFSET_R_MASK, DDS_HEADER_OFFSET_G_MASK, DDS_HEADER_OFFSET_B_MASK, DDS_HEADER_OFFSET_A_MASK, DDS_HEADER_OFFSET_CAPS1, DDS_HEADER_OFFSET_CAPS2, DDS_HEADER_OFFSET_CAPS3, DDS_HEADER_OFFSET_CAPS4, DDS_HEADER_OFFSET_DXGI_FORMAT, FOURCC_DXT1, FOURCC_DXT5, FOURCC_DXT3, FOURCC_DXT10, FOURCC_D3DFMT_R16G16B16A16F, FOURCC_D3DFMT_R32G32B32A32F, DXGI_FORMAT_R16G16B16A16_FLOAT, DXGI_FORMAT_B8G8R8X8_UNORM, VendorRequestAnimationFrame, VendorCancelAnimationFrame, VendorRequestFullScreen, VendorExitFullScreen, VendorGetFullScreenElement, VendorWebglPrefixes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeCategory", function() { return TypeCategory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeTypeCategory", function() { return TypeTypeCategory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeLength", function() { return TypeLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_COLOR_BUFFER_BIT", function() { return GL_COLOR_BUFFER_BIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_BUFFER_BIT", function() { return GL_DEPTH_BUFFER_BIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_STENCIL_BUFFER_BIT", function() { return GL_STENCIL_BUFFER_BIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_2D", function() { return GL_TEXTURE_2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_CUBE_MAP", function() { return GL_TEXTURE_CUBE_MAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_3D", function() { return GL_TEXTURE_3D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_MAG_FILTER", function() { return GL_TEXTURE_MAG_FILTER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_MIN_FILTER", function() { return GL_TEXTURE_MIN_FILTER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_WRAP_S", function() { return GL_TEXTURE_WRAP_S; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_WRAP_T", function() { return GL_TEXTURE_WRAP_T; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_BYTE", function() { return GL_BYTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_BYTE", function() { return GL_UNSIGNED_BYTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SHORT", function() { return GL_SHORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_SHORT", function() { return GL_UNSIGNED_SHORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_INT", function() { return GL_INT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_INT", function() { return GL_UNSIGNED_INT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT", function() { return GL_FLOAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_HALF_FLOAT_OES", function() { return GL_HALF_FLOAT_OES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_HALF_FLOAT", function() { return GL_HALF_FLOAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT16", function() { return GL_DEPTH_COMPONENT16; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT24", function() { return GL_DEPTH_COMPONENT24; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT32F", function() { return GL_DEPTH_COMPONENT32F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC2", function() { return GL_FLOAT_VEC2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC3", function() { return GL_FLOAT_VEC3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC4", function() { return GL_FLOAT_VEC4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC2", function() { return GL_INT_VEC2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC3", function() { return GL_INT_VEC3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC4", function() { return GL_INT_VEC4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL", function() { return GL_BOOL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC2", function() { return GL_BOOL_VEC2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC3", function() { return GL_BOOL_VEC3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC4", function() { return GL_BOOL_VEC4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT2", function() { return GL_FLOAT_MAT2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT3", function() { return GL_FLOAT_MAT3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT4", function() { return GL_FLOAT_MAT4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TYPE_LENGTH", function() { return GL_TYPE_LENGTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_2D", function() { return GL_SAMPLER_2D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_3D", function() { return GL_SAMPLER_3D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_CUBE", function() { return GL_SAMPLER_CUBE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT", function() { return GL_DEPTH_COMPONENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ALPHA", function() { return GL_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB", function() { return GL_RGB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA", function() { return GL_RGBA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LUMINANCE", function() { return GL_LUMINANCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LUMINANCE_ALPHA", function() { return GL_LUMINANCE_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_STENCIL", function() { return GL_DEPTH_STENCIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_INT_24_8_WEBGL", function() { return GL_UNSIGNED_INT_24_8_WEBGL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_R8", function() { return GL_R8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_R16F", function() { return GL_R16F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_R32F", function() { return GL_R32F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_R8UI", function() { return GL_R8UI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RG8", function() { return GL_RG8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RG16F", function() { return GL_RG16F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RG32F", function() { return GL_RG32F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB8", function() { return GL_RGB8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SRGB8", function() { return GL_SRGB8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB565", function() { return GL_RGB565; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_R11F_G11F_B10F", function() { return GL_R11F_G11F_B10F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB9_E5", function() { return GL_RGB9_E5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB16F", function() { return GL_RGB16F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB32F", function() { return GL_RGB32F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB8UI", function() { return GL_RGB8UI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA8", function() { return GL_RGBA8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGB5_A1", function() { return GL_RGB5_A1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16F", function() { return GL_RGBA16F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32F", function() { return GL_RGBA32F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA8UI", function() { return GL_RGBA8UI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16I", function() { return GL_RGBA16I; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16UI", function() { return GL_RGBA16UI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32I", function() { return GL_RGBA32I; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32UI", function() { return GL_RGBA32UI; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST", function() { return GL_NEAREST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR", function() { return GL_LINEAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST_MIPMAP_NEAREST", function() { return GL_NEAREST_MIPMAP_NEAREST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR_MIPMAP_NEAREST", function() { return GL_LINEAR_MIPMAP_NEAREST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST_MIPMAP_LINEAR", function() { return GL_NEAREST_MIPMAP_LINEAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR_MIPMAP_LINEAR", function() { return GL_LINEAR_MIPMAP_LINEAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_REPEAT", function() { return GL_REPEAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_CLAMP_TO_EDGE", function() { return GL_CLAMP_TO_EDGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_MIRRORED_REPEAT", function() { return GL_MIRRORED_REPEAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ZERO", function() { return GL_ZERO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ONE", function() { return GL_ONE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_COLOR", function() { return GL_SRC_COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_SRC_COLOR", function() { return GL_ONE_MINUS_SRC_COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_ALPHA", function() { return GL_SRC_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_SRC_ALPHA", function() { return GL_ONE_MINUS_SRC_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DST_ALPHA", function() { return GL_DST_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_DST_ALPHA", function() { return GL_ONE_MINUS_DST_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DST_COLOR", function() { return GL_DST_COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_DST_COLOR", function() { return GL_ONE_MINUS_DST_COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_ALPHA_SATURATE", function() { return GL_SRC_ALPHA_SATURATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_CONSTANT_COLOR", function() { return GL_CONSTANT_COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_CONSTANT_COLOR", function() { return GL_ONE_MINUS_CONSTANT_COLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_CONSTANT_ALPHA", function() { return GL_CONSTANT_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_CONSTANT_ALPHA", function() { return GL_ONE_MINUS_CONSTANT_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_VERTEX_SHADER", function() { return GL_VERTEX_SHADER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FRAGMENT_SHADER", function() { return GL_FRAGMENT_SHADER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FRONT", function() { return GL_FRONT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_BACK", function() { return GL_BACK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_FRONT_AND_BACK", function() { return GL_FRONT_AND_BACK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_NEVER", function() { return GL_NEVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LESS", function() { return GL_LESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_EQUAL", function() { return GL_EQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LEQUAL", function() { return GL_LEQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_GREATER", function() { return GL_GREATER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_NOTEQUAL", function() { return GL_NOTEQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_GEQUAL", function() { return GL_GEQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ALWAYS", function() { return GL_ALWAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_KEEP", function() { return GL_KEEP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_REPLACE", function() { return GL_REPLACE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_INCR", function() { return GL_INCR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DECR", function() { return GL_DECR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_INCR_WRAP", function() { return GL_INCR_WRAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DECR_WRAP", function() { return GL_DECR_WRAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_INVERT", function() { return GL_INVERT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_STREAM_DRAW", function() { return GL_STREAM_DRAW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_STATIC_DRAW", function() { return GL_STATIC_DRAW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DYNAMIC_DRAW", function() { return GL_DYNAMIC_DRAW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ARRAY_BUFFER", function() { return GL_ARRAY_BUFFER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_ELEMENT_ARRAY_BUFFER", function() { return GL_ELEMENT_ARRAY_BUFFER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_POINTS", function() { return GL_POINTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LINES", function() { return GL_LINES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LINE_LOOP", function() { return GL_LINE_LOOP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_LINE_STRIP", function() { return GL_LINE_STRIP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLES", function() { return GL_TRIANGLES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLE_STRIP", function() { return GL_TRIANGLE_STRIP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLE_FAN", function() { return GL_TRIANGLE_FAN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_CW", function() { return GL_CW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_CCW", function() { return GL_CCW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_CULL_FACE", function() { return GL_CULL_FACE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_TEST", function() { return GL_DEPTH_TEST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GL_BLEND", function() { return GL_BLEND; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_ANY", function() { return RM_ANY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_OPAQUE", function() { return RM_OPAQUE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_DECAL", function() { return RM_DECAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_TRANSPARENT", function() { return RM_TRANSPARENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_ADDITIVE", function() { return RM_ADDITIVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_DEPTH", function() { return RM_DEPTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_FULLSCREEN", function() { return RM_FULLSCREEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_PICKABLE", function() { return RM_PICKABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RM_DISTORTION", function() { return RM_DISTORTION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ZENABLE", function() { return RS_ZENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FILLMODE", function() { return RS_FILLMODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SHADEMODE", function() { return RS_SHADEMODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ZWRITEENABLE", function() { return RS_ZWRITEENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHATESTENABLE", function() { return RS_ALPHATESTENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_LASTPIXEL", function() { return RS_LASTPIXEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SRCBLEND", function() { return RS_SRCBLEND; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_DESTBLEND", function() { return RS_DESTBLEND; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_CULLMODE", function() { return RS_CULLMODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ZFUNC", function() { return RS_ZFUNC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHAREF", function() { return RS_ALPHAREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHAFUNC", function() { return RS_ALPHAFUNC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_DITHERENABLE", function() { return RS_DITHERENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHABLENDENABLE", function() { return RS_ALPHABLENDENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FOGENABLE", function() { return RS_FOGENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SPECULARENABLE", function() { return RS_SPECULARENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FOGCOLOR", function() { return RS_FOGCOLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FOGTABLEMODE", function() { return RS_FOGTABLEMODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FOGSTART", function() { return RS_FOGSTART; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FOGEND", function() { return RS_FOGEND; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FOGDENSITY", function() { return RS_FOGDENSITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_RANGEFOGENABLE", function() { return RS_RANGEFOGENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILENABLE", function() { return RS_STENCILENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILFAIL", function() { return RS_STENCILFAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILZFAIL", function() { return RS_STENCILZFAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILPASS", function() { return RS_STENCILPASS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILFUNC", function() { return RS_STENCILFUNC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILREF", function() { return RS_STENCILREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILMASK", function() { return RS_STENCILMASK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILWRITEMASK", function() { return RS_STENCILWRITEMASK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_TEXTUREFACTOR", function() { return RS_TEXTUREFACTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP0", function() { return RS_WRAP0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP1", function() { return RS_WRAP1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP2", function() { return RS_WRAP2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP3", function() { return RS_WRAP3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP4", function() { return RS_WRAP4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP5", function() { return RS_WRAP5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP6", function() { return RS_WRAP6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP7", function() { return RS_WRAP7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_CLIPPING", function() { return RS_CLIPPING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_LIGHTING", function() { return RS_LIGHTING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_AMBIENT", function() { return RS_AMBIENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_FOGVERTEXMODE", function() { return RS_FOGVERTEXMODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_COLORVERTEX", function() { return RS_COLORVERTEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_LOCALVIEWER", function() { return RS_LOCALVIEWER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_NORMALIZENORMALS", function() { return RS_NORMALIZENORMALS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_DIFFUSEMATERIALSOURCE", function() { return RS_DIFFUSEMATERIALSOURCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SPECULARMATERIALSOURCE", function() { return RS_SPECULARMATERIALSOURCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_AMBIENTMATERIALSOURCE", function() { return RS_AMBIENTMATERIALSOURCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_EMISSIVEMATERIALSOURCE", function() { return RS_EMISSIVEMATERIALSOURCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_VERTEXBLEND", function() { return RS_VERTEXBLEND; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_CLIPPLANEENABLE", function() { return RS_CLIPPLANEENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE", function() { return RS_POINTSIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE_MIN", function() { return RS_POINTSIZE_MIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSPRITEENABLE", function() { return RS_POINTSPRITEENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALEENABLE", function() { return RS_POINTSCALEENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_A", function() { return RS_POINTSCALE_A; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_B", function() { return RS_POINTSCALE_B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_C", function() { return RS_POINTSCALE_C; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_MULTISAMPLEANTIALIAS", function() { return RS_MULTISAMPLEANTIALIAS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_MULTISAMPLEMASK", function() { return RS_MULTISAMPLEMASK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_PATCHEDGESTYLE", function() { return RS_PATCHEDGESTYLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_DEBUGMONITORTOKEN", function() { return RS_DEBUGMONITORTOKEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE_MAX", function() { return RS_POINTSIZE_MAX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_INDEXEDVERTEXBLENDENABLE", function() { return RS_INDEXEDVERTEXBLENDENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE", function() { return RS_COLORWRITEENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_TWEENFACTOR", function() { return RS_TWEENFACTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDOP", function() { return RS_BLENDOP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_POSITIONDEGREE", function() { return RS_POSITIONDEGREE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_NORMALDEGREE", function() { return RS_NORMALDEGREE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SCISSORTESTENABLE", function() { return RS_SCISSORTESTENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SLOPESCALEDEPTHBIAS", function() { return RS_SLOPESCALEDEPTHBIAS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_ANTIALIASEDLINEENABLE", function() { return RS_ANTIALIASEDLINEENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_TWOSIDEDSTENCILMODE", function() { return RS_TWOSIDEDSTENCILMODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILFAIL", function() { return RS_CCW_STENCILFAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILZFAIL", function() { return RS_CCW_STENCILZFAIL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILPASS", function() { return RS_CCW_STENCILPASS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILFUNC", function() { return RS_CCW_STENCILFUNC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE1", function() { return RS_COLORWRITEENABLE1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE2", function() { return RS_COLORWRITEENABLE2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE3", function() { return RS_COLORWRITEENABLE3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDFACTOR", function() { return RS_BLENDFACTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SRGBWRITEENABLE", function() { return RS_SRGBWRITEENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_DEPTHBIAS", function() { return RS_DEPTHBIAS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SEPARATEALPHABLENDENABLE", function() { return RS_SEPARATEALPHABLENDENABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_SRCBLENDALPHA", function() { return RS_SRCBLENDALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_DESTBLENDALPHA", function() { return RS_DESTBLENDALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDOPALPHA", function() { return RS_BLENDOPALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CULL_NONE", function() { return CULL_NONE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CULL_CW", function() { return CULL_CW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CULL_CCW", function() { return CULL_CCW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_NEVER", function() { return CMP_NEVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_LESS", function() { return CMP_LESS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_EQUAL", function() { return CMP_EQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_LEQUAL", function() { return CMP_LEQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_GREATER", function() { return CMP_GREATER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_NOTEQUAL", function() { return CMP_NOTEQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_GREATEREQUAL", function() { return CMP_GREATEREQUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMP_ALWAYS", function() { return CMP_ALWAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_ZERO", function() { return BLEND_ZERO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_ONE", function() { return BLEND_ONE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCCOLOR", function() { return BLEND_SRCCOLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVSRCCOLOR", function() { return BLEND_INVSRCCOLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCALPHA", function() { return BLEND_SRCALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVSRCALPHA", function() { return BLEND_INVSRCALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_DESTALPHA", function() { return BLEND_DESTALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVDESTALPHA", function() { return BLEND_INVDESTALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_DESTCOLOR", function() { return BLEND_DESTCOLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVDESTCOLOR", function() { return BLEND_INVDESTCOLOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCALPHASAT", function() { return BLEND_SRCALPHASAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_BOTHSRCALPHA", function() { return BLEND_BOTHSRCALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_BOTHINVSRCALPHA", function() { return BLEND_BOTHINVSRCALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_BLENDFACTOR", function() { return BLEND_BLENDFACTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVBLENDFACTOR", function() { return BLEND_INVBLENDFACTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_ADD", function() { return BLENDOP_ADD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_SUBTRACT", function() { return BLENDOP_SUBTRACT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_REVSUBTRACT", function() { return BLENDOP_REVSUBTRACT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_MIN", function() { return BLENDOP_MIN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_MAX", function() { return BLENDOP_MAX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_ALPHA", function() { return TF_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_LUMINANCE", function() { return TF_LUMINANCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_LUMINANCE_ALPHA", function() { return TF_LUMINANCE_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RGB", function() { return TF_RGB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RGBA", function() { return TF_RGBA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RED", function() { return TF_RED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_R", function() { return TF_R; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RG", function() { return TF_RG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RED_INTEGER", function() { return TF_RED_INTEGER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_R_INTEGER", function() { return TF_R_INTEGER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RG_INTEGER", function() { return TF_RG_INTEGER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RGB_INTEGER", function() { return TF_RGB_INTEGER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TF_RGBA_INTEGER", function() { return TF_RGBA_INTEGER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_BYTE", function() { return TT_UNSIGNED_BYTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT", function() { return TT_UNSIGNED_INT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_FLOAT", function() { return TT_FLOAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_HALF_FLOAT", function() { return TT_HALF_FLOAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_BYTE", function() { return TT_BYTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_SHORT", function() { return TT_SHORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT", function() { return TT_UNSIGNED_SHORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_INT", function() { return TT_INT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INTEGER", function() { return TT_UNSIGNED_INTEGER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_4_4_4_4", function() { return TT_UNSIGNED_SHORT_4_4_4_4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_5_5_5_1", function() { return TT_UNSIGNED_SHORT_5_5_5_1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_5_6_5", function() { return TT_UNSIGNED_SHORT_5_6_5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_2_10_10_10_REV", function() { return TT_UNSIGNED_INT_2_10_10_10_REV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_24_8", function() { return TT_UNSIGNED_INT_24_8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_10F_11F_11F_REV", function() { return TT_UNSIGNED_INT_10F_11F_11F_REV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_5_9_9_9_REV", function() { return TT_UNSIGNED_INT_5_9_9_9_REV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TT_FLOAT_32_UNSIGNED_INT_24_8_REV", function() { return TT_FLOAT_32_UNSIGNED_INT_24_8_REV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WrapModes", function() { return WrapModes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlendTable", function() { return BlendTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterMode", function() { return FilterMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MipFilterMode", function() { return MipFilterMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_MAGIC", function() { return DDS_MAGIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_CAPS", function() { return DDSD_CAPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_HEIGHT", function() { return DDSD_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_WIDTH", function() { return DDSD_WIDTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_PITCH", function() { return DDSD_PITCH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_PIXELFORMAT", function() { return DDSD_PIXELFORMAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_MIPMAPCOUNT", function() { return DDSD_MIPMAPCOUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_LINEARSIZE", function() { return DDSD_LINEARSIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSD_DEPTH", function() { return DDSD_DEPTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_COMPLEX", function() { return DDSCAPS_COMPLEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_MIPMAP", function() { return DDSCAPS_MIPMAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_TEXTURE", function() { return DDSCAPS_TEXTURE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP", function() { return DDSCAPS2_CUBEMAP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEX", function() { return DDSCAPS2_CUBEMAP_POSITIVEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEX", function() { return DDSCAPS2_CUBEMAP_NEGATIVEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEY", function() { return DDSCAPS2_CUBEMAP_POSITIVEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEY", function() { return DDSCAPS2_CUBEMAP_NEGATIVEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEZ", function() { return DDSCAPS2_CUBEMAP_POSITIVEZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEZ", function() { return DDSCAPS2_CUBEMAP_NEGATIVEZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_VOLUME", function() { return DDSCAPS2_VOLUME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDPF_ALPHAPIXELS", function() { return DDPF_ALPHAPIXELS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDPF_ALPHA", function() { return DDPF_ALPHA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDPF_FOURCC", function() { return DDPF_FOURCC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDPF_RGB", function() { return DDPF_RGB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDPF_YUV", function() { return DDPF_YUV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDPF_LUMINANCE", function() { return DDPF_LUMINANCE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_LENGTH_INT", function() { return DDS_HEADER_LENGTH_INT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_MAGIC", function() { return DDS_HEADER_OFFSET_MAGIC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_SIZE", function() { return DDS_HEADER_OFFSET_SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_FLAGS", function() { return DDS_HEADER_OFFSET_FLAGS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_HEIGHT", function() { return DDS_HEADER_OFFSET_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_WIDTH", function() { return DDS_HEADER_OFFSET_WIDTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_MIPMAP_COUNT", function() { return DDS_HEADER_OFFSET_MIPMAP_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_PF_FLAGS", function() { return DDS_HEADER_OFFSET_PF_FLAGS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_PF_FOURCC", function() { return DDS_HEADER_OFFSET_PF_FOURCC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_RGB_BPP", function() { return DDS_HEADER_OFFSET_RGB_BPP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_R_MASK", function() { return DDS_HEADER_OFFSET_R_MASK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_G_MASK", function() { return DDS_HEADER_OFFSET_G_MASK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_B_MASK", function() { return DDS_HEADER_OFFSET_B_MASK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_A_MASK", function() { return DDS_HEADER_OFFSET_A_MASK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS1", function() { return DDS_HEADER_OFFSET_CAPS1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS2", function() { return DDS_HEADER_OFFSET_CAPS2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS3", function() { return DDS_HEADER_OFFSET_CAPS3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS4", function() { return DDS_HEADER_OFFSET_CAPS4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_DXGI_FORMAT", function() { return DDS_HEADER_OFFSET_DXGI_FORMAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT1", function() { return FOURCC_DXT1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT5", function() { return FOURCC_DXT5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT3", function() { return FOURCC_DXT3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT10", function() { return FOURCC_DXT10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOURCC_D3DFMT_R16G16B16A16F", function() { return FOURCC_D3DFMT_R16G16B16A16F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOURCC_D3DFMT_R32G32B32A32F", function() { return FOURCC_D3DFMT_R32G32B32A32F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DXGI_FORMAT_R16G16B16A16_FLOAT", function() { return DXGI_FORMAT_R16G16B16A16_FLOAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DXGI_FORMAT_B8G8R8X8_UNORM", function() { return DXGI_FORMAT_B8G8R8X8_UNORM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorRequestAnimationFrame", function() { return VendorRequestAnimationFrame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorCancelAnimationFrame", function() { return VendorCancelAnimationFrame; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorRequestFullScreen", function() { return VendorRequestFullScreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorExitFullScreen", function() { return VendorExitFullScreen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorGetFullScreenElement", function() { return VendorGetFullScreenElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VendorWebglPrefixes", function() { return VendorWebglPrefixes; });
/*

    Property Types

 */
const Type = {
  UNKNOWN: 0,
  BOOLEAN: 1,
  STRING: 10,
  PATH: 11,
  EXPRESSION: 12,
  BYTE: 20,
  UINT: 21,
  USHORT: 22,
  FLOAT: 23,
  OBJECT: 30,
  RAW: 31,
  PLAIN: 32,
  LIST: 33,
  ARRAY: 34,
  VECTOR: 50,
  VECTOR2: 52,
  VECTOR3: 53,
  VECTOR4: 54,
  COLOR: 58,
  QUATERNION: 59,
  MATRIX3: 60,
  MATRIX4: 61,
  INDEX_BUFFER: 62
};
const TypeCategory = {
  UNKNOWN: 0,
  BOOLEAN: 1,
  STRING: 2,
  NUMBER: 3,
  OBJECT: 4,
  PLAIN: 5,
  LIST: 6,
  ARRAY: 7,
  TYPED: 8
};
const TypeTypeCategory = {
  [Type.UNKNOWN]: TypeCategory.UNKNOWN,
  [Type.BOOLEAN]: TypeCategory.BOOLEAN,
  [Type.STRING]: TypeCategory.STRING,
  [Type.PATH]: TypeCategory.STRING,
  [Type.EXPRESSION]: TypeCategory.STRING,
  [Type.BYTE]: TypeCategory.NUMBER,
  [Type.UINT]: TypeCategory.NUMBER,
  [Type.USHORT]: TypeCategory.NUMBER,
  [Type.FLOAT]: TypeCategory.NUMBER,
  [Type.OBJECT]: TypeCategory.OBJECT,
  [Type.RAW]: TypeCategory.OBJECT,
  [Type.LIST]: TypeCategory.LIST,
  [Type.PLAIN]: TypeCategory.PLAIN,
  [Type.ARRAY]: TypeCategory.ARRAY,
  [Type.VECTOR]: TypeCategory.TYPED,
  [Type.VECTOR2]: TypeCategory.TYPED,
  [Type.VECTOR3]: TypeCategory.TYPED,
  [Type.VECTOR4]: TypeCategory.TYPED,
  [Type.MATRIX3]: TypeCategory.TYPED,
  [Type.MATRIX4]: TypeCategory.TYPED,
  [Type.INDEX_BUFFER]: TypeCategory.TYPED
};
const TypeLength = {
  [Type.VECTOR2]: 2,
  [Type.VECTOR3]: 3,
  [Type.VECTOR4]: 4,
  [Type.COLOR]: 4,
  [Type.QUATERNION]: 4,
  [Type.MATRIX3]: 9,
  [Type.MATRIX4]: 16
};
/*

    Webgl & Webgl2

*/

const GL_COLOR_BUFFER_BIT = 16384;
const GL_DEPTH_BUFFER_BIT = 256;
const GL_STENCIL_BUFFER_BIT = 1024;
const GL_TEXTURE_2D = 3553;
const GL_TEXTURE_CUBE_MAP = 34067;
const GL_TEXTURE_3D = 32879;
const GL_TEXTURE_MAG_FILTER = 10240;
const GL_TEXTURE_MIN_FILTER = 10241;
const GL_TEXTURE_WRAP_S = 10242;
const GL_TEXTURE_WRAP_T = 10243;
const GL_BYTE = 5120;
const GL_UNSIGNED_BYTE = 5121;
const GL_SHORT = 5122;
const GL_UNSIGNED_SHORT = 5123;
const GL_INT = 5124;
const GL_UNSIGNED_INT = 5125;
const GL_FLOAT = 5126;
const GL_HALF_FLOAT_OES = 36193; //webgl only

const GL_HALF_FLOAT = 5131; //webgl2

const GL_DEPTH_COMPONENT16 = 33189; //webgl2

const GL_DEPTH_COMPONENT24 = 33190; //webgl2

const GL_DEPTH_COMPONENT32F = 36012; //webgl2

const GL_FLOAT_VEC2 = 35664;
const GL_FLOAT_VEC3 = 35665;
const GL_FLOAT_VEC4 = 35666;
const GL_INT_VEC2 = 35667;
const GL_INT_VEC3 = 35668;
const GL_INT_VEC4 = 35669;
const GL_BOOL = 35670;
const GL_BOOL_VEC2 = 35671;
const GL_BOOL_VEC3 = 35672;
const GL_BOOL_VEC4 = 35673;
const GL_FLOAT_MAT2 = 35674;
const GL_FLOAT_MAT3 = 35675;
const GL_FLOAT_MAT4 = 35676;
const GL_TYPE_LENGTH = {
  [GL_FLOAT]: 1,
  [GL_INT]: 1,
  [GL_BYTE]: 1,
  [GL_BOOL]: 1,
  [GL_FLOAT_VEC2]: 2,
  [GL_INT_VEC2]: 2,
  [GL_BOOL_VEC2]: 2,
  [GL_FLOAT_VEC3]: 3,
  [GL_INT_VEC3]: 3,
  [GL_BOOL_VEC3]: 3,
  [GL_FLOAT_VEC4]: 4,
  [GL_INT_VEC4]: 4,
  [GL_BOOL_VEC4]: 4,
  [GL_FLOAT_MAT3]: 9,
  [GL_FLOAT_MAT4]: 16
};
const GL_SAMPLER_2D = 35678;
const GL_SAMPLER_3D = 35679;
const GL_SAMPLER_CUBE = 35680;
const GL_DEPTH_COMPONENT = 6402;
const GL_ALPHA = 6406;
const GL_RGB = 6407;
const GL_RGBA = 6408;
const GL_LUMINANCE = 6409;
const GL_LUMINANCE_ALPHA = 6410;
const GL_DEPTH_STENCIL = 34041;
const GL_UNSIGNED_INT_24_8_WEBGL = 34042;
const GL_R8 = 33321; //webgl2

const GL_R16F = 33325; //webgl2

const GL_R32F = 33326; //webgl2

const GL_R8UI = 33330; //webgl2

const GL_RG8 = 33323; //webgl2

const GL_RG16F = 33327; //webgl2

const GL_RG32F = 33328; //webgl2

const GL_RGB8 = 32849; //webgl2

const GL_SRGB8 = 35905; //webgl2

const GL_RGB565 = 36194; //webgl2

const GL_R11F_G11F_B10F = 35898; //webgl2

const GL_RGB9_E5 = 35901; //webgl2

const GL_RGB16F = 34843; //webgl2

const GL_RGB32F = 34837; //webgl2

const GL_RGB8UI = 36221; //webgl2

const GL_RGBA8 = 32856; //webgl2

const GL_RGB5_A1 = 32855; //webgl2

const GL_RGBA16F = 34842; //webgl2

const GL_RGBA32F = 34836; //webgl2

const GL_RGBA8UI = 36220; //webgl2

const GL_RGBA16I = 36232; //webgl2

const GL_RGBA16UI = 36214; //webgl2

const GL_RGBA32I = 36226; //webgl2

const GL_RGBA32UI = 36208; //webgl2

const GL_NEAREST = 9728;
const GL_LINEAR = 9729;
const GL_NEAREST_MIPMAP_NEAREST = 9984;
const GL_LINEAR_MIPMAP_NEAREST = 9985;
const GL_NEAREST_MIPMAP_LINEAR = 9986;
const GL_LINEAR_MIPMAP_LINEAR = 9987;
const GL_REPEAT = 10497;
const GL_CLAMP_TO_EDGE = 33071;
const GL_MIRRORED_REPEAT = 33648;
const GL_ZERO = 0;
const GL_ONE = 1;
const GL_SRC_COLOR = 768;
const GL_ONE_MINUS_SRC_COLOR = 769;
const GL_SRC_ALPHA = 770;
const GL_ONE_MINUS_SRC_ALPHA = 771;
const GL_DST_ALPHA = 772;
const GL_ONE_MINUS_DST_ALPHA = 773;
const GL_DST_COLOR = 774;
const GL_ONE_MINUS_DST_COLOR = 775;
const GL_SRC_ALPHA_SATURATE = 776;
const GL_CONSTANT_COLOR = 32769;
const GL_ONE_MINUS_CONSTANT_COLOR = 32770;
const GL_CONSTANT_ALPHA = 32771;
const GL_ONE_MINUS_CONSTANT_ALPHA = 32772;
const GL_VERTEX_SHADER = 35633;
const GL_FRAGMENT_SHADER = 35632;
const GL_FRONT = 1028;
const GL_BACK = 1029;
const GL_FRONT_AND_BACK = 1032;
const GL_NEVER = 512;
const GL_LESS = 513;
const GL_EQUAL = 514;
const GL_LEQUAL = 515;
const GL_GREATER = 516;
const GL_NOTEQUAL = 517;
const GL_GEQUAL = 518;
const GL_ALWAYS = 519;
const GL_KEEP = 7680;
const GL_REPLACE = 7681;
const GL_INCR = 7682;
const GL_DECR = 7683;
const GL_INCR_WRAP = 34055;
const GL_DECR_WRAP = 34056;
const GL_INVERT = 5386;
const GL_STREAM_DRAW = 35040;
const GL_STATIC_DRAW = 35044;
const GL_DYNAMIC_DRAW = 35048;
const GL_ARRAY_BUFFER = 34962;
const GL_ELEMENT_ARRAY_BUFFER = 34963;
const GL_POINTS = 0;
const GL_LINES = 1;
const GL_LINE_LOOP = 2;
const GL_LINE_STRIP = 3;
const GL_TRIANGLES = 4;
const GL_TRIANGLE_STRIP = 5;
const GL_TRIANGLE_FAN = 6;
const GL_CW = 2304;
const GL_CCW = 2305;
const GL_CULL_FACE = 2884;
const GL_DEPTH_TEST = 2929;
const GL_BLEND = 3042;
/*

    Direct 3D and CCP

*/
// Render Mode

const RM_ANY = -1;
const RM_OPAQUE = 0;
const RM_DECAL = 1;
const RM_TRANSPARENT = 2;
const RM_ADDITIVE = 3;
const RM_DEPTH = 4;
const RM_FULLSCREEN = 5;
const RM_PICKABLE = 6;
const RM_DISTORTION = 7; // Render States

const RS_ZENABLE = 7; // D3DZBUFFERTYPE (or TRUE/FALSE for legacy)

const RS_FILLMODE = 8; // D3DFILLMODE

const RS_SHADEMODE = 9; // D3DSHADEMODE

const RS_ZWRITEENABLE = 14; // TRUE to enable z writes

const RS_ALPHATESTENABLE = 15; // TRUE to enable alpha tests

const RS_LASTPIXEL = 16; // TRUE for last-pixel on lines

const RS_SRCBLEND = 19; // D3DBLEND

const RS_DESTBLEND = 20; // D3DBLEND

const RS_CULLMODE = 22; // D3DCULL

const RS_ZFUNC = 23; // D3DCMPFUNC

const RS_ALPHAREF = 24; // D3DFIXED

const RS_ALPHAFUNC = 25; // D3DCMPFUNC

const RS_DITHERENABLE = 26; // TRUE to enable dithering

const RS_ALPHABLENDENABLE = 27; // TRUE to enable alpha blending

const RS_FOGENABLE = 28; // TRUE to enable fog blending

const RS_SPECULARENABLE = 29; // TRUE to enable specular

const RS_FOGCOLOR = 34; // D3DCOLOR

const RS_FOGTABLEMODE = 35; // D3DFOGMODE

const RS_FOGSTART = 36; // Fog start (for both vertex and pixel fog)

const RS_FOGEND = 37; // Fog end

const RS_FOGDENSITY = 38; // Fog density

const RS_RANGEFOGENABLE = 48; // Enables range-based fog

const RS_STENCILENABLE = 52; // BOOL enable/disable stenciling

const RS_STENCILFAIL = 53; // D3DSTENCILOP to do if stencil test fails

const RS_STENCILZFAIL = 54; // D3DSTENCILOP to do if stencil test passes and Z test fails

const RS_STENCILPASS = 55; // D3DSTENCILOP to do if both stencil and Z tests pass

const RS_STENCILFUNC = 56; // D3DCMPFUNC fn.  Stencil Test passes if ((ref & mask) stencilfn (stencil & mask)) is true

const RS_STENCILREF = 57; // Reference value used in stencil test

const RS_STENCILMASK = 58; // Mask value used in stencil test

const RS_STENCILWRITEMASK = 59; // Write mask applied to values written to stencil buffer

const RS_TEXTUREFACTOR = 60; // D3DCOLOR used for multi-texture blend

const RS_WRAP0 = 128; // wrap for 1st texture coord. set

const RS_WRAP1 = 129; // wrap for 2nd texture coord. set

const RS_WRAP2 = 130; // wrap for 3rd texture coord. set

const RS_WRAP3 = 131; // wrap for 4th texture coord. set

const RS_WRAP4 = 132; // wrap for 5th texture coord. set

const RS_WRAP5 = 133; // wrap for 6th texture coord. set

const RS_WRAP6 = 134; // wrap for 7th texture coord. set

const RS_WRAP7 = 135; // wrap for 8th texture coord. set

const RS_CLIPPING = 136;
const RS_LIGHTING = 137;
const RS_AMBIENT = 139;
const RS_FOGVERTEXMODE = 140;
const RS_COLORVERTEX = 141;
const RS_LOCALVIEWER = 142;
const RS_NORMALIZENORMALS = 143;
const RS_DIFFUSEMATERIALSOURCE = 145;
const RS_SPECULARMATERIALSOURCE = 146;
const RS_AMBIENTMATERIALSOURCE = 147;
const RS_EMISSIVEMATERIALSOURCE = 148;
const RS_VERTEXBLEND = 151;
const RS_CLIPPLANEENABLE = 152;
const RS_POINTSIZE = 154; // float point size

const RS_POINTSIZE_MIN = 155; // float point size min threshold

const RS_POINTSPRITEENABLE = 156; // BOOL point texture coord control

const RS_POINTSCALEENABLE = 157; // BOOL point size scale enable

const RS_POINTSCALE_A = 158; // float point attenuation A value

const RS_POINTSCALE_B = 159; // float point attenuation B value

const RS_POINTSCALE_C = 160; // float point attenuation C value

const RS_MULTISAMPLEANTIALIAS = 161; // BOOL - set to do FSAA with multisample buffer

const RS_MULTISAMPLEMASK = 162; // DWORD - per-sample enable/disable

const RS_PATCHEDGESTYLE = 163; // Sets whether patch edges will use float style tessellation

const RS_DEBUGMONITORTOKEN = 165; // DEBUG ONLY - token to debug monitor

const RS_POINTSIZE_MAX = 166; // float point size max threshold

const RS_INDEXEDVERTEXBLENDENABLE = 167;
const RS_COLORWRITEENABLE = 168; // per-channel write enable

const RS_TWEENFACTOR = 170; // float tween factor

const RS_BLENDOP = 171; // D3DBLENDOP setting

const RS_POSITIONDEGREE = 172; // NPatch position interpolation degree. D3DDEGREE_LINEAR or D3DDEGREE_CUBIC (default)

const RS_NORMALDEGREE = 173; // NPatch normal interpolation degree. D3DDEGREE_LINEAR (default) or D3DDEGREE_QUADRATIC

const RS_SCISSORTESTENABLE = 174;
const RS_SLOPESCALEDEPTHBIAS = 175;
const RS_ANTIALIASEDLINEENABLE = 176;
const RS_TWOSIDEDSTENCILMODE = 185; // BOOL enable/disable 2 sided stenciling

const RS_CCW_STENCILFAIL = 186; // D3DSTENCILOP to do if ccw stencil test fails

const RS_CCW_STENCILZFAIL = 187; // D3DSTENCILOP to do if ccw stencil test passes and Z test fails

const RS_CCW_STENCILPASS = 188; // D3DSTENCILOP to do if both ccw stencil and Z tests pass

const RS_CCW_STENCILFUNC = 189; // D3DCMPFUNC fn.  ccw Stencil Test passes if ((ref & mask) stencilfn (stencil & mask)) is true

const RS_COLORWRITEENABLE1 = 190; // Additional ColorWriteEnables for the devices that support D3DPMISCCAPS_INDEPENDENTWRITEMASKS

const RS_COLORWRITEENABLE2 = 191; // Additional ColorWriteEnables for the devices that support D3DPMISCCAPS_INDEPENDENTWRITEMASKS

const RS_COLORWRITEENABLE3 = 192; // Additional ColorWriteEnables for the devices that support D3DPMISCCAPS_INDEPENDENTWRITEMASKS

const RS_BLENDFACTOR = 193; // D3DCOLOR used for a constant blend factor during alpha blending for devices that support D3DPBLENDCAPS_BLENDFACTOR

const RS_SRGBWRITEENABLE = 194; // Enable rendertarget writes to be DE-linearized to SRGB (for formats that expose D3DUSAGE_QUERY_SRGBWRITE)

const RS_DEPTHBIAS = 195;
const RS_SEPARATEALPHABLENDENABLE = 206; // TRUE to enable a separate blending function for the alpha channel

const RS_SRCBLENDALPHA = 207; // SRC blend factor for the alpha channel when RS_SEPARATEDESTALPHAENABLE is TRUE

const RS_DESTBLENDALPHA = 208; // DST blend factor for the alpha channel when RS_SEPARATEDESTALPHAENABLE is TRUE

const RS_BLENDOPALPHA = 209; // Blending operation for the alpha channel when RS_SEPARATEDESTALPHAENABLE is TRUE */// Cull Modes

const CULL_NONE = 1;
const CULL_CW = 2;
const CULL_CCW = 3; // Compare

const CMP_NEVER = 1;
const CMP_LESS = 2;
const CMP_EQUAL = 3;
const CMP_LEQUAL = 4;
const CMP_GREATER = 5;
const CMP_NOTEQUAL = 6;
const CMP_GREATEREQUAL = 7;
const CMP_ALWAYS = 8; // Blend

const BLEND_ZERO = 1;
const BLEND_ONE = 2;
const BLEND_SRCCOLOR = 3;
const BLEND_INVSRCCOLOR = 4;
const BLEND_SRCALPHA = 5;
const BLEND_INVSRCALPHA = 6;
const BLEND_DESTALPHA = 7;
const BLEND_INVDESTALPHA = 8;
const BLEND_DESTCOLOR = 9;
const BLEND_INVDESTCOLOR = 10;
const BLEND_SRCALPHASAT = 11;
const BLEND_BOTHSRCALPHA = 12;
const BLEND_BOTHINVSRCALPHA = 13;
const BLEND_BLENDFACTOR = 14;
const BLEND_INVBLENDFACTOR = 15; // Blend Operations

const BLENDOP_ADD = 1;
const BLENDOP_SUBTRACT = 2;
const BLENDOP_REVSUBTRACT = 3;
const BLENDOP_MIN = 4;
const BLENDOP_MAX = 5; // Texture format aliases

const TF_ALPHA = 0;
const TF_LUMINANCE = 1;
const TF_LUMINANCE_ALPHA = 2;
const TF_RGB = 4;
const TF_RGBA = 5;
const TF_RED = 6;
const TF_R = 6;
const TF_RG = 7;
const TF_RED_INTEGER = 8;
const TF_R_INTEGER = 8;
const TF_RG_INTEGER = 9;
const TF_RGB_INTEGER = 10;
const TF_RGBA_INTEGER = 11; // Texture types aliases

const TT_UNSIGNED_BYTE = 0;
const TT_UNSIGNED_INT = 0;
const TT_FLOAT = 1;
const TT_HALF_FLOAT = 2;
const TT_BYTE = 3;
const TT_SHORT = 4;
const TT_UNSIGNED_SHORT = 5;
const TT_INT = 6;
const TT_UNSIGNED_INTEGER = 7;
const TT_UNSIGNED_SHORT_4_4_4_4 = 8;
const TT_UNSIGNED_SHORT_5_5_5_1 = 9;
const TT_UNSIGNED_SHORT_5_6_5 = 10;
const TT_UNSIGNED_INT_2_10_10_10_REV = 11;
const TT_UNSIGNED_INT_24_8 = 12;
const TT_UNSIGNED_INT_10F_11F_11F_REV = 13;
const TT_UNSIGNED_INT_5_9_9_9_REV = 14;
const TT_FLOAT_32_UNSIGNED_INT_24_8_REV = 15; // Texture Wrap modes

const WrapModes = [0, GL_REPEAT, GL_MIRRORED_REPEAT, GL_CLAMP_TO_EDGE, GL_CLAMP_TO_EDGE, GL_CLAMP_TO_EDGE]; // Blend Table

const BlendTable = [-1, // --
GL_ZERO, // D3DBLEND_ZERO
GL_ONE, // D3DBLEND_ONE
GL_SRC_COLOR, // D3DBLEND_SRCCOLOR
GL_ONE_MINUS_SRC_COLOR, // D3DBLEND_INVSRCCOLOR
GL_SRC_ALPHA, // D3DBLEND_SRCALPHA
GL_ONE_MINUS_SRC_ALPHA, // D3DBLEND_INVSRCALPHA
GL_DST_ALPHA, // D3DBLEND_DESTALPHA
GL_ONE_MINUS_DST_ALPHA, // D3DBLEND_INVDESTALPHA
GL_DST_COLOR, // D3DBLEND_DESTCOLOR
GL_ONE_MINUS_DST_COLOR, // D3DBLEND_INVDESTCOLOR
GL_SRC_ALPHA_SATURATE, // D3DBLEND_SRCALPHASAT
-1, // D3DBLEND_BOTHSRCALPHA
-1, // D3DBLEND_BOTHINVSRCALPHA
GL_CONSTANT_COLOR, // D3DBLEND_BLENDFACTOR
GL_ONE_MINUS_CONSTANT_COLOR // D3DBLEND_INVBLENDFACTOR
]; // Filter mode conversions

const FilterMode = {
  [GL_NEAREST]: 1,
  [GL_LINEAR]: 2
}; // Mip filter mode conversions

const MipFilterMode = {
  [GL_NEAREST]: 0,
  [GL_LINEAR]: 0,
  [GL_NEAREST_MIPMAP_NEAREST]: 1,
  [GL_LINEAR_MIPMAP_NEAREST]: 1,
  [GL_NEAREST_MIPMAP_LINEAR]: 2,
  [GL_LINEAR_MIPMAP_LINEAR]: 2
};
/*

  Direct Draw Surface
  https://docs.microsoft.com/en-us/windows/desktop/direct3ddds/dx-graphics-dds-pguide

*/

const DDS_MAGIC = 0x20534444;
const DDSD_CAPS = 0x1;
const DDSD_HEIGHT = 0x2;
const DDSD_WIDTH = 0x4;
const DDSD_PITCH = 0x8;
const DDSD_PIXELFORMAT = 0x1000;
const DDSD_MIPMAPCOUNT = 0x20000;
const DDSD_LINEARSIZE = 0x80000;
const DDSD_DEPTH = 0x800000;
const DDSCAPS_COMPLEX = 0x8;
const DDSCAPS_MIPMAP = 0x400000;
const DDSCAPS_TEXTURE = 0x1000;
const DDSCAPS2_CUBEMAP = 0x200;
const DDSCAPS2_CUBEMAP_POSITIVEX = 0x400;
const DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800;
const DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000;
const DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000;
const DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000;
const DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000;
const DDSCAPS2_VOLUME = 0x200000;
const DDPF_ALPHAPIXELS = 0x1;
const DDPF_ALPHA = 0x2;
const DDPF_FOURCC = 0x4;
const DDPF_RGB = 0x40;
const DDPF_YUV = 0x200;
const DDPF_LUMINANCE = 0x20000;
const DDS_HEADER_LENGTH_INT = 31;
const DDS_HEADER_OFFSET_MAGIC = 0;
const DDS_HEADER_OFFSET_SIZE = 1;
const DDS_HEADER_OFFSET_FLAGS = 2;
const DDS_HEADER_OFFSET_HEIGHT = 3;
const DDS_HEADER_OFFSET_WIDTH = 4;
const DDS_HEADER_OFFSET_MIPMAP_COUNT = 7;
const DDS_HEADER_OFFSET_PF_FLAGS = 20;
const DDS_HEADER_OFFSET_PF_FOURCC = 21;
const DDS_HEADER_OFFSET_RGB_BPP = 22;
const DDS_HEADER_OFFSET_R_MASK = 23;
const DDS_HEADER_OFFSET_G_MASK = 24;
const DDS_HEADER_OFFSET_B_MASK = 25;
const DDS_HEADER_OFFSET_A_MASK = 26;
const DDS_HEADER_OFFSET_CAPS1 = 27;
const DDS_HEADER_OFFSET_CAPS2 = 28;
const DDS_HEADER_OFFSET_CAPS3 = 29;
const DDS_HEADER_OFFSET_CAPS4 = 30;
const DDS_HEADER_OFFSET_DXGI_FORMAT = 32;
const FOURCC_DXT1 = 827611204;
const FOURCC_DXT5 = 894720068;
const FOURCC_DXT3 = 861165636;
const FOURCC_DXT10 = 827611204;
const FOURCC_D3DFMT_R16G16B16A16F = 113;
const FOURCC_D3DFMT_R32G32B32A32F = 116;
const DXGI_FORMAT_R16G16B16A16_FLOAT = 10;
const DXGI_FORMAT_B8G8R8X8_UNORM = 88;
/*

    Browser and Vendors

 */

/**
 * Vendor request animation frame names
 * @type {String[]}
 */

const VendorRequestAnimationFrame = ["requestAnimationFrame", "webkitRequestAnimationFrame", "mozRequestAnimationFrame", "oRequestAnimationFrame", "msRequestAnimationFrame"];
/**
 * Vendor cancel animation frame names
 * @type {String[]}
 */

const VendorCancelAnimationFrame = ["cancelAnimationFrame", "webkitRequestAnimationFrame", "mozRequestAnimationFrame", "oRequestAnimationFrame", "msRequestAnimationFrame"];
/**
 * Vendor request full screen
 * @type {String[]}
 */

const VendorRequestFullScreen = ["requestFullscreen", "webkitRequestFullscreen", "mozRequestFullScreen", "msRequestFullscreen"];
/**
 * Vendor exit full screen
 * @type {String[]}
 */

const VendorExitFullScreen = ["exitFullscreen", "webkitExitFullscreen", "mozCancelFullScreen", "msExitFullscreen"];
/**
 * Vendor get full screen element
 * @type {String[]}
 */

const VendorGetFullScreenElement = ["fullscreenElement", "webkitFullscreenElement", "mozFullScreenElement", "msFullscreenElement"];
/**
 * Webgl vendor prefixes
 * @type {String[]}
 */

const VendorWebglPrefixes = ["", "MOZ_", "WEBKIT_", "WEBGL_"];

/***/ }),

/***/ "./global/engine/Tw2Device.js":
/*!************************************!*\
  !*** ./global/engine/Tw2Device.js ***!
  \************************************/
/*! exports provided: Tw2Device */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Device", function() { return Tw2Device; });
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ "./global/math/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./global/util/index.js");
/* harmony import */ var core_mesh_Tw2Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core/mesh/Tw2Effect */ "./core/mesh/Tw2Effect.js");
/* harmony import */ var core_vertex_Tw2VertexDeclaration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core/vertex/Tw2VertexDeclaration */ "./core/vertex/Tw2VertexDeclaration.js");
/* harmony import */ var _class_Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../class/Tw2EventEmitter */ "./global/class/Tw2EventEmitter.js");
/* harmony import */ var _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2Constant */ "./global/engine/Tw2Constant.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core */ "./core/index.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }








/**
 * Tw2Device
 *
 * @property {WebGLRenderingContext} gl            - The device's gl context
 * @property {*} xr                                - An optional xr handler
 * @property {vec3} eyePosition                    - The device's current eye position
 * @property {vec4} targetResolution               - The device's current target resolution
 * @property {mat4} world                          - The device's current world matrix
 * @property {mat4} view                           - The device's current view matrix
 * @property {mat4} viewInverse                    - The device's current inverse view matrix
 * @property {mat4} viewTranspose                  - The device's current view matrix transposed
 * @property {mat4} projection                     - The device's current projection matrix
 * @property {mat4} projectionInverse              - The device's current inverse projection matrix
 * @property {mat4} projectionTranspose            - The device's current projection matrix transposed
 * @property {mat4} viewProjection                 - The device's current view projection matrix
 * @property {mat4} viewProjectionTranspose        - The device's current view projection matrix transposed
 * @property {?HTMLCanvasElement} canvas           - The html canvas the gl context was created from
 * @property {number} viewportWidth                - The canvas's current width
 * @property {number} viewportHeight               - The canvas's current height
 * @property {number} viewportAspect               - The canvas's current display aspect
 * @property {number} viewportPixelRatio           - The canvas's pixel ratio
 * @property {String} effectDir                    - The directory used to translate ccp effect file paths
 * @property {number} mipLevelSkipCount            - Controls what quality ccp texture resource to load (mutates paths)
 * @property {String} shaderModel                  - Controls what quality ccp effect resource to load (mutates paths)
 * @property {Boolean} enableAnisotropicFiltering  - Enables anisotropic filtering
 * @property {Boolean} enableAntialiasing          - Enables antialiasing
 * @property {Boolean} enableWebgl2                - Enables webgl2
 * @property {Boolean} enableWebxr                 - Enables webvr (Not yet supported)
 * @property {Boolean} alphaBlendBackBuffer        - Enables alpha blending (glParams.alpha)
 * @property {Boolean} antialiasing                - Identifies if antialiasing is enabled
 * @property {number} msaaSamples                  - The amount of samples used for antialiasing
 * @property {number[]} wrapModes                  - texture wrap modes
 * @property {*} shadowHandles                     - unused
 * @property {Tw2PerObjectData} perObjectData      - The current frame's per object data
 * @property {Function} onResize                   - An optional function which is called on resize
 * @property {{}} _extensions                      - Stores loaded extensions
 * @property {{}} _alphaBlendState                 - Alpha states for blending
 * @property {{}} _alphaTestState                  - Alpha test states
 * @property {{}} _depthOffsetState                - Depth states
 * @property {Float32Array} _shadowStateBuffer     - unused
 * @property {WebGLBuffer} _quadBuffer             - Webgl buffer for full screen quad
 * @property {Tw2VertexDeclaration} _quadDecl      - Quad vertex declarations
 * @property {WebGLBuffer} _cameraQuadBuffer       - Webgl buffer for camera space quad
 * @property {number} _currentRenderMode           - The device's current render mode
 * @property {WebGLTexture} _fallbackCube          - A fallback cube texture
 * @property {WebGLTexture} _fallbackTexture       - A fallback texture
 * @property {Tw2Effect} _blitEffect               - The blit effect used for rendering textures
 * @class
 */

class Tw2Device extends _class_Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_4__["Tw2EventEmitter"] {
  /**
   * Gets the current gl context version
   * @returns {number}
   */
  get glVersion() {
    return !this.gl ? 0 : this.gl instanceof WebGLRenderingContext ? 1 : 2;
  }
  /**
   * Gets the current gl canvas
   * @returns {null}
   */


  get canvas() {
    return this.gl ? this.gl.canvas : null;
  }
  /**
   * Constructor
   * @param {Tw2Library} tw2
   */


  constructor(tw2) {
    super();
    this.name = "Device";
    this.gl = null;
    this.xr = null;
    this.tw2 = null;
    this.dt = 0;
    this.frameCounter = 0;
    this.startTime = null;
    this.currentTime = null;
    this.previousTime = null;
    this.eyePosition = _math__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.targetResolution = _math__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.world = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.view = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.viewInverse = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.viewTranspose = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.projection = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.projectionInverse = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.projectionTranspose = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.viewProjection = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.viewProjectionTranspose = _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    this.viewportWidth = 0;
    this.viewportHeight = 0;
    this.viewportAspect = 0;
    this.viewportPixelRatio = "devicePixelRatio" in window ? window.devicePixelRatio : 1;
    this.effectDir = "/effect.gles2/";
    this.mipLevelSkipCount = 0;
    this.shaderModel = "hi";
    this.enableAnisotropicFiltering = true;
    this.enableAntialiasing = true;
    this.enableWebgl2 = true;
    this.enableWebxr = true;
    this.alphaBlendBackBuffer = true;
    this.antialiasing = true;
    this.msaaSamples = 0;
    this.wrapModes = [];
    this.shadowHandles = null;
    this.perObjectData = null;
    this.onResize = null;
    this._extensions = {};
    this._alphaBlendState = null;
    this._alphaTestState = null;
    this._depthOffsetState = null;
    this._shadowStateBuffer = null;
    this._quadBuffer = null;
    this._quadDecl = null;
    this._cameraQuadBuffer = null;
    this._currentRenderMode = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_ANY"];
    this._fallbackCube = null;
    this._fallbackTexture = null;
    this._blitEffect = null;
    this._Date = Date;
    tw2.SetLibrary(this);
    this.startTime = this.now;
    this.currentTime = this.startTime;
  }
  /**
   * Registers options
   * @param {*} [opt]
   * @param {Number} opt.textureQuality
   * @param {Number} opt.shaderQuality
   * @param {Boolean} opt.anisotropicFilter
   * @param {Boolean} opt.antialiasing
   * @param {Boolean} opt.webgl2
   * @param {Boolean} opt.webvr
   */


  Register(opt) {
    if (!opt) return;

    if (this.gl) {
      throw new Error("Setting device options after gl creation is not yet supported");
    }

    if ("performanceClock" in opt) {
      if (opt.performance && "performance" in window) {
        this._Date = performance;
      } else {
        this._Date = Date;
      }
    }

    if ("textureQuality" in opt) this.mipLevelSkipCount = opt.textureQuality;
    if ("shaderQuality" in opt) this.shaderModel = opt.shaderQuality;
    if ("anisotropicFilter" in opt) this.enableAnisotropicFiltering = opt.anisotropicFilter;
    if ("antialiasing" in opt) this.enableAntialiasing = opt.antialiasing;
    if ("webgl2" in opt) this.enableWebgl2 = opt.webgl2;
    if ("webxr" in opt) this.enableWebxr = opt.webxr;
  }
  /**
   * Creates webgl Device
   * @param {HTMLCanvasElement} canvas - The html canvas to create a webgl rendering context from
   * @param {{}} [params]              - Optional gl parameters
   * @param {Boolean} [params.webgl2]  - Optional flag to enable a webgl2 rendering context
   * @throws ErrWebglContext           - When unable to create a webgl context
   */


  CreateDevice(canvas, params = {}) {
    this.gl = null;
    this.effectDir = "/effect.gles2/";
    params.alpha = Object(_util__WEBPACK_IMPORTED_MODULE_1__["get"])(params, "alpha", true);
    params.webgl2 = this.enableWebgl2;
    params.xrCompatible = this.enableWebxr;
    params.antialiasing = this.enableAntialiasing ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["get"])(params, "antialiasing", true) : false;
    const gl = this.gl = Tw2Device.CreateContext(params, canvas);
    this.msg("debug", "Webgl".concat(this.glVersion, " context created"));

    const returnFalse = () => false,
          returnTrue = () => true;

    if (this.glVersion === 1) {
      this.GetExtension("OES_standard_derivatives");
      this.GetExtension("OES_element_index_uint");
      this.GetExtension("OES_texture_float");
      this.GetExtension("EXT_shader_texture_lod");
      const iArray = this.GetExtension("ANGLE_instanced_arrays");
      gl.drawElementsInstanced = iArray ? iArray["drawElementsInstancedANGLE"].bind(iArray) : returnFalse;
      gl.drawArraysInstanced = iArray ? iArray["drawArraysInstancedANGLE"].bind(iArray) : returnFalse;
      gl.vertexAttribDivisor = iArray ? iArray["vertexAttribDivisorANGLE"].bind(iArray) : returnFalse;
      gl.hasInstancedArrays = iArray ? returnTrue : returnFalse;
    } else {
      gl.hasInstancedArrays = returnTrue;
    }

    const anisotropicFilterExt = this.GetExtension("EXT_texture_filter_anisotropic");

    if (anisotropicFilterExt) {
      anisotropicFilterExt.maxAnisotropy = gl.getParameter(anisotropicFilterExt["MAX_TEXTURE_MAX_ANISOTROPY_EXT"]);
    } // CCP mobile shader binary (is this depreciated?)


    const ccpShaderBinary = this.GetExtension("CCP_shader_binary");

    if (ccpShaderBinary) {
      const renderer = gl.getParameter(this.gl.RENDERER),
            maliVer = renderer.match(/Mali-(\w+).*/);

      if (maliVer) {
        this.effectDir = "/effect.gles2.mali" + maliVer[1] + "/";
      }
    } // Quality


    this.alphaBlendBackBuffer = params.alpha;
    this.msaaSamples = this.gl.getParameter(this.gl.SAMPLES);
    this.antialiasing = this.msaaSamples > 1;
    this.Resize();
    const vertices = [1.0, 1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0];
    this._quadBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, this._quadBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);
    this._cameraQuadBuffer = gl.createBuffer();
    this._quadDecl = core_vertex_Tw2VertexDeclaration__WEBPACK_IMPORTED_MODULE_3__["Tw2VertexDeclaration"].from([{
      usage: "POSITION",
      usageIndex: 0,
      elements: 4
    }, {
      usage: "TEXCOORD",
      usageIndex: 0,
      elements: 2
    }]);
    this.wrapModes = Array.from(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["WrapModes"]);
    this._alphaBlendState = {
      dirty: false,
      states: {
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLEND"]]: _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_SRCALPHA"],
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLEND"]]: _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_INVSRCALPHA"],
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"]]: _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_ADD"],
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"]]: 0,
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOPALPHA"]]: _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_ADD"],
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLENDALPHA"]]: _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_SRCALPHA"],
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLENDALPHA"]]: _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_INVSRCALPHA"]
      }
    };
    this._alphaTestState = {
      dirty: false,
      states: {
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"]]: 0,
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"]]: -1,
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAFUNC"]]: _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_GREATER"],
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CLIPPING"]]: 0,
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CLIPPLANEENABLE"]]: 0
      }
    };
    this._depthOffsetState = {
      dirty: false,
      states: {
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"]]: 0,
        [_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"]]: 0
      }
    };
    this._shadowStateBuffer = new Float32Array(24);
  }
  /**
   * Handles resize events
   */


  Resize() {
    if (this.onResize) {
      this.onResize(this.canvas);
    }
    /*
    else if (this.enableWebxr && this.xr && this.xr.isGood)
    {
        this.xr.OnResize(this.canvas);
    }
    */
    else {
        this.canvas.width = this.canvas.offsetWidth * this.viewportPixelRatio;
        this.canvas.height = this.canvas.offsetHeight * this.viewportPixelRatio;
      }

    this.viewportWidth = this.canvas.clientWidth;
    this.viewportHeight = this.canvas.clientHeight;
    this.viewportAspect = this.viewportWidth / this.viewportHeight;
    this.tw2.SetVariableValue("ViewportSize", [this.viewportWidth, this.viewportHeight, this.viewportWidth, this.viewportHeight]);
    this.emit("resized", {
      width: this.viewportWidth,
      height: this.viewportHeight,
      aspect: this.viewportAspect,
      canvas: this.canvas
    });
  }
  /**
   * Gets the current time
   * @returns {number}
   */


  get now() {
    return this._Date.now();
  }
  /**
   * Fires on the start of a frame
   */


  StartFrame() {
    if (this.canvas.clientWidth !== this.viewportWidth || this.canvas.clientHeight !== this.viewportHeight) {
      this.Resize();
    }

    const previousTime = this.previousTime === null ? 0 : this.previousTime,
          now = this.now;
    this.currentTime = (now - this.startTime) * 0.001;
    this.dt = this.previousTime === null ? 0 : (now - this.previousTime) * 0.001;
    this.previousTime = now;
    this.tw2.SetVariableValue("Time", [this.currentTime, this.currentTime - Math.floor(this.currentTime), this.frameCounter, previousTime]);
    this.frameCounter++;
  }
  /**
   * Fires on the end of a frame
   */


  EndFrame() {}
  /**
   * Sets World transform matrix
   * @param {mat4} matrix
   */


  SetWorld(matrix) {
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this.world, matrix);
  }
  /**
   * Sets view matrix
   * @param {mat4} matrix
   */


  SetView(matrix) {
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this.view, matrix);
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this.viewInverse, this.view);
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this.viewTranspose, this.view);
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].getTranslation(this.eyePosition, this.viewInverse);
    this.UpdateViewProjection();
  }
  /**
   * Sets projection matrix
   * @param {mat4} matrix
   * @param {Boolean} [forceUpdateViewProjection]
   */


  SetProjection(matrix, forceUpdateViewProjection) {
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].copy(this.projection, matrix);
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this.projectionTranspose, this.projection);
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].invert(this.projectionInverse, this.projection);
    this.GetTargetResolution(this.targetResolution);
    if (forceUpdateViewProjection) this.UpdateViewProjection();
  }
  /**
   * Updates view projection matrices
   */


  UpdateViewProjection() {
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(this.viewProjection, this.projection, this.view);
    _math__WEBPACK_IMPORTED_MODULE_0__["mat4"].transpose(this.viewProjectionTranspose, this.viewProjection);
    this.tw2.SetVariableValue("ViewProjectionMat", this.viewProjection);
  }
  /**
   * Gets the device's target resolution
   * @param {vec4} [out=vec4.create()]
   * @returns {vec4} out
   */


  GetTargetResolution(out = _math__WEBPACK_IMPORTED_MODULE_0__["vec4"].create()) {
    const aspectRatio = this.projection[0] ? this.projection[5] / this.projection[0] : 0.0;
    let aspectAdjustment = 1.0;
    if (aspectRatio > 1.6) aspectAdjustment = aspectRatio / 1.6;
    const fov = 2.0 * Math.atan(aspectAdjustment / this.projection[5]);
    out[0] = this.viewportWidth;
    out[1] = this.viewportHeight;
    out[2] = fov;
    out[3] = fov * aspectRatio;
    return out;
  }
  /**
   * GetEyePosition
   * @param {vec3} [out=vec3.create()]
   * @return {vec3}
   */


  GetEyePosition(out = _math__WEBPACK_IMPORTED_MODULE_0__["vec3"].create()) {
    return _math__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(out, this.eyePosition);
  }
  /**
   * Returns whether or not Alpha Test is enabled
   * return {Boolean}
   */


  IsAlphaTestEnabled() {
    return this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"]];
  }
  /**
   * Checks if a frame buffer is complete
   *
   * @param frameBuffer
   * @returns {Boolean}
   */


  IsFrameBufferComplete(frameBuffer) {
    return this.gl.checkFramebufferStatus(frameBuffer) === this.gl.FRAMEBUFFER_COMPLETE;
  }
  /**
   * Gets a gl extension
   * @param {String} extension - The gl extension name
   * @returns {*}
   */


  GetExtension(extension) {
    if (!(extension in this._extensions)) {
      let ext;

      for (let i = 0; i < _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["VendorWebglPrefixes"].length; i++) {
        ext = this.gl.getExtension(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["VendorWebglPrefixes"][i] + extension);
        if (ext) break;
        ext = null;
      }

      this._extensions[extension] = ext;
    }

    return this._extensions[extension];
  }
  /**
   * Gets a fallback texture
   * @returns {*}
   */


  GetFallbackTexture() {
    if (!this._fallbackTexture) {
      this._fallbackTexture = this.CreateSolidTexture();
    }

    return this._fallbackTexture;
  }
  /**
   * Gets a fallback cube map
   * @returns {*}
   */


  GetFallbackCubeMap() {
    if (!this._fallbackCube) {
      this._fallbackCube = this.CreateSolidCube();
    }

    return this._fallbackCube;
  }
  /**
   * Creates a solid colored texture
   * @param {vec4|Array} [rgba] - The colour to create, if omitted defaults to completely transparent
   * @returns {WebGLTexture}
   */


  CreateSolidTexture(rgba = [0, 0, 0, 0]) {
    const gl = this.gl,
          texture = this.gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, texture);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(rgba));
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    gl.bindTexture(gl.TEXTURE_2D, null);
    return texture;
  }
  /**
   * Creates a solid coloured cube texture
   * @param {vec4|Array} rgba
   * @returns {WebGLTexture}
   */


  CreateSolidCube(rgba = [0, 0, 0, 0]) {
    const gl = this.gl,
          texture = this.gl.createTexture();
    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);

    for (let j = 0; j < 6; ++j) {
      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + j, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(rgba));
    }

    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.NEAREST); //gl.generateMipmap(gl.TEXTURE_CUBE_MAP);

    gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);
    return texture;
  }
  /**
   * RenderFullScreenQuad
   * @param {Tw2Effect} effect
   * @param {String} technique - Technique name
   * @returns {Boolean}
   */


  RenderFullScreenQuad(effect, technique = "Main") {
    if (!effect || !effect.IsGood()) return false;
    const gl = this.gl;
    gl.bindBuffer(gl.ARRAY_BUFFER, this._quadBuffer);

    for (let pass = 0; pass < effect.GetPassCount(technique); ++pass) {
      effect.ApplyPass(technique, pass);
      if (!this._quadDecl.SetDeclaration(this, effect.GetPassInput(technique, pass), 24)) return false;
      this.ApplyShadowState();
      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
    }

    return true;
  }
  /**
   * Renders a Texture to the screen
   * @param {Tw2TextureRes} texture
   * @returns {Boolean}
   */


  RenderTexture(texture) {
    if (this._blitEffect === null) {
      this._blitEffect = core_mesh_Tw2Effect__WEBPACK_IMPORTED_MODULE_2__["Tw2Effect"].from({
        effectFilePath: "res:/graphics/effect/managed/space/system/blit.fx",
        textures: {
          BlitSource: ""
        }
      });
    }

    this._blitEffect.parameters["BlitSource"].SetTextureRes(texture);

    return this.RenderFullScreenQuad(this._blitEffect);
  }
  /**
   * RenderCameraSpaceQuad
   * @param {Tw2Effect} effect
   * @param {String} technique - Technique name
   * @returns {Boolean}
   */


  RenderCameraSpaceQuad(effect, technique = "Main") {
    if (!effect || !effect.IsGood()) return false;
    const vertices = new Float32Array([1.0, 1.0, 0.0, 1.0, 1.0, 1.0, -1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0]);
    const projInv = this.projectionInverse;

    for (let i = 0; i < 4; ++i) {
      const vec = vertices.subarray(i * 6, i * 6 + 4);
      _math__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(vec, vec, projInv);
      _math__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(vec, vec, 1 / vec[3]);
      vec[3] = 1;
    }

    const gl = this.gl;
    gl.bindBuffer(gl.ARRAY_BUFFER, this._cameraQuadBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);

    for (let pass = 0; pass < effect.GetPassCount(technique); ++pass) {
      effect.ApplyPass(technique, pass);
      if (!this._quadDecl.SetDeclaration(this, effect.GetPassInput(technique, pass), 24)) return false;
      this.ApplyShadowState();
      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
    }

    return true;
  }
  /**
   * Set a render state
   * @param state
   * @param value
   */


  SetRenderState(state, value) {
    const gl = this.gl;
    this._currentRenderMode = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_ANY"];

    switch (state) {
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZENABLE"]:
        if (value) {
          gl.enable(gl.DEPTH_TEST);
        } else {
          gl.disable(gl.DEPTH_TEST);
        }

        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZWRITEENABLE"]:
        gl.depthMask(!!value);
        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAFUNC"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CLIPPING"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CLIPPLANEENABLE"]:
        if (this._alphaTestState[state] !== value) {
          this._alphaTestState.states[state] = value;
          this._alphaTestState.dirty = true;
        }

        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLEND"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLEND"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOPALPHA"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLENDALPHA"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLENDALPHA"]:
        if (this._alphaBlendState[state] !== value) {
          this._alphaBlendState.states[state] = value;
          this._alphaBlendState.dirty = true;
        }

        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CULLMODE"]:
        switch (value) {
          case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_NONE"]:
            gl.disable(gl.CULL_FACE);
            return;

          case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_CW"]:
            gl.enable(gl.CULL_FACE);
            gl.cullFace(gl.FRONT);
            return;

          case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_CCW"]:
            gl.enable(gl.CULL_FACE);
            gl.cullFace(gl.BACK);
            return;
        }

        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZFUNC"]:
        gl.depthFunc(0x0200 + value - 1);
        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHABLENDENABLE"]:
        if (value) gl.enable(gl.BLEND);else gl.disable(gl.BLEND);
        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_COLORWRITEENABLE"]:
        gl.colorMask((value & 1) !== 0, (value & 2) !== 0, (value & 4) !== 0, (value & 8) !== 0);
        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SCISSORTESTENABLE"]:
        if (value) gl.enable(gl.SCISSOR_TEST);else gl.disable(gl.SCISSOR_TEST);
        return;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"]:
        value = _math__WEBPACK_IMPORTED_MODULE_0__["num"].dwordToFloat(value);

        if (this._depthOffsetState[state] !== value) {
          this._depthOffsetState.states[state] = value;
          this._depthOffsetState.dirty = true;
        }

        return;
    }
  }
  /**
   * ApplyShadowState
   */


  ApplyShadowState() {
    const gl = this.gl;

    if (this._alphaBlendState.dirty) {
      let blendOp = gl.FUNC_ADD;

      if (this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"]] === _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_SUBTRACT"]) {
        blendOp = gl.FUNC_SUBTRACT;
      } else if (this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"]] === _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_REVSUBTRACT"]) {
        blendOp = gl.FUNC_REVERSE_SUBTRACT;
      }

      const srcBlend = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BlendTable"][this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLEND"]]],
            destBlend = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BlendTable"][this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLEND"]]];

      if (this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"]]) {
        let blendOpAlpha = gl.FUNC_ADD;

        if (this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"]] === _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_SUBTRACT"]) {
          blendOpAlpha = gl.FUNC_SUBTRACT;
        } else if (this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"]] === _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_REVSUBTRACT"]) {
          blendOpAlpha = gl.FUNC_REVERSE_SUBTRACT;
        }

        const srcBlendAlpha = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BlendTable"][this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLENDALPHA"]]],
              destBlendAlpha = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BlendTable"][this._alphaBlendState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLENDALPHA"]]];
        gl.blendEquationSeparate(blendOp, blendOpAlpha);
        gl.blendFuncSeparate(srcBlend, destBlend, srcBlendAlpha, destBlendAlpha);
      } else {
        gl.blendEquation(blendOp);
        gl.blendFunc(srcBlend, destBlend);
      }

      this._alphaBlendState.dirty = false;
    }

    if (this._depthOffsetState.dirty) {
      gl.polygonOffset(this._depthOffsetState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"]], this._depthOffsetState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"]]);
      this._depthOffsetState.dirty = false;
    }

    let alphaTestFunc, invertedAlphaTest, alphaTestRef;

    if (this.shadowHandles && this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"]]) {
      switch (this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAFUNC"]]) {
        case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_NEVER"]:
          alphaTestFunc = 0;
          invertedAlphaTest = 1;
          alphaTestRef = -256;
          break;

        case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_LESS"]:
          alphaTestFunc = 0;
          invertedAlphaTest = -1;
          alphaTestRef = this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"]] - 1;
          break;

        case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_EQUAL"]:
          alphaTestFunc = 1;
          invertedAlphaTest = 0;
          alphaTestRef = this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"]];
          break;

        case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_LEQUAL"]:
          alphaTestFunc = 0;
          invertedAlphaTest = -1;
          alphaTestRef = this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"]];
          break;

        case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_GREATER"]:
          alphaTestFunc = 0;
          invertedAlphaTest = 1;
          alphaTestRef = -this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"]] - 1;
          break;

        /*
        case CMP_NOTEQUAL:
        var alphaTestFunc = 1;
        var invertedAlphaTest = 1;
        var alphaTestRef = this._alphaTestState.states[RS_ALPHAREF];
        break;
        */

        case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_GREATEREQUAL"]:
          alphaTestFunc = 0;
          invertedAlphaTest = 1;
          alphaTestRef = -this._alphaTestState.states[_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"]];
          break;

        default:
          alphaTestFunc = 0;
          invertedAlphaTest = 0;
          alphaTestRef = 1;
          break;
      }

      const clipPlaneEnable = 0;
      gl.uniform4f(this.shadowHandles.shadowStateInt, invertedAlphaTest, alphaTestRef, alphaTestFunc, clipPlaneEnable); //this._shadowStateBuffers
    }
  }
  /**
   * Sets a render mode
   * @param {number} renderMode
   */


  SetStandardStates(renderMode) {
    if (this._currentRenderMode === renderMode) return;
    this.gl.frontFace(this.gl.CW);

    switch (renderMode) {
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_OPAQUE"]:
      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_PICKABLE"]:
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZWRITEENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZFUNC"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_LEQUAL"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CULLMODE"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_CW"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_COLORWRITEENABLE"], 0xf);
        break;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_DECAL"]:
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAFUNC"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_GREATER"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHAREF"], 127);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZWRITEENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZFUNC"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_LEQUAL"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CULLMODE"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_CW"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_ADD"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_COLORWRITEENABLE"], 0xf);
        break;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_TRANSPARENT"]:
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CULLMODE"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_CW"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHABLENDENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLEND"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_SRCALPHA"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLEND"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_INVSRCALPHA"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_ADD"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZWRITEENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZFUNC"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_LEQUAL"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"], 0); // -1.0

        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_COLORWRITEENABLE"], 0xf);
        break;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_ADDITIVE"]:
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CULLMODE"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_NONE"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHABLENDENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SRCBLEND"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_ONE"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DESTBLEND"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLEND_ONE"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_BLENDOP"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["BLENDOP_ADD"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZENABLE"], true);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZWRITEENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZFUNC"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_LEQUAL"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_COLORWRITEENABLE"], 0xf);
        break;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_FULLSCREEN"]:
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ALPHATESTENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_CULLMODE"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CULL_NONE"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZWRITEENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_ZFUNC"], _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["CMP_ALWAYS"]);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SLOPESCALEDEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_DEPTHBIAS"], 0);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_SEPARATEALPHABLENDENABLE"], false);
        this.SetRenderState(_Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RS_COLORWRITEENABLE"], 0xf);
        break;

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_DISTORTION"]: // Same as Fullscreen?

      case _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_DEPTH"]:
        // TODO: Implement
        return;

      default:
        return;
    }

    this._currentRenderMode = renderMode;
  }
  /**
   * Requests an animation frame
   * @param {Function} callback
   */


  RequestAnimationFrame(callback) {
    return this.xr ? this.xr.RequestAnimationFrame(callback) : this.constructor.RequestAnimationFrame(callback);
  }
  /**
   * Cancels an animation frame
   * @param {Number} id
   */


  CancelAnimationFrame(id) {
    return this.xr ? this.xr.CancelAnimationFrame(id) : this.constructor.CancelAnimationFrame(id);
  }
  /**
   * Creates a webgl context
   * @param params
   * @param canvas
   * @returns {null|WebGLRenderingContext|WebGL2RenderingContext}
   * @throws on invalid context
   */


  static CreateContext(params = {}, canvas) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(canvas)) {
      canvas = document.getElementById(canvas);
    }

    if (!canvas) {
      canvas = document.createElement("canvas");
    }

    const contextTypes = params.webgl2 ? ["webgl2"] : ["webgl", "experimental-webgl"];
    let context = null;

    for (let contextType of contextTypes) {
      context = canvas.getContext(contextType, params);
      if (context) break;
    }

    if (!context) {
      throw new core__WEBPACK_IMPORTED_MODULE_6__["ErrWebglContext"]({
        version: params.webgl2 ? 2 : 1
      });
    }

    return context;
  }
  /**
   * Requests an animation frame
   * @type {Function}
   */


  /**
   * Finds an XR Device
   * @param {{}} [sessionOptions]
   * @returns {Promise<XRDevice>}
   */
  static FindXRDevice(sessionOptions) {
    return _asyncToGenerator(function* () {
      if (!navigator.xr) {
        throw new core__WEBPACK_IMPORTED_MODULE_6__["ErrWebxrNotSupported"]();
      }

      let device;

      try {
        device = yield navigator.xr["requestDevice"]();
      } catch (err) {
        if (err.name === "NotFoundError" || err.message === "NotFoundError") {
          throw new core__WEBPACK_IMPORTED_MODULE_6__["ErrWebxrDeviceNotFound"]({
            err: err.message
          });
        }

        throw new core__WEBPACK_IMPORTED_MODULE_6__["ErrWebxrRequestFailed"]({
          err: err.message
        });
      } // Optionally pass session requirements


      if (sessionOptions) {
        try {
          yield device["supportsSession"](sessionOptions);
        } catch (err) {
          throw new core__WEBPACK_IMPORTED_MODULE_6__["ErrWebxrSessionNotSupported"]({
            err: err.message
          });
        }
      }

      return device;
    })();
  }
  /**
   * Logger category
   * @type {String}
   */


} // Render Modes

Tw2Device.RequestAnimationFrame = function () {
  const request = Object(_util__WEBPACK_IMPORTED_MODULE_1__["get"])(window, _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["VendorRequestAnimationFrame"]);
  return callback => request(callback);
}();

Tw2Device.CancelAnimationFrame = function () {
  const cancel = Object(_util__WEBPACK_IMPORTED_MODULE_1__["get"])(window, _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["VendorCancelAnimationFrame"]);
  return id => cancel(id);
}();

Tw2Device.__category = "Device";
Tw2Device.prototype.RM_ANY = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_ANY"];
Tw2Device.prototype.RM_OPAQUE = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_OPAQUE"];
Tw2Device.prototype.RM_DECAL = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_DECAL"];
Tw2Device.prototype.RM_TRANSPARENT = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_TRANSPARENT"];
Tw2Device.prototype.RM_ADDITIVE = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_ADDITIVE"];
Tw2Device.prototype.RM_DEPTH = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_DEPTH"];
Tw2Device.prototype.RM_DISTORTION = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_DISTORTION"];
Tw2Device.prototype.RM_FULLSCREEN = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_FULLSCREEN"];
Tw2Device.prototype.RM_PICKABLE = _Tw2Constant__WEBPACK_IMPORTED_MODULE_5__["RM_PICKABLE"];

/***/ }),

/***/ "./global/engine/Tw2Logger.js":
/*!************************************!*\
  !*** ./global/engine/Tw2Logger.js ***!
  \************************************/
/*! exports provided: Tw2Logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2Logger", function() { return Tw2Logger; });
/* harmony import */ var _class_Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../class/Tw2EventEmitter */ "./global/class/Tw2EventEmitter.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./global/util/index.js");


/**
 * eventLog
 * @typedef {{}} eventLog
 * @property {String} eventLog.type       - The log's type
 * @property {String} eventLog.name       - The log's name
 * @property {String} eventLog.message    - The log's message
 * @property {String} [eventLog.path]     - optional related resource path
 * @property {String} [eventLog.detail]   - optional extra detail
 * @property {String} [eventLog.time]     - optional time taken
 * @property {Boolean} [eventLog.hide]    - optional visibility
 * @property {Boolean} [eventLog._logged] - Identifies if the log has been logged
 * @property {Error} [eventLog.err]       - Optional error (output to the console)
 * @property {*} [eventLog.data]          - Optional data (output to the console)
 */

/**
 * Handles basic event logging
 *
 * @property {String} name                   - The name of the logger
 * @property {Boolean} display               - Toggles console logging
 * @property {{}} visible                    - Visibility options
 * @property {Boolean} visible.log           - Toggles console log output
 * @property {Boolean} visible.info          - Toggles console info output
 * @property {Boolean} visible.debug         - Toggles console debug output
 * @property {Boolean} visible.warn          - Toggles console warn output
 * @property {Boolean} visible.error         - Toggles console error output
 * @property {number} history                - The maximum history to store
 * @property {number} throttle               - The maximum throttling per log type
 * @property {Array} _logs                   - Stored logs
 * @property {?{String:string[]}} _throttled - Throttles message cache
 * @property {Boolean} _debugMode            - When true all logs are forced to display
 */

class Tw2Logger extends _class_Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_0__["Tw2EventEmitter"] {
  /**
   * Constructor
   * @param {Tw2Library} tw2
   */
  constructor(tw2) {
    super();
    this.name = "";
    this.display = true;
    this.visible = {
      log: false,
      info: false,
      debug: false,
      warn: false,
      error: true
    };
    this.history = 100;
    this.throttle = 20;
    this._logs = [];
    this._throttled = null;
    this._debugMode = false;
    tw2.SetLibrary(this);
  }
  /**
   * Enables debugging
   * - Forces all logs to show regardless of visibility settings
   * @param {Boolean} bool
   */


  Debug(bool) {
    this._debugMode = bool;
  }
  /**
   * Sets the logger's properties
   * @param {*} [opt]
   */


  Register(opt) {
    if (!opt) return;
    Object(_util__WEBPACK_IMPORTED_MODULE_1__["assignIfExists"])(this, opt, ["name", "display", "history", "throttle"]);
    Object(_util__WEBPACK_IMPORTED_MODULE_1__["assignIfExists"])(this.visible, opt.visible, ["log", "info", "debug", "warn", "error"]);
  }
  /**
   * Adds an event log and outputs it to the console
   * @param {String}    type       - Log type
   * @param {*} log                - The eventLog or error to log
   * @param {String} [defaultName] - Default message name/ title
   * @returns {eventLog} log
   */


  Log(type = "log", log, defaultName) {
    if (!log) {
      log = {
        message: ""
      };
    } else if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isString"])(log)) {
      log = {
        message: log
      };
    } else if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isError"])(log)) {
      log = {
        message: log.message,
        err: log
      };
    }

    if (log._logged) return log; // Normalize logs

    log.type = type.toLowerCase();
    log.name = log.name || defaultName || Tw2Logger.constructor.category;
    log.message = log.message ? log.message.charAt(0).toUpperCase() + log.message.substring(1) : "";

    if (!Tw2Logger.LogType[log.type.toUpperCase()]) {
      log.type = "log";
    } // Set visibility


    if (!this.display || !this.visible[log.type]) {
      log.hide = true;
    } // Throttle excessive output


    if (!this.throttle || this._debugMode) {
      this._throttled = null;
    } else {
      if (!log.hide) {
        if (!this._throttled) this._throttled = {};
        if (!this._throttled[log.type]) this._throttled[log.type] = [];
        const t = this._throttled[log.type];

        if (!t.includes(log.message)) {
          t.unshift(log.message);
          t.splice(this.throttle);
        } else {
          log.hide = true;
        }
      }
    } // Output to the console


    if (!log.hide || this._debugMode) {
      // Optional details
      let subMessage = "";
      if (log.path && !log.message.includes(log.path)) subMessage += "'".concat(log.path, "' ");
      if (log.time) subMessage += "in ".concat(log.time.toFixed(3), " secs ");
      if (log.detail) subMessage += "(".concat(log.detail, ") ");
      let header = "".concat(this.name, " ").concat(log.name, ":");

      if (log.err || log.data) {
        console.group(header, log.message, subMessage);
        if (log.err) console.error(log.err.stack || log.err.toString());
        if (log.data) console.debug(JSON.stringify(log.data, null, 4));
        console.groupEnd();
      } else {
        console[log.type](header, log.message, subMessage);
      }
    } // Manage log history


    const logsToKeep = this._debugMode ? 1000 : this.history;

    if (logsToKeep) {
      this._logs.unshift(log);

      this._logs.splice(logsToKeep);
    } else {
      this._logs = [];
    }

    log._logged = true;
    this.emit(log.type, log);
    return log;
  }
  /**
   * Log types
   * @type {*}
   */


}
Tw2Logger.LogType = {
  ERROR: "error",
  WARNING: "warn",
  WARN: "warn",
  INFO: "info",
  LOG: "log",
  DEBUG: "debug"
};
Tw2Logger.__category = "Logger";

/***/ }),

/***/ "./global/engine/Tw2MotherLode.js":
/*!****************************************!*\
  !*** ./global/engine/Tw2MotherLode.js ***!
  \****************************************/
/*! exports provided: Tw2MotherLode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2MotherLode", function() { return Tw2MotherLode; });
/**
 * Manages loaded resources
 *
 * @property {Object} _loadedObjects            - loaded resources
 * @property {{string:Array<eventLog>}} _errors - history of all errors for a path
 * @class
 */
class Tw2MotherLode {
  constructor() {
    this._loadedObjects = {};
    this._errors = {};
  }
  /**
   * Adds an error log for a given path
   * @param {String} path
   * @param {Tw2Error|Error} err
   * @returns {Tw2Error|Error} err
   */


  AddError(path, err) {
    this._errors[path] = this._errors[path] || []; // Ensure error includes file path

    if (!err.message.includes(path)) {
      err.message = "".concat(err.message, " \"").concat(path, "\"");
    }

    if (!this._errors[path].includes(err)) {
      err.path = path;

      this._errors[path].unshift(err);
    }

    return err;
  }
  /**
   * Gets a path's error logs
   * @param {String} path
   * @returns {?Array<Tw2Error|Error>}
   */


  GetErrors(path) {
    return path && path in this._errors ? Array.from(this._errors[path]) : [];
  }
  /**
   * Gets the last error for a path
   * @param path
   * @returns {Tw2Error|Error|undefined}
   */


  GetLastError(path) {
    return path && path in this._errors ? this._errors[path][0] : undefined;
  }
  /**
   * Checks if a path has any errors
   * @param {String} path
   * @returns {*|Boolean}
   */


  HasErrors(path) {
    return path && path in this._errors;
  }
  /**
   * Finds a loaded object by it's file path
   * @param {String} path
   * @returns {Tw2LoadingObject|Tw2Resource}
   */


  Find(path) {
    if (path in this._loadedObjects) {
      return this._loadedObjects[path];
    }

    return null;
  }
  /**
   * Adds a loaded object
   * @param {String} path
   * @param {Tw2LoadingObject|Tw2Resource} obj
   */


  Add(path, obj) {
    this._loadedObjects[path] = obj;
  }
  /**
   * Checks if a res exists
   * @param {String} path
   * @returns {boolean}
   */


  Has(path) {
    return !!this._loadedObjects[path];
  }
  /**
   * Removes a loaded object by it's file path
   * @param {String} path
   */


  Remove(path) {
    if (this._loadedObjects[path]) {
      Reflect.deleteProperty(this._loadedObjects, path);
    }
  }
  /**
   * Clears the loaded object object
   * @param {Function} [onClear] - Function that is called on each unloaded resource
   */


  Clear(onClear) {
    for (const key in this._loadedObjects) {
      if (this._loadedObjects.hasOwnProperty(key)) {
        if (onClear) onClear(this._loadedObjects[key]);
        this.Remove(key);
      }
    }
  }
  /**
   * Unloads all loaded objects and then clears the loadedObject object
   * @param {Function} [onClear] - Function that is called on each unloaded and cleared resource
   * @param {eventLog} [eventLog]
   */


  UnloadAndClear(onClear, eventLog) {
    this.Clear(res => {
      res.Unload(eventLog);
      if (onClear) onClear(res);
    });
  }
  /**
   * Purges inactive loaded objects (resources that have been loaded but are not being actively used)
   * - Loaded objects can flagged with `doNotPurge` to ensure they are never removed
   * - Resource auto purging can be managed in `ccpwgl` or `ccpwgl_int.resMan` - {@link Tw2ResMan}
   *     ccpwgl.setResourceUnloadPolicy()
   *     ccpwgl_int.resMan.autoPurgeResources=true
   *     ccpwgl_int.resMan.purgeTime=30
   * @param {Number} curFrame - the current frame count
   * @param {Number} frameLimit - how many frames the object can stay alive for before being purged
   * @param {Number} frameDistance - how long the resource has been alive for
   */


  PurgeInactive(curFrame, frameLimit, frameDistance) {
    for (const path in this._loadedObjects) {
      if (this._loadedObjects.hasOwnProperty(path)) {
        const res = this._loadedObjects[path]; // Don't purge

        if (res.doNotPurge) {
          continue;
        } // Already purged


        if (res.IsPurged()) {
          this.Remove(path);
          continue;
        }

        let detail; // Has errors

        if (res.HasErrors()) {
          detail = "errored";
        } // Waiting for purge
        else if (res.IsUnloaded()) {
            detail = "unloaded";
          } // good but inactive
          else if ((res.IsLoaded() || res.IsPrepared()) && (curFrame - res.activeFrame) % frameLimit >= frameDistance) {
              if (res.Unload({
                hide: true,
                detail: "inactivity"
              })) {
                detail = "inactivity";
              }
            }

        if (detail) {
          res.OnPurged({
            detail
          });
          this.Remove(path);
        }
      }
    }
  }

}

/***/ }),

/***/ "./global/engine/Tw2ResMan.js":
/*!************************************!*\
  !*** ./global/engine/Tw2ResMan.js ***!
  \************************************/
/*! exports provided: Tw2ResMan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ResMan", function() { return Tw2ResMan; });
/* harmony import */ var _Tw2MotherLode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2MotherLode */ "./global/engine/Tw2MotherLode.js");
/* harmony import */ var core_resource_Tw2LoadingObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core/resource/Tw2LoadingObject */ "./core/resource/Tw2LoadingObject.js");
/* harmony import */ var _class_Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../class/Tw2EventEmitter */ "./global/class/Tw2EventEmitter.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util */ "./global/util/index.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }






/**
 * Resource Manager
 *
 * @property {Tw2MotherLode} motherLode
 * @property {Boolean} systemMirror - Toggles whether {@link Tw2GeometryRes} Index and Buffer data arrays are visible
 * @property {Number} maxPrepareTime
 * @property {Boolean} autoPurgeResources=true - Sets whether resources should be purged automatically
 * @property {Number} purgeTime=30 = Sets how long resources can remain inactive before they are purged
 * @property {Number} activeFrame
 * @property {Number} _prepareBudget
 * @property {Array} _prepareQueue
 * @property {Number} _purgeTime
 * @property {Number} _purgeFrame
 * @property {Number} _purgeFrameLimit
 * @property {Array<String>} _pendingLoads - an array of pending loads
 * @property {Number} _noLoadFrames
 */

class Tw2ResMan extends _class_Tw2EventEmitter__WEBPACK_IMPORTED_MODULE_2__["Tw2EventEmitter"] {
  /**
   * Gets a count of pending loads
   * @returns {number}
   */
  get pendingLoads() {
    return this._pendingLoads.length;
  }
  /**
   * Constructor
   * @param {Tw2Library} tw2
   */


  constructor(tw2) {
    super();
    this.motherLode = new _Tw2MotherLode__WEBPACK_IMPORTED_MODULE_0__["Tw2MotherLode"]();
    this.systemMirror = false;
    this.maxPrepareTime = 0.05;
    this.autoPurgeResources = true;
    this.activeFrame = 0;
    this.purgeTime = 30;
    this._prepareBudget = 0;
    this._prepareQueue = [];
    this._purgeTime = 0;
    this._purgeFrame = 0;
    this._purgeFrameLimit = 1000;
    this._pendingLoads = [];
    this._noLoadFrames = 0;
    this.tw2 = null;
    tw2.SetLibrary(this);
  }
  /**
   * Sets resource manager options
   * @param {*} [opt]
   */


  Register(opt) {
    if (!opt) return;
    Object(_util__WEBPACK_IMPORTED_MODULE_4__["assignIfExists"])(this, opt, ["systemMirror", "maxPrepareTime", "autoPurgeResources", "purgeTime"]);
  }
  /**
   * Fires on resource errors
   * - Used when a resource can only be identified by it's path
   * @param {String} path
   * @param {Error} err
   * @returns {Error} err
   */


  OnPathError(path, err = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2Error"]({
    path
  })) {
    path = Tw2ResMan.NormalizePath(path);
    const res = this.motherLode.Find(path);
    if (res) return res.OnError(err);
    this.OnPathEvent(path, "error", err);
    return err;
  }
  /**
   * Fires on path events
   * @param {String} path      - Resource path
   * @param {String} eventName - Resource state name
   * @param {*} [log={}]       - Resource log
   */


  OnPathEvent(path, eventName, log = {}) {
    const res = this.motherLode.Find(path),
          err = Object(_util__WEBPACK_IMPORTED_MODULE_4__["isError"])(log) ? log : undefined;

    if (err) {
      this.motherLode.AddError(path, err);
      log = {
        err,
        message: err.message
      };
    }

    log.path = path;
    log.message = log.message || eventName;
    this.emit(eventName, path, res, err).msg(Tw2ResMan.LogType[eventName.toUpperCase()], log);
  }
  /**
   * IsLoading
   * @returns {Boolean}
   *
   */


  IsLoading() {
    return this._noLoadFrames < 2;
  }
  /**
   * Clears the motherLode {@link Tw2MotherLode}
   * @param {Function} [onClear] - An optional function which is called on each cleared resource
   */


  Clear(onClear) {
    this.motherLode.Clear(onClear);
  }
  /**
   * Unloads and Clears the motherLode {@link Tw2MotherLode}
   * @param {Function} [onClear] - An optional function which is called on each cleared resource
   * @param {eventLog} [eventLog]
   */


  UnloadAndClear(onClear, eventLog) {
    this.motherLode.UnloadAndClear(onClear, eventLog);
  }
  /**
   * Internal update function. It is called every frame.
   * @param {Tw2Device} device
   * @returns {Boolean}
   */


  Tick(device) {
    if (this._prepareQueue.length === 0 && this._pendingLoads.length === 0) {
      if (this._noLoadFrames < 2) {
        this._noLoadFrames++;
      }
    } else {
      this._noLoadFrames = 0;
    }

    this._prepareBudget = this.maxPrepareTime;
    const startTime = device.now;

    while (this._prepareQueue.length) {
      const res = this._prepareQueue[0][0],
            data = this._prepareQueue[0][1],
            xml = this._prepareQueue[0][2];

      this._prepareQueue.shift();

      try {
        res.Prepare(data, xml);
        this._prepareBudget -= (device.now - startTime) * 0.001;
        if (this._prepareBudget < 0) break;
      } catch (err) {
        this._prepareBudget = 0;
        res.OnError(err);
      }
    }

    this._purgeTime += device.dt;

    if (this._purgeTime > 1) {
      this.activeFrame += 1;
      this._purgeTime -= Math.floor(this._purgeTime);
      this._purgeFrame += 1;

      if (this._purgeFrame >= 5) {
        if (this.autoPurgeResources) {
          this.motherLode.PurgeInactive(this._purgeFrame, this._purgeFrameLimit, this.purgeTime);
        }
      }
    }

    return true;
  }
  /**
   * Adds a resource and response to the prepare queue
   * @param {Tw2Resource} res
   * @param {*} response
   * @param {*} [meta]
   */


  Queue(res, response, meta) {
    this._prepareQueue.push([res, response, meta]);
  }
  /**
   * Gets a resource
   * @param {String} path           - The path to load
   * @param {Function} [onResolved] - Callback fired when the object has loaded
   * @param {Function} [onRejected] - Callback fired when the object fails to load
   * @returns {Tw2Resource|*} resource
   */


  GetResource(path, onResolved, onRejected) {
    let res;
    path = Tw2ResMan.NormalizePath(path); // Check if already loaded

    res = this.motherLode.Find(path);

    if (res) {
      res.RegisterCallbacks(onResolved, onRejected);
      return res;
    }

    try {
      const Constructor = this.GetResourceConstructor(path);
      res = new Constructor();
    } catch (err) {
      this.OnPathError(path, err);
      if (onRejected) onRejected(err);
      return null;
    }

    res.path = path;
    res.RegisterCallbacks(onResolved, onRejected);
    return this.LoadResource(res);
  }
  /**
   * Fetches a resource
   * @param {String} path
   * @returns {Promise<Tw2Resource|null>}
   */


  FetchResource(path) {
    var _this = this;

    return _asyncToGenerator(function* () {
      return new Promise((resolve, reject) => {
        _this.GetResource(path, resolve, reject);
      });
    })();
  }
  /**
   * Gets a resource object
   * @param {String} path           - The path to load
   * @param {Function} [onResolved] - Callback fired when the object has loaded
   * @param {Function} [onRejected] - Callback fired when the object fails to load
   */


  GetObject(path, onResolved, onRejected) {
    path = Tw2ResMan.NormalizePath(path); // Check if already loaded

    let res = this.motherLode.Find(path);

    if (res) {
      res.AddObject(onResolved, onRejected);
      return;
    }

    res = new core_resource_Tw2LoadingObject__WEBPACK_IMPORTED_MODULE_1__["Tw2LoadingObject"]();
    res.path = path;
    res.AddObject(onResolved, onRejected);
    this.LoadResource(res);
  }
  /**
   * Fetches an object
   * @param {String} path
   * @returns {Promise<any>}
   */


  FetchObject(path) {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      return new Promise((resolve, reject) => {
        _this2.GetObject(path, resolve, reject);
      });
    })();
  }
  /**
   * Loads a resource
   * TODO: Create a res object for each quality level rather than just one
   * @param {Tw2Resource|*} res
   * @param {eventLog} [eventLog]
   */


  LoadResource(res, eventLog) {
    this.motherLode.Add(res.path, res); // Don't load if already errored

    if (res.HasErrors()) {
      return res;
    }

    try {
      const url = this.BuildUrl(res.path);
      res.OnRequested(eventLog);

      if (res.DoCustomLoad && res.DoCustomLoad(url, Object(_util__WEBPACK_IMPORTED_MODULE_4__["getPathExtension"])(url))) {
        return res;
      }

      if (!res.HasErrors()) {
        this.Fetch(url, res.requestResponseType).then(response => {
          res.OnLoaded();
          this.Queue(res, response);
        }).catch(err => {
          res.OnError(err);
        });
      }
    } catch (err) {
      res.OnError(err);
    }

    return res;
  }
  /**
   * Adds a pending url
   * @param {String} url
   */


  AddPendingLoad(url) {
    this._pendingLoads.push(url);
  }
  /**
   * Removes a pending url
   * @param {String} url
   */


  RemovePendingLoad(url) {
    const index = this._pendingLoads.indexOf(url);

    if (index !== -1) {
      this._pendingLoads.splice(index, 1);
    }
  }
  /**
   * Fetches cache
   * @param {String} url
   * @param {String|Function} responseType
   * @returns {Promise}
   */


  Fetch(url, responseType) {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      _this3.AddPendingLoad(url);

      return fetch(url).then(response => {
        if (!response.ok) {
          throw response;
        }

        if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isFunction"])(responseType)) {
          return responseType(response);
        }

        switch (responseType) {
          case "arraybuffer":
            return response.arrayBuffer();

          case "text":
            return response.text();

          case "json":
            return response.json();

          case "blob":
            return response.blob();

          default:
            throw new Error("Invalid fetch type: " + responseType);
        }
      }).then(result => {
        _this3.RemovePendingLoad(url);

        return result;
      }).catch(err => {
        _this3.RemovePendingLoad(url);

        if (err.text) {
          return err.text().then(text => {
            let {
              status,
              statusText
            } = err;
            let json;

            try {
              json = JSON.parse(text);
              statusText = json.message || json.msg || json.error || json.err;
              if (Object(_util__WEBPACK_IMPORTED_MODULE_4__["isBoolean"])(statusText)) statusText = undefined;
            } catch (err) {
              statusText = "Failed to fetch resource";
            }

            throw new core__WEBPACK_IMPORTED_MODULE_3__["ErrHTTPStatus"]({
              status,
              statusText,
              json
            });
          });
        } else {
          throw err;
        }
      });
    })();
  }
  /**
   * Gets a resource constructor
   * @param {String} path
   * @returns {Tw2Resource}
   * @throws {ErrFeatureNotImplemented} When passed an unsupported resource prefix
   * @throws {ErrResourceExtensionUndefined} When passed a resource without an extension
   * @throws {ErrResourceExtensionUnregistered} When passed a resource extension that isn't registered/ supported
   */


  GetResourceConstructor(path) {
    path = Tw2ResMan.NormalizePath(path);

    if (path.indexOf("dynamic:/") === 0) {
      throw new core__WEBPACK_IMPORTED_MODULE_3__["ErrFeatureNotImplemented"]({
        feature: "Dynamic resources"
      });
    }

    const extension = Object(_util__WEBPACK_IMPORTED_MODULE_4__["getPathExtension"])(path);

    if (extension === null) {
      throw new core__WEBPACK_IMPORTED_MODULE_3__["ErrResourceExtensionUndefined"]({
        path
      });
    }

    const Constructor = this.tw2.GetExtension(extension);

    if (!Constructor) {
      throw new core__WEBPACK_IMPORTED_MODULE_3__["ErrResourceExtensionUnregistered"]({
        path,
        extension
      });
    }

    return Constructor;
  }
  /**
   * Builds a url from a resource path
   * @param {String} path
   * @returns {String}
   * @throws {ErrResourcePrefixUndefined} When passed a url without a resource prefix
   * @throws {ErrResourcePrefixUnregistered} When passed a url with an unregistered resource prefix
   */


  BuildUrl(path) {
    const prefixIndex = path.indexOf(":/");

    if (prefixIndex === -1) {
      throw new core__WEBPACK_IMPORTED_MODULE_3__["ErrResourcePrefixUndefined"]({
        path
      });
    }

    const prefix = path.substr(0, prefixIndex);

    if (prefix === "http" || prefix === "https") {
      return path;
    }

    const fullPrefix = this.tw2.GetPath(prefix);

    if (!fullPrefix) {
      throw new core__WEBPACK_IMPORTED_MODULE_3__["ErrResourcePrefixUnregistered"]({
        path,
        prefix
      });
    }

    return fullPrefix + path.substr(prefixIndex + 2);
  }
  /**
   * Normalizes a file path by making it lower case and replaces all '\\' with '/'
   * @param {String} path
   * @returns {String}
   */


  static NormalizePath(path) {
    path = path.toLowerCase();
    path = path.replace("\\", "/");
    return path;
  }
  /**
   * Log type
   * @type {*}
   */


}
Tw2ResMan.LogType = {
  ERROR: "error",
  PURGED: "info",
  UNLOADED: "info",
  REQUESTED: "info",
  RELOADING: "info",
  LOADED: "info",
  PREPARED: "log",
  WARNING: "warn",
  DEBUG: "debug"
};
Tw2ResMan.__category = "Resource Manager";

/***/ }),

/***/ "./global/engine/index.js":
/*!********************************!*\
  !*** ./global/engine/index.js ***!
  \********************************/
/*! exports provided: Type, TypeCategory, TypeTypeCategory, TypeLength, GL_COLOR_BUFFER_BIT, GL_DEPTH_BUFFER_BIT, GL_STENCIL_BUFFER_BIT, GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP, GL_TEXTURE_3D, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_HALF_FLOAT_OES, GL_HALF_FLOAT, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT32F, GL_FLOAT_VEC2, GL_FLOAT_VEC3, GL_FLOAT_VEC4, GL_INT_VEC2, GL_INT_VEC3, GL_INT_VEC4, GL_BOOL, GL_BOOL_VEC2, GL_BOOL_VEC3, GL_BOOL_VEC4, GL_FLOAT_MAT2, GL_FLOAT_MAT3, GL_FLOAT_MAT4, GL_TYPE_LENGTH, GL_SAMPLER_2D, GL_SAMPLER_3D, GL_SAMPLER_CUBE, GL_DEPTH_COMPONENT, GL_ALPHA, GL_RGB, GL_RGBA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_DEPTH_STENCIL, GL_UNSIGNED_INT_24_8_WEBGL, GL_R8, GL_R16F, GL_R32F, GL_R8UI, GL_RG8, GL_RG16F, GL_RG32F, GL_RGB8, GL_SRGB8, GL_RGB565, GL_R11F_G11F_B10F, GL_RGB9_E5, GL_RGB16F, GL_RGB32F, GL_RGB8UI, GL_RGBA8, GL_RGB5_A1, GL_RGBA16F, GL_RGBA32F, GL_RGBA8UI, GL_RGBA16I, GL_RGBA16UI, GL_RGBA32I, GL_RGBA32UI, GL_NEAREST, GL_LINEAR, GL_NEAREST_MIPMAP_NEAREST, GL_LINEAR_MIPMAP_NEAREST, GL_NEAREST_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_LINEAR, GL_REPEAT, GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, GL_ZERO, GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_DST_ALPHA, GL_ONE_MINUS_DST_ALPHA, GL_DST_COLOR, GL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA_SATURATE, GL_CONSTANT_COLOR, GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA, GL_ONE_MINUS_CONSTANT_ALPHA, GL_VERTEX_SHADER, GL_FRAGMENT_SHADER, GL_FRONT, GL_BACK, GL_FRONT_AND_BACK, GL_NEVER, GL_LESS, GL_EQUAL, GL_LEQUAL, GL_GREATER, GL_NOTEQUAL, GL_GEQUAL, GL_ALWAYS, GL_KEEP, GL_REPLACE, GL_INCR, GL_DECR, GL_INCR_WRAP, GL_DECR_WRAP, GL_INVERT, GL_STREAM_DRAW, GL_STATIC_DRAW, GL_DYNAMIC_DRAW, GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_POINTS, GL_LINES, GL_LINE_LOOP, GL_LINE_STRIP, GL_TRIANGLES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_CW, GL_CCW, GL_CULL_FACE, GL_DEPTH_TEST, GL_BLEND, RM_ANY, RM_OPAQUE, RM_DECAL, RM_TRANSPARENT, RM_ADDITIVE, RM_DEPTH, RM_FULLSCREEN, RM_PICKABLE, RM_DISTORTION, RS_ZENABLE, RS_FILLMODE, RS_SHADEMODE, RS_ZWRITEENABLE, RS_ALPHATESTENABLE, RS_LASTPIXEL, RS_SRCBLEND, RS_DESTBLEND, RS_CULLMODE, RS_ZFUNC, RS_ALPHAREF, RS_ALPHAFUNC, RS_DITHERENABLE, RS_ALPHABLENDENABLE, RS_FOGENABLE, RS_SPECULARENABLE, RS_FOGCOLOR, RS_FOGTABLEMODE, RS_FOGSTART, RS_FOGEND, RS_FOGDENSITY, RS_RANGEFOGENABLE, RS_STENCILENABLE, RS_STENCILFAIL, RS_STENCILZFAIL, RS_STENCILPASS, RS_STENCILFUNC, RS_STENCILREF, RS_STENCILMASK, RS_STENCILWRITEMASK, RS_TEXTUREFACTOR, RS_WRAP0, RS_WRAP1, RS_WRAP2, RS_WRAP3, RS_WRAP4, RS_WRAP5, RS_WRAP6, RS_WRAP7, RS_CLIPPING, RS_LIGHTING, RS_AMBIENT, RS_FOGVERTEXMODE, RS_COLORVERTEX, RS_LOCALVIEWER, RS_NORMALIZENORMALS, RS_DIFFUSEMATERIALSOURCE, RS_SPECULARMATERIALSOURCE, RS_AMBIENTMATERIALSOURCE, RS_EMISSIVEMATERIALSOURCE, RS_VERTEXBLEND, RS_CLIPPLANEENABLE, RS_POINTSIZE, RS_POINTSIZE_MIN, RS_POINTSPRITEENABLE, RS_POINTSCALEENABLE, RS_POINTSCALE_A, RS_POINTSCALE_B, RS_POINTSCALE_C, RS_MULTISAMPLEANTIALIAS, RS_MULTISAMPLEMASK, RS_PATCHEDGESTYLE, RS_DEBUGMONITORTOKEN, RS_POINTSIZE_MAX, RS_INDEXEDVERTEXBLENDENABLE, RS_COLORWRITEENABLE, RS_TWEENFACTOR, RS_BLENDOP, RS_POSITIONDEGREE, RS_NORMALDEGREE, RS_SCISSORTESTENABLE, RS_SLOPESCALEDEPTHBIAS, RS_ANTIALIASEDLINEENABLE, RS_TWOSIDEDSTENCILMODE, RS_CCW_STENCILFAIL, RS_CCW_STENCILZFAIL, RS_CCW_STENCILPASS, RS_CCW_STENCILFUNC, RS_COLORWRITEENABLE1, RS_COLORWRITEENABLE2, RS_COLORWRITEENABLE3, RS_BLENDFACTOR, RS_SRGBWRITEENABLE, RS_DEPTHBIAS, RS_SEPARATEALPHABLENDENABLE, RS_SRCBLENDALPHA, RS_DESTBLENDALPHA, RS_BLENDOPALPHA, CULL_NONE, CULL_CW, CULL_CCW, CMP_NEVER, CMP_LESS, CMP_EQUAL, CMP_LEQUAL, CMP_GREATER, CMP_NOTEQUAL, CMP_GREATEREQUAL, CMP_ALWAYS, BLEND_ZERO, BLEND_ONE, BLEND_SRCCOLOR, BLEND_INVSRCCOLOR, BLEND_SRCALPHA, BLEND_INVSRCALPHA, BLEND_DESTALPHA, BLEND_INVDESTALPHA, BLEND_DESTCOLOR, BLEND_INVDESTCOLOR, BLEND_SRCALPHASAT, BLEND_BOTHSRCALPHA, BLEND_BOTHINVSRCALPHA, BLEND_BLENDFACTOR, BLEND_INVBLENDFACTOR, BLENDOP_ADD, BLENDOP_SUBTRACT, BLENDOP_REVSUBTRACT, BLENDOP_MIN, BLENDOP_MAX, TF_ALPHA, TF_LUMINANCE, TF_LUMINANCE_ALPHA, TF_RGB, TF_RGBA, TF_RED, TF_R, TF_RG, TF_RED_INTEGER, TF_R_INTEGER, TF_RG_INTEGER, TF_RGB_INTEGER, TF_RGBA_INTEGER, TT_UNSIGNED_BYTE, TT_UNSIGNED_INT, TT_FLOAT, TT_HALF_FLOAT, TT_BYTE, TT_SHORT, TT_UNSIGNED_SHORT, TT_INT, TT_UNSIGNED_INTEGER, TT_UNSIGNED_SHORT_4_4_4_4, TT_UNSIGNED_SHORT_5_5_5_1, TT_UNSIGNED_SHORT_5_6_5, TT_UNSIGNED_INT_2_10_10_10_REV, TT_UNSIGNED_INT_24_8, TT_UNSIGNED_INT_10F_11F_11F_REV, TT_UNSIGNED_INT_5_9_9_9_REV, TT_FLOAT_32_UNSIGNED_INT_24_8_REV, WrapModes, BlendTable, FilterMode, MipFilterMode, DDS_MAGIC, DDSD_CAPS, DDSD_HEIGHT, DDSD_WIDTH, DDSD_PITCH, DDSD_PIXELFORMAT, DDSD_MIPMAPCOUNT, DDSD_LINEARSIZE, DDSD_DEPTH, DDSCAPS_COMPLEX, DDSCAPS_MIPMAP, DDSCAPS_TEXTURE, DDSCAPS2_CUBEMAP, DDSCAPS2_CUBEMAP_POSITIVEX, DDSCAPS2_CUBEMAP_NEGATIVEX, DDSCAPS2_CUBEMAP_POSITIVEY, DDSCAPS2_CUBEMAP_NEGATIVEY, DDSCAPS2_CUBEMAP_POSITIVEZ, DDSCAPS2_CUBEMAP_NEGATIVEZ, DDSCAPS2_VOLUME, DDPF_ALPHAPIXELS, DDPF_ALPHA, DDPF_FOURCC, DDPF_RGB, DDPF_YUV, DDPF_LUMINANCE, DDS_HEADER_LENGTH_INT, DDS_HEADER_OFFSET_MAGIC, DDS_HEADER_OFFSET_SIZE, DDS_HEADER_OFFSET_FLAGS, DDS_HEADER_OFFSET_HEIGHT, DDS_HEADER_OFFSET_WIDTH, DDS_HEADER_OFFSET_MIPMAP_COUNT, DDS_HEADER_OFFSET_PF_FLAGS, DDS_HEADER_OFFSET_PF_FOURCC, DDS_HEADER_OFFSET_RGB_BPP, DDS_HEADER_OFFSET_R_MASK, DDS_HEADER_OFFSET_G_MASK, DDS_HEADER_OFFSET_B_MASK, DDS_HEADER_OFFSET_A_MASK, DDS_HEADER_OFFSET_CAPS1, DDS_HEADER_OFFSET_CAPS2, DDS_HEADER_OFFSET_CAPS3, DDS_HEADER_OFFSET_CAPS4, DDS_HEADER_OFFSET_DXGI_FORMAT, FOURCC_DXT1, FOURCC_DXT5, FOURCC_DXT3, FOURCC_DXT10, FOURCC_D3DFMT_R16G16B16A16F, FOURCC_D3DFMT_R32G32B32A32F, DXGI_FORMAT_R16G16B16A16_FLOAT, DXGI_FORMAT_B8G8R8X8_UNORM, VendorRequestAnimationFrame, VendorCancelAnimationFrame, VendorRequestFullScreen, VendorExitFullScreen, VendorGetFullScreenElement, VendorWebglPrefixes, Tw2Device, Tw2ResMan, Tw2Logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2Device__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2Device */ "./global/engine/Tw2Device.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Device", function() { return _Tw2Device__WEBPACK_IMPORTED_MODULE_0__["Tw2Device"]; });

/* harmony import */ var _Tw2ResMan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ResMan */ "./global/engine/Tw2ResMan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ResMan", function() { return _Tw2ResMan__WEBPACK_IMPORTED_MODULE_1__["Tw2ResMan"]; });

/* harmony import */ var _Tw2Logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2Logger */ "./global/engine/Tw2Logger.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Logger", function() { return _Tw2Logger__WEBPACK_IMPORTED_MODULE_2__["Tw2Logger"]; });

/* harmony import */ var _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2Constant */ "./global/engine/Tw2Constant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["Type"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeCategory", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TypeCategory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeTypeCategory", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TypeTypeCategory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeLength", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TypeLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_COLOR_BUFFER_BIT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_COLOR_BUFFER_BIT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_BUFFER_BIT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_BUFFER_BIT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_STENCIL_BUFFER_BIT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_STENCIL_BUFFER_BIT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_2D", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_2D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_CUBE_MAP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_CUBE_MAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_3D", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_MAG_FILTER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_MAG_FILTER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_MIN_FILTER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_MIN_FILTER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_WRAP_S", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_WRAP_S"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_WRAP_T", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_WRAP_T"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BYTE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_BYTE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SHORT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_SHORT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_INT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_HALF_FLOAT_OES", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_HALF_FLOAT_OES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_HALF_FLOAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_HALF_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT16", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT16"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT24", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT24"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT32F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC2", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_VEC2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_VEC3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC4", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_VEC4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC2", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT_VEC2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT_VEC3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC4", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT_VEC4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC2", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL_VEC2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL_VEC3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC4", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL_VEC4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT2", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_MAT2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_MAT3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT4", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_MAT4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TYPE_LENGTH", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TYPE_LENGTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_2D", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SAMPLER_2D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_3D", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SAMPLER_3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_CUBE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SAMPLER_CUBE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LUMINANCE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LUMINANCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LUMINANCE_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LUMINANCE_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_STENCIL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_STENCIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_INT_24_8_WEBGL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_INT_24_8_WEBGL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R8", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R16F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R32F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R8UI", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R8UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RG8", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RG8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RG16F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RG16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RG32F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RG32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB8", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRGB8", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRGB8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB565", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB565"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R11F_G11F_B10F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R11F_G11F_B10F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB9_E5", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB9_E5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB16F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB32F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB8UI", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB8UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA8", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB5_A1", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB5_A1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA8UI", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA8UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16I", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA16I"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16UI", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA16UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32I", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA32I"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32UI", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA32UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEAREST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST_MIPMAP_NEAREST", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEAREST_MIPMAP_NEAREST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR_MIPMAP_NEAREST", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINEAR_MIPMAP_NEAREST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST_MIPMAP_LINEAR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEAREST_MIPMAP_LINEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR_MIPMAP_LINEAR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINEAR_MIPMAP_LINEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_REPEAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_REPEAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CLAMP_TO_EDGE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CLAMP_TO_EDGE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_MIRRORED_REPEAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_MIRRORED_REPEAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ZERO", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ZERO"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_COLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRC_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_SRC_COLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_SRC_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRC_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_SRC_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_SRC_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DST_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DST_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_DST_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_DST_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DST_COLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DST_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_DST_COLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_DST_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_ALPHA_SATURATE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRC_ALPHA_SATURATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CONSTANT_COLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CONSTANT_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_CONSTANT_COLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_CONSTANT_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CONSTANT_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CONSTANT_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_CONSTANT_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_CONSTANT_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_VERTEX_SHADER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_VERTEX_SHADER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FRAGMENT_SHADER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FRAGMENT_SHADER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FRONT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FRONT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BACK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BACK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FRONT_AND_BACK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FRONT_AND_BACK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEVER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEVER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LESS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LESS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_EQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_EQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LEQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_GREATER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_GREATER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NOTEQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NOTEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_GEQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_GEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ALWAYS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ALWAYS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_KEEP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_KEEP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_REPLACE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_REPLACE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INCR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INCR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DECR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DECR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INCR_WRAP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INCR_WRAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DECR_WRAP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DECR_WRAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INVERT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INVERT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_STREAM_DRAW", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_STREAM_DRAW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_STATIC_DRAW", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_STATIC_DRAW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DYNAMIC_DRAW", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DYNAMIC_DRAW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ARRAY_BUFFER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ARRAY_BUFFER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ELEMENT_ARRAY_BUFFER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ELEMENT_ARRAY_BUFFER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_POINTS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_POINTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINES", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINE_LOOP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINE_LOOP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINE_STRIP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINE_STRIP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLES", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TRIANGLES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLE_STRIP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TRIANGLE_STRIP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLE_FAN", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TRIANGLE_FAN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CW", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CCW", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CCW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CULL_FACE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CULL_FACE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_TEST", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_TEST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BLEND", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_ANY", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_ANY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_OPAQUE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_OPAQUE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_DECAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_DECAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_TRANSPARENT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_TRANSPARENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_ADDITIVE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_ADDITIVE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_DEPTH", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_DEPTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_FULLSCREEN", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_FULLSCREEN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_PICKABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_PICKABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_DISTORTION", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_DISTORTION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ZENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ZENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FILLMODE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FILLMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SHADEMODE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SHADEMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ZWRITEENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ZWRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHATESTENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHATESTENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_LASTPIXEL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_LASTPIXEL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SRCBLEND", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SRCBLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DESTBLEND", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DESTBLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CULLMODE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CULLMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ZFUNC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ZFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHAREF", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHAREF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHAFUNC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHAFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DITHERENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DITHERENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHABLENDENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHABLENDENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SPECULARENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SPECULARENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGCOLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGTABLEMODE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGTABLEMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGSTART", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGSTART"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGEND", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGDENSITY", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGDENSITY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_RANGEFOGENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_RANGEFOGENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILFAIL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILZFAIL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILZFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILPASS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILPASS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILFUNC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILREF", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILREF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILMASK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILMASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILWRITEMASK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILWRITEMASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_TEXTUREFACTOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_TEXTUREFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP0", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP0"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP1", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP2", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP4", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP5", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP6", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP6"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP7", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP7"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CLIPPING", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CLIPPING"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_LIGHTING", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_LIGHTING"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_AMBIENT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_AMBIENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGVERTEXMODE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGVERTEXMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORVERTEX", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORVERTEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_LOCALVIEWER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_LOCALVIEWER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_NORMALIZENORMALS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_NORMALIZENORMALS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DIFFUSEMATERIALSOURCE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DIFFUSEMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SPECULARMATERIALSOURCE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SPECULARMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_AMBIENTMATERIALSOURCE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_AMBIENTMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_EMISSIVEMATERIALSOURCE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_EMISSIVEMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_VERTEXBLEND", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_VERTEXBLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CLIPPLANEENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CLIPPLANEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE_MIN", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSIZE_MIN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSPRITEENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSPRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALEENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_A", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALE_A"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_B", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALE_B"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_C", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALE_C"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_MULTISAMPLEANTIALIAS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_MULTISAMPLEANTIALIAS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_MULTISAMPLEMASK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_MULTISAMPLEMASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_PATCHEDGESTYLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_PATCHEDGESTYLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DEBUGMONITORTOKEN", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DEBUGMONITORTOKEN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE_MAX", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSIZE_MAX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_INDEXEDVERTEXBLENDENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_INDEXEDVERTEXBLENDENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_TWEENFACTOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_TWEENFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDOP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_BLENDOP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POSITIONDEGREE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POSITIONDEGREE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_NORMALDEGREE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_NORMALDEGREE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SCISSORTESTENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SCISSORTESTENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SLOPESCALEDEPTHBIAS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SLOPESCALEDEPTHBIAS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ANTIALIASEDLINEENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ANTIALIASEDLINEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_TWOSIDEDSTENCILMODE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_TWOSIDEDSTENCILMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILFAIL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILZFAIL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILZFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILPASS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILPASS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILFUNC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE1", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE2", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDFACTOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_BLENDFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SRGBWRITEENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SRGBWRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DEPTHBIAS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DEPTHBIAS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SEPARATEALPHABLENDENABLE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SEPARATEALPHABLENDENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SRCBLENDALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SRCBLENDALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DESTBLENDALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DESTBLENDALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDOPALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_BLENDOPALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CULL_NONE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CULL_NONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CULL_CW", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CULL_CW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CULL_CCW", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CULL_CCW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_NEVER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_NEVER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_LESS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_LESS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_EQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_EQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_LEQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_LEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_GREATER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_GREATER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_NOTEQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_NOTEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_GREATEREQUAL", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_GREATEREQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_ALWAYS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_ALWAYS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_ZERO", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_ZERO"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_ONE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_ONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCCOLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_SRCCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVSRCCOLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVSRCCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_SRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVSRCALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVSRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_DESTALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_DESTALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVDESTALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVDESTALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_DESTCOLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_DESTCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVDESTCOLOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVDESTCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCALPHASAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_SRCALPHASAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_BOTHSRCALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_BOTHSRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_BOTHINVSRCALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_BOTHINVSRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_BLENDFACTOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_BLENDFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVBLENDFACTOR", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVBLENDFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_ADD", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_ADD"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_SUBTRACT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_SUBTRACT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_REVSUBTRACT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_REVSUBTRACT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_MIN", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_MIN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_MAX", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_MAX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_LUMINANCE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_LUMINANCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_LUMINANCE_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_LUMINANCE_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGB", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGB"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGBA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGBA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RED", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RED"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_R", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_R"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RG", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RED_INTEGER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RED_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_R_INTEGER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_R_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RG_INTEGER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RG_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGB_INTEGER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGB_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGBA_INTEGER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGBA_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_BYTE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_FLOAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_HALF_FLOAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_HALF_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_BYTE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_SHORT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_INT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INTEGER", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_4_4_4_4", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT_4_4_4_4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_5_5_5_1", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT_5_5_5_1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_5_6_5", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT_5_6_5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_2_10_10_10_REV", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_2_10_10_10_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_24_8", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_24_8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_10F_11F_11F_REV", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_10F_11F_11F_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_5_9_9_9_REV", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_5_9_9_9_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_FLOAT_32_UNSIGNED_INT_24_8_REV", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_FLOAT_32_UNSIGNED_INT_24_8_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WrapModes", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["WrapModes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlendTable", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BlendTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FilterMode", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FilterMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MipFilterMode", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["MipFilterMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_MAGIC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_MAGIC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_CAPS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_CAPS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_HEIGHT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_HEIGHT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_WIDTH", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_WIDTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_PITCH", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_PITCH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_PIXELFORMAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_PIXELFORMAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_MIPMAPCOUNT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_MIPMAPCOUNT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_LINEARSIZE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_LINEARSIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_DEPTH", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_DEPTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_COMPLEX", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS_COMPLEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_MIPMAP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS_MIPMAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_TEXTURE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS_TEXTURE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEX", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_POSITIVEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEX", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_NEGATIVEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEY", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_POSITIVEY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEY", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_NEGATIVEY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEZ", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_POSITIVEZ"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEZ", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_NEGATIVEZ"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_VOLUME", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_VOLUME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_ALPHAPIXELS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_ALPHAPIXELS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_ALPHA", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_FOURCC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_FOURCC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_RGB", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_RGB"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_YUV", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_YUV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_LUMINANCE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_LUMINANCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_LENGTH_INT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_LENGTH_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_MAGIC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_MAGIC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_SIZE", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_SIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_FLAGS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_FLAGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_HEIGHT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_HEIGHT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_WIDTH", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_WIDTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_MIPMAP_COUNT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_MIPMAP_COUNT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_PF_FLAGS", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_PF_FLAGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_PF_FOURCC", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_PF_FOURCC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_RGB_BPP", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_RGB_BPP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_R_MASK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_R_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_G_MASK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_G_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_B_MASK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_B_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_A_MASK", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_A_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS1", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS2", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS4", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_DXGI_FORMAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_DXGI_FORMAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT1", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT5", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT3", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT10", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_D3DFMT_R16G16B16A16F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_D3DFMT_R16G16B16A16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_D3DFMT_R32G32B32A32F", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_D3DFMT_R32G32B32A32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DXGI_FORMAT_R16G16B16A16_FLOAT", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DXGI_FORMAT_R16G16B16A16_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DXGI_FORMAT_B8G8R8X8_UNORM", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DXGI_FORMAT_B8G8R8X8_UNORM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorRequestAnimationFrame", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorRequestAnimationFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorCancelAnimationFrame", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorCancelAnimationFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorRequestFullScreen", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorRequestFullScreen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorExitFullScreen", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorExitFullScreen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorGetFullScreenElement", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorGetFullScreenElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorWebglPrefixes", function() { return _Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorWebglPrefixes"]; });






/***/ }),

/***/ "./global/index.js":
/*!*************************!*\
  !*** ./global/index.js ***!
  \*************************/
/*! exports provided: meta, util, Type, TypeCategory, TypeTypeCategory, TypeLength, GL_COLOR_BUFFER_BIT, GL_DEPTH_BUFFER_BIT, GL_STENCIL_BUFFER_BIT, GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP, GL_TEXTURE_3D, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_FILTER, GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_INT, GL_UNSIGNED_INT, GL_FLOAT, GL_HALF_FLOAT_OES, GL_HALF_FLOAT, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT32F, GL_FLOAT_VEC2, GL_FLOAT_VEC3, GL_FLOAT_VEC4, GL_INT_VEC2, GL_INT_VEC3, GL_INT_VEC4, GL_BOOL, GL_BOOL_VEC2, GL_BOOL_VEC3, GL_BOOL_VEC4, GL_FLOAT_MAT2, GL_FLOAT_MAT3, GL_FLOAT_MAT4, GL_TYPE_LENGTH, GL_SAMPLER_2D, GL_SAMPLER_3D, GL_SAMPLER_CUBE, GL_DEPTH_COMPONENT, GL_ALPHA, GL_RGB, GL_RGBA, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_DEPTH_STENCIL, GL_UNSIGNED_INT_24_8_WEBGL, GL_R8, GL_R16F, GL_R32F, GL_R8UI, GL_RG8, GL_RG16F, GL_RG32F, GL_RGB8, GL_SRGB8, GL_RGB565, GL_R11F_G11F_B10F, GL_RGB9_E5, GL_RGB16F, GL_RGB32F, GL_RGB8UI, GL_RGBA8, GL_RGB5_A1, GL_RGBA16F, GL_RGBA32F, GL_RGBA8UI, GL_RGBA16I, GL_RGBA16UI, GL_RGBA32I, GL_RGBA32UI, GL_NEAREST, GL_LINEAR, GL_NEAREST_MIPMAP_NEAREST, GL_LINEAR_MIPMAP_NEAREST, GL_NEAREST_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_LINEAR, GL_REPEAT, GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, GL_ZERO, GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, GL_DST_ALPHA, GL_ONE_MINUS_DST_ALPHA, GL_DST_COLOR, GL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA_SATURATE, GL_CONSTANT_COLOR, GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA, GL_ONE_MINUS_CONSTANT_ALPHA, GL_VERTEX_SHADER, GL_FRAGMENT_SHADER, GL_FRONT, GL_BACK, GL_FRONT_AND_BACK, GL_NEVER, GL_LESS, GL_EQUAL, GL_LEQUAL, GL_GREATER, GL_NOTEQUAL, GL_GEQUAL, GL_ALWAYS, GL_KEEP, GL_REPLACE, GL_INCR, GL_DECR, GL_INCR_WRAP, GL_DECR_WRAP, GL_INVERT, GL_STREAM_DRAW, GL_STATIC_DRAW, GL_DYNAMIC_DRAW, GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_POINTS, GL_LINES, GL_LINE_LOOP, GL_LINE_STRIP, GL_TRIANGLES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_CW, GL_CCW, GL_CULL_FACE, GL_DEPTH_TEST, GL_BLEND, RM_ANY, RM_OPAQUE, RM_DECAL, RM_TRANSPARENT, RM_ADDITIVE, RM_DEPTH, RM_FULLSCREEN, RM_PICKABLE, RM_DISTORTION, RS_ZENABLE, RS_FILLMODE, RS_SHADEMODE, RS_ZWRITEENABLE, RS_ALPHATESTENABLE, RS_LASTPIXEL, RS_SRCBLEND, RS_DESTBLEND, RS_CULLMODE, RS_ZFUNC, RS_ALPHAREF, RS_ALPHAFUNC, RS_DITHERENABLE, RS_ALPHABLENDENABLE, RS_FOGENABLE, RS_SPECULARENABLE, RS_FOGCOLOR, RS_FOGTABLEMODE, RS_FOGSTART, RS_FOGEND, RS_FOGDENSITY, RS_RANGEFOGENABLE, RS_STENCILENABLE, RS_STENCILFAIL, RS_STENCILZFAIL, RS_STENCILPASS, RS_STENCILFUNC, RS_STENCILREF, RS_STENCILMASK, RS_STENCILWRITEMASK, RS_TEXTUREFACTOR, RS_WRAP0, RS_WRAP1, RS_WRAP2, RS_WRAP3, RS_WRAP4, RS_WRAP5, RS_WRAP6, RS_WRAP7, RS_CLIPPING, RS_LIGHTING, RS_AMBIENT, RS_FOGVERTEXMODE, RS_COLORVERTEX, RS_LOCALVIEWER, RS_NORMALIZENORMALS, RS_DIFFUSEMATERIALSOURCE, RS_SPECULARMATERIALSOURCE, RS_AMBIENTMATERIALSOURCE, RS_EMISSIVEMATERIALSOURCE, RS_VERTEXBLEND, RS_CLIPPLANEENABLE, RS_POINTSIZE, RS_POINTSIZE_MIN, RS_POINTSPRITEENABLE, RS_POINTSCALEENABLE, RS_POINTSCALE_A, RS_POINTSCALE_B, RS_POINTSCALE_C, RS_MULTISAMPLEANTIALIAS, RS_MULTISAMPLEMASK, RS_PATCHEDGESTYLE, RS_DEBUGMONITORTOKEN, RS_POINTSIZE_MAX, RS_INDEXEDVERTEXBLENDENABLE, RS_COLORWRITEENABLE, RS_TWEENFACTOR, RS_BLENDOP, RS_POSITIONDEGREE, RS_NORMALDEGREE, RS_SCISSORTESTENABLE, RS_SLOPESCALEDEPTHBIAS, RS_ANTIALIASEDLINEENABLE, RS_TWOSIDEDSTENCILMODE, RS_CCW_STENCILFAIL, RS_CCW_STENCILZFAIL, RS_CCW_STENCILPASS, RS_CCW_STENCILFUNC, RS_COLORWRITEENABLE1, RS_COLORWRITEENABLE2, RS_COLORWRITEENABLE3, RS_BLENDFACTOR, RS_SRGBWRITEENABLE, RS_DEPTHBIAS, RS_SEPARATEALPHABLENDENABLE, RS_SRCBLENDALPHA, RS_DESTBLENDALPHA, RS_BLENDOPALPHA, CULL_NONE, CULL_CW, CULL_CCW, CMP_NEVER, CMP_LESS, CMP_EQUAL, CMP_LEQUAL, CMP_GREATER, CMP_NOTEQUAL, CMP_GREATEREQUAL, CMP_ALWAYS, BLEND_ZERO, BLEND_ONE, BLEND_SRCCOLOR, BLEND_INVSRCCOLOR, BLEND_SRCALPHA, BLEND_INVSRCALPHA, BLEND_DESTALPHA, BLEND_INVDESTALPHA, BLEND_DESTCOLOR, BLEND_INVDESTCOLOR, BLEND_SRCALPHASAT, BLEND_BOTHSRCALPHA, BLEND_BOTHINVSRCALPHA, BLEND_BLENDFACTOR, BLEND_INVBLENDFACTOR, BLENDOP_ADD, BLENDOP_SUBTRACT, BLENDOP_REVSUBTRACT, BLENDOP_MIN, BLENDOP_MAX, TF_ALPHA, TF_LUMINANCE, TF_LUMINANCE_ALPHA, TF_RGB, TF_RGBA, TF_RED, TF_R, TF_RG, TF_RED_INTEGER, TF_R_INTEGER, TF_RG_INTEGER, TF_RGB_INTEGER, TF_RGBA_INTEGER, TT_UNSIGNED_BYTE, TT_UNSIGNED_INT, TT_FLOAT, TT_HALF_FLOAT, TT_BYTE, TT_SHORT, TT_UNSIGNED_SHORT, TT_INT, TT_UNSIGNED_INTEGER, TT_UNSIGNED_SHORT_4_4_4_4, TT_UNSIGNED_SHORT_5_5_5_1, TT_UNSIGNED_SHORT_5_6_5, TT_UNSIGNED_INT_2_10_10_10_REV, TT_UNSIGNED_INT_24_8, TT_UNSIGNED_INT_10F_11F_11F_REV, TT_UNSIGNED_INT_5_9_9_9_REV, TT_FLOAT_32_UNSIGNED_INT_24_8_REV, WrapModes, BlendTable, FilterMode, MipFilterMode, DDS_MAGIC, DDSD_CAPS, DDSD_HEIGHT, DDSD_WIDTH, DDSD_PITCH, DDSD_PIXELFORMAT, DDSD_MIPMAPCOUNT, DDSD_LINEARSIZE, DDSD_DEPTH, DDSCAPS_COMPLEX, DDSCAPS_MIPMAP, DDSCAPS_TEXTURE, DDSCAPS2_CUBEMAP, DDSCAPS2_CUBEMAP_POSITIVEX, DDSCAPS2_CUBEMAP_NEGATIVEX, DDSCAPS2_CUBEMAP_POSITIVEY, DDSCAPS2_CUBEMAP_NEGATIVEY, DDSCAPS2_CUBEMAP_POSITIVEZ, DDSCAPS2_CUBEMAP_NEGATIVEZ, DDSCAPS2_VOLUME, DDPF_ALPHAPIXELS, DDPF_ALPHA, DDPF_FOURCC, DDPF_RGB, DDPF_YUV, DDPF_LUMINANCE, DDS_HEADER_LENGTH_INT, DDS_HEADER_OFFSET_MAGIC, DDS_HEADER_OFFSET_SIZE, DDS_HEADER_OFFSET_FLAGS, DDS_HEADER_OFFSET_HEIGHT, DDS_HEADER_OFFSET_WIDTH, DDS_HEADER_OFFSET_MIPMAP_COUNT, DDS_HEADER_OFFSET_PF_FLAGS, DDS_HEADER_OFFSET_PF_FOURCC, DDS_HEADER_OFFSET_RGB_BPP, DDS_HEADER_OFFSET_R_MASK, DDS_HEADER_OFFSET_G_MASK, DDS_HEADER_OFFSET_B_MASK, DDS_HEADER_OFFSET_A_MASK, DDS_HEADER_OFFSET_CAPS1, DDS_HEADER_OFFSET_CAPS2, DDS_HEADER_OFFSET_CAPS3, DDS_HEADER_OFFSET_CAPS4, DDS_HEADER_OFFSET_DXGI_FORMAT, FOURCC_DXT1, FOURCC_DXT5, FOURCC_DXT3, FOURCC_DXT10, FOURCC_D3DFMT_R16G16B16A16F, FOURCC_D3DFMT_R32G32B32A32F, DXGI_FORMAT_R16G16B16A16_FLOAT, DXGI_FORMAT_B8G8R8X8_UNORM, VendorRequestAnimationFrame, VendorCancelAnimationFrame, VendorRequestFullScreen, VendorExitFullScreen, VendorGetFullScreenElement, VendorWebglPrefixes, tw2, resMan, device, Tw2BaseClass, Tw2EventEmitter, Tw2Notifications, Tw2Schema, num, vec2, vec3, vec4, quat, mat3, mat4, noise, curve, box3, tri3, lne3, pln, ray3, sph3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./meta */ "./global/meta/index.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "meta", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./global/util/index.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "util", function() { return _util__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./class */ "./global/class/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2BaseClass", function() { return _class__WEBPACK_IMPORTED_MODULE_2__["Tw2BaseClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2EventEmitter", function() { return _class__WEBPACK_IMPORTED_MODULE_2__["Tw2EventEmitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Notifications", function() { return _class__WEBPACK_IMPORTED_MODULE_2__["Tw2Notifications"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2Schema", function() { return _class__WEBPACK_IMPORTED_MODULE_2__["Tw2Schema"]; });

/* harmony import */ var _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./engine/Tw2Constant */ "./global/engine/Tw2Constant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["Type"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeCategory", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TypeCategory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeTypeCategory", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TypeTypeCategory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeLength", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TypeLength"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_COLOR_BUFFER_BIT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_COLOR_BUFFER_BIT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_BUFFER_BIT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_BUFFER_BIT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_STENCIL_BUFFER_BIT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_STENCIL_BUFFER_BIT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_2D", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_2D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_CUBE_MAP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_CUBE_MAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_3D", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_MAG_FILTER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_MAG_FILTER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_MIN_FILTER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_MIN_FILTER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_WRAP_S", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_WRAP_S"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TEXTURE_WRAP_T", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TEXTURE_WRAP_T"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BYTE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_BYTE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SHORT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_SHORT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_INT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_HALF_FLOAT_OES", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_HALF_FLOAT_OES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_HALF_FLOAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_HALF_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT16", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT16"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT24", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT24"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT32F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC2", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_VEC2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_VEC3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_VEC4", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_VEC4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC2", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT_VEC2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT_VEC3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INT_VEC4", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INT_VEC4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC2", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL_VEC2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL_VEC3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BOOL_VEC4", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BOOL_VEC4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT2", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_MAT2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_MAT3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FLOAT_MAT4", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FLOAT_MAT4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TYPE_LENGTH", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TYPE_LENGTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_2D", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SAMPLER_2D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_3D", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SAMPLER_3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SAMPLER_CUBE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SAMPLER_CUBE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_COMPONENT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_COMPONENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LUMINANCE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LUMINANCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LUMINANCE_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LUMINANCE_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_STENCIL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_STENCIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_UNSIGNED_INT_24_8_WEBGL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_UNSIGNED_INT_24_8_WEBGL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R8", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R16F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R32F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R8UI", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R8UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RG8", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RG8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RG16F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RG16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RG32F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RG32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB8", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRGB8", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRGB8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB565", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB565"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_R11F_G11F_B10F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_R11F_G11F_B10F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB9_E5", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB9_E5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB16F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB32F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB8UI", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB8UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA8", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGB5_A1", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGB5_A1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA8UI", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA8UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16I", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA16I"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA16UI", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA16UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32I", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA32I"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_RGBA32UI", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_RGBA32UI"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEAREST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST_MIPMAP_NEAREST", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEAREST_MIPMAP_NEAREST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR_MIPMAP_NEAREST", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINEAR_MIPMAP_NEAREST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEAREST_MIPMAP_LINEAR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEAREST_MIPMAP_LINEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINEAR_MIPMAP_LINEAR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINEAR_MIPMAP_LINEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_REPEAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_REPEAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CLAMP_TO_EDGE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CLAMP_TO_EDGE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_MIRRORED_REPEAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_MIRRORED_REPEAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ZERO", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ZERO"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_COLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRC_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_SRC_COLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_SRC_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRC_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_SRC_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_SRC_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DST_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DST_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_DST_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_DST_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DST_COLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DST_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_DST_COLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_DST_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_SRC_ALPHA_SATURATE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_SRC_ALPHA_SATURATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CONSTANT_COLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CONSTANT_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_CONSTANT_COLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_CONSTANT_COLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CONSTANT_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CONSTANT_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ONE_MINUS_CONSTANT_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ONE_MINUS_CONSTANT_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_VERTEX_SHADER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_VERTEX_SHADER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FRAGMENT_SHADER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FRAGMENT_SHADER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FRONT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FRONT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BACK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BACK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_FRONT_AND_BACK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_FRONT_AND_BACK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NEVER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NEVER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LESS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LESS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_EQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_EQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LEQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_GREATER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_GREATER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_NOTEQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_NOTEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_GEQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_GEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ALWAYS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ALWAYS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_KEEP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_KEEP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_REPLACE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_REPLACE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INCR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INCR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DECR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DECR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INCR_WRAP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INCR_WRAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DECR_WRAP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DECR_WRAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_INVERT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_INVERT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_STREAM_DRAW", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_STREAM_DRAW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_STATIC_DRAW", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_STATIC_DRAW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DYNAMIC_DRAW", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DYNAMIC_DRAW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ARRAY_BUFFER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ARRAY_BUFFER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_ELEMENT_ARRAY_BUFFER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_ELEMENT_ARRAY_BUFFER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_POINTS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_POINTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINES", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINE_LOOP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINE_LOOP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_LINE_STRIP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_LINE_STRIP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLES", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TRIANGLES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLE_STRIP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TRIANGLE_STRIP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_TRIANGLE_FAN", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_TRIANGLE_FAN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CW", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CCW", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CCW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_CULL_FACE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_CULL_FACE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_DEPTH_TEST", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_DEPTH_TEST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GL_BLEND", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["GL_BLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_ANY", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_ANY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_OPAQUE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_OPAQUE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_DECAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_DECAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_TRANSPARENT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_TRANSPARENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_ADDITIVE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_ADDITIVE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_DEPTH", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_DEPTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_FULLSCREEN", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_FULLSCREEN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_PICKABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_PICKABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RM_DISTORTION", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RM_DISTORTION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ZENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ZENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FILLMODE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FILLMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SHADEMODE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SHADEMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ZWRITEENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ZWRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHATESTENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHATESTENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_LASTPIXEL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_LASTPIXEL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SRCBLEND", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SRCBLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DESTBLEND", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DESTBLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CULLMODE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CULLMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ZFUNC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ZFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHAREF", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHAREF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHAFUNC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHAFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DITHERENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DITHERENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ALPHABLENDENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ALPHABLENDENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SPECULARENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SPECULARENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGCOLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGTABLEMODE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGTABLEMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGSTART", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGSTART"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGEND", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGDENSITY", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGDENSITY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_RANGEFOGENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_RANGEFOGENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILFAIL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILZFAIL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILZFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILPASS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILPASS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILFUNC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILREF", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILREF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILMASK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILMASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_STENCILWRITEMASK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_STENCILWRITEMASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_TEXTUREFACTOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_TEXTUREFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP0", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP0"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP1", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP2", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP4", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP5", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP6", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP6"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_WRAP7", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_WRAP7"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CLIPPING", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CLIPPING"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_LIGHTING", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_LIGHTING"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_AMBIENT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_AMBIENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_FOGVERTEXMODE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_FOGVERTEXMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORVERTEX", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORVERTEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_LOCALVIEWER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_LOCALVIEWER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_NORMALIZENORMALS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_NORMALIZENORMALS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DIFFUSEMATERIALSOURCE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DIFFUSEMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SPECULARMATERIALSOURCE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SPECULARMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_AMBIENTMATERIALSOURCE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_AMBIENTMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_EMISSIVEMATERIALSOURCE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_EMISSIVEMATERIALSOURCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_VERTEXBLEND", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_VERTEXBLEND"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CLIPPLANEENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CLIPPLANEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE_MIN", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSIZE_MIN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSPRITEENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSPRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALEENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_A", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALE_A"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_B", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALE_B"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSCALE_C", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSCALE_C"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_MULTISAMPLEANTIALIAS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_MULTISAMPLEANTIALIAS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_MULTISAMPLEMASK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_MULTISAMPLEMASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_PATCHEDGESTYLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_PATCHEDGESTYLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DEBUGMONITORTOKEN", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DEBUGMONITORTOKEN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POINTSIZE_MAX", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POINTSIZE_MAX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_INDEXEDVERTEXBLENDENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_INDEXEDVERTEXBLENDENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_TWEENFACTOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_TWEENFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDOP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_BLENDOP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_POSITIONDEGREE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_POSITIONDEGREE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_NORMALDEGREE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_NORMALDEGREE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SCISSORTESTENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SCISSORTESTENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SLOPESCALEDEPTHBIAS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SLOPESCALEDEPTHBIAS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_ANTIALIASEDLINEENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_ANTIALIASEDLINEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_TWOSIDEDSTENCILMODE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_TWOSIDEDSTENCILMODE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILFAIL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILZFAIL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILZFAIL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILPASS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILPASS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_CCW_STENCILFUNC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_CCW_STENCILFUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE1", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE2", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_COLORWRITEENABLE3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_COLORWRITEENABLE3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDFACTOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_BLENDFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SRGBWRITEENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SRGBWRITEENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DEPTHBIAS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DEPTHBIAS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SEPARATEALPHABLENDENABLE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SEPARATEALPHABLENDENABLE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_SRCBLENDALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_SRCBLENDALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_DESTBLENDALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_DESTBLENDALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RS_BLENDOPALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["RS_BLENDOPALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CULL_NONE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CULL_NONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CULL_CW", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CULL_CW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CULL_CCW", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CULL_CCW"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_NEVER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_NEVER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_LESS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_LESS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_EQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_EQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_LEQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_LEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_GREATER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_GREATER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_NOTEQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_NOTEQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_GREATEREQUAL", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_GREATEREQUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CMP_ALWAYS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["CMP_ALWAYS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_ZERO", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_ZERO"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_ONE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_ONE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCCOLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_SRCCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVSRCCOLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVSRCCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_SRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVSRCALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVSRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_DESTALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_DESTALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVDESTALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVDESTALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_DESTCOLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_DESTCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVDESTCOLOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVDESTCOLOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_SRCALPHASAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_SRCALPHASAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_BOTHSRCALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_BOTHSRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_BOTHINVSRCALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_BOTHINVSRCALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_BLENDFACTOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_BLENDFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLEND_INVBLENDFACTOR", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLEND_INVBLENDFACTOR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_ADD", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_ADD"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_SUBTRACT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_SUBTRACT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_REVSUBTRACT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_REVSUBTRACT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_MIN", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_MIN"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BLENDOP_MAX", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BLENDOP_MAX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_LUMINANCE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_LUMINANCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_LUMINANCE_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_LUMINANCE_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGB", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGB"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGBA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGBA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RED", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RED"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_R", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_R"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RG", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RED_INTEGER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RED_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_R_INTEGER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_R_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RG_INTEGER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RG_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGB_INTEGER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGB_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TF_RGBA_INTEGER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TF_RGBA_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_BYTE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_FLOAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_HALF_FLOAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_HALF_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_BYTE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_BYTE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_SHORT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_INT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INTEGER", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INTEGER"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_4_4_4_4", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT_4_4_4_4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_5_5_5_1", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT_5_5_5_1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_SHORT_5_6_5", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_SHORT_5_6_5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_2_10_10_10_REV", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_2_10_10_10_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_24_8", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_24_8"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_10F_11F_11F_REV", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_10F_11F_11F_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_UNSIGNED_INT_5_9_9_9_REV", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_UNSIGNED_INT_5_9_9_9_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TT_FLOAT_32_UNSIGNED_INT_24_8_REV", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["TT_FLOAT_32_UNSIGNED_INT_24_8_REV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WrapModes", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["WrapModes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlendTable", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["BlendTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FilterMode", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FilterMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MipFilterMode", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["MipFilterMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_MAGIC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_MAGIC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_CAPS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_CAPS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_HEIGHT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_HEIGHT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_WIDTH", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_WIDTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_PITCH", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_PITCH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_PIXELFORMAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_PIXELFORMAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_MIPMAPCOUNT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_MIPMAPCOUNT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_LINEARSIZE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_LINEARSIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSD_DEPTH", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSD_DEPTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_COMPLEX", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS_COMPLEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_MIPMAP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS_MIPMAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS_TEXTURE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS_TEXTURE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEX", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_POSITIVEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEX", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_NEGATIVEX"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEY", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_POSITIVEY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEY", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_NEGATIVEY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_POSITIVEZ", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_POSITIVEZ"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_CUBEMAP_NEGATIVEZ", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_CUBEMAP_NEGATIVEZ"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDSCAPS2_VOLUME", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDSCAPS2_VOLUME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_ALPHAPIXELS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_ALPHAPIXELS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_ALPHA", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_ALPHA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_FOURCC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_FOURCC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_RGB", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_RGB"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_YUV", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_YUV"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDPF_LUMINANCE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDPF_LUMINANCE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_LENGTH_INT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_LENGTH_INT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_MAGIC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_MAGIC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_SIZE", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_SIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_FLAGS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_FLAGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_HEIGHT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_HEIGHT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_WIDTH", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_WIDTH"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_MIPMAP_COUNT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_MIPMAP_COUNT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_PF_FLAGS", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_PF_FLAGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_PF_FOURCC", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_PF_FOURCC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_RGB_BPP", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_RGB_BPP"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_R_MASK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_R_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_G_MASK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_G_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_B_MASK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_B_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_A_MASK", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_A_MASK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS1", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS2", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_CAPS4", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_CAPS4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DDS_HEADER_OFFSET_DXGI_FORMAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DDS_HEADER_OFFSET_DXGI_FORMAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT1", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT5", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT5"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT3", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_DXT10", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_DXT10"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_D3DFMT_R16G16B16A16F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_D3DFMT_R16G16B16A16F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FOURCC_D3DFMT_R32G32B32A32F", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["FOURCC_D3DFMT_R32G32B32A32F"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DXGI_FORMAT_R16G16B16A16_FLOAT", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DXGI_FORMAT_R16G16B16A16_FLOAT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DXGI_FORMAT_B8G8R8X8_UNORM", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["DXGI_FORMAT_B8G8R8X8_UNORM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorRequestAnimationFrame", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorRequestAnimationFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorCancelAnimationFrame", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorCancelAnimationFrame"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorRequestFullScreen", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorRequestFullScreen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorExitFullScreen", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorExitFullScreen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorGetFullScreenElement", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorGetFullScreenElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VendorWebglPrefixes", function() { return _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_3__["VendorWebglPrefixes"]; });

/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./math */ "./global/math/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "num", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["num"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec2", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["vec2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec3", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["vec3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec4", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["vec4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quat", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["quat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mat3", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["mat3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mat4", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["mat4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noise", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["noise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curve", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["curve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "box3", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["box3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tri3", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["tri3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lne3", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["lne3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pln", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["pln"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ray3", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["ray3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sph3", function() { return _math__WEBPACK_IMPORTED_MODULE_4__["sph3"]; });

/* harmony import */ var _Tw2Library__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2Library */ "./global/Tw2Library.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tw2", function() { return _Tw2Library__WEBPACK_IMPORTED_MODULE_5__["tw2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resMan", function() { return _Tw2Library__WEBPACK_IMPORTED_MODULE_5__["resMan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "device", function() { return _Tw2Library__WEBPACK_IMPORTED_MODULE_5__["device"]; });









/***/ }),

/***/ "./global/math/box3.js":
/*!*****************************!*\
  !*** ./global/math/box3.js ***!
  \*****************************/
/*! exports provided: box3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "box3", function() { return box3; });
/* harmony import */ var _num__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./num */ "./global/math/num.js");
/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony import */ var _sph3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sph3 */ "./global/math/sph3.js");
/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat4 */ "./global/math/mat4.js");




/**
 * 3D Box
 * @typedef {Float32Array} box3
 */

const box3 = {
  bounds: {}
}; // Scratch

let mat4_0 = null,
    box3_0 = null,
    vec3_A = null;
/**
 * Gets a subarray of a box3's min vector
 * @property {box3} a
 * @returns {TypedArray}
 */

box3.$min = function (a) {
  return a.subarray(0, 3);
};
/**
 * Gets a subarray of a box3's max vector
 * @property {box3} a
 * @returns {TypedArray}
 */


box3.$max = function (a) {
  return a.subarray(3, 6);
};
/**
 * Adds a point to a box3
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - source box3
 * @param {vec3} p     - point to add
 * @returns {box3} out - receiving box3
 */


box3.addPoint = function (out, a, p) {
  out[0] = Math.min(a[0], p[0]);
  out[1] = Math.min(a[1], p[1]);
  out[2] = Math.min(a[2], p[2]);
  out[3] = Math.max(a[3], p[0]);
  out[4] = Math.max(a[4], p[1]);
  out[5] = Math.max(a[5], p[2]);
  return out;
};
/**
 * Sets a box3 from a box3 with added points
 *
 * @param {box3} out              - receiving box3
 * @param {box3} a                - source box3
 * @param {Array.<number>} points - points to add
 * @returns {box3} out            - receiving box3
 */


box3.addPoints = function (out, a, points) {
  let minX = a[0],
      minY = a[1],
      minZ = a[2],
      maxX = a[3],
      maxY = a[4],
      maxZ = a[5];

  for (let i = 0; i < points.length; i++) {
    minX = Math.min(minX, points[i][0]);
    minY = Math.min(minY, points[i][1]);
    minZ = Math.min(minZ, points[i][2]);
    maxX = Math.max(maxX, points[i][0]);
    maxY = Math.max(maxY, points[i][1]);
    maxZ = Math.max(maxZ, points[i][2]);
  }

  out[0] = minX;
  out[1] = minY;
  out[2] = minZ;
  out[3] = maxX;
  out[4] = maxY;
  out[5] = maxZ;
  return out;
};
/**
 * Clones a box3
 *
 * @param {box3} a - source box3
 * @returns {box3} - a new box3
 */


box3.clone = function (a) {
  let out = new Float32Array(6);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  return out;
};
/**
 * Checks if a box3 contains another box3
 *
 * @param {box3} a    - source box3
 * @param {box3} b    - box3 to compare
 * @returns {boolean} - true if the source box3 contains the second
 */


box3.contains = function (a, b) {
  return a[0] <= b[0] && b[3] <= a[3] && a[1] <= b[1] && b[4] <= a[4] && a[2] <= b[2] && b[5] <= a[5];
};
/**
 * Checks if the box3 contains min and max bounds
 *
 * @param {box3} a    - source box3
 * @param {vec3} min  - min bounds
 * @param {vec3} max  - max bounds
 * @returns {boolean} - true if the source box3 contains the bounds
 */


box3.containsBounds = function (a, min, max) {
  return a[0] <= min[0] && max[0] <= a[3] && a[1] <= min[1] && max[1] <= a[4] && a[2] <= min[2] && max[2] <= a[5];
};
/**
 * Checks if a box3 contains a point
 *
 * @param {box3} a    - source box3
 * @param {vec3} p    - point to compare
 * @returns {boolean} - true if the source box contains the point
 */


box3.containsPoint = function (a, p) {
  return !(p[0] < a[0] || p[0] > a[3] || p[1] < a[1] || p[1] > a[4] || p[2] < a[2] || p[2] > a[5]);
};
/**
 * Checks if a box3 contains a point's values
 *
 * @param {box3} a    - source box3
 * @param {Number} px - point X
 * @param {Number} py - point Y
 * @param {Number} pz - point Z
 * @returns {boolean} - true if the source box3 contains the point
 */


box3.containsValue = function (a, px, py, pz) {
  return !(px < a[0] || px > a[3] || py < a[1] || py > a[4] || pz < a[2] || pz > a[5]);
};
/**
 * Copies the values from one box3 into another
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - source box3
 * @returns {box3} out - receiving box3
 */


box3.copy = function (out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  return out;
};
/**
 * Copies the min vector of one box3 to another
 *
 * @param {box3} out
 * @param {box3} a
 * @returns {box3}
 */


box3.copyMin = _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].copy;
/**
 * Copies the max vector of one box3 to another
 *
 * @param {box3} out
 * @param {box3} a
 * @returns {box3}
 */

box3.copyMax = function (out, a) {
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
};
/**
 * Creates a box3
 *
 * @returns {box3} - The new box3
 */


box3.create = function () {
  return box3.empty(new Float32Array(6));
};
/**
 * Gets the distance from a box3 to a point
 *
 * @param {box3} a   - source box3
 * @param {vec3} p   - point
 * @returns {number} - distance between the source box3 and point
 */


box3.distanceToPoint = function (a, p) {
  let x = Math.max(a[0], Math.min(a[3], p[0])) - p[0],
      y = Math.max(a[1], Math.min(a[4], p[1])) - p[1],
      z = Math.max(a[2], Math.min(a[5], p[2])) - p[2];
  return Math.sqrt(x * x + y * y + z * z);
};
/**
 * Gets the distance from a box3 to a point's values
 *
 * @param {box3} a    - source box3
 * @param {Number} px - point x
 * @param {Number} py - point y
 * @param {Number} pz - point z
 * @returns {number}  - distance between the source box3 and point
 */


box3.distanceToValues = function (a, px, py, pz) {
  let x = Math.max(a[0], Math.min(a[3], px)) - px,
      y = Math.max(a[1], Math.min(a[4], py)) - py,
      z = Math.max(a[2], Math.min(a[5], pz)) - pz;
  return Math.sqrt(x * x + y * y + z * z);
};
/**
 * Empties a box3
 *
 * @param {box3} a - box3 to empty
 * @returns {box3} - the empty box3
 */


box3.empty = function (a) {
  a[0] = 0;
  a[1] = 0;
  a[2] = 0;
  a[3] = 0;
  a[4] = 0;
  a[5] = 0;
  return a;
};
/**
 * Empties bounds
 *
 * @param {vec3} min - min bounds
 * @param {vec3} max - max bounds
 */


box3.bounds.empty = function (min, max) {
  min[0] = 0;
  min[1] = 0;
  min[2] = 0;
  max[0] = 0;
  max[1] = 0;
  max[2] = 0;
};
/**
 * Checks two box3's for equality
 *
 * @param {box3} a    - box3 to compare
 * @param {box3} b    - box3 to compare
 * @returns {boolean} - true if box3s are equal
 */


box3.equals = function (a, b) {
  let a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  let b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5];
  return Math.abs(a0 - b0) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));
};
/**
 * Checks a box3 and box3 components for equality
 *
 * @param {box3} a    - box3 to compare
 * @param {vec3} min  - min bounds to compare
 * @param {vec3} max  - max bounds to compare
 * @returns {boolean} - true if the box3 and bounds are equal
 */


box3.equalsBounds = function (a, min, max) {
  let a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  let b0 = min[0],
      b1 = min[1],
      b2 = min[2],
      b3 = max[0],
      b4 = max[1],
      b5 = max[2];
  return Math.abs(a0 - b0) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));
};
/**
 * Checks for vec6 exact equality
 *
 * @param {box3} a    - box3 to compare
 * @param {box3} b    - box3 to compare
 * @returns {boolean} - true if both box3s are exactly equal
 */


box3.exactEquals = function (a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
};
/**
 * Checks for exact equality between a box3 and components
 *
 * @param {box3} a    - box3 to compare
 * @param {vec3} min  - min bounds to compare
 * @param {vec3} max  - max bounds to compare
 * @returns {boolean} - true if the box3 and bounds are exactly equal
 */


box3.exactEqualsBounds = function (a, min, max) {
  return a[0] === min[0] && a[1] === min[1] && a[2] === min[2] && a[3] === max[0] && a[4] === max[1] && a[5] === max[2];
};
/**
 * Sets a box3 from the expansion of a box3 and a given scalar
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - source box3
 * @param {number} s   - scalar to expand by
 * @returns {box3} out - receiving box3
 */


box3.expandScalar = function (out, a, s) {
  out[0] = a[0] - s;
  out[1] = a[1] - s;
  out[2] = a[2] - s;
  out[3] = a[3] + s;
  out[4] = a[4] + s;
  out[5] = a[5] + s;
  return out;
};
/**
 * Sets a box3 from the expansion of a box3 and a vector's values
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - source box3
 * @param {number} vx  - vector x
 * @param {number} vy  - vector y
 * @param {number} vz  - vector z
 * @returns {box3} out - receiving box3
 */


box3.expandValues = function (out, a, vx, vy, vz) {
  out[0] = a[0] - vx;
  out[1] = a[1] - vy;
  out[2] = a[2] - vz;
  out[3] = a[3] + vx;
  out[4] = a[4] + vy;
  out[5] = a[5] + vz;
  return out;
};
/**
 * Expands a box3 by a vec3
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - source box3
 * @param {vec3} v     - vector to expand by
 * @returns {box3} out - receiving box3
 */


box3.expandVec3 = function (out, a, v) {
  out[0] = a[0] - v[0];
  out[1] = a[1] - v[1];
  out[2] = a[2] - v[2];
  out[3] = a[3] + v[0];
  out[4] = a[4] + v[1];
  out[5] = a[5] + v[2];
  return out;
};
/**
 * Sets a box3 from an array at an optional offset
 *
 * @param {box3} out         - receiving box3
 * @param {Array} arr        - source array
 * @param {number} [index=0] - optional array index
 * @returns {box3}           - receiving box3
 */


box3.fromArray = function (out, arr, index = 0) {
  out[0] = arr[index];
  out[1] = arr[index + 1];
  out[2] = arr[index + 2];
  out[3] = arr[index + 3];
  out[4] = arr[index + 4];
  out[5] = arr[index + 5];
  return out;
};
/**
 * Sets a box3 from bounds
 *
 * @param {box3} out   - receiving box3
 * @param {vec3} min   - source min bounds
 * @param {vec3} max   - source max bounds
 * @returns {box3} out - receiving box3
 */


box3.fromBounds = function (out, min, max) {
  out[0] = min[0];
  out[1] = min[1];
  out[2] = min[2];
  out[3] = max[0];
  out[4] = max[1];
  out[5] = max[2];
  return out;
};
/**
 * Helper method which creates a box3 from an eve object's bounding box properties
 *
 * @param {box3} out
 * @param {*} obj
 * @param {vec3} obj.minBounds
 * @param {vec3} obj.maxBounds
 * @param {mat4} [m]
 * @returns {box3} out
 */


box3.fromObjectBounds = function (out, obj, m) {
  if (obj.minBounds) {
    box3.fromBounds(out, obj.minBounds, obj.maxBounds);
  } else if (obj._boundingBox) {
    box3.copy(out, obj._boundingBox);
  } else {
    throw new Error("Invalid object bounds");
  }

  if (m) {
    box3.transformMat4(out, out, m);
  }

  return out;
};
/**
 * Helper method which creates a box3 from an eve object's bounding sphere properties
 *
 * @param {box3} out
 * @param {*} obj
 * @param {vec3} obj.boundsSpherePosition
 * @param {Number} obj.boundsSphereRadius
 * @param {mat4} [m]
 * @returns {box3} out
 */


box3.fromObjectPositionRadius = function (out, obj, m) {
  if (obj.boundsSpherePosition) {
    box3.fromPositionRadius(out, obj.boundsSpherePosition, obj.boundsSphereRadius);
  } else if (obj.boundingSphereCenter) {
    box3.fromPositionRadius(out, obj.boundingSphereCenter, obj.boundingSphereRadius);
  } else {
    throw new Error("Invalid object bounds");
  }

  if (m) {
    box3.transformMat4(out, out, m);
  }

  return out;
};
/**
 * Sets a box3 from position and size
 *
 * @param {box3} out      - receiving box3
 * @param {vec3} position - source position
 * @param {vec3} size     - source size
 * @returns {box3} out    - receiving box3
 */


box3.fromPositionSize = function (out, position, size) {
  out[0] = position[0] - size[0] * 0.5;
  out[1] = position[1] - size[1] * 0.5;
  out[2] = position[2] - size[2] * 0.5;
  out[3] = position[0] + size[0] * 0.5;
  out[4] = position[1] + size[1] * 0.5;
  out[5] = position[2] + size[2] * 0.5;
  return out;
};
/**
 * Sets a box3 from an array of points
 *
 * @param {box3} out            - receiving box3
 * @param {Array.<vec3>} points - array of points
 * @returns {box3} out          - receiving box3
 */


box3.fromPoints = function (out, points) {
  box3.empty(out);

  for (let i = 0; i < points.length; i++) {
    out[0] = Math.min(out[0], points[i][0]);
    out[1] = Math.min(out[1], points[i][1]);
    out[2] = Math.min(out[2], points[i][2]);
    out[3] = Math.max(out[3], points[i][0]);
    out[4] = Math.max(out[4], points[i][1]);
    out[5] = Math.max(out[5], points[i][2]);
  }

  return out;
};
/**
 * Sets a box3 from a sphere's components
 *
 * @param {box3} out      - receiving box3
 * @param {vec3} position - position
 * @param {number} radius - radius
 * @returns {box3}        - receiving box3
 */


box3.fromPositionRadius = function (out, position, radius) {
  out[0] = position[0] - radius;
  out[1] = position[1] - radius;
  out[2] = position[2] - radius;
  out[3] = position[0] + radius;
  out[4] = position[1] + radius;
  out[5] = position[2] + radius;
  return out;
};
/**
 * Sets a box3 from a Float32Array(4) sphere
 *
 * @param {box3} out   - receiving box3
 * @param {sph3} sphere - source sphere
 * @returns {box3} out - receiving box3
 */


box3.fromSph3 = function (out, sphere) {
  out[0] = sphere[0] - sphere[3];
  out[1] = sphere[1] - sphere[3];
  out[2] = sphere[2] - sphere[3];
  out[3] = sphere[0] + sphere[3];
  out[4] = sphere[1] + sphere[3];
  out[5] = sphere[2] + sphere[3];
  return out;
};
/**
 * Creates a box3 from values
 * @param {Number} minx
 * @param {Number} miny
 * @param {Number} minz
 * @param {Number} maxx
 * @param {Number} maxy
 * @param {Number} maxz
 * @returns {box3}
 */


box3.fromValues = function (minx, miny, minz, maxx, maxy, maxz) {
  const out = box3.create();
  out[0] = minx;
  out[1] = miny;
  out[2] = minz;
  out[3] = maxx;
  out[4] = maxy;
  out[5] = maxz;
  return out;
};
/**
 * Sets a vec3 from a point clamped to a box3
 *
 * @param {vec3} out     - receiving vec3
 * @param {box3} a       - source box
 * @param {vec3} p       - the point to clamp
 * @returns {vec3} [out] - receiving vec3
 */


box3.getClampedPoint = function (out, a, p) {
  out[0] = Math.max(a[0], Math.min(a[3], p[0]));
  out[1] = Math.max(a[1], Math.min(a[4], p[1]));
  out[2] = Math.max(a[2], Math.min(a[5], p[2]));
  return out;
};
/**
 * Sets a vec3 with the box3's max bounds
 *
 * @param {vec3} out     - receiving vec3
 * @param {box3} a          - source box
 * @returns {vec3} [out] - receiving vec3
 */


box3.getMax = function (out, a) {
  out[0] = a[3];
  out[1] = a[4];
  out[2] = a[5];
  return out;
};
/**
 * Sets a vec3 with the box3's min bounds
 *
 * @param {vec3} out     - receiving vec3
 * @param {box3} a          - source box
 * @returns {vec3} [out] - receiving vec3
 */


box3.getMin = function (out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
};
/**
 * Sets a vec3 with a box3's size
 *
 * @param {vec3} out     - receiving vec3
 * @param {box3} a          - source box
 * @returns {vec3} [out] - receiving vec3
 */


box3.getSize = function (out, a) {
  out[0] = a[3] - a[0];
  out[1] = a[4] - a[1];
  out[2] = a[5] - a[2];
  return out;
};
/**
 * Sets a vec3 with the box3's position
 *
 * @param {vec3} out     - receiving vec3
 * @param {box3} a          - source box
 * @returns {vec3} [out] - receiving vec3
 */


box3.getPosition = function (out, a) {
  out[0] = (a[0] + a[3]) * 0.5;
  out[1] = (a[1] + a[4]) * 0.5;
  out[2] = (a[2] + a[5]) * 0.5;
  return out;
};
/**
 * Gets the effective radius of a bounding box
 * @param {box3} a
 * @returns {number}
 */


box3.radius = function (a) {
  let sX = a[3] - a[0],
      sY = a[4] - a[1],
      sZ = a[5] - a[2];
  return Math.sqrt(sX * sX + sY * sY + sZ * sZ) * 0.5;
};
/**
 * Sets a box3 from the intersect of two box3s
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - first box3
 * @param {box3} b     - second box3
 * @returns {box3} out - receiving box3
 */


box3.intersect = function (out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  out[3] = Math.min(a[3], b[3]);
  out[4] = Math.min(a[4], b[4]);
  out[5] = Math.min(a[5], b[5]);
  return out;
};
/**
 * Sets a box3 from the intersect of a box3 and min and max bounds
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - box3
 * @param {vec3} min   - min bounds
 * @param {vec3} max   - max bounds
 * @returns {box3} out - receiving box3
 */


box3.intersectBounds = function (out, a, min, max) {
  out[0] = Math.max(a[0], min[0]);
  out[1] = Math.max(a[1], min[1]);
  out[2] = Math.max(a[2], min[2]);
  out[3] = Math.min(a[3], max[0]);
  out[4] = Math.min(a[4], max[1]);
  out[5] = Math.min(a[5], max[2]);
  return out;
};
/**
 * Checks for box3 intersection with another box3
 *
 * @param a           - first box3 to compare
 * @param b           - second box3 to compare
 * @returns {boolean} - true if intersection occurred
 */


box3.intersects = function (a, b) {
  return !(b[3] < a[0] || b[0] > a[3] || b[4] < a[1] || b[1] > a[4] || b[5] < a[2] || b[2] > a[5]);
};
/**
 * Checks for box3 intersection with min and max bounds
 *
 * @param {box3} a    - box3 to compare
 * @param {vec3} min  - min bounds to compare
 * @param {vec3} max  - max bounds to compare
 * @returns {boolean} - true if intersection occurred
 */


box3.intersectsBounds = function (a, min, max) {
  return !(max[0] < a[0] || min[0] > a[3] || max[1] < a[1] || min[1] > a[4] || max[2] < a[2] || min[2] > a[5]);
};
/**
 * Checks for box3 intersection with a plane normal and constant
 *
 * @param {box3} a          - source box3
 * @param {vec3} normal     - plane normal vec3
 * @param {number} constant - plane constant
 * @returns {boolean}       - true if intersection occurs
 */


box3.intersectsNormalConstant = function (a, normal, constant) {
  let tMin, tMax;

  if (normal[0] > 0) {
    tMin = normal[0] * a[0];
    tMax = normal[0] * a[3];
  } else {
    tMin = normal[0] * a[3];
    tMax = normal[0] * a[0];
  }

  if (normal[1] > 0) {
    tMin = normal[1] * a[1];
    tMax = normal[1] * a[4];
  } else {
    tMin = normal[1] * a[4];
    tMax = normal[1] * a[1];
  }

  if (normal[2] > 0) {
    tMin += normal[2] * a[2];
    tMax += normal[2] * a[5];
  } else {
    tMin += normal[2] * a[5];
    tMax += normal[2] * a[2];
  }

  return tMin <= constant && tMax >= constant;
};
/**
 * Checks for box3 intersection with a Float32Array(4) plane
 *
 * @param {box3} a                   - box3 to compare
 * @param {(pln|Float32Array)} p     - plane to compare
 * @returns {boolean}                - true if intersection occurs
 */


box3.intersectsPln = function (a, p) {
  // const x = p.subarray(0, 3);
  return box3.intersectsNormalConstant(a, p, p[3]);
};
/**
 * Checks for box3 intersection with a point
 *
 * @param {box3} a    - box3 to compare
 * @param {vec3} p    - point to compare
 * @returns {boolean} - true if intersection occurs
 */


box3.intersectsPoint = function (a, p) {
  return p[0] >= a[0] && p[0] <= a[3] && p[1] >= a[1] && p[1] <= a[4] && p[2] >= a[2] && p[2] <= a[5];
};
/**
 * Checks for box3 intersection with a point's values
 *
 * @param {box3} a    - box3 to compare
 * @param {Number} px - point x to compare
 * @param {Number} py - point y to compare
 * @param {Number} pz - point z to compare
 * @returns {boolean} - true if intersection occurs
 */


box3.intersectsValues = function (a, px, py, pz) {
  return px >= a[0] && px <= a[3] && py >= a[1] && py <= a[4] && pz >= a[2] && pz <= a[5];
};
/**
 * Checks for box3 intersection with a sphere's components
 *
 * @param {box3} a        - box3 to compare
 * @param {vec3} position - sphere position to compare
 * @param {number} radius - sphere radius to compare
 * @returns {boolean}     - true if intersection occurs
 */


box3.intersectsPositionRadius = function (a, position, radius) {
  let x = Math.max(a[0], Math.min(a[3], position[0])) - position[0],
      y = Math.max(a[1], Math.min(a[4], position[1])) - position[1],
      z = Math.max(a[2], Math.min(a[5], position[2])) - position[2];
  return x * x + y * y + z * z <= radius * radius;
};
/**
 * Checks for box3 intersection with a Float32Array(4) sphere
 *
 * @param {box3} a      - box3 to compare
 * @param {sph3} sphere - sph3 to compare
 * @returns {boolean}   - true if intersection occurs
 */


box3.intersectsSph3 = function (a, sphere) {
  let x = Math.max(a[0], Math.min(a[3], sphere[0])) - sphere[0],
      y = Math.max(a[1], Math.min(a[4], sphere[1])) - sphere[1],
      z = Math.max(a[2], Math.min(a[5], sphere[2])) - sphere[2];
  return x * x + y * y + z * z <= sphere[3] * sphere[3];
};
/**
 * Checks if a box3 is empty
 *
 * @param {box3} a    - source box3
 * @returns {boolean} - true if empty
 */


box3.isEmpty = function (a) {
  if (a[0] + a[1] + a[2] + a[0] + a[1] + a[2] === 0) return true;
  return a[3] < a[0] || a[4] < a[1] || a[5] < a[2];
};
/**
 * Checks if bounds are empty
 *
 * @param {vec3} min
 * @param {vec3} max
 * @returns {boolean}
 */


box3.bounds.isEmpty = function (min, max) {
  if (min[0] + min[1] + min[2] + max[0] + max[1] + max[2] === 0) return true;
  return max[0] < min[0] || max[1] < min[1] || max[2] < min[2];
};
/**
 * Sets a box3 from values
 *
 * @param {box3} out  - receiving box3
 * @param {Number} aX
 * @param {Number} aY
 * @param {Number} aZ
 * @param {Number} bX
 * @param {Number} bY
 * @param {Number} bZ
 * @returns {box3}
 */


box3.set = function (out, aX, aY, aZ, bX, bY, bZ) {
  out[0] = aX;
  out[1] = aY;
  out[2] = aZ;
  out[3] = bX;
  out[4] = bY;
  out[5] = bZ;
  return out;
};
/**
 * Gets the distance from a box3 to a point
 *
 * @param {box3} a   - source box3
 * @param {vec3} p   - point
 * @returns {number} - distance
 */


box3.squaredDistanceToPoint = function (a, p) {
  let x = Math.max(a[0], Math.min(a[3], p[0])) - p[0],
      y = Math.max(a[1], Math.min(a[4], p[1])) - p[1],
      z = Math.max(a[2], Math.min(a[5], p[2])) - p[2];
  return x * x + y * y + z * z;
};
/**
 * Gets the surface area of a box3
 *
 * @param {box3} a   - source box3
 * @returns {number} - surface area
 */


box3.surfaceArea = function (a) {
  let aa = a[3] - a[0],
      h = a[4] - a[1],
      d = a[5] - a[2];
  return 2 * (aa * (h + d) + h * d);
};
/**
 * Converts the box3 into an array
 *
 * @param {box3} a            - receiving box3
 * @param {Array} arr         - source array
 * @param {number} [offset=0] - optional offset
 * @returns {box3} a          - receiving box3
 */


box3.toArray = function (a, arr, offset = 0) {
  arr[offset] = a[0];
  arr[offset + 1] = a[1];
  arr[offset + 2] = a[2];
  arr[offset + 3] = a[3];
  arr[offset + 4] = a[4];
  arr[offset + 5] = a[5];
  return a;
};
/**
 * Converts a box3 to bounds
 *
 * @param {vec3} outMin - receiving vector for min bounds
 * @param {vec3} outMax - receiving vector for max bounds
 * @param {box3} a      - source box3
 */


box3.toBounds = function (a, outMin, outMax) {
  outMin[0] = a[0];
  outMin[1] = a[1];
  outMin[2] = a[2];
  outMax[0] = a[3];
  outMax[1] = a[4];
  outMax[2] = a[5];
  return a;
};
/**
 *
 *
 * @param {box3} a
 * @param {*} obj
 * @param {vec3} obj.minBounds
 * @param {vec3} obj.maxBounds
 * @param {mat4} [m]
 */


box3.toObjectBounds = function (a, obj, m) {
  const has = obj.minBounds || obj._boundingBox;

  if (!has) {
    console.dir(obj);
    throw new Error("Invalid object bounds");
  }

  if (m) {
    if (!box3_0) box3_0 = box3.create();
    a = box3.transformMat4(box3_0, a, m);
  }

  if (obj.minBounds) {
    box3.toBounds(a, obj.minBounds, obj.maxBounds);
  } else {
    box3.copy(obj._boundingBox, a);
  }
};
/**
 *
 *
 * @param {box3} a
 * @param {*} obj
 * @param {vec3} obj.boundsSpherePosition
 * @param {Number} obj.boundsSphereRadius
 * @param {mat4} [m]
 */


box3.toObjectPositionRadius = function (a, obj, m) {
  if (m) {
    if (!box3_0) box3_0 = box3.create();
    a = box3.transformMat4(box3_0, a, m);
  }

  if (obj.boundsSpherePosition) {
    obj.boundsSphereRadius = box3.toPositionRadius(a, obj.boundsSpherePosition);
    return;
  } else if (obj.boundingSphereCenter) {
    obj.boundingSphereRadius = box3.toPositionRadius(a, obj.boundingSphereCenter);
    return;
  }

  throw new Error("Invalid object bounds");
};
/**
 * Converts a box3 to an array of points
 * @param {box3} a
 * @param {Array} [points]
 * @returns {Array<Array>} points
 */


box3.toPoints = function (a, points = []) {
  const ax = a[0],
        ay = a[1],
        az = a[2],
        bx = a[3],
        by = a[4],
        bz = a[5],
        x = bx + Math.abs(ax),
        y = by + Math.abs(ay),
        z = bz + Math.abs(az);
  points.push([bx + 0, by + 0, bz + 0]);
  points.push([bx - x, by + 0, bz + 0]);
  points.push([bx + 0, by + 0, bz - z]);
  points.push([bx - x, by + 0, bz - z]);
  points.push([bx + 0, by - y, bz + 0]);
  points.push([bx - x, by - y, bz + 0]);
  points.push([bx + 0, by - y, bz - z]);
  points.push([bx - x, by - y, bz - z]);
  return points;
};
/**
 * Converts a box3 to position radius
 * @param a
 * @param outCenter
 * @returns {number}
 */


box3.toPositionRadius = function (a, outCenter) {
  let sX = a[3] - a[0],
      sY = a[4] - a[1],
      sZ = a[5] - a[2];
  outCenter[0] = (a[0] + a[3]) * 0.5;
  outCenter[1] = (a[1] + a[4]) * 0.5;
  outCenter[2] = (a[2] + a[5]) * 0.5;
  return Math.sqrt(sX * sX + sY * sY + sZ * sZ) * 0.5;
};
/**
 * Converts bounds to position radius
 * @param {vec3} minBounds
 * @param {vec3} maxBounds
 * @param {vec3} outCenter
 * @returns {number}
 */


box3.bounds.toPositionRadius = function (minBounds, maxBounds, outCenter) {
  let sX = maxBounds[0] - minBounds[0],
      sY = maxBounds[1] - minBounds[1],
      sZ = maxBounds[2] - minBounds[2];
  outCenter[0] = (minBounds[0] + maxBounds[0]) * 0.5;
  outCenter[1] = (minBounds[1] + maxBounds[1]) * 0.5;
  outCenter[2] = (minBounds[2] + maxBounds[2]) * 0.5;
  return Math.sqrt(sX * sX + sY * sY + sZ * sZ) * 0.5;
};
/**
 * Sets a receiving box3 from the translation of a box3 and a vec3
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - source box3
 * @param {vec3} v     - vec3 to translate by
 * @returns {box3} out - receiving box3
 */


box3.translate = function (out, a, v) {
  out[0] = a[0] + v[0];
  out[1] = a[1] + v[1];
  out[2] = a[2] + v[2];
  out[3] = a[3] + v[0];
  out[4] = a[4] + v[1];
  out[5] = a[5] + v[2];
  return out;
};
/**
 * Sets a receiving box3 from the transformation of a box3 with a mat4
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - source box3
 * @param {mat4} m     - mat4 to transform with
 * @returns {box3} out - receiving box3
 */


box3.transformMat4 = function (out, a, m) {
  if (!vec3_A) {
    vec3_A = [_vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(), _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(), _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(), _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(), _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(), _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(), _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create(), _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].create()];
  }

  if (box3.isEmpty(a)) {
    return box3.empty(out);
  }

  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[0], [a[0], a[1], a[2]], m);
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[1], [a[0], a[1], a[5]], m);
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[2], [a[0], a[4], a[2]], m);
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[3], [a[0], a[4], a[5]], m);
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[4], [a[3], a[1], a[2]], m);
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[5], [a[3], a[1], a[5]], m);
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[6], [a[3], a[4], a[2]], m);
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].transformMat4(vec3_A[7], [a[3], a[4], a[5]], m);
  return box3.fromPoints(out, vec3_A);
};
/**
 * Sets a box3 from the union of two box3s
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - first box3
 * @param {box3} b     - second box3
 * @returns {box3} out - receiving box3
 */


box3.union = function (out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  out[3] = Math.max(a[3], b[3]);
  out[4] = Math.max(a[4], b[4]);
  out[5] = Math.max(a[5], b[5]);
  return out;
};
/**
 * Sets a box3 from the union of a box3 and min and max bounds
 *
 * @param {box3} out   - receiving box3
 * @param {box3} a     - box3
 * @param {vec3} min   - min bounds
 * @param {vec3} max   - max bounds
 * @returns {box3} out - receiving box3
 */


box3.unionBounds = function (out, a, min, max) {
  out[0] = Math.min(a[0], min[0]);
  out[1] = Math.min(a[1], min[1]);
  out[2] = Math.min(a[2], min[2]);
  out[3] = Math.max(a[3], max[0]);
  out[4] = Math.max(a[4], max[1]);
  out[5] = Math.max(a[5], max[2]);
  return out;
};
/**
 * Sets bounds from the union of two sets of bounds
 *
 * @param {vec3} outMin
 * @param {vec3} outMax
 * @param {vec3} aMin
 * @param {vec3} aMax
 * @param {vec3} bMin
 * @param {vec3} bMax
 */


box3.bounds.union = function (outMin, outMax, aMin, aMax, bMin, bMax) {
  outMin[0] = Math.min(aMin[0], bMin[0]);
  outMin[1] = Math.min(aMin[1], bMin[1]);
  outMin[2] = Math.min(aMin[2], bMin[2]);
  outMax[0] = Math.max(aMax[0], bMax[0]);
  outMax[1] = Math.max(aMax[1], bMax[1]);
  outMax[2] = Math.max(aMax[2], bMax[2]);
};

/***/ }),

/***/ "./global/math/curve.js":
/*!******************************!*\
  !*** ./global/math/curve.js ***!
  \******************************/
/*! exports provided: curve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "curve", function() { return curve; });
const curve = {};
/**
 * Evaluates a curve
 *
 * @param {{}|Tw2GeometryCurve} curve
 * @param {Array} curve.knots
 * @param {number} curve.degree
 * @param {Array} curve.controls
 * @param {number} curve.dimension
 * @param {number} time
 * @param {*} value
 * @param {Boolean} cycle
 * @param {number} duration
 */

curve.evaluate = function (curve, time, value, cycle, duration) {
  let count = curve.knots.length;
  let knot = count - 1;
  let t = 0;

  for (let i = 0; i < curve.knots.length; ++i) {
    if (curve.knots[i] > time) {
      knot = i;
      break;
    }
  }

  if (curve.degree === 0) {
    for (let i = 0; i < curve.dimension; ++i) {
      value[i] = curve.controls[knot * curve.dimension + i];
    }
  } else if (curve.degree === 1) {
    let knot0 = cycle ? (knot + count - 1) % count : knot === 0 ? 0 : knot - 1;
    let dt = curve.knots[knot] - curve.knots[knot0];

    if (dt < 0) {
      dt += duration;
    }

    if (dt > 0) {
      t = (time - curve.knots[curve.knots.length - 1]) / dt;
    }

    for (let i = 0; i < curve.dimension; ++i) {
      value[i] = curve.controls[knot0 * curve.dimension + i] * (1 - t) + curve.controls[knot * curve.dimension + i] * t;
    }
  } else {
    let k_2 = cycle ? (knot + count - 2) % count : knot === 0 ? 0 : knot - 2;
    let k_1 = cycle ? (knot + count - 1) % count : knot === 0 ? 0 : knot - 1;
    let p1 = k_2 * curve.dimension;
    let p2 = k_1 * curve.dimension;
    let p3 = knot * curve.dimension;
    let ti_2 = curve.knots[k_2];
    let ti_1 = curve.knots[k_1];
    let ti = curve.knots[knot];
    let ti1 = curve.knots[(knot + 1) % count];

    if (ti_2 > ti) {
      ti += duration;
      ti1 += duration;
      time += duration;
    }

    if (ti_1 > ti) {
      ti += duration;
      ti1 += duration;
      time += duration;
    }

    if (ti1 < ti) {
      ti1 += duration;
    }

    let tmti_1 = time - ti_1;
    let tmti_2 = time - ti_2;
    let dL0 = ti - ti_1;
    let dL1_1 = ti - ti_2;
    let dL1_2 = ti1 - ti_1;
    let L0 = tmti_1 / dL0;
    let L1_1 = tmti_2 / dL1_1;
    let L1_2 = tmti_1 / dL1_2;
    let ci_2 = L1_1 + L0 - L0 * L1_1;
    let ci = L0 * L1_2;
    let ci_1 = ci_2 - ci;
    ci_2 = 1 - ci_2;

    for (let i = 0; i < curve.dimension; ++i) {
      value[i] = ci_2 * curve.controls[p1 + i] + ci_1 * curve.controls[p2 + i] + ci * curve.controls[p3 + i];
    }
  }
};
/**
 * ag_horner1
 *
 * @param P
 * @param deg
 * @param s
 * @returns {*}
 */


curve.ag_horner1 = function (P, deg, s) {
  let h = P[deg];

  while (--deg >= 0) h = s * h + P[deg];

  return h;
};
/**
 * ag_zeroin2
 *
 * @param a
 * @param b
 * @param fa
 * @param fb
 * @param tol
 * @param pars
 * @returns {*}
 */


curve.ag_zeroin2 = function (a, b, fa, fb, tol, pars) {
  let test;
  let c, d, e, fc, del, m, machtol, p, q, r, s;
  /* initialization */

  machtol = 1.192092896e-07;
  let label1 = true;
  /* start iteration */

  while (true) {
    if (label1) {
      c = a;
      fc = fa;
      d = b - a;
      e = d;
    }

    if (Math.abs(fc) < Math.abs(fb)) {
      a = b;
      b = c;
      c = a;
      fa = fb;
      fb = fc;
      fc = fa;
    }

    label1 = false;
    /* convergence test */

    del = 2.0 * machtol * Math.abs(b) + 0.5 * tol;
    m = 0.5 * (c - b);
    test = Math.abs(m) > del && fb !== 0.0;

    if (test) {
      if (Math.abs(e) < del || Math.abs(fa) <= Math.abs(fb)) {
        /* bisection */
        d = m;
        e = d;
      } else {
        s = fb / fa;

        if (a === c) {
          /* linear interpolation */
          p = 2.0 * m * s;
          q = 1.0 - s;
        } else {
          /* inverse quadratic interpolation */
          q = fa / fc;
          r = fb / fc;
          p = s * (2.0 * m * q * (q - r) - (b - a) * (r - 1.0));
          q = (q - 1.0) * (r - 1.0) * (s - 1.0);
        }
        /* adjust the sign */


        if (p > 0.0) q = -q;else p = -p;
        /* check if interpolation is acceptable */

        s = e;
        e = d;

        if (2.0 * p < 3.0 * m * q - Math.abs(del * q) && p < Math.abs(0.5 * s * q)) {
          d = p / q;
        } else {
          d = m;
          e = d;
        }
      }
      /* complete step */


      a = b;
      fa = fb;
      if (Math.abs(d) > del) b += d;else if (m > 0.0) b += del;else b -= del;
      fb = curve.ag_horner1(pars.p, pars.deg, b);

      if (fb * (fc / Math.abs(fc)) > 0.0) {
        label1 = true;
      }
    } else {
      break;
    }
  }

  return b;
};
/**
 * ag_zeroin
 *
 * @param a
 * @param b
 * @param tol
 * @param pars
 * @returns {*}
 */


curve.ag_zeroin = function (a, b, tol, pars) {
  let fa, fb;
  fa = curve.ag_horner1(pars.p, pars.deg, a);
  if (Math.abs(fa) < 1.192092896e-07) return a;
  fb = curve.ag_horner1(pars.p, pars.deg, b);
  if (Math.abs(fb) < 1.192092896e-07) return b;
  return curve.ag_zeroin2(a, b, fa, fb, tol, pars);
};
/**
 * polyZeroes
 *
 * @param Poly
 * @param deg
 * @param a
 * @param a_closed
 * @param b
 * @param b_closed
 * @param Roots
 * @returns {*}
 */


curve.polyZeroes = function (Poly, deg, a, a_closed, b, b_closed, Roots) {
  let i, left_ok, right_ok, nr, ndr, skip;
  let e,
      f,
      s,
      pe,
      ps,
      tol,
      p,
      p_x = new Array(22),
      d,
      d_x = new Array(22),
      dr,
      dr_x = new Array(22);
  let ply = {
    p: [],
    deg: 0
  };
  e = pe = 0.0;
  f = 0.0;

  for (i = 0; i < deg + 1; ++i) {
    f += Math.abs(Poly[i]);
  }

  tol = (Math.abs(a) + Math.abs(b)) * (deg + 1) * 1.192092896e-07;
  /* Zero polynomial to tolerance? */

  if (f <= tol) return -1;
  p = p_x;
  d = d_x;
  dr = dr_x;

  for (i = 0; i < deg + 1; ++i) {
    p[i] = 1.0 / f * Poly[i];
  }
  /* determine true degree */


  while (Math.abs(p[deg]) < tol) deg--;
  /* Identically zero poly already caught so constant fn !== 0 */


  nr = 0;
  if (deg === 0) return nr;
  /* check for linear case */

  if (deg === 1) {
    Roots[0] = -p[0] / p[1];
    left_ok = a_closed ? a < Roots[0] + tol : a < Roots[0] - tol;
    right_ok = b_closed ? b > Roots[0] - tol : b > Roots[0] + tol;
    nr = left_ok && right_ok ? 1 : 0;

    if (nr) {
      if (a_closed && Roots[0] < a) Roots[0] = a;else if (b_closed && Roots[0] > b) Roots[0] = b;
    }

    return nr;
  }
  /* handle non-linear case */
  else {
      ply.p = p;
      ply.deg = deg;
      /* compute derivative */

      for (i = 1; i <= deg; i++) d[i - 1] = i * p[i];
      /* find roots of derivative */


      ndr = curve.polyZeroes(d, deg - 1, a, 0, b, 0, dr);
      if (ndr.length === 0) return 0;
      /* find roots between roots of the derivative */

      for (i = skip = 0; i <= ndr; i++) {
        if (nr > deg) return nr;

        if (i === 0) {
          s = a;
          ps = curve.ag_horner1(p, deg, s);
          if (Math.abs(ps) <= tol && a_closed) Roots[nr++] = a;
        } else {
          s = e;
          ps = pe;
        }

        if (i === ndr) {
          e = b;
          skip = 0;
        } else e = dr[i];

        pe = curve.ag_horner1(p, deg, e);
        if (skip) skip = 0;else {
          if (Math.abs(pe) < tol) {
            if (i !== ndr || b_closed) {
              Roots[nr++] = e;
              skip = 1;
            }
          } else if (ps < 0 && pe > 0 || ps > 0 && pe < 0) {
            Roots[nr++] = curve.ag_zeroin(s, e, 0.0, ply);

            if (nr > 1 && Roots[nr - 2] >= Roots[nr - 1] - tol) {
              Roots[nr - 2] = (Roots[nr - 2] + Roots[nr - 1]) * 0.5;
              nr--;
            }
          }
        }
      }
    }

  return nr;
};

/***/ }),

/***/ "./global/math/index.js":
/*!******************************!*\
  !*** ./global/math/index.js ***!
  \******************************/
/*! exports provided: num, vec2, vec3, vec4, quat, mat3, mat4, noise, curve, box3, tri3, lne3, pln, ray3, sph3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _num__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./num */ "./global/math/num.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "num", function() { return _num__WEBPACK_IMPORTED_MODULE_0__["num"]; });

/* harmony import */ var _vec2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec2 */ "./global/math/vec2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec2", function() { return _vec2__WEBPACK_IMPORTED_MODULE_1__["vec2"]; });

/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec3", function() { return _vec3__WEBPACK_IMPORTED_MODULE_2__["vec3"]; });

/* harmony import */ var _vec4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vec4 */ "./global/math/vec4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec4", function() { return _vec4__WEBPACK_IMPORTED_MODULE_3__["vec4"]; });

/* harmony import */ var _quat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./quat */ "./global/math/quat.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quat", function() { return _quat__WEBPACK_IMPORTED_MODULE_4__["quat"]; });

/* harmony import */ var _mat3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mat3 */ "./global/math/mat3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mat3", function() { return _mat3__WEBPACK_IMPORTED_MODULE_5__["mat3"]; });

/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mat4 */ "./global/math/mat4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mat4", function() { return _mat4__WEBPACK_IMPORTED_MODULE_6__["mat4"]; });

/* harmony import */ var _noise__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./noise */ "./global/math/noise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "noise", function() { return _noise__WEBPACK_IMPORTED_MODULE_7__["noise"]; });

/* harmony import */ var _curve__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./curve */ "./global/math/curve.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "curve", function() { return _curve__WEBPACK_IMPORTED_MODULE_8__["curve"]; });

/* harmony import */ var _box3__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./box3 */ "./global/math/box3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "box3", function() { return _box3__WEBPACK_IMPORTED_MODULE_9__["box3"]; });

/* harmony import */ var _tri3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tri3 */ "./global/math/tri3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tri3", function() { return _tri3__WEBPACK_IMPORTED_MODULE_10__["tri3"]; });

/* harmony import */ var _lne3__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lne3 */ "./global/math/lne3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lne3", function() { return _lne3__WEBPACK_IMPORTED_MODULE_11__["lne3"]; });

/* harmony import */ var _pln__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pln */ "./global/math/pln.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pln", function() { return _pln__WEBPACK_IMPORTED_MODULE_12__["pln"]; });

/* harmony import */ var _ray3__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ray3 */ "./global/math/ray3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ray3", function() { return _ray3__WEBPACK_IMPORTED_MODULE_13__["ray3"]; });

/* harmony import */ var _sph3__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sph3 */ "./global/math/sph3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sph3", function() { return _sph3__WEBPACK_IMPORTED_MODULE_14__["sph3"]; });
















/**
 * TypedArray
 * @typedef {Float64Array|Float32Array|Uint32Array|Uint16Array|Uint8Array|Uint8ClampedArray|Int32Array|Int16Array|Int8Array} TypedArray
 */

/***/ }),

/***/ "./global/math/lne3.js":
/*!*****************************!*\
  !*** ./global/math/lne3.js ***!
  \*****************************/
/*! exports provided: lne3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lne3", function() { return lne3; });
/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony import */ var _box3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./box3 */ "./global/math/box3.js");


/**
 * 3D Line
 * @typedef {Float32Array} lne3
 */

const lne3 = {};
/**
 * Line3 End methods
 *
 * @param {lne3} a
 * @returns {TypedArray}
 */

lne3.$end = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].$max;
/**
 * Line3 start helper methods
 *
 * @param {lne3} a
 * @returns {TypedArray}
 */

lne3.$start = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].$min;
/**
 * Clones a lne3
 *
 * @param {lne3} a
 * @returns {lne3}
 */

lne3.clone = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].clone;
/**
 * Returns a point parameter based on the closest point as projected on the line segment.
 * If clamp to line is true, then the returned value will be between 0 and 1
 *
 * @author three.js authors (converted)
 * @param {vec3} a              - source lne3
 * @param {vec3} point          - point to compare
 * @param {boolean} clampToLine - optional setting to clamp the result to the lne3
 * @returns {number}            - closest point parameter
 */

lne3.closestPointToPointParameter = function () {
  let vec3_0, vec3_1;
  return function (a, point, clampToLine) {
    if (!vec3_0) {
      vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    }

    let startP = vec3_0;
    let startEnd = vec3_1;
    startP[0] = point[0] - a[0];
    startP[1] = point[1] - a[1];
    startP[2] = point[2] - a[2];
    startEnd[0] = a[3] - a[0];
    startEnd[1] = a[4] - a[1];
    startEnd[2] = a[5] - a[2];
    let startEnd2 = startEnd[0] * startEnd[0] + startEnd[1] * startEnd[1] + startEnd[2] * startEnd[2];
    let startEnd_startP = startEnd[0] * startP[0] + startEnd[1] * startP[1] + startEnd[2] * startP[2];
    let t = startEnd_startP / startEnd2;
    if (clampToLine) t = Math.max(0, Math.min(1, t));
    return t;
  };
}();
/**
 * Copies the values from one lne3 into another
 *
 * @param {lne3} out
 * @param {lne3} a
 * @returns {lne3} out
 */


lne3.copy = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].copy;
/**
 * Copies the start component from one lne3 into another
 *
 * @param {lne3} out
 * @param {lne3} a
 * @returns {lne3} out
 */

lne3.copyStart = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy;
/**
 * Copies the end component from one lne3 into another
 *
 * @param {lne3} out
 * @param {lne3} a
 * @returns {lne3} out
 */

lne3.copyEnd = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].copyMax;
/**
 * Creates a lne3
 *
 * @returns {lne3}
 */

lne3.create = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].create;
/**
 * Checks two lne3's for equality
 *
 * @param {lne3} a
 * @param {lne3} b
 * @returns {boolean}
 */

lne3.equals = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].equals;
/**
 * Checks a lne3 against it's components for equality
 *
 * @param {lne3} a
 * @param {vec3} min
 * @param {vec3} max
 * @returns {boolean}
 */

lne3.equalsStartEnd = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].equalsBounds;
/**
 * Checks for box3 exact equality
 *
 * @param {lne3} a
 * @param {lne3} b
 * @returns {boolean}
 */

lne3.exactEquals = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].equals;
/**
 * Checks for exact equality between a lne3 and components
 *
 * @param {lne3} a
 * @param {vec3} min
 * @param {vec3} max
 * @returns {boolean}
 */

lne3.exactEqualsStartEnd = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].exactEqualsBounds;
/**
 * Sets a lne3 from an array at an optional offset
 *
 * @param {lne3} out
 * @param {Array} arr
 * @param {number} [index=0]
 * @returns {lne3}
 */

lne3.fromArray = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].fromArray;
/**
 * Sets a line from start and end components
 *
 * @param {lne3} out
 * @param {vec3} start
 * @param {vec3} end
 * @returns {lne3} out
 */

lne3.fromStartEnd = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].fromBounds;
/**
 * Returns a vector at a certain position along a lne3
 *
 * @author three.js authors (converted)
 * @param {vec3} out     - receiving vec3
 * @param {lne3} a       - source lne3
 * @param {number} t     - Float representing the start (0) and end (1) of the line
 * @returns {vec3} [out] - receiving vec3
 */

lne3.get = function (out, a, t) {
  if (t < 0 || t > 1) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    throw new Error("Normalization error");
  } else {
    out[0] = (a[3] - a[0]) * t + a[0];
    out[1] = (a[4] - a[1]) * t + a[1];
    out[2] = (a[5] - a[2]) * t + a[2];
  }

  return out;
};
/**
 * Sets a vec3 from the lne3's center
 *
 * @param {vec3} out   - receiving vec3
 * @param {lne3} a     - source lne3
 * @returns {vec3} out - receiving vec3
 */


lne3.getCenter = function (out, a) {
  out[0] = (a[0] + a[3]) * 0.5;
  out[1] = (a[1] + a[4]) * 0.5;
  out[2] = (a[2] + a[5]) * 0.5;
  return out;
};
/**
 * Returns the closets point on a lne3 to a given point.
 * - If clamp to line is true, then the returned value will be clamped to the line segment.
 *
 * @author three.js authors (converted)
 * @param {vec3} out            - receiving vec3
 * @param {lne3} a              - source lne3
 * @param {vec3} point          - point to compare
 * @param {boolean} clampToLine - optional setting to clamp the result to a line segment
 * @returns {vec3} out          - receiving vec3
 */


lne3.getClosestPointToPoint = function (out, a, point, clampToLine) {
  // const x = a.subarray(0, 3);
  return lne3.get(out, a, lne3.closestPointToPointParameter(a, point, clampToLine));
};
/**
 * Gets the end component of a lne3
 *
 * @param {vec3} out
 * @param {lne3} a
 * @returns {vec3} out
 */


lne3.getEnd = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].getMax;
/**
 * Gets a lne3's delta
 *
 * @param {vec3} out   - receiving vec3
 * @param {lne3} a       - source lne3
 * @returns {vec3} out - receiving vec3
 */

lne3.getDelta = function (out, a) {
  out[0] = a[3] - a[0];
  out[1] = a[4] - a[1];
  out[2] = a[5] - a[2];
  return out;
};
/**
 * Gets the start component of a lne3
 *
 * @param {vec3} out
 * @param {lne3} a
 * @returns {vec3} out
 */


lne3.getStart = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].getMin;
/**
 * Checks for intersection with a plane's components
 *
 * @param {lne3} a    - receiving lne3
 * @param {vec3} n    - plane normal
 * @param {number} c  - plane constant
 * @returns {boolean}
 */

lne3.intersectsNormalConstant = function (a, n, c) {
  let startSign = n[0] * a[0] + n[1] * a[1] + n[2] * a[2] + c;
  let endSign = n[0] * a[3] + n[1] * a[4] + n[2] * a[5] + c;
  return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;
};
/**
 * Gets the length of the line
 *
 * @param {lne3} a  - source lne3
 * @returns {number} - distance
 */


lne3.length = function (a) {
  let x = a[0] - a[3],
      y = a[1] - a[4],
      z = a[2] - a[5];
  return Math.sqrt(x * x + y * y + z * z);
};
/**
 * Sets a lne3 from values
 *
 * @param out - Receiving lne3
 * @param sX
 * @param sY
 * @param sZ
 * @param eX
 * @param eY
 * @param eZ
 * @returns {lne3}
 */


lne3.set = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].set;
/**
 * Gets the squared length of the lne3
 *
 * @param {lne3} a  - source line
 * @returns {number} - squared distance
 */

lne3.squaredLength = function (a) {
  let x = a[0] - a[3],
      y = a[1] - a[4],
      z = a[2] - a[5];
  return x * x + y * y + z * z;
};
/**
 * Sets an array from the lne3
 *
 * @param {lne3} a
 * @param {Array} arr
 * @param {number} [index]
 * @returns {lne3} a
 */


lne3.toArray = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].toArray;
/**
 * Sets a start and end vector from a lne3
 *
 * @param {lne3} a
 * @param {vec3} start
 * @param {vec3} end
 * @returns {lne3} a
 */

lne3.toStartEnd = _box3__WEBPACK_IMPORTED_MODULE_1__["box3"].toBounds;
/**
 * Transforms a lne3 by a mat4
 *
 * @param {lne3} out
 * @param {lne3} a
 * @param {mat4} m
 * @returns {lne3} out
 */

lne3.transformMat4 = function (out, a, m) {
  let ax = a[0],
      ay = a[1],
      az = a[2],
      bx = a[3],
      by = a[4],
      bz = a[5];
  out[0] = m[0] * ax + m[4] * ay + m[8] * az + m[12];
  out[1] = m[1] * ax + m[5] * ay + m[9] * az + m[13];
  out[2] = m[2] * ax + m[6] * ay + m[10] * az + m[14];
  out[3] = m[0] * bx + m[4] * by + m[8] * bz + m[12];
  out[4] = m[1] * bx + m[5] * by + m[9] * bz + m[13];
  out[5] = m[2] * bx + m[6] * by + m[10] * bz + m[14];
  return out;
};
/**
 * Translates a lne3
 *
 * @param {lne3} out
 * @param {lne3} a
 * @param {vec3} v
 * @returns {lne3} out
 */


lne3.translate = function (out, a, v) {
  out[0] = a[0] + v[0];
  out[1] = a[1] + v[1];
  out[2] = a[2] + v[2];
  out[3] = a[3] + v[0];
  out[4] = a[4] + v[1];
  out[5] = a[5] + v[2];
  return out;
};

/***/ }),

/***/ "./global/math/mat3.js":
/*!*****************************!*\
  !*** ./global/math/mat3.js ***!
  \*****************************/
/*! exports provided: mat3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/lib/gl-matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mat3", function() { return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"]; });



/**
 * Sets a mat3 from an array at an option offset
 *
 * @param {mat3} out
 * @param {Array} arr
 * @param {number} [offset=0]
 * @returns {mat3} out
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].fromArray = function (out, arr, offset = 0) {
  out[0] = arr[offset];
  out[1] = arr[offset + 1];
  out[2] = arr[offset + 2];
  out[3] = arr[offset + 3];
  out[4] = arr[offset + 4];
  out[5] = arr[offset + 5];
  out[6] = arr[offset + 6];
  out[7] = arr[offset + 7];
  out[8] = arr[offset + 8];
  return out;
};
/**
 * Sets a mat3 from an array at an option offset
 *
 * @param {mat3} out
 * @param {Array} arr
 * @param {number} [index=0]
 * @returns {mat3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].setArray = function (out, arr, index = 0) {
  out[0] = arr[index];
  out[1] = arr[index + 1];
  out[2] = arr[index + 2];
  out[3] = arr[index + 3];
  out[4] = arr[index + 4];
  out[5] = arr[index + 5];
  out[6] = arr[index + 6];
  out[7] = arr[index + 7];
  out[8] = arr[index + 8];
  return out;
};
/**
 * Sets an array at an optional offset
 *
 * @param {mat3} a
 * @param {Array} arr
 * @param {number} [index=0]
 * @returns {mat3} a
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat3"].toArray = function (a, arr, index = 0) {
  arr[index] = a[0];
  arr[index + 1] = a[1];
  arr[index + 2] = a[2];
  arr[index + 3] = a[3];
  arr[index + 4] = a[4];
  arr[index + 5] = a[5];
  arr[index + 6] = a[6];
  arr[index + 7] = a[7];
  arr[index + 8] = a[8];
  return a;
};

/***/ }),

/***/ "./global/math/mat4.js":
/*!*****************************!*\
  !*** ./global/math/mat4.js ***!
  \*****************************/
/*! exports provided: mat4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/lib/gl-matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mat4", function() { return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"]; });



/**
 * arcFromForward
 * @param {mat4} out
 * @param {vec3} v
 * @return {mat4} out
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].arcFromForward = function () {
  let vec3_0;
  return function arcFromForward(out, v) {
    if (!vec3_0) vec3_0 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    const norm = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(vec3_0, v);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].identity(out);

    if (norm[2] < -0.99999) {
      return out;
    }

    if (norm[2] > 0.99999) {
      out[5] = -1.0;
      out[10] = -1.0;
      return out;
    }

    const h = (1 + norm[2]) / (norm[0] * norm[0] + norm[1] * norm[1]);
    out[0] = h * norm[1] * norm[1] - norm[2];
    out[1] = -h * norm[0] * norm[1];
    out[2] = norm[0];
    out[4] = out[1];
    out[5] = h * norm[0] * norm[0] - norm[2];
    out[6] = norm[1];
    out[8] = -norm[0];
    out[9] = -norm[1];
    out[10] = -norm[2];
    return out;
  };
}();
/**
 * Copies the translation component from one mat4 to another
 * @param {mat4} out
 * @param {mat4} a
 * @returns {mat4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].copyTranslation = function (out, a) {
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  return out;
};
/**
 * Sets a mat4 from a mat4
 * @param {mat4} out
 * @param {mat3} m
 * @returns {mat4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromMat3 = function (out, m) {
  out[0] = m[0];
  out[1] = m[1];
  out[2] = m[2];
  out[4] = m[3];
  out[5] = m[4];
  out[6] = m[5];
  out[8] = m[6];
  out[9] = m[7];
  out[10] = m[8];
  out[3] = out[7] = out[11] = out[12] = out[13] = out[14] = 0;
  out[15] = 1;
  return out;
};
/**
 * Generates a look-at matrix with the given eye position, focal point, and up axis from a left handed coordinate system
 *
 * @param {mat4} out - mat4 frustum matrix will be written into
 * @param {vec3} eye - Position of the viewer
 * @param {vec3} center - Point the viewer is looking at
 * @param {vec3} up - vec3 pointing up
 * @returns {mat4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].lookAtGL = function () {
  let vec3_0, vec3_1, vec3_2;
  return function lookAtGL(out, eye, center, up) {
    if (!vec3_0) {
      vec3_0 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_2 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(vec3_2, eye, center);

    if (gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].squaredLength(vec3_2) === 0) {
      vec3_2[2] = 1;
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(vec3_2, vec3_2);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(vec3_0, up, vec3_2);

    if (gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].squaredLength(vec3_0) === 0) {
      vec3_2[2] += 0.0001;
      gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(vec3_0, up, vec3_2);
    }

    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(vec3_0, vec3_0);
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(vec3_1, vec3_2, vec3_0);
    out[0] = vec3_0[0];
    out[1] = vec3_0[1];
    out[2] = vec3_0[2];
    out[3] = 0;
    out[4] = vec3_1[0];
    out[5] = vec3_1[1];
    out[6] = vec3_1[2];
    out[7] = 0;
    out[8] = vec3_2[0];
    out[9] = vec3_2[1];
    out[10] = vec3_2[2];
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
}();
/**
 * Gets a mat4's maximum column axis scale
 *
 * @param {mat4} a   - source mat4
 * @returns {number} - maximum axis scale
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].maxScaleOnAxis = function (a) {
  let m11 = a[0];
  let m12 = a[4];
  let m13 = a[8];
  let m21 = a[1];
  let m22 = a[5];
  let m23 = a[9];
  let m31 = a[2];
  let m32 = a[6];
  let m33 = a[10];
  let x = m11 * m11 + m12 * m12 + m13 * m13,
      y = m21 * m21 + m22 * m22 + m23 * m23,
      z = m31 * m31 + m32 * m32 + m33 * m33;
  return Math.sqrt(Math.max(x, y, z));
};
/**
 * Sets a left handed co-ordinate system perspective from a right handed co-ordinate system
 * @param {mat4} out        - receiving mat4
 * @param {number} fovY     - Vertical field of view in radians
 * @param {number} aspect   - Aspect ratio. typically viewport width/height
 * @param {number} near     - Near bound of the frustum
 * @param {number} far      - Far bound of the frustum
 * @returns {mat4} out      - receiving mat4
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].perspectiveGL = function (out, fovY, aspect, near, far) {
  let fH = Math.tan(fovY / 360 * Math.PI) * near;
  let fW = fH * aspect;
  gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].frustum(out, -fW, fW, -fH, fH, near, far);
  return out;
};
/**
 * Projects a vector from 3d to 2d space, returning normalized screen space value
 * m should be a projection matrix (or a VP or MVP)
 * @author https://github.com/hughsk/from-3d-to-2d/blob/master/index.js
 * @param {vec3} out   - receiving vec3
 * @param {mat4} m     - Projection / View Projection
 * @param {vec3} a     - the point to project
 * @returns {vec3} out - receiving vec3
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].projectVec3 = function (out, m, a) {
  var ix = a[0];
  var iy = a[1];
  var iz = a[2];
  var ox = m[0] * ix + m[4] * iy + m[8] * iz + m[12];
  var oy = m[1] * ix + m[5] * iy + m[9] * iz + m[13];
  var oz = m[2] * ix + m[6] * iy + m[10] * iz + m[14];
  var ow = m[3] * ix + m[7] * iy + m[11] * iz + m[15];
  out[0] = (ox / ow + 1) / 2;
  out[1] = (oy / ow + 1) / 2;
  out[2] = (oz / ow + 1) / 2;
  return out;
};
/**
 * Sets the translation component of a mat4 from a vec3
 * @param {mat4} out
 * @param {vec3} v
 * @returns {mat4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].setTranslation = function (out, v) {
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  return out;
};
/**
 * Sets the translation component of a mat4 from values
 * @param {mat4} out
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {mat4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].setTranslationFromValues = function (out, x, y, z) {
  out[12] = x;
  out[13] = y;
  out[14] = z;
  return out;
};

/***/ }),

/***/ "./global/math/noise.js":
/*!******************************!*\
  !*** ./global/math/noise.js ***!
  \******************************/
/*! exports provided: noise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noise", function() { return noise; });
/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony import */ var _vec4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec4 */ "./global/math/vec4.js");


const noise = {};
/**
 * Generates turbulent noise
 *
 * @param {vec4} out
 * @param {number} pos_0
 * @param {number} pos_1
 * @param {number} pos_2
 * @param {number} pos_3
 * @param {number} power
 * @returns {vec4} out
 */

noise.turbulence = function () {
  const s_noiseLookup = [],
        s_permutations = [],
        s_globalNoiseTemps = [];
  let s_initialized = false;
  /**
   * Initializes noise
   */

  function initialize() {
    for (let i = 0; i < 256; i++) {
      s_noiseLookup[i] = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].fromValues(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);
      s_permutations[i] = i;
    }

    let i = 256;

    while (--i) {
      const tmp = s_permutations[i],
            index = Math.floor(Math.random() * 256);
      s_permutations[i] = s_permutations[index];
      s_permutations[index] = tmp;
    }

    for (let i = 0; i < 256; i++) {
      s_permutations[256 + i] = s_permutations[i];
      s_noiseLookup[256 + i] = s_noiseLookup[i];
      s_noiseLookup[256 * 2 + i] = s_noiseLookup[i];
    }

    for (let i = 0; i < 15; ++i) {
      s_globalNoiseTemps[i] = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    }

    s_initialized = true;
  }

  return function turbulence(out, pos_0, pos_1, pos_2, pos_3, power) {
    if (!s_initialized) initialize();
    pos_0 += 4096;
    pos_1 += 4096;
    pos_2 += 4096;
    pos_3 += 4096;
    let a_0 = Math.floor(pos_0),
        a_1 = Math.floor(pos_1),
        a_2 = Math.floor(pos_2),
        a_3 = Math.floor(pos_3);
    const t_0 = pos_0 - a_0,
          t_1 = pos_1 - a_1,
          t_2 = pos_2 - a_2,
          t_3 = pos_3 - a_3;
    a_0 &= 255;
    a_1 &= 255;
    a_2 &= 255;
    a_3 &= 255;
    const b_0 = a_0 + 1,
          b_1 = a_1 + 1,
          b_2 = a_2 + 1,
          b_3 = a_3 + 1;
    const i = s_permutations[a_0],
          j = s_permutations[b_0];
    const b00 = s_permutations[i + a_1],
          b10 = s_permutations[j + a_1],
          b01 = s_permutations[i + b_1],
          b11 = s_permutations[j + b_1];
    let c00 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[0], s_noiseLookup[b00 + a_2 + a_3], s_noiseLookup[b10 + a_2 + a_3], t_0);
    let c10 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[1], s_noiseLookup[b01 + a_2 + a_3], s_noiseLookup[b11 + a_2 + a_3], t_0);
    let c01 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[2], s_noiseLookup[b00 + b_2 + a_3], s_noiseLookup[b10 + b_2 + a_3], t_0);
    let c11 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[3], s_noiseLookup[b00 + b_2 + a_3], s_noiseLookup[b10 + b_2 + a_3], t_0);
    let c0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[4], c00, c10, t_1);
    let c1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[5], c01, c11, t_1);
    const c = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[6], c0, c1, t_2);
    c00 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[7], s_noiseLookup[b00 + a_2 + b_3], s_noiseLookup[b10 + a_2 + b_3], t_0);
    c10 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[8], s_noiseLookup[b01 + a_2 + b_3], s_noiseLookup[b11 + a_2 + b_3], t_0);
    c01 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[9], s_noiseLookup[b00 + b_2 + b_3], s_noiseLookup[b10 + b_2 + b_3], t_0);
    c11 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[10], s_noiseLookup[b00 + b_2 + b_3], s_noiseLookup[b10 + b_2 + b_3], t_0);
    c0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[11], c00, c10, t_1);
    c1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[12], c01, c11, t_1);
    const d = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[13], c0, c1, t_2);
    const r = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].lerp(s_globalNoiseTemps[14], c, d, t_3);
    out[0] += r[0] * power;
    out[1] += r[1] * power;
    out[2] += r[2] * power;
    return out;
  };
}();
/**
 * Perlin_noise1
 *
 * @param {number} a
 * @returns {number}
 */


noise.perlin1 = function () {
  let p_initialized = false,
      p_B = 0x100,
      p_BM = 0xff,
      p_N = 0x1000,
      p_p = null,
      p_g1 = null;
  /**
   * Initializes Perlin Noise
   */

  function initialize() {
    p_p = new Array(p_B + p_B + 2);
    p_g1 = new Array(p_B + p_B + 2);
    let i = 0,
        j = 0,
        k = 0;

    for (i = 0; i < p_B; i++) {
      p_p[i] = i;
      p_g1[i] = Math.random() * 2 - 1;
    }

    while (--i) {
      k = p_p[i];
      p_p[i] = p_p[j = Math.floor(Math.random() * p_B)];
      p_p[j] = k;
    }

    for (i = 0; i < p_B + 2; i++) {
      p_p[p_B + i] = p_p[i];
      p_g1[p_B + i] = p_g1[i];
    }

    p_initialized = true;
  }

  return function perlin1(a) {
    if (!p_initialized) initialize();
    let t = a + p_N,
        bx0 = Math.floor(t) & p_BM,
        bx1 = bx0 + 1 & p_BM,
        rx0 = t - Math.floor(t),
        rx1 = rx0 - 1;
    let sx = rx0 * rx0 * (3.0 - 2.0 * rx0),
        u = rx0 * p_g1[p_p[bx0]],
        v = rx1 * p_g1[p_p[bx1]];
    return u + sx * (v - u);
  };
}();
/**
 * PerlinNoise1D
 *
 * @param x
 * @param alpha
 * @param beta
 * @param n
 * @returns {number}
 */


noise.perlin1D = function (x, alpha, beta, n) {
  let sum = 0,
      p = x,
      scale = 1;

  for (let i = 0; i < n; ++i) {
    sum += noise.perlin1(p) / scale;
    scale *= alpha;
    p *= beta;
  }

  return sum;
};

/***/ }),

/***/ "./global/math/num.js":
/*!****************************!*\
  !*** ./global/math/num.js ***!
  \****************************/
/*! exports provided: num */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "num", function() { return num; });
const num = {};
num.EPSILON = 0.000001;
num.RAD2DEG = 180 / Math.PI;
num.DEG2RAD = Math.PI / 180;
num.TWO_PI = Math.PI * 2;
num.PI = Math.PI;
/**
 * biCumulative
 *
 * @param {number} t
 * @param {number} order
 * @returns {number}
 */

num.biCumulative = function (t, order) {
  if (order === 1) {
    const some = 1.0 - t;
    return 1.0 - some * some * some;
  } else if (order === 2) {
    return 3.0 * t * t - 2.0 * t * t * t;
  } else {
    return t * t * t;
  }
};
/**
 * @alias Math.ceil
 */


num.ceil = Math.ceil;
/**
 * Clamps a number
 *
 * @param {number} a
 * @param {number} min
 * @param {number} max
 * @returns {number}
 */

num.clamp = function (a, min, max) {
  return Math.max(min, Math.min(max, a));
};
/**
 * Returns how many decimal places a number has
 *
 * @param {number} a
 * @returns {number}
 */


num.decimalPlaces = function (a) {
  let match = ("" + a).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
  return match ? Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0)) : 0;
};
/**
 * Converts from radians to degrees
 *
 * @param {number} a
 * @returns {number}
 */


num.degrees = function (a) {
  return a * num.RAD2DEG;
};
/**
 * Converts from radians to unwrapped degrees
 *
 * @param {number} a
 * @returns {number}
 */


num.degreesUnwrapped = function (a) {
  return num.unwrapDegrees(a * num.RAD2DEG);
};
/**
 * Converts a Dword to Float
 * @param value
 * @return {Number}
 */


num.dwordToFloat = function (value) {
  const b4 = value & 0xff,
        b3 = (value & 0xff00) >> 8,
        b2 = (value & 0xff0000) >> 16,
        b1 = (value & 0xff000000) >> 24,
        sign = 1 - 2 * (b1 >> 7),
        // sign = bit 0
  exp = (b1 << 1 & 0xff | b2 >> 7) - 127,
        // exponent = bits 1..8
  sig = (b2 & 0x7f) << 16 | b3 << 8 | b4; // significand = bits 9..31

  if (sig === 0 && exp === -127) return 0.0;
  return sign * (1 + sig * Math.pow(2, -23)) * Math.pow(2, exp);
};
/**
 * Checks if a number equals another
 *
 * @param a
 * @param b
 * @returns {boolean}
 */


num.equals = function (a, b) {
  return Math.abs(a - b) <= num.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));
};
/**
 * Checks if a number exactly equals another
 * - included for library consistency
 *
 * @param {number} a
 * @param {number} b
 * @returns {boolean}
 */


num.exactEquals = function (a, b) {
  return a === b;
};
/**
 * Exponential decay
 *
 * @param {number} omega0
 * @param {number} torque
 * @param {number} I - inertia
 * @param {number} d - drag
 * @param {number} time - time
 * @returns {number}
 */


num.exponentialDecay = function (omega0, torque, I, d, time) {
  return torque * time / d + I * (omega0 * d - torque) / (d * d) * (1.0 - Math.pow(Math.E, -d * time / I));
};
/**
 * Gets the fractional components of a number
 *
 * @param {number} a
 * @returns {number}
 */


num.fract = function (a) {
  return a - Math.floor(a);
};
/**
 * Gets a value from a half float
 * @author Babylon
 * @param {number} a
 * @returns {number}
 */


num.fromHalfFloat = function (a) {
  const s = (a & 0x8000) >> 15,
        e = (a & 0x7C00) >> 10,
        f = a & 0x03FF;

  if (e === 0) {
    return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10));
  } else if (e === 0x1F) {
    return f ? NaN : (s ? -1 : 1) * Infinity;
  }

  return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10));
};
/**
 * @alias Math.floor
 */


num.floor = Math.floor;
/**
 * Gets long word order
 * @author Babylon
 * @param {number} a
 * @returns {number}
 */

num.getLongWordOrder = function (a) {
  return a === 0 || a === 255 || a === -16777216 ? 0 : 1 + num.getLongWordOrder(a >> 8);
};
/**
 *
 *
 * @param {number} a
 * @param {number} b
 * @returns {number}
 */


num.greaterThan = function (a, b) {
  return a > b ? 1 : 0;
};
/**
 *
 *
 * @param {number} a
 * @param {number} b
 * @returns {number}
 */


num.greaterThanEqual = function (a, b) {
  return num.isEqual(a, b) || a > b ? 1 : 0;
};
/**
 *
 * - included for library consistency
 *
 * @param {number} a
 * @param {number} b
 * @returns {number}
 */


num.greaterThanExactEqual = function (a, b) {
  return a >= b ? 1 : 0;
};
/**
 * Checks if a number is even
 *
 * @param {number} a
 * @returns {boolean}
 */


num.isEven = function (a) {
  return Math.abs(a) % 2 === 0;
};
/**
 * Checks if a number is a float
 *
 * @param {number} a
 * @returns {boolean}
 */


num.isFloat = function (a) {
  return a % 1 !== 0;
};
/**
 * @alias Number.isFinite
 */


num.isFinite = Number.isFinite; // return (typeof v === "number" && !isNaN(v) && v !== Infinity && v !== -Infinity);

/**
 * Checks if a number is an integer
 *
 * @param {number} a
 * @returns {boolean}
 */

num.isInt = function (a) {
  return a % 1 === 0;
};
/**
 * @alias Number.isNaN
 */


num.isNaN = Number.isNaN;
/**
 * Checks if a number is odd
 *
 * @param {number} a
 * @returns {boolean}
 */

num.isOdd = function (a) {
  return Math.abs(a) % 2 === 1;
};
/**
 * Checks if a number is to the power of two
 *
 * @param {number} a
 * @returns {boolean}
 */


num.isPowerOfTwo = function (a) {
  return (a & a - 1) === 0 && a !== 0;
};
/**
 *
 *
 * @param {number} a
 * @param {number} b
 * @returns {number}
 */


num.lessThan = function (a, b) {
  return a < b ? 1 : 0;
};
/**
 *
 *
 * @param {number} a
 * @param {number} b
 * @returns {number}
 */


num.lessThanEqual = function (a, b) {
  return num.isEqual(a, b) || a < b ? 1 : 0;
};
/**
 *
 * - included for library consistency
 *
 * @param {number} a
 * @param {number} b
 * @returns {number}
 */


num.lessThanExactEqual = function (a, b) {
  return a <= b ? 1 : 0;
};
/**
 * Gets the log2 of a number
 * @param {number} a
 * @returns {number}
 */


num.log2 = function (a) {
  return Math.log(a) * Math.LOG2E;
};
/**
 * @alias Math.max
 */


num.max = Math.max;
/**
 * @alias Math.min
 */

num.min = Math.min;
/**
 * Gets the nearest power of two value to a number
 *
 * @param {number} a
 * @returns {number}
 */

num.nearestPowerOfTwo = function (a) {
  return Math.pow(2, Math.round(Math.log(a) / Math.LN2));
};
/**
 *
 *
 * @param {number} value
 * @param {number} start
 * @param {number} end
 * @param {number} precision
 * @returns {number}
 */


num.normalizeInt = function (value, start, end, precision) {
  let width = end - start;
  let offsetValue = value - start;
  let result = offsetValue - offsetValue / width * width + start;
  return precision === undefined ? result : Number(result.toFixed(precision));
};
/**
 *
 *
 * @param {number} value
 * @param {number} start
 * @param {number} end
 * @param {number} precision
 * @returns {number}
 */


num.normalizeFloat = function (value, start, end, precision) {
  let width = end - start;
  let offsetValue = value - start;
  let result = offsetValue - Math.floor(offsetValue / width) * width + start;
  return precision === undefined ? result : Number(result.toFixed(precision));
};
/**
 * Converts from degrees to radians
 *
 * @param {number} a
 * @returns {number}
 */


num.radians = function (a) {
  return a * num.DEG2RAD;
};
/**
 * Converts from degrees to unwrapped radians
 *
 * @param {number} a
 * @returns {number}
 */


num.radiansUnwrapped = function (a) {
  return num.unwrapRadians(a *= num.DEG2RAD);
};
/**
 * Creates a random integer
 *
 * @param {number} low
 * @param {number} high
 * @returns {number}
 */


num.randomInt = function (low, high) {
  return low + Math.floor(Math.random() * (high - low + 1));
};
/**
 * Creates a random float
 *
 * @param {number} low
 * @param {number} high
 * @returns {number}
 */


num.randomFloat = function (low, high) {
  return low + Math.random() * (high - low);
};
/**
 * @alias for Math.round
 */


num.round = Math.round;
/**
 * Rounds a number to the closest zero
 *
 * @param {number} a
 * @returns {number}
 */

num.roundToZero = function (a) {
  return a < 0 ? Math.ceil(a) : Math.floor(a);
};
/**
 * @alias for num.greaterThan
 */


num.step = num.greaterThan;
/**
 *
 * @param a
 * @param min
 * @param max
 * @returns {number}
 */

num.smoothStep = function (a, min, max) {
  if (a <= min) return 0;
  if (a >= max) return 1;
  a = (a - min) / (max - min);
  return a * a * (3 - 2 * a);
};
/**
 *
 * @param a
 * @param min
 * @param max
 * @returns {number}
 */


num.smootherStep = function (a, min, max) {
  if (a <= min) return 0;
  if (a >= max) return 1;
  a = (a - min) / (max - min);
  return a * a * a * (a * (a * 6 - 15) + 10);
};
/**
 * Converts a number to a half float
 * @author http://stackoverflow.com/questions/32633585/how-do-you-convert-to-half-floats-in-javascript
 * @param {number} a
 * @returns {number}
 */


num.toHalfFloat = function () {
  let floatView, int32View;
  return function (a) {
    if (!floatView) {
      floatView = new Float32Array(1);
      int32View = new Int32Array(floatView.buffer);
    }

    floatView[0] = a;
    const x = int32View[0];
    let bits = x >> 16 & 0x8000;
    /* Get the sign */

    let m = x >> 12 & 0x07ff;
    /* Keep one extra bit for rounding */

    let e = x >> 23 & 0xff;
    /* Using int is faster here */

    /* If zero, or denormal, or exponent underflows too much for a denormal half, return signed zero. */

    if (e < 103) {
      return bits;
    }
    /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */


    if (e > 142) {
      bits |= 0x7c00;
      /* If exponent was 0xff and one mantissa bit was set, it means NaN,
           * not Inf, so make sure we set one mantissa bit too. */

      bits |= (e === 255 ? 0 : 1) && x & 0x007fffff;
      return bits;
    }
    /* If exponent underflows but not too much, return a denormal */


    if (e < 113) {
      m |= 0x0800;
      /* Extra rounding may overflow and set mantissa to 0 and exponent to 1, which is OK. */

      bits |= (m >> 114 - e) + (m >> 113 - e & 1);
      return bits;
    }

    bits |= e - 112 << 10 | m >> 1;
    /* Extra rounding. An overflow will set mantissa to 0 and increment the exponent, which is OK. */

    bits += m & 1;
    return bits;
  };
}();
/**
 * Unwraps degrees
 *
 * @param {number} d
 * @returns {number}
 */


num.unwrapDegrees = function (d) {
  d = d % 360;
  if (d > 180) d -= 360;
  if (d < -180) d += 360;
  return d;
};
/**
 * Unwraps radians
 *
 * @param {number} r
 * @returns {number}
 */


num.unwrapRadians = function (r) {
  r = r % num.TWO_PI;
  if (r > num.PI) r -= num.TWO_PI;
  if (r < -num.PI) r += num.TWO_PI;
  return r;
};

/***/ }),

/***/ "./global/math/pln.js":
/*!****************************!*\
  !*** ./global/math/pln.js ***!
  \****************************/
/*! exports provided: pln */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pln", function() { return pln; });
/* harmony import */ var _num__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./num */ "./global/math/num.js");
/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony import */ var _vec4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec4 */ "./global/math/vec4.js");
/* harmony import */ var _mat3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3 */ "./global/math/mat3.js");
/* harmony import */ var _box3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./box3 */ "./global/math/box3.js");





/**
 * Plane
 *
 * @typedef {Float32Array} pln
 */

const pln = {};
/**
 * Returns a subarray of a plane's normal
 *
 * @param {pln} a - source plane
 * @returns {*}   - plane normal reference
 */

pln.$normal = function (a) {
  return a.subarray(0, 3);
};
/**
 * Clones a pln
 *
 * @param {pln} a - Source plane
 * @returns {pln} - Cloned plane
 */


pln.clone = _vec4__WEBPACK_IMPORTED_MODULE_2__["vec4"].clone;
/**
 * Returns the constant component of the pln
 *
 * @param {pln} a    - Source plane
 * @returns {number} - plane's constant
 */

pln.constant = function (a) {
  return a[3];
};
/**
 * Copies a pln
 *
 * @param {pln} a - Target plane
 * @param {pln} b - Source plane
 * @returns {pln} - Target plane
 */


pln.copy = _vec4__WEBPACK_IMPORTED_MODULE_2__["vec4"].copy;
/**
 * Creates a plane
 *
 * @returns {pln}
 */

pln.create = _vec4__WEBPACK_IMPORTED_MODULE_2__["vec4"].create;
/**
 * Gets the distance from a plane to a point
 *
 * @param {pln} a    - plane to compare
 * @param {vec3} p   - Point to compare
 * @returns {number} - The distance between them
 */

pln.distanceToPoint = function (a, p) {
  return a[0] * p[0] + a[1] * p[1] + a[2] * p[2] + a[3];
};
/**
 * Gets the distance from a plane to the components of a sphere
 *
 * @param {pln} a         - plane to compare
 * @param {vec3} position - sphere position to compare
 * @param {number} radius - sphere radius to compare
 * @returns {number}      - The distance between them
 */


pln.distanceToPositionRadius = function (a, position, radius) {
  return a[0] * position[0] + a[1] * position[1] + a[2] * position[2] - radius;
};
/**
 * Gets the distance from a plane to a Float32Array(4) sphere
 *
 * @param {pln} a       - plane to compare
 * @param {sph3} sphere - sphere to compare
 * @returns {number}    - The distance between them
 */


pln.distanceToSph3 = function (a, sphere) {
  return a[0] * sphere[0] + a[1] * sphere[1] + a[2] * sphere[2] - sphere[3];
};
/**
 * Gets the distance from a plane to a point's values
 *
 * @param {pln} a     - plane to compare
 * @param {Number} px - Point x to compare
 * @param {Number} py - Point y to compare
 * @param {Number} pz - Point z to compare
 * @returns {number}  - The distance between them
 */


pln.distanceToValues = function (a, px, py, pz) {
  return a[0] * px + a[1] * py + a[2] * pz + a[3];
};
/**
 * Compares two plns for equality
 *
 * @param {pln} a     - plane to compare
 * @param {pln} b     - plane to compare
 * @returns {boolean} - true if equal
 */


pln.equals = _vec4__WEBPACK_IMPORTED_MODULE_2__["vec4"].equals;
/**
 * Compares a pln to plane components
 *
 * @param {pln} a           - plane to compare
 * @param {vec3} normal     - plane normal to compare
 * @param {number} constant - plane constant to compare
 * @returns {boolean}       - true if equal
 */

pln.equalsNormalConstant = function (a, normal, constant) {
  let a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      b0 = normal[0],
      b1 = normal[1],
      b2 = normal[2],
      b3 = constant;
  return Math.abs(a0 - b0) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _num__WEBPACK_IMPORTED_MODULE_0__["num"].EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));
};
/**
 * Compares two plns for exact equality
 *
 * @param {pln} a     - plane to compare
 * @param {pln} b     - plane to compare
 * @returns {boolean}
 */


pln.exactEquals = _vec4__WEBPACK_IMPORTED_MODULE_2__["vec4"].exactEquals;
/**
 * Compares a pln to plane components for exact equality
 *
 * @param {pln} a           - plane to compare
 * @param {vec3} normal     - plane normal to compare
 * @param {number} constant - plane constant to compare
 * @returns {boolean}
 */

pln.exactEqualsNormalConstant = function (a, normal, constant) {
  return a[0] === normal[0] && a[1] === normal[1] && a[2] === normal[2] && a[3] === constant;
};
/**
 * Extracts a pln's components
 *
 * @param {pln} a          - Source plane
 * @param {vec3} outNormal - Receiving vec3
 * @returns {number}       - plane constant
 */


pln.extract = function (a, outNormal) {
  outNormal[0] = a[0];
  outNormal[1] = a[1];
  outNormal[2] = a[2];
  return a[3];
};
/**
 * Sets a pln from plane components
 *
 * @param {pln} out   - Receiving plane
 * @param {vec3} n    - plane normal to set
 * @param {number} c  - plane constant to set
 * @returns {pln} out - receiving plane
 */


pln.fromNormalConstant = function (out, n, c) {
  out[0] = n[0];
  out[1] = n[1];
  out[2] = n[2];
  out[3] = c;
  return out;
};
/**
 * Sets from coplanar points
 *
 * @author three.js (conversion)
 * @param {pln} out   - Receiving plane
 * @param {vec3} a    - Coplanar point a
 * @param {vec3} b    - Coplanar point b
 * @param {vec3} c    - Coplanar point c
 * @returns {pln} out - Receiving pln
 */


pln.fromCoplanarPoints = function (out, a, b, c) {
  let ax = c[0] - b[0],
      ay = c[1] - b[1],
      az = c[2] - b[2],
      bx = a[0] - b[0],
      by = a[1] - b[1],
      bz = a[2] - b[2],
      // get cross product
  x = ay * bz - az * by,
      y = az * bx - ax * bz,
      z = ax * by - ay * bx; // normalize

  let len = x * x + y * y + z * z;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    out[0] = x * len;
    out[1] = y * len;
    out[2] = z * len;
  } else {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    throw new Error("Normalization error");
  } // set coplanar point


  out[3] = -(a[0] * out[0] + a[1] * out[1] + a[2] * out[2]);
  return out;
};
/**
 * Sets a pln from normal and a coplanar point
 *
 * @param {pln} out     - receiving plane
 * @param {vec3} normal - normal
 * @param {vec3} point  - coplanar point
 * @returns {pln} out   - receiving plane
 */


pln.fromNormalAndCoplanarPoint = function (out, normal, point) {
  out[0] = normal[0];
  out[1] = normal[1];
  out[2] = normal[2];
  out[3] = -(point[0] * normal[0] + point[1] * normal[1] + point[2] * normal[2]);
  return out;
};
/**
 * Gets a pln's coplanar point
 *
 * @param {vec3} out   - receiving vec3
 * @param {pln} a      - the source plane
 * @returns {vec3} out - receiving vec3
 */


pln.getCoplanarPoint = function (out, a) {
  out[0] = a[0] * -a[3];
  out[1] = a[1] * -a[3];
  out[2] = a[2] * -a[3];
  return out;
};
/**
 * Sets a vec3 with the intersection point of a plane and a Float32Array(6) line
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @author Three.js (conversion)
 * @param {vec3} out                 - receiving vec3
 * @param {pln} a                    - plane
 * @param {(lne3|Float32Array)} l    - line
 * @returns {(null|vec3)} null|out   - null or receiving vec3
 */


pln.getIntersectLne3 = function (out, a, l) {
  let lsx = l[0],
      lsy = l[1],
      lsz = l[2],
      lex = l[3],
      ley = l[4],
      lez = l[5]; // Clear the out in case of fails?

  out[0] = 0;
  out[1] = 0;
  out[2] = 0; // Get line delta

  let dirX = lex - lsx,
      dirY = ley - lsy,
      dirZ = lez - lsz; // Get dot of the plane normal and line delta

  let den = a[0] * dirX + a[1] * dirY + a[2] * dirZ;

  if (den === 0) {
    // Check if distance to the line start is 0
    if (a[0] * lsx + a[1] * lsy + a[2] * lsz + a[3] === 0) {
      out[0] = lsx;
      out[1] = lsy;
      out[2] = lsz;
      return out;
    }

    throw new Error("Denominator error");
  }

  let t = (lsx * a[0] + lsy * a[1] + lsz * a[2] + a[3]) / den;

  if (t < 0 || t > 1) {
    throw new Error("Normalization error");
  }

  out[0] = dirX * t + lsx;
  out[1] = dirY * t + lsy;
  out[2] = dirZ * t + lsz;
  return out;
};
/**
 * Sets a vec3 with the intersection point of a plane and a 3d line's components
 * Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @param {vec3} out
 * @param {pln} a
 * @param {vec3} lineStart
 * @param {vec3} lineEnd
 * @returns {vec3}
 */


pln.getIntersectStartEnd = function () {
  let vec6_0;
  return function (out, a, lineStart, lineEnd) {
    if (!vec6_0) {
      vec6_0 = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].create();
    }

    _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].from(vec6_0, lineStart, lineEnd);
    return pln.getIntersectLne3(out, a, vec6_0);
  };
}();
/**
 * Sets a vec3 with the normal component of the pln
 *
 * @param {vec3} out   - receiving vec3
 * @param {pln} a      - source plane
 * @returns {vec3} out - receiving vec3
 */


pln.getNormal = function (out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
};
/**
 * Gets an orthographic point
 *
 * @param {vec3} out    - receiving vec3
 * @param {pln} a       - the plane to project from
 * @param {vec3} p      - the point to project
 * @returns {vec3} out  - receiving vec3
 */


pln.getOrthoPoint = function (out, a, p) {
  let pMag = a[0] * p[0] + a[1] * p[1] + a[2] * p[2] + a[3];
  _vec3__WEBPACK_IMPORTED_MODULE_1__["vec3"].multiplyScalar(out, a, pMag);
  return out;
};
/**
 * Gets a projected point
 *
 * @param {vec3} out   - receiving vec3
 * @param {pln} a      - the plane to project from
 * @param {vec3} p     - the point to project
 * @returns {vec3} out - receiving vec3
 */


pln.getProjectedPoint = function (out, a, p) {
  pln.getOrthoPoint(out, a, p);
  out[0] = -(out[0] - p[0]);
  out[1] = -(out[1] - p[1]);
  out[2] = -(out[2] - p[2]);
  return out;
};
/**
 * Checks if a plane intersects min and max bounds
 *
 * @param {pln} a     - plane to compare
 * @param {vec3} min  - box min bounds to compare
 * @param {vec3} max  - box max bounds to compare
 * @returns {boolean} - true if intersection occurs
 */


pln.intersectsBounds = function () {
  let vec6_0;
  return function (a, min, max) {
    if (!vec6_0) {
      vec6_0 = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].create();
    }

    _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].from(vec6_0, min, max);
    return _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].intersectsPln(vec6_0, a);
  };
}();
/**
 * Checks if a plane intersects a Float32Array(6) bounding box
 *
 * @param {pln} a                 - plane to compare
 * @param {(box3|Float32Array)} b - box to compare
 * @returns {boolean}             - true if intersection occurs
 */


pln.intersectsBox3 = function (a, b) {
  return _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].intersectsPln(b, a);
};
/**
 * Checks if a plane intersects a Float32Array(6) lne3
 *
 * @author three.js (conversion)
 * @param {pln} a                  - plane to compare
 * @param {lne3|Float32Array} l    - line to compare
 * @returns {boolean}              - true if intersection occurs
 */


pln.intersectsLne3 = function (a, l) {
  let startSign = a[0] * l[0] + a[1] * l[1] + a[2] * l[2] + a[3];
  let endSign = a[0] * l[3] + a[1] * l[4] + a[2] * l[5] + a[3];
  return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;
};
/**
 * Checks if a plane intersects spherical bounds
 *
 * @param {pln} a         - plane to compare
 * @param {vec3} position - sphere position to compare
 * @param {number} radius - sphere radius compare
 * @returns {boolean}     - true if intersection occurs
 */


pln.intersectsPositionRadius = function (a, position, radius) {
  let dot = position[0] * a[0] + position[1] * a[1] + position[2] * a[2];
  return Math.abs(dot - a[3]) <= radius;
};
/**
 * Checks if a plane intersects a sph3
 *
 * @param {pln} a     - plane to compare
 * @param {sph3} s    - sphere to compare
 * @returns {boolean} - true if intersection occurs
 */


pln.intersectsSph3 = function (a, s) {
  let dot = s[0] * a[0] + s[1] * a[1] + s[2] * a[2];
  return Math.abs(dot - a[3]) <= s[3];
};
/**
 * Checks if a plane intersects a lne3's components
 *
 * @param {pln} a      - plane to compare
 * @param {vec3} start - line start to compare
 * @param {vec3} end   - line end to compare
 * @returns {boolean}  - true if intersection occurs
 */


pln.intersectsStartEnd = function (a, start, end) {
  let startSign = a[0] * start[0] + a[1] * start[1] + a[2] * start[2] + a[3];
  let endSign = a[0] * end[0] + a[1] * end[1] + a[2] * end[2] + a[3];
  return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;
};
/**
 * Negates a plane
 *
 * @param {pln} out   - receiving plane
 * @param {pln} a     - the plane to negate
 * @returns {pln} out - receiving plane
 */


pln.negate = function (out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a[3] * -1;
  return out;
};
/**
 * Normalizes a plane
 *
 * @param {pln} out   - receiving plane
 * @param {pln} a     - the plane to normalize
 * @returns {pln} out - receiving plane
 */


pln.normalize = function (out, a) {
  let x = a[0],
      y = a[1],
      z = a[2];
  let len = x * x + y * y + z * z;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    out[0] = a[0] * len;
    out[1] = a[1] * len;
    out[2] = a[2] * len;
    out[3] = a[3] * len;
  } else {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    throw new Error("Normalization error");
  }

  return out;
};
/**
 * Sets a sphere from values
 *
 * @param {pln} out
 * @param {number} nX
 * @param {number} nY
 * @param {number} nZ
 * @param {number} c
 * @returns {pln} out
 */


pln.set = _vec4__WEBPACK_IMPORTED_MODULE_2__["vec4"].set;
/**
 * Sets a pln from an array at an optional offset
 *
 * @param {pln} out
 * @param {Array} arr
 * @param {number} [index=0]
 * @returns {pln} out
 */

pln.setArray = _vec4__WEBPACK_IMPORTED_MODULE_2__["vec4"].setArray;
/**
 * Sets an array at an optional offset, with the values of a pln
 *
 * @param {pln} a
 * @param {Array} arr
 * @param {number} [offset = 0]
 * @returns {pln} a
 */

pln.toArray = function (a, arr, offset = 0) {
  arr[offset] = a[0];
  arr[offset + 1] = a[1];
  arr[offset + 2] = a[2];
  arr[offset + 3] = a[3];
  return a;
};
/**
 * Transforms a plane by a mat4
 *
 * @author three.js (conversion)
 * @param {pln} out        - the receiving plane
 * @param {pln} a          - the plane to transform
 * @param {mat4} m         - the affine matrix to transform with
 * @param {mat3} [nMatrix] - optional normal matrix
 * @returns {pln} out      - the receiving plane
 */


pln.transformMat4 = function () {
  let mat4_0;
  return function (out, a, m, nMatrix) {
    if (!nMatrix && !mat4_0) {
      mat4_0 = _mat3__WEBPACK_IMPORTED_MODULE_3__["mat3"].create();
    }

    nMatrix = nMatrix || _mat3__WEBPACK_IMPORTED_MODULE_3__["mat3"].normalFromMat4(mat4_0, m); // Coplanar Point

    let cpX = a[0] * -a[3],
        cpY = a[1] * -a[3],
        cpZ = a[2] * -a[3]; // Create reference point from Coplanar Point transformed by the affine mat4

    let rX = m[0] * cpX + m[4] * cpY + m[8] * cpZ + m[12],
        rY = m[1] * cpX + m[5] * cpY + m[9] * cpZ + m[13],
        rZ = m[2] * cpX + m[6] * cpY + m[10] * cpZ + m[14]; // Transform plane normal by normal matrix

    let nX = a[0],
        nY = a[1],
        nZ = a[2];
    let pX = nX * nMatrix[0] + nY * nMatrix[3] + nZ * nMatrix[6],
        pY = nX * nMatrix[1] + nY * nMatrix[4] + nZ * nMatrix[7],
        pZ = nX * nMatrix[2] + nY * nMatrix[5] + nZ * nMatrix[8]; // Normalize plane normal

    let len = pX * pX + pY * pY + pZ * pZ;

    if (len > 0) {
      len = 1 / Math.sqrt(len);
      out[0] = pX * len;
      out[1] = pY * len;
      out[2] = pZ * len;
    } else {
      out[0] = 0;
      out[1] = 0;
      out[2] = 0;
      throw new Error("Normalization error");
    } // recalculate constant from negative dot of reference point and the resulting plane normal


    out[3] = -(rX * out[0] + rY * out[1] + rZ * out[2]);
    return out;
  };
}();
/**
 * Translates a plane with the given vector
 *
 * @param {pln} out   - the receiving plane
 * @param {pln} a     - the plane to translate
 * @param {vec3} v    - the vector to translate with
 * @returns {pln} out - the receiving plane
 */


pln.translate = function (out, a, v) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3] - (v[0] * a[0] + v[1] * a[1] + v[2] * a[2]);
  return out;
};

/***/ }),

/***/ "./global/math/quat.js":
/*!*****************************!*\
  !*** ./global/math/quat.js ***!
  \*****************************/
/*! exports provided: quat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/lib/gl-matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quat", function() { return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"]; });



/**
 * QuaternionExp
 *
 * @param {quat} out
 * @param {quat|vec3} a
 * @returns {quat}
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].exp = function (out, a) {
  let norm = Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);

  if (norm) {
    out[0] = Math.sin(norm) * a[0] / norm;
    out[1] = Math.sin(norm) * a[1] / norm;
    out[2] = Math.sin(norm) * a[2] / norm;
    out[3] = Math.cos(norm);
  } else {
    out[0] = 0.0;
    out[1] = 0.0;
    out[2] = 0.0;
    out[3] = 1.0;
  }

  return out;
};
/**
 * QuaternionLn
 *
 * @param {quat} out
 * @param {quat} q
 * @returns {quat}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].ln = function (out, q) {
  let norm = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].length(q);

  if (norm > 1.0001 || norm < 0.99999) {
    out[0] = q[0];
    out[1] = q[1];
    out[2] = q[2];
    out[3] = 0.0;
  } else {
    norm = Math.sqrt(q[0] * q[0] + q[1] * q[1] + q[2] * q[2]);

    if (norm) {
      let theta = Math.atan2(norm, q[3]) / norm;
      out[0] = theta * q[0];
      out[1] = theta * q[1];
      out[2] = theta * q[2];
      out[3] = 0.0;
    } else {
      out[0] = 0.0;
      out[1] = 0.0;
      out[2] = 0.0;
      out[3] = 0.0;
    }
  }

  return out;
};
/**
 * QuaternionPow
 *
 * @param {quat} out
 * @param {quat} inq
 * @param {number} exponent
 * @returns {quat}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].pow = function (out, inq, exponent) {
  if (exponent === 1) {
    return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(out, inq);
  }

  gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].ln(out, inq);
  out[0] *= exponent;
  out[1] *= exponent;
  out[2] *= exponent;
  out[3] *= exponent;
  gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].exp(out, out);
  return out;
};

/***/ }),

/***/ "./global/math/ray3.js":
/*!*****************************!*\
  !*** ./global/math/ray3.js ***!
  \*****************************/
/*! exports provided: ray3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ray3", function() { return ray3; });
/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat4 */ "./global/math/mat4.js");
/* harmony import */ var _pln__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pln */ "./global/math/pln.js");
/* harmony import */ var _sph3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sph3 */ "./global/math/sph3.js");
/* harmony import */ var _box3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./box3 */ "./global/math/box3.js");
/* harmony import */ var _tri3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tri3 */ "./global/math/tri3.js");






/**
 * 3D Ray
 * @typedef {Float32Array} ray3
 */

const ray3 = {};
/**
 * Gets a subarray of a ray3's origin vector
 * @property {box3} a
 * @returns {TypedArray}
 */

ray3.$origin = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].$min;
/**
 * Gets a subarray of a ray3's direction vector
 * @property {box3} a
 * @returns {TypedArray}
 */

ray3.$direction = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].$max;
/**
 * Clones a ray3
 *
 * @param {ray3} a
 * @returns {ray3}
 */

ray3.clone = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].clone;
/**
 * Copies the values from one ray3 into another
 *
 * @param {ray3} out
 * @param {ray3} a
 * @returns {ray3} out
 */

ray3.copy = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].copy;
/**
 * Copies the origin vector of one ray3 to another
 *
 * @param {ray3} out
 * @param {ray3} a
 * @returns {ray3}
 */

ray3.copyOrigin = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].copyMin;
/**
 * Copies the direction vector of one ray3 to another
 *
 * @param {ray3} out
 * @param {ray3} a
 * @returns {ray3}
 */

ray3.copyDirection = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].copyMax;
/**
 * Creates a ray3
 *
 * @returns {ray3}
 */

ray3.create = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].create;
/**
 * Gets the distance from a ray3 to a point
 *
 * @param {ray3} a    - source ray3
 * @param {vec3} p   - point to measure distance to
 * @returns {number} - distance
 */

ray3.distance = function (a, p) {
  return Math.sqrt(ray3.squaredDistance(a, p));
};
/**
 * Gets the distance from a ray3"s origin to a plane"s components
 *
 * @author three.js authors (converted)
 * @param {ray3} a        - source ray3
 * @param {vec3} n        - plane normal
 * @param {number} c      - plane constant
 * @returns {null|number} - distance
 */


ray3.distanceNormalConstant = function (a, n, c) {
  let den = n[0] * a[3] + n[1] * a[4] + n[2] * a[5];
  let dist = a[0] * n[0] + a[1] * n[1] + a[2] * n[2] + c;

  if (den === 0) {
    if (dist === 0) return 0;
    throw new Error("Determinant error"); //return null;
  }

  let t = -dist / den;
  return t >= 0 ? t : null;
};
/**
 * Gets the distance from a ray3"s origin to a Float32Array(4) plane
 *
 * @author three.js authors (converted)
 * @param {ray3} a        - source ray3
 * @param {pln} p         - plane to measure distance to
 * @returns {null|Number} - distance
 */


ray3.distancePln = function (a, p) {
  let den = p[0] * a[3] + p[1] * a[4] + p[2] * a[5];
  let dist = a[0] * p[0] + a[1] * p[1] + a[2] * p[2] + p[3];

  if (den === 0) {
    if (dist === 0) return 0;
    throw new Error("Determinant error"); //return null;
  }

  let t = -dist / den;
  return t >= 0 ? t : null;
};
/**
 * Checks two ray3"s for equality
 *
 * @param {ray3} a
 * @param {ray3} b
 * @returns {boolean}
 */


ray3.equals = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].equals;
/**
 * Checks a ray3 against it"s components for equality
 *
 * @param {ray3} a
 * @param {vec3} min
 * @param {vec3} max
 * @returns {boolean}
 */

ray3.equalsOriginDestination = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].equalsBounds;
/**
 * Checks for box3 exact equality
 *
 * @param {ray3} a
 * @param {ray3} b
 * @returns {boolean}
 */

ray3.exactEquals = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].exactEquals;
/**
 * Checks for exact equality between a ray3 and ray3 components
 *
 * @param {ray3} a
 * @param {vec3} min
 * @param {vec3} max
 * @returns {boolean}
 */

ray3.exactEqualsOriginDestination = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].exactEqualsBounds;
/**
 * Sets a ray3 from origin and destination
 *
 * @param {ray3} out
 * @param {vec3} o
 * @param {vec3} d
 * @returns {ray3} out
 */

ray3.from = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].from;
/**
 * Sets a ray3 from an array at an optional offset
 *
 * @param {ray3} out
 * @param {Array} arr
 * @param {number} [index=0]
 * @returns {ray3}
 */

ray3.fromArray = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].fromArray;
/**
 * Sets a ray 3 from start and end vectors
 *
 * @param {ray3} out
 * @param {vec3} start
 * @param {vec3} end
 * @returns {ray3}
 */

ray3.fromStartEnd = function (out, start, end) {
  out[0] = start[0];
  out[1] = start[1];
  out[2] = start[2];
  out[3] = end[0] - start[0];
  out[4] = end[1] - start[1];
  out[5] = end[2] - start[2];
  return ray3.normalize(out, out);
};
/**
 * Sets a ray3 from a screen coordinates and an inverse view projection matrix
 *
 * @param {vec3} out              - receiving ray3
 * @param {vec2} coords           - canvas coordinates (not client)
 * @param {mat4} m         -      - inverse view projection matrix
 * @param {mat4} viewport         - viewport settings (x, y, width, height)
 */


ray3.fromPerspective = function (out, coords, m, viewport) {
  // Convert view port co-ordinates
  let x = (coords[0] - viewport[0]) * 2.0 / viewport[2] - 1.0,
      y = (coords[1] - viewport[1]) * 2.0 / viewport[3] - 1.0; // Calculate w

  let oW = m[3] * x + m[7] * y + m[11] * -1 + m[15],
      dW = m[3] * x + m[7] * y + m[11] * 1 + m[15]; // Check for perspective divide error

  if (oW === 0.0 || dW === 0.0) {
    throw new Error("Perspective Divide Error");
  } // Transform origin


  out[0] = (m[0] * x + m[4] * y + m[8] * -1 + m[12]) / oW;
  out[1] = (m[1] * x + m[5] * y + m[9] * -1 + m[13]) / oW;
  out[2] = (m[2] * x + m[6] * y + m[10] * -1 + m[14]) / oW; // Transform direction

  out[3] = (m[0] * x + m[4] * y + m[8] * 1 + m[12]) / dW - out[0];
  out[4] = (m[1] * x + m[5] * y + m[9] * 1 + m[13]) / dW - out[1];
  out[5] = (m[2] * x + m[6] * y + m[10] * 1 + m[14]) / dW - out[2]; // Normalize direction

  return ray3.normalize(out, out);
};
/**
 * Alternative to ray3.fromPerspective
 * @param {ray3} out         - receiving ray3
 * @param {vec2} mouse       - event.ClientX, canvasHeight - event.clientY
 * @param {vec4} viewport    - x, y, width, height
 * @param {mat4} invProjView - inverse projection view matrix
 */


ray3.unproject = function (out, mouse, viewport, invProjView) {
  const start = [mouse[0], mouse[1], 0],
        end = [mouse[0], mouse[1], 1];
  _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].unproject(start, start, viewport, invProjView);
  _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].unproject(end, end, viewport, invProjView);
  ray3.fromStartEnd(out, start, end);
};
/**
 * Sets a vec3 with the position on a ray3 at a given distance from it"s origin
 *
 * @param {vec3} out   - receiving vec3
 * @param {ray3} a     - source ray3
 * @param {number} t   - distance along the ray3
 * @returns {vec3} out - receiving vec3
 */


ray3.get = function (out, a, t) {
  out[0] = a[0] + a[3] * t;
  out[1] = a[1] + a[4] * t;
  out[2] = a[2] + a[5] * t;
  return out;
};
/**
 * Sets a vec3 with the ray3's direction
 *
 * @param {vec3} out     - receiving vec3
 * @param {ray3} a       - source ray
 * @returns {vec3} [out] - receiving vec3
 */


ray3.getDirection = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].getMax;
/**
 * Sets a vec3 with the closest point on a ray3 to a given point
 *
 * @author three.js authors (converted)
 * @param {vec3} out   - receiving vec3
 * @param {ray3} a     - source ray3
 * @param {vec3} p     - point to compare
 * @returns {vec3} out - receiving vec3
 */

ray3.getClosestPointToPoint = function (out, a, p) {
  let x = p[0] - a[0],
      y = p[1] - a[1],
      z = p[2] - a[2];
  let dirDist = x * a[3] + y * a[4] + z * a[5];

  if (dirDist < 0) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
  } else {
    ray3.get(out, a, dirDist);
  }

  return out;
};
/**
 * Sets a vec3 with the intersection point of a ray3 and boxes" components
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @author three.js authors (converted)
 * @param {vec3} out            - receiving vec3
 * @param {ray3} a              - source ray3
 * @param {vec3} min            - box min bounds
 * @param {vec3} max            - box max bounds
 * @returns {(null|vec3)} [out] - null or receiving vec3
 */


ray3.getIntersectBounds = function (out, a, min, max) {
  let tMin, tMax, tyMin, tyMax, tzMin, tzMax;
  let invDirX = 1 / a[3],
      invDirY = 1 / a[4],
      invDirZ = 1 / a[5];

  if (invDirX >= 0) {
    tMin = (min[0] - a[0]) * invDirX;
    tMax = (max[0] - a[0]) * invDirX;
  } else {
    tMin = (max[0] - a[0]) * invDirX;
    tMax = (min[0] - a[0]) * invDirX;
  }

  if (invDirY >= 0) {
    tyMin = (min[1] - a[1]) * invDirY;
    tyMax = (max[1] - a[1]) * invDirY;
  } else {
    tyMin = (max[1] - a[1]) * invDirY;
    tyMax = (min[1] - a[1]) * invDirY;
  }

  if (tMin > tyMax || tyMin > tMax) return null;
  if (tyMin > tMin || tMin !== tMin) tMin = tyMin;
  if (tyMax < tMax || tMax !== tMax) tMax = tyMax;

  if (invDirZ >= 0) {
    tzMin = (min[2] - a[2]) * invDirZ;
    tzMax = (max[2] - a[2]) * invDirZ;
  } else {
    tzMin = (max[2] - a[2]) * invDirZ;
    tzMax = (min[2] - a[2]) * invDirZ;
  }

  if (tMin > tzMax || tzMin > tMax) return null;
  if (tzMin > tMin || tMin !== tMin) tMin = tzMin;
  if (tzMax < tMax || tMax !== tMax) tMax = tzMax;
  if (tMax < 0) return null;
  return ray3.get(out, a, tMin >= 0 ? tMin : tMax);
};
/**
 * Sets a vec3 with the intersection point of a ray3 and boxes" components
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 * TODO: Flip internals of getIntersectBounds with this as it will be called more often
 *
 * @param {vec3} out
 * @param {ray3} a
 * @param {box3|Float32Array} b
 * @returns {null|vec3}
 */


ray3.getIntersectBox3 = function () {
  let vec3_0, vec3_1;
  return function (out, a, b) {
    if (!vec3_0) {
      vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    }

    _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].getMin(vec3_0, b);
    _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].getMax(vec3_1, b);
    return _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].getIntersectBounds(out, a, vec3_0, vec3_1);
  };
}();
/**
 * Sets a vec3 with the intersection point of a ray3 and a triangle"s components
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 * @TODO: Flip internals with getIntersectVertices as this will be called more often
 *
 * @param {vec3} out            - receiving vec3
 * @param {ray3} a              - source ray3
 * @param {tri3} f              - The tri3 to intersect
 * @param {boolean} bfc         - enables/ disables back face culling
 * @returns {(null|vec3)} [out] - null or receiving vec3
 */


ray3.getIntersectTri3 = function () {
  let vec3_0, vec3_1, vec3_2;
  return function (out, a, f, bfc) {
    if (!vec3_0) {
      vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_2 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    }

    _tri3__WEBPACK_IMPORTED_MODULE_5__["tri3"].getV1(vec3_0, f);
    _tri3__WEBPACK_IMPORTED_MODULE_5__["tri3"].getV2(vec3_1, f);
    _tri3__WEBPACK_IMPORTED_MODULE_5__["tri3"].getV3(vec3_2, f);
    return ray3.getIntersectVertices(out, a, vec3_0, vec3_1, vec3_2, bfc);
  };
}();
/**
 * Sets a vec3 with the intersection point of a ray3 and a triangle"s components
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @author three.js authors (converted)
 * @param {vec3} out            - receiving vec3
 * @param {ray3} a              - source ray3
 * @param {vec3} vertA          - first triangle vertex position
 * @param {vec3} vertB          - second triangle vertex position
 * @param {vec3} vertC          - third triangle vertex position
 * @param {boolean} bfc         - enables/ disables back face culling
 * @returns {(null|vec3)} [out] - null or receiving vec3
 */


ray3.getIntersectVertices = function () {
  let vec3_0, vec3_1, vec3_2, vec3_3, vec3_4, vec3_5;
  return function (out, a, vertA, vertB, vertC, bfc) {
    if (!vec3_0) {
      vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_2 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_3 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_4 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_5 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    }

    let o = ray3.getOrigin(vec3_4, a);
    let d = ray3.getDirection(vec3_5, a);
    let diff = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(vec3_0, o, vertA);
    let e1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(vec3_1, vertB, vertA);
    let e2 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(vec3_2, vertC, vertA);
    let n = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(vec3_3, e1, e2);
    let DdN = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(d, n);
    let sign;

    if (DdN > 0) {
      if (bfc) return null;
      sign = 1;
    } else if (DdN < 0) {
      sign = -1;
      DdN = -DdN;
    } else return null;

    _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(e2, diff, e2);
    let b1 = sign * _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(d, e2);
    if (b1 < 0) return null;
    _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].cross(e1, e1, diff);
    let b2 = sign * _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(d, e1);
    if (b2 < 0) return null;
    if (b1 + b2 > DdN) return null;
    let QdN = -sign * _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].dot(diff, n);
    if (QdN < 0) return null;
    return ray3.get(out, a, QdN / DdN);
  };
}();
/**
 * Sets a vec3 with the intersection point of a ray3 and a plane"s components
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @param {vec3} out             - receiving vec3
 * @param {ray3} a               - source ray3
 * @param {vec3} n               - plane normal
 * @param {number} c             - plane constant
 * @returns {(null|vec3)} vecOut - null or receiving vec3
 */


ray3.getIntersectNormalConstant = function (out, a, n, c) {
  let t = ray3.distanceNormalConstant(a, n, c);
  return t !== null ? ray3.get(out, a, t) : null;
};
/**
 * Sets a vec3 with the intersection point of a ray3 and a Float32Array(4) Plane
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @param {vec3} out              - receiving vec3
 * @param {ray3} a                    - source ray3
 * @param {(pln|Float32Array)} p      - plane to intersect
 * @returns {(null|vec3)} [out]    - null or receiving vec3
 */


ray3.getIntersectPln = function (out, a, p) {
  let t = ray3.distancePln(a, p);
  return t !== null ? ray3.get(out, a, t) : null;
};
/**
 * Sets a vec3 with the intersection point of a ray3 and a sphere"s components
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @author three.js authors (converted)
 * @param {vec3} out            - receiving vec3
 * @param {ray3} a              - source ray3
 * @param {vec3} p              - sphere position
 * @param {number} r            - sphere radius
 * @returns {(null|vec3)} [out] - null or receiving vec3
 */


ray3.getIntersectPositionRadius = function () {
  let sph3_0;
  return function (out, a, p, r) {
    if (!sph3_0) sph3_0 = _sph3__WEBPACK_IMPORTED_MODULE_3__["sph3"].create();
    _sph3__WEBPACK_IMPORTED_MODULE_3__["sph3"].from(sph3_0, p, r);
    return ray3.getIntersectSph3(out, a, sph3_0);
  };
}();
/**
 * Sets a vec3 with the intersection point of a ray3 and a Float32Array(4) sphere
 * - Returns null if there was no intersection, or the receiving vec3 if there was
 *
 * @author three.js authors (converted)
 * @param {vec3} out            - receiving vec3
 * @param {ray3} a              - source ray3
 * @param {sph3} s              - sphere
 * @returns {(null|vec3)} [out] - null or receiving vec3
 */


ray3.getIntersectSph3 = function (out, a, s) {
  let x = s[0] - a[0],
      y = s[1] - a[1],
      z = s[2] - a[2],
      r2 = s[3] * s[3];
  let tca = x * a[3] + y * a[4] + z * a[5];
  let d2 = x * x + y * y + z * z - tca * tca;
  if (d2 > r2) return null;
  let thc = Math.sqrt(r2 - d2);
  let t0 = tca - thc;
  let t1 = tca + thc;
  if (t0 < 0 && t1 < 0) return null;
  if (t0 < 0) return ray3.get(out, a, t1);
  return ray3.get(out, a, t0);
};
/**
 * Gets the origin component of a ray3
 *
 * @param {vec3} out
 * @param {ray3} a
 * @returns {vec3} out
 */


ray3.getOrigin = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].getMin;
/**
 * Checks for ray3 intersection with a Float32Array(6) box
 * TODO: Replace internals with intersectsBounds as this will get called more often
 * @param {ray3} a                - ray3
 * @param {(box3|Float32Array)} b - box
 * @returns {boolean}             - true if intersection occurs
 */

ray3.intersectsBox3 = function () {
  let vec3_0;
  return function (a, b) {
    if (!vec3_0) vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    return ray3.vec3_0 = ray3.getIntersectBox3(vec3_0, a, b) !== null;
  };
}();
/**
 * Checks for ray3 intersection with bounds
 *
 * @param {ray3} a     - ray3
 * @param {vec3} min  - box min bounds
 * @param {vec3} max  - box max bounds
 * @returns {boolean} - true if intersection occurs
 */


ray3.intersectsBounds = function () {
  let vec3_0;
  return function intersectsBounds(a, min, max) {
    if (!vec3_0) vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    return ray3.getIntersectBounds(vec3_0, a, min, max) !== null;
  };
}();
/**
 * Checks for ray3 intersection with a plane"s components
 *
 * @param {ray3} a    - source ray3
 * @param {vec3} n    - plane normal
 * @param {number} c  - plane constant
 * @returns {boolean} - true if intersection occurs
 */


ray3.intersectsNormalConstant = function (a, n, c) {
  let dist = a[0] * n[0] + a[1] * n[1] + a[2] * n[2] + c;
  return dist === 0 ? true : (n[0] * a[3] + n[1] * a[4] + n[2] * a[5]) * dist < 0;
};
/**
 * Checks for ray3 intersection with a Float32Array(4) plane
 *
 * @param {ray3} a    - source ray3
 * @param {pln} p     - plane
 * @returns {boolean} - true if intersection occurs
 */


ray3.intersectsPln = function (a, p) {
  let dist = a[0] * p[0] + a[1] * p[1] + a[2] * p[2] + p[3];
  return dist === 0 ? true : (p[0] * a[3] + p[1] * a[4] + p[2] * a[5]) * dist < 0;
};
/**
 * Checks for ray3 intersection with a sphere"s components
 *
 * @param {ray3} a     - source ray3
 * @param {vec3} p    - sphere position
 * @param {number} r  - sphere radius
 * @returns {boolean} - true if intersection occurs
 */


ray3.intersectsPositionRadius = function (a, p, r) {
  return ray3.distance(a, p) <= r;
};
/**
 * Checks for ray3 intersection with a Float32Array(4) Sphere
 *
 * @param {ray3} a              - source ray3
 * @param {sph3|Float32Array} s - sphere
 * @returns {boolean}           - true if intersection occurs
 */


ray3.intersectsSph3 = function (a, s) {
  return ray3.distance(a, s) <= s[3];
};
/**
 * Sets the direction of a ray3 to be looking at a specific point
 *
 * @param {ray3} out   - receiving ray3
 * @param {vec3} a     - source ray3
 * @param {vec3} p     - point to look at
 * @returns {ray3} out - receiving ray3
 */


ray3.lookAt = function (out, a, p) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = p[0] - a[0];
  out[4] = p[1] - a[1];
  out[5] = p[2] - a[2];
  return ray3.normalize(out, out);
};
/**
 * Sets a ray3 from the results of normalizing another
 *
 * @param {ray3} out   - receiving ray3
 * @param {ray3} a     - source ray3
 * @returns {ray3} out - receiving ray3
 */


ray3.normalize = function (out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  let x = a[3],
      y = a[4],
      z = a[5]; // Normalize the direction

  let len = x * x + y * y + z * z;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    out[3] = x * len;
    out[4] = y * len;
    out[5] = z * len;
  } else {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    throw new Error("Normalization error");
  }

  return out;
};
/**
 * Shifts the origin of a ray3 to be further down it"s direction
 *
 * @param {ray3} out  - receiving ray3
 * @param {ray3} a    - source ray3
 * @param {number} t - distance along the ray3
 * @returns {ray3}    - receiving ray3
 */


ray3.recast = function (out, a, t) {
  out[0] = a[0] + a[3] * t;
  out[1] = a[1] + a[4] * t;
  out[2] = a[2] + a[5] * t;
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
};
/**
 * Sets a ray3 from values
 *
 * @param {ray3} out
 * @param {vec3} startProp
 * @param {vec3} endProp
 * @returns {ray3} out
 */


ray3.set = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].set;
/**
 * Ray3 generic sorting
 *
 * @param {{}} a
 * @param {number} a.distance
 * @param {{}} b
 * @param {number} b.distance
 * @returns {number}
 */

ray3.SORT = function (a, b) {
  return a.distance - b.distance;
};
/**
 * Gets the squared distance from a ray3 to a point
 *
 * @author three.js authors (converted)
 * @param {ray3} a   - source ray3
 * @param {vec3} p   - point to measure distance to
 * @returns {number} - squared distance
 */


ray3.squaredDistance = function () {
  let vec3_0, vec3_1;
  return function distanceSquared(a, p) {
    if (!vec3_0) {
      vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    }

    vec3_0[0] = p[0] - a[0];
    vec3_0[1] = p[1] - a[1];
    vec3_0[2] = p[2] - a[2];
    let dirDist = vec3_0[0] * a[3] + vec3_0[1] * a[4] + vec3_0[2] * a[5];

    if (dirDist < 0) {
      ray3.getOrigin(vec3_1, a);
      return _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].squaredDistance(vec3_1, p); // could just pass in the ray3
    }

    ray3.get(vec3_0, a, dirDist);
    return _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].squaredDistance(vec3_0, p);
  };
}();
/**
 * Sets an array at at optional offset from a ray3
 *
 * @param {ray3} a
 * @param {Array} arr
 * @param {number} [index]
 * @returns {ray3} a
 */


ray3.toArray = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].toArray;
/**
 * Sets origin and direction vectors from a ray3
 *
 * @param {ray3} a
 * @param {vec3} origin
 * @param {vec3} direction
 * @returns {ray3} a
 */

ray3.toOriginDirection = function (a, origin, direction) {
  origin[0] = a[0];
  origin[1] = a[1];
  origin[2] = a[2];
  direction[0] = a[3];
  direction[1] = a[4];
  direction[2] = a[5];
  return a;
};
/**
 * Transforms a ray3 by a mat4
 *
 * @param {ray3} out   - receiving ray3
 * @param {vec3} a     - ray3 to transform
 * @param {mat4} m     - matrix to transform by
 */


ray3.transformMat4 = function (out, a, m) {
  let oX = a[0],
      oY = a[1],
      oZ = a[2],
      dX = a[3] + a[0],
      dY = a[4] + a[1],
      dZ = a[5] + a[2]; // Calculate w

  let oW = m[3] * oX + m[7] * oY + m[11] * oZ + m[15] || 1.0,
      dW = m[3] * dX + m[7] * dY + m[11] * dZ + m[15] || 1.0; // Transform origin

  out[0] = (m[0] * oX + m[4] * oY + m[8] * oZ + m[12]) / oW;
  out[1] = (m[1] * oX + m[5] * oY + m[9] * oZ + m[13]) / oW;
  out[2] = (m[2] * oX + m[6] * oY + m[10] * oZ + m[14]) / oW; // Transform direction

  out[3] = (m[0] * dX + m[4] * dY + m[8] * dZ + m[12]) / dW - out[0];
  out[4] = (m[1] * dX + m[5] * dY + m[9] * dZ + m[13]) / dW - out[1];
  out[5] = (m[2] * dX + m[6] * dY + m[10] * dZ + m[14]) / dW - out[2]; // Normalize direction

  return ray3.normalize(out, out);
};
/**
 * Translates a ray3
 *
 * @param {ray3} out
 * @param {ray3} a
 * @param {vec3} v
 * @returns {ray3} out
 */


ray3.translate = function (out, a, v) {
  out[0] = a[0] + v[0];
  out[1] = a[1] + v[1];
  out[2] = a[2] + v[2];
  return out;
};

/***/ }),

/***/ "./global/math/sph3.js":
/*!*****************************!*\
  !*** ./global/math/sph3.js ***!
  \*****************************/
/*! exports provided: sph3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sph3", function() { return sph3; });
/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony import */ var _vec4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec4 */ "./global/math/vec4.js");
/* harmony import */ var _mat4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4 */ "./global/math/mat4.js");
/* harmony import */ var _pln__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pln */ "./global/math/pln.js");
/* harmony import */ var _box3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./box3 */ "./global/math/box3.js");





/**
 * 3D Sphere
 * @typedef {Float32Array} sph3
 */

const sph3 = {}; // Scratch

let sph3_0 = null;
/**
 * Returns a subarray containing the position component of the sph3
 * - Why does webpack fail to resolve this if referencing pln.normal?
 *
 * @param {sph3} a
 * @returns {sph3}
 */

sph3.$position = _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].$normal;
/**
 * Clones a sphere
 *
 * @param {sph3} a
 * @returns {sph3}
 */

sph3.clone = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].clone;
/**
 * Checks if a sphere contains a point
 *
 * @param {sph3} a
 * @param {vec3} p
 * @returns {boolean}
 */

sph3.containsPoint = function (a, p) {
  let x = p[0] - a[0],
      y = p[1] - a[1],
      z = p[2] - a[2];
  return x * x + y * y + z * z <= a[3] * a[3];
};
/**
 * Copies a sphere
 *
 * @param {sph3} a
 * @param {sph3} b
 * @returns {sph3}
 */


sph3.copy = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].copy;
/**
 * Creates a sphere
 *
 * @returns {sph3}
 */

sph3.create = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].create;
/**
 * Returns the distance between two spheres
 *
 * @param {sph3} a
 * @param {sph3} b
 * @returns {number}
 */

sph3.distance = function (a, b) {
  let x = b[0] - a[0],
      y = b[1] - a[1],
      z = b[2] - a[2],
      rii = b[3] + a[3];
  return Math.sqrt(x * x + y * y + z * z) - rii;
};
/**
 * Returns the distance from a sphere to a given point
 *
 * @param {sph3} a
 * @param {vec3} p
 * @returns {number}
 */


sph3.distanceToPoint = function (a, p) {
  let x = p[0] - a[0],
      y = p[1] - a[1],
      z = p[2] - a[2];
  return Math.sqrt(x * x + y * y + z * z) - a[3];
};
/**
 * Empties a sphere
 * @param {sph3} a
 * @returns {sph3} a
 */


sph3.empty = function (a) {
  a[0] = 0;
  a[1] = 0;
  a[2] = 0;
  a[3] = 0;
  return a;
};
/**
 * Compares two sphere's for equality
 *
 * @param {sph3} a
 * @param {sph3} b
 * @returns {boolean}
 */


sph3.equals = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].equals;
/**
 * Compares a sphere to spherical components for equality
 *
 * @param {sph3} a
 * @param {vec3} position
 * @param {number} radius
 * @returns {boolean}
 */

sph3.equalsPositionRadius = _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].equalsNormalConstant;
/**
 * Compares two sphere for exact equality
 *
 * @param {sph3} a
 * @param {sph3} b
 * @returns {boolean}
 */

sph3.exactEquals = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].exactEquals;
/**
 * Compares a sphere to spherical components for exact equality
 *
 * @param {sph3} a
 * @param {vec3} position
 * @param {number} radius
 * @returns {boolean}
 */

sph3.exactEqualsPositionRadius = _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].exactEqualsNormalConstant;
/**
 * Extracts a spheres's components
 *
 * @param {sph3} a
 * @param {vec3} outPosition
 * @returns {number}
 */

sph3.extract = _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].extract;
/**
 * Sets a sphere from a box3
 *
 * @param {sph3} out
 * @param {box3} b
 * @return {sph3} out
 */

sph3.fromBox3 = function (out, b) {
  let sX = b[3] - b[0],
      sY = b[4] - b[1],
      sZ = b[5] - b[2];
  out[0] = (b[0] + b[3]) * 0.5;
  out[1] = (b[1] + b[4]) * 0.5;
  out[2] = (b[2] + b[5]) * 0.5;
  out[3] = Math.sqrt(sX * sX + sY * sY + sZ * sZ) * 0.5;
  return out;
};
/**
 * Sets a sphere from a box's bounds
 *
 * @param {sph3} out
 * @param {vec3} min
 * @param {vec3} max
 * @returns {sph3}
 */


sph3.fromBounds = function (out, min, max) {
  let sX = max[0] - min[0],
      sY = max[1] - min[1],
      sZ = max[2] - min[2];
  out[0] = (min[0] + max[0]) * 0.5;
  out[1] = (min[1] + max[1]) * 0.5;
  out[2] = (min[2] + max[2]) * 0.5;
  out[3] = Math.sqrt(sX * sX + sY * sY + sZ * sZ) * 0.5;
  return out;
};
/**
 * Helper method which creates a sph3 from an eve object's bounding box properties
 *
 * @param {sph3} out
 * @param {*} obj
 * @param {vec3} obj.minBounds
 * @param {vec3} obj.maxBounds
 * @param {mat4} [m]
 * @returns {sph3} out
 */


sph3.fromObjectBounds = function (out, obj, m) {
  if (obj.minBounds) {
    sph3.fromBounds(out, obj.minBounds, obj.maxBounds);
  } else if (obj._boundingBox) {
    sph3.fromBox3(out, obj._boundingBox);
  } else {
    throw new Error("Invalid object bounds");
  }

  if (m) {
    sph3.transformMat4(out, out, m);
  }

  return out;
};
/**
 * Helper method which creates a sph3 from an eve object's bounding sphere properties
 *
 * @param {sph3} out
 * @param {*} obj
 * @param {vec3} obj.boundsSpherePosition
 * @param {Number} obj.boundsSphereRadius
 * @param {mat4} [m]
 * @returns {sph3} out
 */


sph3.fromObjectPositionRadius = function (out, obj, m) {
  if (obj.boundsSpherePosition) {
    sph3.fromPositionRadius(out, obj.boundsSpherePosition, obj.boundsSphereRadius);
  } else if (obj.boundingSphereCenter) {
    sph3.fromPositionRadius(out, obj.boundingSphereCenter, obj.boundingSphereRadius);
  } else {
    throw new Error("Invalid object bounds");
  }

  if (m) {
    sph3.transformMat4(out, out, m);
  }

  return out;
};
/**
 * Sets a sphere from position and radius
 *
 * @param {sph3} out
 * @param {vec3} p
 * @param {number} r
 * @returns {sph3} out
 */


sph3.fromPositionRadius = _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].fromNormalConstant;
/**
 * Sets a sphere from a mat4's translation and a given radius
 *
 * @param {sph3} out
 * @param {(mat4|vec3)} a
 * @param {number} radius
 * @returns {sph3} out
 */

sph3.fromTranslationRadius = function (out, a, radius) {
  out[0] = a[12];
  out[1] = a[13];
  out[2] = a[14];
  out[3] = radius;
  return out;
};
/**
 * Gets a sphere from a mat4's translation and max axis scale
 *
 * @param {sph3} out
 * @param {mat4} m
 * @returns {sph3} out
 */


sph3.fromMat4 = function (out, m) {
  out[0] = m[12];
  out[1] = m[13];
  out[2] = m[14];
  out[3] = _mat4__WEBPACK_IMPORTED_MODULE_2__["mat4"].maxScaleOnAxis(m);
  return out;
};
/**
 * Gets a point clamped to the sphere
 *
 * @author three.js authors (conversion)
 * @param {vec3} out
 * @param {sph3} a
 * @param {vec3} p
 * @returns {vec3} out
 */


sph3.getClampedPoint = function (out, a, p) {
  out[0] = p[0];
  out[1] = p[1];
  out[2] = p[2];
  let x = a[0] - p[0],
      y = a[1] - p[1],
      z = a[2] - p[2];

  if (x * x + y * y + z * z > a[3] * a[3]) {
    out[0] = out[0] - a[0];
    out[1] = out[1] - a[1];
    out[2] = out[2] - a[2];
    _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(out, out);
    out[0] = out[0] * a[3] + a[0];
    out[1] = out[1] * a[3] + a[1];
    out[2] = out[2] * a[3] + a[2];
  }

  return out;
};
/**
 * Gets the position of a point on a sphere from longitude and latitude
 *
 * @param {vec3} out
 * @param {sph3} a
 * @param {number} longitude
 * @param {number} latitude
 * @returns {vec3} out
 */


sph3.getPointFromLongLat = function (out, a, longitude, latitude) {
  out[0] = a[0] + a[3] * Math.sin(latitude) * Math.cos(longitude);
  out[1] = a[1] + a[3] * Math.sin(latitude) * Math.sin(longitude);
  out[2] = a[2] + a[3] * Math.cos(latitude);
  return out;
};
/**
 * Gets the position component of a sph3
 *
 * @param {vec3} out
 * @param {sph3} a
 * @returns {vec3} out
 */


sph3.getPosition = _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].getNormal;
/**
 * Checks for intersection between two sph3s
 *
 * @param {sph3} a
 * @param {sph3} b
 * @returns {boolean}
 */

sph3.intersectsSph3 = function (a, b) {
  let x = b[0] - a[0],
      y = b[1] - a[1],
      z = b[2] - a[2];
  let radii = a[3] + b[3];
  return x * x + y * y + z * z <= radii * radii;
};
/**
 * Checks for intersection with a box3
 *
 * @param {sph3} a
 * @param {box3} b
 * @returns {boolean}
 */


sph3.intersectsBox3 = function (a, b) {
  return _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].intersectsSph3(b, a);
};
/**
 * Checks sph for intersection with a boxes' bounds
 *
 * @param {sph3} a
 * @param {vec3} min
 * @param {vec3} max
 * @returns {boolean}
 */


sph3.intersectsBounds = function (a, min, max) {
  let x = Math.max(min[0], Math.min(max[0], a[0])) - a[0],
      y = Math.max(min[1], Math.min(max[1], a[1])) - a[1],
      z = Math.max(min[2], Math.min(max[2], a[2])) - a[2];
  return x * x + y * y + z * z <= a[3] * a[3];
};
/**
 * Checks sph for intersection with a sphere's components
 *
 * @param {sph3} a
 * @param {vec3} p
 * @param {number} r
 * @returns {boolean}
 */


sph3.intersectsPositionRadius = function (a, p, r) {
  let x = p[0] - a[0],
      y = p[1] - a[1],
      z = p[2] - a[2];
  let radii = a[3] + r;
  return x * x + y * y + z * z <= radii * radii;
};
/**
 * Checks for intersection with a Float32Array(4) plane
 *
 * @param {sph3} a
 * @param {pln} p
 * @returns {boolean}
 */


sph3.intersectsPln = function (a, p) {
  return _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].intersectsSph3(p, a);
};
/**
 * Checks for intersection with a plane's components
 *
 * @param {sph3} a   - sphere to intersect
 * @param {vec3} n   - plane normal
 * @param {number} c - plane constant
 * @returns {boolean}
 */


sph3.intersectsNormalConstant = function (a, n, c) {
  let dot = a[0] * n[0] + a[1] * n[1] + a[2] * n[2];
  return Math.abs(dot - c) <= a[3];
};
/**
 * Checks if a sph3 is empty
 *
 * @param {sph3} a
 * @returns {boolean}
 */


sph3.isEmpty = function (a) {
  return a[3] <= 0;
};
/**
 * Returns the radius component of the sph3
 *
 * @param {sph3} a
 * @returns {number}
 */


sph3.radius = _pln__WEBPACK_IMPORTED_MODULE_3__["pln"].constant;
/**
 * Sets a sph3 from values
 *
 * @param {sph3} out
 * @param {number} px
 * @param {number} py
 * @param {number} pz
 * @param {number} r
 * @returns {sph3}
 */

sph3.set = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].set;
/**
 * Sets a sph3 from an array at an optional offset
 *
 * @param {sph3} out
 * @param {Array} arr
 * @param {number} [index=0]
 * @returns {sph3} out
 */

sph3.setArray = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].setArray;
/**
 * Sets a sphere from points, at an optional position vector
 *
 * @param {sph3} out        - the receiving sphere
 * @param {Array} points    - The points to create the sphere from
 * @param {vec3} [position] - An optional center position
 * @returns {sph3} out      - the receiving sphere
 */

sph3.setPoints = function () {
  let box3_0;
  return function (out, points, position) {
    if (!box3_0) box3_0 = _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].create();

    if (position) {
      out[0] = position[0];
      out[1] = position[1];
      out[2] = position[2];
    } else {
      _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].setPoints(box3_0, points);
      out[0] = (box3_0[0] + box3_0[3]) * 0.5;
      out[1] = (box3_0[1] + box3_0[4]) * 0.5;
      out[2] = (box3_0[2] + box3_0[5]) * 0.5;
    }

    let maxSquaredRadius = 0;

    for (let i = 0; i < points.length; i++) {
      let x = out[0] - points[i][0],
          y = out[1] - points[i][1],
          z = out[2] - points[i][2];
      maxSquaredRadius = Math.max(maxSquaredRadius, x * x + y * y + z * z);
    }

    out[3] = Math.sqrt(maxSquaredRadius);
    return out;
  };
}();
/**
 * Returns the squared distance between two sph3s
 *
 * @param {sph3} a
 * @param {sph3} b
 * @returns {number}
 */


sph3.squaredDistance = function (a, b) {
  let x = b[0] - a[0],
      y = b[1] - a[1],
      z = b[2] - a[2],
      r = b[3] + a[3];
  return x * x + y * y + z * z - r * r;
};
/**
 * Returns the square distance from a sphere to a given point
 *
 * @param {sph3} a
 * @param {vec3} p
 * @returns {number}
 */


sph3.squaredDistanceToPoint = function (a, p) {
  let x = p[0] - a[0],
      y = p[1] - a[1],
      z = p[2] - a[2];
  return x * x + y * y + z * z - a[3];
};
/**
 * Sets an array at an optional offset, with the values of a sph3
 *
 * @param {sph3} a
 * @param {Array} arr
 * @param {number} [offset = 0]
 * @returns {sph3} a
 */


sph3.toArray = _vec4__WEBPACK_IMPORTED_MODULE_1__["vec4"].toArray;
/**
 *
 *
 * @param {sph3} a
 * @param {*} obj
 * @param {vec3} obj.minBounds
 * @param {vec3} obj.maxBounds
 * @param {mat4} [m]
 */

sph3.toObjectBounds = function (a, obj, m) {
  const has = obj.minBounds || obj._boundingBox;

  if (!has) {
    throw new Error("Invalid object bounds");
  }

  if (m) {
    if (!sph3_0) sph3_0 = sph3.create();
    a = sph3.transformMat4(sph3_0, a, m);
  }

  if (obj.minBounds) {
    sph3.toBounds(a, obj.minBounds, obj.maxBounds);
  } else {
    _box3__WEBPACK_IMPORTED_MODULE_4__["box3"].fromSph3(obj._boundingBox, a);
  }
};
/**
 *
 *
 * @param {sph3} a
 * @param {*} obj
 * @param {vec3} obj.boundsSpherePosition
 * @param {Number} obj.boundsSphereRadius
 * @param {mat4} [m]
 */


sph3.toObjectPositionRadius = function (a, obj, m) {
  if (m) {
    if (!sph3_0) sph3_0 = sph3.create();
    a = sph3.transformMat4(sph3_0, a, m);
  }

  if (obj.boundsSpherePosition) {
    obj.boundsSphereRadius = sph3.toPositionRadius(a, obj.boundsSpherePosition);
    return;
  } else if (obj.boundingSphereCenter) {
    obj.boundingSphereRadius = sph3.toPositionRadius(a, obj.boundingSphereCenter);
    return;
  }

  throw new Error("Invalid object bounds");
};
/**
 * Transforms a sphere with a mat4
 *
 * @author three.js authors (conversion)
 * @param {sph3} out - the receiving sphere
 * @param {sph3} a   - the sphere to transform
 * @param {mat4} m   - the matrix to transform by
 * @returns {sph3}
 */


sph3.transformMat4 = function (out, a, m) {
  let x = a[0],
      y = a[1],
      z = a[2];
  let sX = m[0] * m[0] + m[1] * m[1] + m[2] * m[2],
      sY = m[4] * m[4] + m[5] * m[5] + m[6] * m[6],
      sZ = m[8] * m[8] + m[9] * m[9] + m[10] * m[10];
  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12];
  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13];
  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14];
  out[3] = a[3] * Math.sqrt(Math.max(sX, sY, sZ));
  return out;
};
/**
 * Returns the result of a sphere translated by a given vector
 *
 * @param {sph3} out - the receiving sphere
 * @param {sph3} a   - the sphere to translate
 * @param {vec3} v   - the vector to translate with
 * @returns {sph3}
 */


sph3.translate = function (out, a, v) {
  out[0] = a[0] + v[0];
  out[1] = a[1] + v[1];
  out[2] = a[2] + v[2];
  return out;
};

/***/ }),

/***/ "./global/math/tri3.js":
/*!*****************************!*\
  !*** ./global/math/tri3.js ***!
  \*****************************/
/*! exports provided: tri3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tri3", function() { return tri3; });
/* harmony import */ var _vec3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vec3 */ "./global/math/vec3.js");
/* harmony import */ var _mat3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat3 */ "./global/math/mat3.js");
/* harmony import */ var _pln__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pln */ "./global/math/pln.js");
/* harmony import */ var _lne3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lne3 */ "./global/math/lne3.js");




/**
 * 3d Triangle
 *
 * @typedef {Float32Array} tri3
 */

const tri3 = {};
/**
 * Gets a subarray of a tri3's first vertex
 *
 * @param {tri3} a
 * @returns {vec3}
 */

tri3.$v1 = _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].$start;
/**
 * Gets a subarray of a tri3's second vertex
 *
 * @param {tri3} a
 * @returns {vec3}
 */

tri3.$v2 = _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].$end;
/**
 * Gets a subarray of a tri3's third vertex
 *
 * @param {tri3} a
 * @returns {vec3}
 */

tri3.$v3 = function (a) {
  return a.subarray(6, 9);
};
/**
 * Gets the area of a triangle
 *
 * @param {tri3} a
 * @returns {number}
 */


tri3.area = function (a) {
  let ax = a[7] - a[3],
      ay = a[8] - a[4],
      az = a[9] - a[5],
      bx = a[0] - a[3],
      by = a[1] - a[4],
      bz = a[2] - a[5]; // Cross product

  let x = ax * bz - az * by,
      y = az * bx - ax * bz,
      z = ax * by - ay * bx; // Return half length

  return Math.sqrt(x * x + y * y + z * z) * 0.5;
};
/**
 * Creates a tri3
 *
 * @returns {tri3}
 */


tri3.create = function () {
  let out = new Float32Array(9);
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  return out;
};
/**
 * Clones a tri3
 *
 * @param {tri3} a
 * @returns {tri3}
 */


tri3.clone = _mat3__WEBPACK_IMPORTED_MODULE_1__["mat3"].clone;
/**
 * Checks if a tri3 contains a point
 *
 * @param {tri3} a
 * @param {vec3} point
 * @returns {boolean}
 */

tri3.contains = function () {
  let vec3_0;
  return function (a, point) {
    if (!vec3_0) vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    tri3.getBaryCentricCoordinates(vec3_0, a, point);
    return vec3_0[0] >= 0 && vec3_0[1] >= 0 && vec3_0[0] + vec3_0[1] <= 1;
  };
}();
/**
 * Copies a tri3
 *
 * @param {tri3} a
 * @param {tri3} b
 * @returns {tri3} a
 */


tri3.copy = _mat3__WEBPACK_IMPORTED_MODULE_1__["mat3"].copy;
/**
 * Sets a tri3 from vertices
 *
 * @param {tri3} out
 * @param {vec3} v1
 * @param {vec3} v2
 * @param {vec3} v3
 * @returns {tri3} out
 */

tri3.fromVertices = function (out, v1, v2, v3) {
  out[0] = v1[0];
  out[1] = v1[1];
  out[2] = v1[2];
  out[3] = v2[0];
  out[4] = v2[1];
  out[5] = v2[2];
  out[6] = v3[0];
  out[7] = v3[1];
  out[8] = v3[2];
  return out;
};
/**
 * Sets a tri3 from an array at an option offset
 *
 * @param {tri3} out
 * @param {Array} arr
 * @param {number} [offset=0]
 * @returns {tri3} out
 */


tri3.fromArray = _mat3__WEBPACK_IMPORTED_MODULE_1__["mat3"].fromArray;
/**
 * Gets bary centric coordinates
 *
 * @author three.js (converted)
 * @param {tri3} out
 * @param {tri3} a
 * @param {vec3} point
 * @returns {tri3} out
 */

tri3.getBaryCentricCoordinates = function (out, a, point) {
  let ax = a[7] - a[0],
      ay = a[8] - a[1],
      az = a[9] - a[2],
      bx = a[3] - a[0],
      by = a[4] - a[1],
      bz = a[5] - a[2],
      cx = point[0] - a[0],
      cy = point[1] - a[1],
      cz = point[2] - a[2];
  let dot00 = ax[0] * ax[0] + ay[1] * ay[1] + az[2] * az[2],
      dot01 = ax[0] * bx[0] + ay[1] * by[1] + az[2] * bz[2],
      dot02 = ax[0] * cx[0] + ay[1] * cy[1] + az[2] * cz[2],
      dot11 = bx[0] * bx[0] + by[1] * by[1] + bz[2] * bz[2],
      dot12 = bx[0] * cx[0] + by[1] * cy[1] + bz[2] * cz[2];
  let denom = dot00 * dot11 - dot01 * dot01;

  if (denom === 0) {
    out[0] = -2;
    out[1] = -1;
    out[2] = -1;
    throw new Error("Denominator error");
  } else {
    let invDenom = 1 / denom;
    let u = (dot11 * dot02 - dot01 * dot12) * invDenom;
    let v = (dot00 * dot12 - dot01 * dot02) * invDenom;
    out[0] = 1 - u - v;
    out[1] = v;
    out[2] = u;
  }

  return out;
};
/**
 *
 * @author three.js (converted)
 * @param {lne3} out
 * @param {tri3} a
 * @param {vec3} point
 * @returns {*}
 */


tri3.getClosestEdgeToPoint = function () {
  let v0, v1, edgeList;
  return function getClosestEdgeToPoint(out, a, point) {
    if (!v0) {
      v0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      v1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      edgeList = [_lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].create(), _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].create(), _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].create()];
    } // Get the closest point on the triangle to the supplied point


    let closestPointOnTriangle = tri3.getClosestPointToPoint(v0, a, point); // Convert the triangle's vertices to edges

    _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].set(edgeList[0], a[0], a[1], a[2], a[3], a[4], a[5]); // vert a - vert b

    _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].set(edgeList[1], a[3], a[4], a[5], a[6], a[7], a[8]); // vert b - vert c

    _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].set(edgeList[2], a[6], a[7], a[8], a[0], a[1], a[2]); // vert c - vert a

    let minDistance = Infinity;

    for (let i = 0; i < edgeList.length; i++) {
      // Get the closest point on the triangles edge to the closest point on the triangle to the supplied point
      let closestPointOnLine = _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].getClosestPointToPoint(v1, edgeList[i], closestPointOnTriangle, true);
      let distance = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].squaredDistance(closestPointOnLine, closestPointOnTriangle);

      if (distance < minDistance) {
        minDistance = distance;
        out[0] = edgeList[i][0];
        out[1] = edgeList[i][1];
        out[2] = edgeList[i][2];
        out[3] = edgeList[i][3];
        out[4] = edgeList[i][4];
        out[5] = edgeList[i][5];
      }
    }

    return out;
  };
}();
/**
 * Gets the closest point on a triangle to another point
 *
 * @author three.js (converted)
 * @param {vec3} out      - receiving vec3
 * @param {vec3} a        - tri3 to operate on
 * @param {vec3} point    - the point
 * @returns {vec3} vecOut - receiving vec3
 */


tri3.getClosestPointToPoint = function () {
  let plane, edgeList, projectedPoint, closestPoint, vec3_0, vec3_1, vec3_2;
  return function getClosestPointToPoint(out, a, point) {
    if (!plane) {
      plane = _pln__WEBPACK_IMPORTED_MODULE_2__["pln"].create();
      edgeList = [_lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].create(), _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].create(), _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].create()];
      projectedPoint = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      closestPoint = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_2 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    } // Replace with subarray tri3.v1 .v2 .v3 ?


    tri3.getV1(vec3_0, a);
    tri3.getV2(vec3_1, a);
    tri3.getV3(vec3_2, a); // project the point onto the plane of the triangle

    _pln__WEBPACK_IMPORTED_MODULE_2__["pln"].fromCoplanarPoints(plane, vec3_0, vec3_1, vec3_2);
    _pln__WEBPACK_IMPORTED_MODULE_2__["pln"].getProjectedPoint(projectedPoint, plane, point); // check if the projection lies within the triangle

    if (tri3.contains(a, projectedPoint) === true) {
      out[0] = projectedPoint[0];
      out[1] = projectedPoint[1];
      out[2] = projectedPoint[2];
    } // if not, the point falls outside the triangle.
    // the result is the closest point to the triangle's edges or vertices
    else {
        _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].set(edgeList[0], a[0], a[1], a[2], a[3], a[4], a[5]);
        _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].set(edgeList[1], a[3], a[4], a[5], a[6], a[7], a[8]);
        _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].set(edgeList[2], a[6], a[7], a[8], a[0], a[1], a[2]);
        let minDistance = Infinity;

        for (let i = 0; i < edgeList.length; i++) {
          _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].getClosestPointToPoint(closestPoint, edgeList[i], projectedPoint, true);
          let distance = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].squaredDistance(projectedPoint, closestPoint);

          if (distance < minDistance) {
            minDistance = distance;
            out[0] = closestPoint[0];
            out[1] = closestPoint[1];
            out[2] = closestPoint[2];
          }
        }
      }

    return out;
  };
}();
/**
 * Gets the closest vertex to a given point
 *
 * @param {vec3} out
 * @param {tri3} a
 * @param {vec3} point
 * @returns {vec3} out
 */


tri3.getClosestVertexToPoint = function () {
  let vec3_0, vec3_1, vec3_2;
  return function (out, a, point) {
    if (!vec3_0) {
      vec3_0 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_1 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
      vec3_2 = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    } // Get the closest point on the triangle to the supplied point


    tri3.getClosestPointToPoint(out, a, point);
    let minDistance = Infinity,
        distance,
        x,
        y,
        z,
        vertices = [tri3.getV1(vec3_0, a), tri3.getV2(vec3_1, a), tri3.getV3(vec3_2, a)]; // Find the closest triangle vertex

    for (let i = 0; i < vertices.length; i++) {
      distance = _vec3__WEBPACK_IMPORTED_MODULE_0__["vec3"].squaredDistance(vertices[i], out);

      if (distance < minDistance) {
        minDistance = distance;
        x = vertices[i][0];
        y = vertices[i][1];
        z = vertices[i][2];
      }
    }

    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
  };
}();
/**
 * Sets a vec3 as the midpoint of a triangle
 *
 * @param {vec3} out    - receiving vec3
 * @param {tri3} a      - tri3 to get the midpoint of         -
 * @returns {vec3} out  - receiving vec3
 */


tri3.getMidpoint = function (out, a) {
  let s = 1 / 3;
  out[0] = (a[0] + a[3] + a[6]) * s;
  out[1] = (a[1] + a[4] + a[7]) * s;
  out[2] = (a[2] + a[5] + a[8]) * s;
  return out;
};
/**
 * Gets a triangle's normal
 *
 * @param {vec3} out
 * @param {tri3} a
 * @returns {vec3} out
 */


tri3.getNormal = function (out, a) {
  let ax = a[7] - a[3],
      ay = a[8] - a[4],
      az = a[9] - a[5],
      bx = a[0] - a[3],
      by = a[1] - a[4],
      bz = a[2] - a[5]; // Get cross product

  let x = ay * bz - az * by,
      y = az * bx - ax * bz,
      z = ax * by - ay * bx; // Normalize

  let len = x * x + y * y + z * z;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    out[0] = x * len;
    out[1] = y * len;
    out[2] = z * len;
  } else {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    throw new Error("Normalization error");
  }

  return out;
};
/**
 * Sets a vec3 with the tri3's first vert
 *
 * @param {vec3} out     - receiving vec3
 * @param {tri3} a       - source tri3
 * @returns {vec3} [out] - receiving vec3
 */


tri3.getV1 = _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].getStart;
/**
 * Sets a vec3 with the tri3's second vert
 *
 * @param {vec3} out     - receiving vec3
 * @param {tri3} a       - source tri3
 * @returns {vec3} [out] - receiving vec3
 */

tri3.getV2 = _lne3__WEBPACK_IMPORTED_MODULE_3__["lne3"].getEnd;
/**
 * Sets a vec3 with the tri3's third vert
 *
 * @param {vec3} out     - receiving vec3
 * @param {tri3} v       - source tri3
 * @returns {vec3} [out] - receiving vec3
 */

tri3.getV3 = function (out, v) {
  out[0] = v[6];
  out[1] = v[7];
  out[2] = v[8];
  return out;
};
/**
 * Sets an array at an optional offset
 *
 * @param {mat3} a
 * @param {Array} arr
 * @param {number} [index=0]
 * @returns {mat3} a
 */


tri3.toArray = _mat3__WEBPACK_IMPORTED_MODULE_1__["mat3"].toArray;
/**
 * Extracts the vertices of a tri3
 *
 * @param {tri3} a
 * @param {vec3} v1
 * @param {vec3} v2
 * @param {vec3} v3
 */

tri3.toVertices = function (a, v1, v2, v3) {
  v1[0] = a[0];
  v1[1] = a[1];
  v1[2] = a[2];
  v2[0] = a[0];
  v2[1] = a[1];
  v2[2] = a[2];
  v3[0] = a[0];
  v3[1] = a[1];
  v3[2] = a[2];
  return a;
};

/***/ }),

/***/ "./global/math/vec2.js":
/*!*****************************!*\
  !*** ./global/math/vec2.js ***!
  \*****************************/
/*! exports provided: vec2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/lib/gl-matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec2", function() { return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"]; });



/**
 * Adds a scalar to a vec2
 *
 * @param {vec2} out
 * @param {vec2} a
 * @param {Number} s
 * @returns {vec2} out
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"].addScalar = function (out, a, s) {
  out[0] = a[0] + s;
  out[1] = a[1] + s;
  return out;
};
/**
 * Checks if a vector2 is empty
 * @param {vec2} a
 * @returns {boolean}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"].isEmpty = function (a) {
  return a[0] === 0 && a[1] === 0;
};
/**
 * Divides a vec2 by a scalar
 *
 * @param {vec2} out
 * @param {vec2} a
 * @param {Number} s
 * @returns {vec2} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"].divideScalar = function (out, a, s) {
  return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"].multiplyScalar(out, a, 1 / s);
};
/**
 * Multiplies a vec2 by a scalar
 *
 * @param {vec2} out
 * @param {vec2} a
 * @param {Number} s
 * @returns {vec2} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"].multiplyScalar = function (out, a, s) {
  out[0] = a[0] * s;
  out[1] = a[1] * s;
  return out;
};
/**
 * Sets a vec2 from a scalar
 *
 * @param {vec2} out
 * @param {Number} s
 * @returns {vec2} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"].setScalar = function (out, s) {
  out[0] = s;
  out[1] = s;
  return out;
};
/**
 * Subtracts a scalar from a vec2
 *
 * @param {vec2} out
 * @param {vec2} a
 * @param {Number} s
 * @returns {vec2} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec2"].subtractScalar = function (out, a, s) {
  out[0] = a[0] - s;
  out[1] = a[1] - s;
  return out;
};

/***/ }),

/***/ "./global/math/vec3.js":
/*!*****************************!*\
  !*** ./global/math/vec3.js ***!
  \*****************************/
/*! exports provided: vec3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/lib/gl-matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec3", function() { return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"]; });

/* harmony import */ var _num__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./num */ "./global/math/num.js");



/**
 * X_AXIS
 * @type {vec3}
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].X_AXIS = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 0, 0);
/**
 * Y Axis
 * @type {vec3}
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].Y_AXIS = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 1, 0);
/**
 * Z Axis
 * @type {vec3}
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].Z_AXIS = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(0, 0, 1);
/**
 * Vector 3
 * @typedef {Float32Array} vec3
 */

/**
 * Adds a scalar to a vec3
 *
 * @param {vec3} out
 * @param {vec3} a
 * @param {Number} s
 * @returns {vec3} out
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].addScalar = function (out, a, s) {
  out[0] = a[0] + s;
  out[1] = a[1] + s;
  out[2] = a[2] + s;
  return out;
};
/**
 * Converts radians to degrees
 *
 * @param {vec3} out
 * @param {vec3} a
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].degrees = function (out, a) {
  out[0] = a[0] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].RAD2DEG;
  out[1] = a[1] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].RAD2DEG;
  out[2] = a[2] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].RAD2DEG;
  return out;
};
/**
 * Converts radians to unwrapped degrees
 *
 * @param {vec3} out
 * @param {vec3} a
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].degreesUnwrapped = function (out, a) {
  out[0] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapDegrees(a[0] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].RAD2DEG);
  out[1] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapDegrees(a[1] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].RAD2DEG);
  out[2] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapDegrees(a[2] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].RAD2DEG);
  return out;
};
/**
 * Gets normalized direction between two points
 * @param {vec3} out
 * @param {vec3} a
 * @param {vec3} b
 * @returns {vec3}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].direction = function (out, a, b) {
  gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtract(out, a, b);
  gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(out, out);
  return out;
};
/**
 * Gets the direction from a quat
 * @param {vec3} axis
 * @param {vec3} up
 * @param {quat} q
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].directionFromQuat = function (out, axis, q) {
  return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformQuat(out, axis, q);
};
/**
 * Gets the direction from a mat4's axis
 * @param {vec3} out
 * @param {vec3} axis
 * @param {mat4} m
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].directionFromMat4 = function () {
  let quat_0;
  return function directionFromMat4Axis(out, axis, m) {
    if (!quat_0) quat_0 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].getRotation(quat_0, m);
    return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformQuat(out, axis, quat_0);
  };
}();
/**
 * Divides a vec3 by a scalar
 *
 * @param {vec3} out
 * @param {vec3} a
 * @param {Number} s
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].divideScalar = function (out, a, s) {
  return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].multiplyScalar(out, a, 1 / s);
};
/**
 * Euler functions
 * @type {{*}}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler = {};
/**
 * Default euler order
 * @type {string}
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.DEFAULT_ORDER = "XYZ";
/**
 * Sets a euler from a quat
 *
 * @param {vec3} out
 * @param {quat} q
 * @param {string} [order=vec3.euler.DEFAULT_ORDER]
 * @returns {vec3} out
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.fromQuat = function () {
  let mat4_0;
  return function fromQuat(out, q, order = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.DEFAULT_ORDER) {
    if (!mat4_0) mat4_0 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["mat4"].fromQuat(mat4_0, q);
    return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.fromMat4(out, mat4_0, order);
  };
}();
/**
 * Sets a euler from a mat4
 *
 * @author three.js (converted)
 * @param {vec3} out
 * @param {mat4} m
 * @param {string} [order=vec3.euler.DEFAULT_ORDER]
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.fromMat4 = function (out, m, order = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.DEFAULT_ORDER) {
  const m11 = m[0],
        m12 = m[4],
        m13 = m[8],
        m21 = m[1],
        m22 = m[5],
        m23 = m[9],
        m31 = m[2],
        m32 = m[6],
        m33 = m[10];
  const clamp = _num__WEBPACK_IMPORTED_MODULE_1__["num"].clamp;

  if (order === "XYZ") {
    out[1] = Math.asin(clamp(m13, -1, 1));

    if (Math.abs(m13) < 0.99999) {
      out[0] = Math.atan2(-m23, m33);
      out[2] = Math.atan2(-m12, m11);
    } else {
      out[0] = Math.atan2(m32, m22);
      out[2] = 0;
    }
  } else if (order === "YXZ") {
    out[0] = Math.asin(-clamp(m23, -1, 1));

    if (Math.abs(m23) < 0.99999) {
      out[1] = Math.atan2(m13, m33);
      out[2] = Math.atan2(m21, m22);
    } else {
      out[1] = Math.atan2(-m31, m11);
      out[2] = 0;
    }
  } else if (order === "ZXY") {
    out[0] = Math.asin(clamp(m32, -1, 1));

    if (Math.abs(m32) < 0.99999) {
      out[1] = Math.atan2(-m31, m33);
      out[2] = Math.atan2(-m12, m22);
    } else {
      out[1] = 0;
      out[2] = Math.atan2(m21, m11);
    }
  } else if (order === "ZYX") {
    out[1] = Math.asin(-clamp(m31, -1, 1));

    if (Math.abs(m31) < 0.99999) {
      out[0] = Math.atan2(m32, m33);
      out[2] = Math.atan2(m21, m11);
    } else {
      out[0] = 0;
      out[2] = Math.atan2(-m12, m22);
    }
  } else if (order === "YZX") {
    out[2] = Math.asin(clamp(m21, -1, 1));

    if (Math.abs(m21) < 0.99999) {
      out[0] = Math.atan2(-m23, m22);
      out[1] = Math.atan2(-m31, m11);
    } else {
      out[0] = 0;
      out[1] = Math.atan2(m13, m33);
    }
  } else if (order === "XZY") {
    out[2] = Math.asin(-clamp(m12, -1, 1));

    if (Math.abs(m12) < 0.99999) {
      out[0] = Math.atan2(m32, m22);
      out[1] = Math.atan2(m13, m11);
    } else {
      out[0] = Math.atan2(-m23, m33);
      out[1] = 0;
    }
  } else {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    throw new Error("Unrecognised euler order: " + order);
  }

  return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].unwrapRadians(out, out);
};
/**
 * Gets a quat from a euler
 * - Differs from quat.getEuler as it allows for different euler ordering
 *
 * - http://www.mathworks.com/matlabcentral/fileexchange/
 * - 20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
 * - content/SpinCalc.m
 *
 * @param {quat} out
 * @param {vec3} euler
 * @param [order=vec3.euler.DEFAULT_ORDER]
 * @returns {quat} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.getQuat = function (out, euler, order = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].euler.DEFAULT_ORDER) {
  const x = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(euler[0]),
        y = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(euler[1]),
        z = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(euler[2]);
  const cosYaw = Math.cos(x / 2),
        cosPitch = Math.cos(y / 2),
        cosRoll = Math.cos(z / 2),
        sinYaw = Math.sin(x / 2),
        sinPitch = Math.sin(y / 2),
        sinRoll = Math.sin(z / 2);

  if (order === "XYZ") {
    out[0] = sinYaw * cosPitch * cosRoll + cosYaw * sinPitch * sinRoll;
    out[1] = cosYaw * sinPitch * cosRoll - sinYaw * cosPitch * sinRoll;
    out[2] = cosYaw * cosPitch * sinRoll + sinYaw * sinPitch * cosRoll;
    out[3] = cosYaw * cosPitch * cosRoll - sinYaw * sinPitch * sinRoll;
  } else if (order === "YXZ") {
    out[0] = sinYaw * cosPitch * cosRoll + cosYaw * sinPitch * sinRoll;
    out[1] = cosYaw * sinPitch * cosRoll - sinYaw * cosPitch * sinRoll;
    out[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;
    out[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;
  } else if (order === "ZXY") {
    out[0] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;
    out[1] = cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll;
    out[2] = cosYaw * cosPitch * sinRoll + sinYaw * sinPitch * cosRoll;
    out[3] = cosYaw * cosPitch * cosRoll - sinYaw * sinPitch * sinRoll;
  } else if (order === "ZYX") {
    out[0] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;
    out[1] = cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll;
    out[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;
    out[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;
  } else if (order === "YZX") {
    out[0] = sinYaw * cosPitch * cosRoll + cosYaw * sinPitch * sinRoll;
    out[1] = cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll;
    out[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;
    out[3] = cosYaw * cosPitch * cosRoll - sinYaw * sinPitch * sinRoll;
  } else if (order === "XZY") {
    out[0] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;
    out[1] = cosYaw * sinPitch * cosRoll - sinYaw * cosPitch * sinRoll;
    out[2] = cosYaw * cosPitch * sinRoll + sinYaw * sinPitch * cosRoll;
    out[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;
  } else {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 1;
    throw new Error("Unrecognised euler order: " + order);
  }

  return out;
};
/**
 * Exponential decay
 *
 * @param {vec3} out
 * @param {vec3} omega0
 * @param {vec3} torque
 * @param {number} I
 * @param {number} drag
 * @param {number} time
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].exponentialDecay = function (out, omega0, torque, I, drag, time) {
  out[0] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].exponentialDecay(omega0[0], torque[0], I, drag, time);
  out[1] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].exponentialDecay(omega0[1], torque[1], I, drag, time);
  out[2] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].exponentialDecay(omega0[2], torque[2], I, drag, time);
  return out;
};
/**
 * Sets a vec3 with cartesian coordinates from spherical coordinates and an optional center point
 * @param {vec3} out       - receiving vec3
 * @param {vec3} spherical - source vec3 with spherical coordinates (phi, theta, radius)
 * @param {vec3} [center]  - Optional center
 * @returns {vec3} out     - receiving vec3
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromSpherical = function (out, spherical, center) {
  const phi = spherical[0],
        theta = spherical[1],
        radius = spherical[2];
  out[0] = radius * Math.sin(phi) * Math.sin(theta);
  out[1] = radius * Math.cos(theta);
  out[2] = radius * Math.cos(phi) * Math.sin(theta);

  if (center) {
    out[0] += center[0];
    out[1] += center[1];
    out[2] += center[2];
  }

  return out;
};
/**
 * Gets spherical coordinates from a vector
 * @param {vec3} out
 * @param {vec3} a
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].getSpherical = function (out, a) {
  let phi = 0,
      theta = 0,
      radius = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].length(a);

  if (radius !== 0) {
    phi = Math.acos(Math.max(a[1] / radius, Math.min(-1, 1)));
    theta = Math.atan2(a[0], a[2]);
  }

  out[0] = phi;
  out[1] = theta;
  out[2] = radius;
  return out;
};
/**
 * Checks if all elements are 0
 * @param {vec3} a
 * @returns {boolean}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].isEmpty = function (a) {
  return a[0] === 0 && a[1] === 0 && a[2] === 0;
};
/**
 * Multiplies a vec3 by a scalar
 *
 * @param {vec3} out
 * @param {vec3} a
 * @param {Number} s
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].multiplyScalar = function (out, a, s) {
  out[0] = a[0] * s;
  out[1] = a[1] * s;
  out[2] = a[2] * s;
  return out;
};
/**
 * Converts from long, lat and radius to a vector
 * @param {vec3} out
 * @param {Number} radius
 * @param {Number} latitude
 * @param {Number} longitude
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].polarToCartesian = function (out, radius, latitude, longitude) {
  out[0] = radius * Math.cos(latitude) * Math.sin(longitude);
  out[1] = radius * Math.sin(latitude);
  out[2] = radius * Math.cos(latitude) * Math.cos(longitude);
  return out;
};
/**
 * Projects a local vec3 to screen space with viewport settings
 * @param {vec3} out           - receiving vec3
 * @param {vec3} a             - local vec3
 * @param {mat4} m             - model view projection matrix
 * @param {vec4} viewport      - view port settings (x, y, width, height)
 * @returns {vec3} out         - receiving vec3 (x, y, perspectiveDivide)
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].project = function (out, a, m, viewport) {
  let x = a[0],
      y = a[1],
      z = a[2];
  let outX = m[0] * x + m[4] * y + m[8] * z + m[12],
      outY = m[1] * x + m[5] * y + m[9] * z + m[13],
      perD = m[3] * x + m[7] * y + m[11] * z + m[15];
  let projectionX = (outX / perD + 1) / 2;
  let projectionY = 1 - (outY / perD + 1) / 2;
  out[0] = projectionX * viewport[2] + viewport[0];
  out[1] = projectionY * viewport[3] + viewport[1];
  out[2] = perD;
  return out;
};
/**
 * Converts degrees to radians
 *
 * @param {vec3} out
 * @param {vec3} a
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].radians = function (out, a) {
  out[0] = a[0] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].DEG2RAD;
  out[1] = a[1] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].DEG2RAD;
  out[2] = a[2] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].DEG2RAD;
  return out;
};
/**
 * Converts degrees to unwrapped radians
 *
 * @param {vec3} out
 * @param {vec3} a
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].radiansUnwrapped = function (out, a) {
  out[0] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(a[0] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].DEG2RAD);
  out[1] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(a[1] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].DEG2RAD);
  out[2] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(a[2] * _num__WEBPACK_IMPORTED_MODULE_1__["num"].DEG2RAD);
  return out;
};
/**
 * Sets a vec3 from a scalar
 *
 * @param {vec3} out
 * @param {Number} s
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].setScalar = function (out, s) {
  out[0] = s;
  out[1] = s;
  out[2] = s;
  return out;
};
/**
 * Subtracts a scalar from a vec3
 *
 * @param {vec3} out
 * @param {vec3} a
 * @param {Number} s
 * @returns {vec3} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].subtractScalar = function (out, a, s) {
  out[0] = a[0] - s;
  out[1] = a[1] - s;
  out[2] = a[2] - s;
  return out;
};
/**
 * Unprojects a vec3 with canvas coordinates to world space
 *
 * @param {vec3} out            - receiving vec3
 * @param {vec3} a              - vec3 to unproject
 * @param {mat4} invViewProj    - inverse view projection matrix
 * @param {vec4|Array} viewport - [ x, y, width, height ]
 * @returns {vec3} out
 * @throw On perspective divide error
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].unproject = function () {
  let vec4_0;
  return function unProject(out, a, invViewProj, viewport) {
    if (!vec4_0) {
      vec4_0 = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    }

    let x = a[0],
        y = a[1],
        z = a[2];
    vec4_0[0] = (x - viewport[0]) * 2.0 / viewport[2] - 1.0;
    vec4_0[1] = (y - viewport[1]) * 2.0 / viewport[3] - 1.0;
    vec4_0[2] = 2.0 * z - 1.0;
    vec4_0[3] = 1.0;
    gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].transformMat4(vec4_0, vec4_0, invViewProj);

    if (vec4_0[3] === 0.0) {
      out[0] = 0;
      out[1] = 0;
      out[2] = 0;
      throw new Error("Perspective divide error");
    }

    out[0] = vec4_0[0] / vec4_0[3];
    out[1] = vec4_0[1] / vec4_0[3];
    out[2] = vec4_0[2] / vec4_0[3];
    return out;
  };
}();
/**
 * Unwraps degrees
 *
 * @param {vec3} out
 * @param {vec3} a
 * @returns {vec3}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].unwrapDegrees = function (out, a) {
  out[0] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapDegrees(a[0]);
  out[1] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapDegrees(a[1]);
  out[2] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapDegrees(a[2]);
  return out;
};
/**
 * Unwraps radians
 *
 * @param {vec3} out
 * @param {vec3} a
 * @returns {vec3}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec3"].unwrapRadians = function (out, a) {
  out[0] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(a[0]);
  out[1] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(a[1]);
  out[2] = _num__WEBPACK_IMPORTED_MODULE_1__["num"].unwrapRadians(a[2]);
  return out;
};

/***/ }),

/***/ "./global/math/vec4.js":
/*!*****************************!*\
  !*** ./global/math/vec4.js ***!
  \*****************************/
/*! exports provided: vec4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ "../node_modules/gl-matrix/lib/gl-matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vec4", function() { return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"]; });



gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].ZERO = gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(0, 0, 0, 0);
/**
 * Adds a scalar to a vec4
 *
 * @param {vec4} out
 * @param {vec4} a
 * @param {Number} s
 * @returns {vec4} out
 */

gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].addScalar = function (out, a, s) {
  out[0] = a[0] + s;
  out[1] = a[1] + s;
  out[2] = a[2] + s;
  out[3] = a[3] + s;
  return out;
};
/**
 * Checks if all elements are 0
 * @param {vec4} a
 * @returns {boolean}
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].isEmpty = function (a) {
  return a[0] === 0 && a[1] === 0 && a[2] === 0 && a[3] === 0;
};
/**
 * Divides a vec4 by a scalar
 *
 * @param {vec4} out
 * @param {vec4} a
 * @param {Number} s
 * @returns {vec4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].divideScalar = function (out, a, s) {
  return gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].multiplyScalar(out, a, 1 / s);
};
/**
 * Multiplies a vec4 by a scalar
 *
 * @param {vec4} out
 * @param {vec4} a
 * @param {Number} s
 * @returns {vec4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].multiplyScalar = function (out, a, s) {
  out[0] = a[0] * s;
  out[1] = a[1] * s;
  out[2] = a[2] * s;
  out[3] = a[3] * s;
  return out;
};
/**
 * Sets a vec4 from a scalar
 *
 * @param {vec4} out
 * @param {Number} s
 * @returns {vec4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].setScalar = function (out, s) {
  out[0] = s;
  out[1] = s;
  out[2] = s;
  out[3] = s;
  return out;
};
/**
 * Subtracts a scalar from a vec4
 *
 * @param {vec4} out
 * @param {vec4} a
 * @param {Number} s
 * @returns {vec4} out
 */


gl_matrix__WEBPACK_IMPORTED_MODULE_0__["vec4"].subtractScalar = function (out, a, s) {
  out[0] = a[0] - s;
  out[1] = a[1] - s;
  out[2] = a[2] - s;
  out[3] = a[3] - s;
  return out;
};

/***/ }),

/***/ "./global/meta/@abstract.js":
/*!**********************************!*\
  !*** ./global/meta/@abstract.js ***!
  \**********************************/
/*! exports provided: abstract */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abstract", function() { return abstract; });
/* harmony import */ var core_Tw2Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core/Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./meta */ "./global/meta/meta.js");


/**
 * Abstract class/ method decorator
 * @type {ClassDecorator|MethodDecorator}
 */

const abstract = Object(_meta__WEBPACK_IMPORTED_MODULE_1__["create"])(false, {
  class({
    target
  }) {
    return class Abstract extends target {
      constructor() {
        super();

        if (this.constructor === Abstract) {
          throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrAbstractClass"]({
            class: target.name
          });
        }
      }

    };
  },

  method({
    property,
    descriptor
  }) {
    descriptor.value = function () {
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrAbstractMethod"]({
        method: property
      });
    };

    return descriptor;
  }

});

/***/ }),

/***/ "./global/meta/@black.js":
/*!*******************************!*\
  !*** ./global/meta/@black.js ***!
  \*******************************/
/*! exports provided: black, blackReader, blackStruct, blackFromList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "black", function() { return black; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blackReader", function() { return blackReader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blackStruct", function() { return blackStruct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blackFromList", function() { return blackFromList; });
/* harmony import */ var core_Tw2Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core/Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var _util_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/type */ "./global/util/type.js");
/* harmony import */ var core_reader_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core/reader/Tw2BlackPropertyReaders */ "./core/reader/Tw2BlackPropertyReaders.js");
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./meta */ "./global/meta/meta.js");




/**
 * Identifies that a property is read by black reader
 * - It will use the type defined by the "meta.type" decorator
 * @type {PropertyDecorator}
 */

const black = Object(_meta__WEBPACK_IMPORTED_MODULE_3__["create"])(false, {
  property({
    target,
    property
  }) {
    Object(_meta__WEBPACK_IMPORTED_MODULE_3__["set"])("black", true, target, property);
  }

});
/**
 * Identifies the black reader a property should use
 * @type {PropertyDecorator}
 */

const blackReader = Object(_meta__WEBPACK_IMPORTED_MODULE_3__["create"])(true, {
  property({
    target,
    property
  }, reader) {
    Object(_meta__WEBPACK_IMPORTED_MODULE_3__["set"])("black", reader, target, property);
  }

});
/**
 * Identifies that the black property is a struct
 * - Pass an array containing a function to identify a struct list
 * - Pass a function to identify a struct
 * @type {PropertyDecorator}
 */

const blackStruct = Object(_meta__WEBPACK_IMPORTED_MODULE_3__["create"])(true, {
  property({
    target,
    property
  }, value) {
    let handler; // list

    if (Object(_util_type__WEBPACK_IMPORTED_MODULE_1__["isArray"])(value)) {
      if (Object(_util_type__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(value[0])) {
        handler = Object(core_reader_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_2__["structList"])(value[0]);
      }
    } // object
    else if (Object(_util_type__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(value)) {
        handler = Object(core_reader_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_2__["struct"])(value);
      }

    if (!handler) {
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrInvalidDecoratorUsage"]({
        reason: "Could not identify struct type"
      });
    }

    Object(_meta__WEBPACK_IMPORTED_MODULE_3__["set"])("black", handler, target, property);
  }

});
/**
 * Defines a black reader which results in a plain object from an array or struct list
 * @type {PropertyDecorator}
 */

const blackFromList = Object(_meta__WEBPACK_IMPORTED_MODULE_3__["create"])(true, {
  property({
    target,
    property
  }, options) {
    Object(_meta__WEBPACK_IMPORTED_MODULE_3__["set"])("black", Object(core_reader_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_2__["fromList"])(options), target, property);
  }

});

/***/ }),

/***/ "./global/meta/@notImplemented.js":
/*!****************************************!*\
  !*** ./global/meta/@notImplemented.js ***!
  \****************************************/
/*! exports provided: notImplemented */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notImplemented", function() { return notImplemented; });
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./meta */ "./global/meta/meta.js");

const notImplemented = Object(_meta__WEBPACK_IMPORTED_MODULE_0__["create"])(false, {
  handler({
    target,
    property
  }) {
    Object(_meta__WEBPACK_IMPORTED_MODULE_0__["set"])("notImplemented", true, target, property);
  }

});

/***/ }),

/***/ "./global/meta/@singleton.js":
/*!***********************************!*\
  !*** ./global/meta/@singleton.js ***!
  \***********************************/
/*! exports provided: singleton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "singleton", function() { return singleton; });
/* harmony import */ var core_Tw2Error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core/Tw2Error */ "./core/Tw2Error.js");
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./meta */ "./global/meta/meta.js");


const singleton = Object(_meta__WEBPACK_IMPORTED_MODULE_1__["create"])(false, {
  class({
    target
  }) {
    let count = 0;
    return class Singleton extends target {
      constructor(...args) {
        count++;

        if (count > 1) {
          throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_0__["ErrSingletonInstantiation"]({
            class: target.name
          });
        }

        super(...args);
      }

    };
  }

});

/***/ }),

/***/ "./global/meta/@stage.js":
/*!*******************************!*\
  !*** ./global/meta/@stage.js ***!
  \*******************************/
/*! exports provided: stage1, stage2, stage3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stage1", function() { return stage1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stage2", function() { return stage2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stage3", function() { return stage3; });
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./meta */ "./global/meta/meta.js");


function createStage(stage) {
  return Object(_meta__WEBPACK_IMPORTED_MODULE_0__["create"])(false, {
    class({
      target
    }) {
      Object(_meta__WEBPACK_IMPORTED_MODULE_0__["set"])("stage", stage, target);
      target.__isStaging = stage;
    }

  });
} // Partial implementation, won't throw errors


const stage1 = createStage(1); // Partial implementation, likely to throw errors

const stage2 = createStage(2); // Not implemented, will throw errors if used

const stage3 = createStage(3);

/***/ }),

/***/ "./global/meta/@type.js":
/*!******************************!*\
  !*** ./global/meta/@type.js ***!
  \******************************/
/*! exports provided: type, listOf, objectOf, plainOf, unknown, boolean, string, path, expression, float, uint, byte, object, raw, list, array, vector2, vector3, vector4, color, quaternion, matrix3, matrix4, indexBuffer, plain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "type", function() { return type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listOf", function() { return listOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "objectOf", function() { return objectOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plainOf", function() { return plainOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unknown", function() { return unknown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return boolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "string", function() { return string; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "path", function() { return path; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "float", function() { return float; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uint", function() { return uint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "byte", function() { return byte; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raw", function() { return raw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "list", function() { return list; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array", function() { return array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vector2", function() { return vector2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vector3", function() { return vector3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vector4", function() { return vector4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "color", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quaternion", function() { return quaternion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrix3", function() { return matrix3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrix4", function() { return matrix4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexBuffer", function() { return indexBuffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plain", function() { return plain; });
/* harmony import */ var _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine/Tw2Constant */ "./global/engine/Tw2Constant.js");
/* harmony import */ var _util_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/type */ "./global/util/type.js");
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./meta */ "./global/meta/meta.js");



/**
 * Handles property type meta data
 * @param {*} target
 * @param {String} property
 * @param {PropertyDescriptor }descriptor
 * @param {String|Number} type
 * @param {Array} [childTypes]
 */

function handleType(target, property, descriptor, type, childTypes) {
  console.log("Handling type", type, "on property", property); // Allow type to be passed as a string

  if (Object(_util_type__WEBPACK_IMPORTED_MODULE_1__["isString"])(type)) type = _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"][type.toUpperCase()];
  if (type === undefined) type = _engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].UNKNOWN; // Update meta data

  Object(_meta__WEBPACK_IMPORTED_MODULE_2__["set"])("type", type, target, property);
  if (childTypes && childTypes.length) Object(_meta__WEBPACK_IMPORTED_MODULE_2__["set"])("childTypes", childTypes, target, property); // Automatic meta data

  if (property.charAt(0) === "_") Object(_meta__WEBPACK_IMPORTED_MODULE_2__["set"])("private", true, target, property);
  if (descriptor.value === null) Object(_meta__WEBPACK_IMPORTED_MODULE_2__["set"])("nullable", true, target, property);
}
/**
 * Type decorator
 */


const type = Object(_meta__WEBPACK_IMPORTED_MODULE_2__["create"])(true, {
  class({
    target
  }, name, ...childTypes) {
    Object(_meta__WEBPACK_IMPORTED_MODULE_2__["set"])("type", name, target);
    if (childTypes && childTypes.length) Object(_meta__WEBPACK_IMPORTED_MODULE_2__["set"])("childTypes", childTypes, target);
  },

  parameter({
    target,
    property,
    descriptor
  }, type, ...childTypes) {
    handleType(target, property, descriptor, type, childTypes);
  }

});
/**
 * Type factory
 */

function createType(type) {
  return Object(_meta__WEBPACK_IMPORTED_MODULE_2__["create"])(false, {
    parameter({
      target,
      property,
      descriptor
    }) {
      handleType(target, property, descriptor, type);
    }

  });
}
/**
 * Object Type factory
 */


function createTypeOf(type) {
  return Object(_meta__WEBPACK_IMPORTED_MODULE_2__["create"])(true, {
    parameter({
      target,
      property,
      descriptor
    }, ...childTypes) {
      handleType(target, property, descriptor, type, childTypes);
    }

  });
}

const listOf = createTypeOf(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].LIST);
const objectOf = createTypeOf(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].OBJECT);
const plainOf = createTypeOf(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].PLAIN);
const unknown = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].UNKNOWN);
const boolean = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].BOOLEAN);
const string = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].STRING);
const path = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].PATH);
const expression = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].EXPRESSION);
const float = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].FLOAT);
const uint = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].UINT);
const byte = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].BYTE);
const object = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].OBJECT);
const raw = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].RAW);
const list = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].LIST);
const array = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].ARRAY);
const vector2 = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].VECTOR2);
const vector3 = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].VECTOR3);
const vector4 = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].VECTOR4);
const color = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].COLOR);
const quaternion = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].QUATERNION);
const matrix3 = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].MATRIX3);
const matrix4 = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].MATRIX4);
const indexBuffer = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].INDEX_BUFFER);
const plain = createType(_engine_Tw2Constant__WEBPACK_IMPORTED_MODULE_0__["Type"].PLAIN);

/***/ }),

/***/ "./global/meta/index.js":
/*!******************************!*\
  !*** ./global/meta/index.js ***!
  \******************************/
/*! exports provided: add, set, has, hasOwn, get, getOwn, create, abstract, notImplemented, type, listOf, objectOf, plainOf, unknown, boolean, string, path, expression, float, uint, byte, object, raw, list, array, vector2, vector3, vector4, color, quaternion, matrix3, matrix4, indexBuffer, plain, black, blackReader, blackStruct, blackFromList, stage1, stage2, stage3, singleton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./meta */ "./global/meta/meta.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "add", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__["add"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "set", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__["set"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "has", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__["has"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hasOwn", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__["hasOwn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "get", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__["get"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getOwn", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__["getOwn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "create", function() { return _meta__WEBPACK_IMPORTED_MODULE_0__["create"]; });

/* harmony import */ var _abstract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./@abstract */ "./global/meta/@abstract.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "abstract", function() { return _abstract__WEBPACK_IMPORTED_MODULE_1__["abstract"]; });

/* harmony import */ var _notImplemented__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./@notImplemented */ "./global/meta/@notImplemented.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "notImplemented", function() { return _notImplemented__WEBPACK_IMPORTED_MODULE_2__["notImplemented"]; });

/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./@type */ "./global/meta/@type.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "type", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["type"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "listOf", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["listOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "objectOf", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["objectOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "plainOf", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["plainOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unknown", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["unknown"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["boolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "string", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["string"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "path", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["path"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["expression"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "float", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["float"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uint", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["uint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "byte", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["byte"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "object", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["object"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "raw", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["raw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "list", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["list"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "array", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["array"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vector2", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["vector2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vector3", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["vector3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "vector4", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["vector4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["color"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quaternion", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["quaternion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matrix3", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["matrix3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matrix4", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["matrix4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexBuffer", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["indexBuffer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "plain", function() { return _type__WEBPACK_IMPORTED_MODULE_3__["plain"]; });

/* harmony import */ var _black__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./@black */ "./global/meta/@black.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "black", function() { return _black__WEBPACK_IMPORTED_MODULE_4__["black"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blackReader", function() { return _black__WEBPACK_IMPORTED_MODULE_4__["blackReader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blackStruct", function() { return _black__WEBPACK_IMPORTED_MODULE_4__["blackStruct"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blackFromList", function() { return _black__WEBPACK_IMPORTED_MODULE_4__["blackFromList"]; });

/* harmony import */ var _stage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./@stage */ "./global/meta/@stage.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stage1", function() { return _stage__WEBPACK_IMPORTED_MODULE_5__["stage1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stage2", function() { return _stage__WEBPACK_IMPORTED_MODULE_5__["stage2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stage3", function() { return _stage__WEBPACK_IMPORTED_MODULE_5__["stage3"]; });

/* harmony import */ var _singleton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./@singleton */ "./global/meta/@singleton.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "singleton", function() { return _singleton__WEBPACK_IMPORTED_MODULE_6__["singleton"]; });









/***/ }),

/***/ "./global/meta/meta.js":
/*!*****************************!*\
  !*** ./global/meta/meta.js ***!
  \*****************************/
/*! exports provided: add, set, has, hasOwn, get, getOwn, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add", function() { return add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set", function() { return set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has", function() { return has; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasOwn", function() { return hasOwn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOwn", function() { return getOwn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony import */ var _util_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/type */ "./global/util/type.js");
/* harmony import */ var core_Tw2Error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core/Tw2Error */ "./core/Tw2Error.js");


/**
 * Turns a string into a meta data name
 * @param {String} name
 * @returns {string}
 */

function getMetaName(name) {
  return "tw2:".concat(name);
}
/**
 * Meta data decorator
 * @param {String} name         - The meta data type
 * @param {*} [value=true]      - The meta data's value (defaults to true)
 * @returns {PropertyDecorator}
 * @example
 *
 *     @meta.add("black")
 *     @meta.add("type", "Boolean")
 *     @meta.add("desc", "Toggles displaying the object")
 *     display = true;
 *
 */


function add(name, value = true) {
  return Reflect.metadata(getMetaName(name), value);
}
/**
 * Defines meta data
 * @param {String} name
 * @param {*} value
 * @param {*} target
 * @param{String} [property]
 */

function set(name, value, target, property) {
  Reflect.defineMetadata(getMetaName(name), value, target, property);
}
/**
 * Checks if a target has meta data
 * @param {String} name
 * @param {*} target
 * @param {*} [property]
 * @returns {boolean}
 */

function has(name, target, property) {
  return Reflect.hasMetadata(getMetaName(name), target, property);
}
/**
 * Checks if a target has it's own meta data
 * @param {String} name
 * @param {*} target
 * @param {*} [property]
 * @returns {boolean}
 */

function hasOwn(name, target, property) {
  return Reflect.hasOwnMetadata(getMetaName(name), target, property);
}
/**
 * Gets a target's meta data
 * @param {String} name
 * @param {*} target
 * @param {*} [property]
 * @returns {any}
 */

function get(name, target, property) {
  return Reflect.getMetadata(getMetaName(name), target, property);
}
/**
 * Gets a target's own meta data
 * @param {String} name
 * @param {*} target
 * @param {*} [property]
 * @returns {any}
 */

function getOwn(name, target, property) {
  return Reflect.getOwnMetadata(getMetaName(name), target, property);
}
/**
 * Handler for undefined descriptor values
 * - Babel doesn't always add true as defaults
 * @param {PropertyDescriptor} d
 * @returns {PropertyDescriptor} d
 */

function handleDescriptor(d) {
  if (d.writable === undefined) d.writable = true;
  if (d.enumerable === undefined) d.enumerable = true;
  if (d.configurable === undefined) d.configurable = true;
  return d;
}
/**
 * Descriptor error messages
 * @type {{METHOD: string, CLASS: string, PARAMETER: string}}
 */


const Failmessage = {
  CLASS: "Decorator not applicable to classes",
  METHOD: "Decorator not applicable to methods",
  PARAMETER: "Decorator not applicable to parameters"
};
/**
 * Decorator factory
 * TODO: Make this cleaner
 * @param {Boolean} hasArguments
 * @param {Object} options
 * @param {Boolean} [options.hasArguments]
 * @param {Function} [options.class]
 * @param {Function} [options.method]
 * @param {Function} [options.parameter]
 * @param {Function} [options.handler]
 * @returns {PropertyDecorator|ClassDecorator|MethodDecorator}
 */

function create(hasArguments, options) {
  if (hasArguments) {
    return function (...args) {
      return function (target, property, descriptor) {
        let message;

        if (!property) {
          if (options.class) {
            return options.class({
              target
            }, ...args);
          }

          message = Failmessage.CLASS;
        } else {
          if (Object(_util_type__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(target[property])) {
            if (options.method) {
              const result = options.method({
                target,
                property,
                descriptor
              }, ...args);
              handleDescriptor(descriptor);
              return result;
            }

            message = Failmessage.METHOD;
          } else if (options.parameter) {
            const result = options.parameter({
              target,
              property,
              descriptor
            }, ...args);
            handleDescriptor(descriptor);
            return result;
          } else {
            message = Failmessage.PARAMETER;
          }
        }

        if (options.handler) {
          return options.handler({
            target,
            property,
            descriptor
          }, ...args);
        }

        message += " (".concat(property ? property : target.name, ")");
        throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrInvalidDecoratorUsage"]({
          message
        });
      };
    };
  } else {
    return function (target, property, descriptor) {
      let message;

      if (!property) {
        if (options.class) {
          return options.class({
            target
          });
        }

        message = Failmessage.CLASS;
      } else {
        if (Object(_util_type__WEBPACK_IMPORTED_MODULE_0__["isFunction"])(target[property])) {
          if (options.method) {
            const result = options.method({
              target,
              property,
              descriptor
            });
            handleDescriptor(descriptor);
            return result;
          }

          message = Failmessage.METHOD;
        } else if (options.parameter) {
          const result = options.parameter({
            target,
            property,
            descriptor
          });
          handleDescriptor(descriptor);
          return result;
        } else {
          message = Failmessage.PARAMETER;
        }
      }

      if (options.handler) {
        return options.handler({
          target,
          property,
          descriptor
        });
      }

      message += " (".concat(property ? property : target.name, ")");
      throw new core_Tw2Error__WEBPACK_IMPORTED_MODULE_1__["ErrInvalidDecoratorUsage"]({
        message
      });
    };
  }
}

/***/ }),

/***/ "./global/util/arr.js":
/*!****************************!*\
  !*** ./global/util/arr.js ***!
  \****************************/
/*! exports provided: addToArray, findElementByPropertyValue, findIndexByPropertyValue, perArrayChild, removeFromArray, toArray, toUniqueArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addToArray", function() { return addToArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findElementByPropertyValue", function() { return findElementByPropertyValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findIndexByPropertyValue", function() { return findIndexByPropertyValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "perArrayChild", function() { return perArrayChild; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFromArray", function() { return removeFromArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return toArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toUniqueArray", function() { return toUniqueArray; });
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type */ "./global/util/type.js");

/**
 * Adds arguments to an array if they don't already exist in it
 * @param {Array} arr
 * @param args
 * @returns {Boolean} true if something was added
 */

function addToArray(arr, ...args) {
  let added = false;

  for (let i = 0; i < args.length; i++) {
    if (arr.indexOf(args[i]) === -1) {
      arr.push(args[i]);
      added = true;
    }
  }

  return added;
}
/**
 * Finds the first element in an array with a given property and value
 * - Throws an optional error if not found
 * @param {Array} arr
 * @param {String} property
 * @param {*} value
 * @param {Tw2Error} [err]
 * @returns {*|null}
 */

function findElementByPropertyValue(arr, property, value, err) {
  const index = findIndexByPropertyValue(arr, property, value, err);
  return arr[index];
}
/**
 * Finds the first index of an element in an array with a given property and value
 * - Throws an optional error if not found
 * @param {Array} arr
 * @param {String} property
 * @param {*} value
 * @param {Tw2Error} err
 * @returns {number}
 */

function findIndexByPropertyValue(arr, property, value, err) {
  for (let i = 0; i < arr.length; i++) {
    if (property in arr[i] && arr[i][property] === value) {
      return i;
    }
  }

  if (err) {
    throw new err({
      [property]: value
    });
  }

  return -1;
}
/**
 * Calls a function with arguments for each child in an array where that function exists
 * @param {Array} arr
 * @param {String} funcName
 * @param args
 */

function perArrayChild(arr, funcName, ...args) {
  for (let i = 0; i < arr.length; i++) {
    if (funcName in arr[i]) {
      arr[i][funcName](...args);
    }
  }
}
/**
 * Removes arguments from an array if they exist in it
 * @param {Array} arr
 * @param args
 * @returns {Boolean} true if something was removed
 */

function removeFromArray(arr, ...args) {
  let removed = false;

  for (let i = 0; i < args.length; i++) {
    const index = arr.indexOf(args[i]);

    if (index !== -1) {
      arr.splice(index, 1);
      removed = true;
    }
  }

  return removed;
}
/**
 * Returns a value if it is an array, or a new array with the object in it
 * @param {*} a
 * @returns {Array}
 */

function toArray(a) {
  return Object(_type__WEBPACK_IMPORTED_MODULE_0__["isArray"])(a) ? a : [a];
}
/**
 * Returns an array containing only unique numbers
 * @param {*} a
 * @returns {Array}
 */

function toUniqueArray(a) {
  return Array.from(new Set(toArray(a)));
}

/***/ }),

/***/ "./global/util/index.js":
/*!******************************!*\
  !*** ./global/util/index.js ***!
  \******************************/
/*! exports provided: getPathExtension, addToArray, findElementByPropertyValue, findIndexByPropertyValue, perArrayChild, removeFromArray, toArray, toUniqueArray, assignIfExists, get, template, isPrimaryEqual, isVectorEqual, isEqual, isArray, isArrayLike, isAsyncFunction, isBoolean, isCanvas, isDescriptor, isDNA, isError, isNumber, isFunction, isNoU, isNull, isObject, isObjectLike, isObjectObject, isPlain, isPrimary, isPromise, isString, isSymbol, isSubclassOf, isTag, isTr2OrTri, toTw2, getTypeUpper, isTyped, isUndefined, isVector, isVector2, isVector3, isVector4, isMatrix3, isMatrix4, enableUUID, generateID, getURL, getURLString, getURLInteger, getURLFloat, getURLBoolean */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPathExtension", function() { return getPathExtension; });
/* harmony import */ var _arr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arr */ "./global/util/arr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addToArray", function() { return _arr__WEBPACK_IMPORTED_MODULE_0__["addToArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findElementByPropertyValue", function() { return _arr__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findIndexByPropertyValue", function() { return _arr__WEBPACK_IMPORTED_MODULE_0__["findIndexByPropertyValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "perArrayChild", function() { return _arr__WEBPACK_IMPORTED_MODULE_0__["perArrayChild"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeFromArray", function() { return _arr__WEBPACK_IMPORTED_MODULE_0__["removeFromArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toArray", function() { return _arr__WEBPACK_IMPORTED_MODULE_0__["toArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toUniqueArray", function() { return _arr__WEBPACK_IMPORTED_MODULE_0__["toUniqueArray"]; });

/* harmony import */ var _obj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./obj */ "./global/util/obj.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "assignIfExists", function() { return _obj__WEBPACK_IMPORTED_MODULE_1__["assignIfExists"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "get", function() { return _obj__WEBPACK_IMPORTED_MODULE_1__["get"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "template", function() { return _obj__WEBPACK_IMPORTED_MODULE_1__["template"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrimaryEqual", function() { return _obj__WEBPACK_IMPORTED_MODULE_1__["isPrimaryEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVectorEqual", function() { return _obj__WEBPACK_IMPORTED_MODULE_1__["isVectorEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return _obj__WEBPACK_IMPORTED_MODULE_1__["isEqual"]; });

/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type */ "./global/util/type.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isArrayLike"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isAsyncFunction", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isAsyncFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCanvas", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isCanvas"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDescriptor", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isDescriptor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDNA", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isDNA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isError", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNoU", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isNoU"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isNull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectLike", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isObjectLike"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectObject", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isObjectObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPlain", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isPlain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPrimary", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isPrimary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isPromise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSubclassOf", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isSubclassOf"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTag", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isTag"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTr2OrTri", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isTr2OrTri"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toTw2", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["toTw2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTypeUpper", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["getTypeUpper"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isTyped", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isTyped"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVector", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isVector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVector2", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isVector2"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVector3", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isVector3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVector4", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isVector4"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatrix3", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isMatrix3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMatrix4", function() { return _type__WEBPACK_IMPORTED_MODULE_2__["isMatrix4"]; });

/* harmony import */ var _uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uuid */ "./global/util/uuid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableUUID", function() { return _uuid__WEBPACK_IMPORTED_MODULE_3__["enableUUID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generateID", function() { return _uuid__WEBPACK_IMPORTED_MODULE_3__["generateID"]; });

/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./url */ "./global/util/url.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getURL", function() { return _url__WEBPACK_IMPORTED_MODULE_4__["getURL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getURLString", function() { return _url__WEBPACK_IMPORTED_MODULE_4__["getURLString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getURLInteger", function() { return _url__WEBPACK_IMPORTED_MODULE_4__["getURLInteger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getURLFloat", function() { return _url__WEBPACK_IMPORTED_MODULE_4__["getURLFloat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getURLBoolean", function() { return _url__WEBPACK_IMPORTED_MODULE_4__["getURLBoolean"]; });






/**
 * Gets a path's extension
 * @param path
 * @returns {string|null}
 */

function getPathExtension(path) {
  const dot = path.lastIndexOf(".");
  if (dot === -1) return null;
  return path.substr(dot + 1);
}

/***/ }),

/***/ "./global/util/obj.js":
/*!****************************!*\
  !*** ./global/util/obj.js ***!
  \****************************/
/*! exports provided: assignIfExists, get, template, isPrimaryEqual, isVectorEqual, isEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assignIfExists", function() { return assignIfExists; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "template", function() { return template; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrimaryEqual", function() { return isPrimaryEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVectorEqual", function() { return isVectorEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEqual", function() { return isEqual; });
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type */ "./global/util/type.js");
/* harmony import */ var _arr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arr */ "./global/util/arr.js");
/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ "./global/math/index.js");



/**
 * Assigns property values if they exist in a source object
 * - Typed arrays are cloned/ copied to ensure no pass-by-reference errors
 * - TODO: Return boolean for when some thing was assigned
 *
 * @param {*} dest
 * @param {*} src
 * @param {String|string[]} attrs
 * @returns {boolean} true if something was assigned
 */

function assignIfExists(dest, src, attrs) {
  if (!src) return false;
  attrs = Object(_arr__WEBPACK_IMPORTED_MODULE_1__["toArray"])(attrs);
  let assigned = false;

  for (let i = 0; i < attrs.length; i++) {
    const attr = attrs[i];
    if (src[attr] === undefined) continue;
    assigned = true;

    if (Object(_type__WEBPACK_IMPORTED_MODULE_0__["isArrayLike"])(dest[attr])) {
      if (Object(_type__WEBPACK_IMPORTED_MODULE_0__["isTyped"])(dest[attr])) {
        if (dest[attr].length !== src[attr].length) {
          const Constructor = dest[attr].constructor;
          dest[attr] = new Constructor(src[attr]);
        } else {
          dest[attr].set(src[attr]);
        }
      } else {
        dest[attr].splice(0);

        for (let i = 0; i < src[attr].length; i++) {
          dest[attr].push(src[attr][i]);
        }
      }
    } else if (Object(_type__WEBPACK_IMPORTED_MODULE_0__["isTyped"])(src[attr])) {
      const Constructor = src[attr].constructor;
      dest[attr] = new Constructor(src[attr]);
    } else {
      dest[attr] = src[attr];
    }
  }

  return assigned;
}
/**
 * Gets a source's property value if it exists else returns a default value
 * @param {*} src
 * @param {String|string[]} prop
 * @param {*} [defaultValue]
 * @returns {*}
 */

function get(src, prop, defaultValue) {
  if (!Object(_type__WEBPACK_IMPORTED_MODULE_0__["isArray"])(prop)) {
    return src[prop] !== undefined ? src[prop] : defaultValue;
  }

  for (let i = 0; i < prop.length; i++) {
    if (src[prop[i]] !== undefined) {
      return src[prop[i]];
    }
  }

  return defaultValue;
}
/**
 * Returns a string from a string template and a given object's properties
 * - templates are surrounded by %'s (ie. %propertyName%)
 * - default values are optionally identified with an = (ie. %propertyName=defaultValue%)
 * @param {String} str
 * @param {{}} [obj={}]
 * @returns {String}
 *
 * @example
 * const message = "%feature=Feature% not supported";
 * const message2 = "%feature% not supported";
 * let str1 = template(message, { feature: "Dynamic resource paths" })
 * let str2 = template(message);
 * let str3 = template(message2);
 * > str1 === "Dynamic resource paths not supported"
 * > str2 === "Feature not supported"
 * > str3 === "undefined not supported"
 */

function template(str, obj = {}) {
  const literals = str.match(/%([^%]+)?%/g) || [];

  for (let i = 0; i < literals.length; i++) {
    const literal = literals[i],
          split = literal.substring(1, literal.length - 1).split("="),
          value = split[0] in obj ? obj[split[0]] : split[1];
    str = str.replace(literal, value);
  }

  return str;
}
/**
 * Checks if two primary values are equal
 * - Allows for numbers to be "almost" equal
 * @param {String|Boolean|Number} a
 * @param {String|Boolean|Number} b
 * @returns {boolean}
 */

function isPrimaryEqual(a, b) {
  if (a === b) return true;
  return Object(_type__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(a) && Object(_type__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(b) ? _math__WEBPACK_IMPORTED_MODULE_2__["num"].equals(a, b) : false;
}
/**
 * Checks two vectors for equality
 * - Allows for numbers to be "almost" equal
 * @param {Array|TypedArray} a
 * @param {Array|TypedArray} b
 * @returns {boolean}
 */

function isVectorEqual(a, b) {
  if (a === b) return true;
  if (a.length !== b.length) return false;

  for (let i = 0; i < a.length; i++) {
    if (!_math__WEBPACK_IMPORTED_MODULE_2__["num"].equals(a[i], b[i])) return false;
  }

  return true;
}
/**
 * Checks two parameters for equality
 * TODO: Optimize
 * TODO: Circular references
 * - Allows for numbers to be "almost" equal
 * @param {String|Boolean|Number|Array|TypedArray} a
 * @param {String|Boolean|Number|Array|TypedArray} b
 * @returns {boolean}
 */

function isEqual(a, b) {
  if (a === b) return true; // allow "almost" equal numbers

  if (Object(_type__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(a)) return Object(_type__WEBPACK_IMPORTED_MODULE_0__["isNumber"])(b) ? _math__WEBPACK_IMPORTED_MODULE_2__["num"].equals(a, b) : false;
  if (Object(_type__WEBPACK_IMPORTED_MODULE_0__["isVector"])(a)) return Object(_type__WEBPACK_IMPORTED_MODULE_0__["isVector"])(b) ? isVectorEqual(a, b) : false;
  if (!Object(_type__WEBPACK_IMPORTED_MODULE_0__["isObjectObject"])(a) || !Object(_type__WEBPACK_IMPORTED_MODULE_0__["isObjectObject"])(b)) return false;
  if (a.constructor !== b.constructor) return false;
  const aKeys = Object.keys(a),
        bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length) return false;

  for (let i = 0; i < aKeys.length; i++) {
    let key = aKeys[i];
    if (!b.hasOwnProperty(key)) return false;
    if (!isEqual(a[key], b[key])) return false;
  }

  for (let i = 0; i < bKeys.length; i++) {
    if (a.hasOwnProperty(bKeys[i])) return false;
  }

  return true;
}

/***/ }),

/***/ "./global/util/type.js":
/*!*****************************!*\
  !*** ./global/util/type.js ***!
  \*****************************/
/*! exports provided: isArray, isArrayLike, isAsyncFunction, isBoolean, isCanvas, isDescriptor, isDNA, isError, isNumber, isFunction, isNoU, isNull, isObject, isObjectLike, isObjectObject, isPlain, isPrimary, isPromise, isString, isSymbol, isSubclassOf, isTag, isTr2OrTri, toTw2, getTypeUpper, isTyped, isUndefined, isVector, isVector2, isVector3, isVector4, isMatrix3, isMatrix4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayLike", function() { return isArrayLike; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAsyncFunction", function() { return isAsyncFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return isBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCanvas", function() { return isCanvas; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDescriptor", function() { return isDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDNA", function() { return isDNA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isError", function() { return isError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return isNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNoU", function() { return isNoU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNull", function() { return isNull; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObjectLike", function() { return isObjectLike; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObjectObject", function() { return isObjectObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPlain", function() { return isPlain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPrimary", function() { return isPrimary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPromise", function() { return isPromise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return isSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSubclassOf", function() { return isSubclassOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTag", function() { return isTag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTr2OrTri", function() { return isTr2OrTri; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toTw2", function() { return toTw2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTypeUpper", function() { return getTypeUpper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTyped", function() { return isTyped; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return isUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVector", function() { return isVector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVector2", function() { return isVector2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVector3", function() { return isVector3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVector4", function() { return isVector4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMatrix3", function() { return isMatrix3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMatrix4", function() { return isMatrix4; });
const toString = Object.prototype.toString;
/**
 * Checks if a value is an array
 * @param {*} a
 * @returns {Boolean}
 */

const isArray = Array.isArray;
/**
 * Checks if a value is an array or a typed array
 * @param {*} a
 * @returns {Boolean}
 */

function isArrayLike(a) {
  return a ? isArray(a) || isTyped(a) : false;
}
/**
 * Checks if a function is async
 * @param {*} a
 * @returns {boolean}
 */

function isAsyncFunction(a) {
  return !!(isFunction(a) && a.constructor.name === "AsyncFunction");
}
/**
 * Checks if a value is a boolean
 * @param {*} a
 * @returns {Boolean}
 */

function isBoolean(a) {
  return isTag(a, "[object Boolean]");
}
/**
 * Checks if a value is an html canvas element
 * @param {*} a
 * @returns {Boolean}
 */

function isCanvas(a) {
  return !!(a && a instanceof HTMLCanvasElement);
}
/**
 * Checks if a value is a descriptor
 * @author jay phelps
 * @param {*} a
 * @returns {Boolean}
 */

function isDescriptor(a) {
  if (!a || !a.hasOwnProperty) {
    return false;
  }

  const keys = ["value", "initializer", "get", "set"];

  for (let i = 0, l = keys.length; i < l; i++) {
    if (a.hasOwnProperty(keys[i])) {
      return true;
    }
  }

  return false;
}
/**
 * Checks if a value is a valid sof DNA string
 * @param {*} a
 */

function isDNA(a) {
  return isString(a) && a.match(/(\w|\d|[-_])+:(\w|\d|[-_])+:(\w|\d|[-_])+/);
}
/**
 * Checks if a value is an error
 * @param {*} a
 * @returns {Boolean}
 */

function isError(a) {
  return a ? a instanceof Error || a.constructor.__category === "Error" : false;
}
/**
 * Checks if a value is a number
 * @param {*} a
 * @returns {Boolean}
 */

function isNumber(a) {
  return isTag(a, "[object Number]");
}
/**
 * Checks if a value is a function
 * @param {*} a
 * @returns {Boolean}
 */

function isFunction(a) {
  return typeof a === "function";
}
/**
 * Checks if a value is null or undefined
 * @param {*} a
 * @returns {Boolean}
 */

function isNoU(a) {
  return a == null;
}
/**
 * Checks if a value is null
 * @param {*} a
 * @returns {Boolean}
 */

function isNull(a) {
  return a === null;
}
/**
 * Checks if a value is an object and not null
 * @param {*} a
 * @returns {Boolean}
 */

function isObject(a) {
  const type = typeof a;
  return a !== null && (type === "object" || type === "function");
}
/**
 * Checks if a value has the type object, and is not null
 * @param {*} a
 * @returns {Boolean}
 */

function isObjectLike(a) {
  return a !== null && typeof a === "object";
}
/**
 * Is Object object
 * @param {*} a
 * @returns {Boolean}
 */

function isObjectObject(a) {
  return a !== null && isTag(a, "[object Object]");
}
/**
 * Checks if a value is a plain object
 * @author lodash
 * @param {*} a
 * @returns {Boolean}
 */

function isPlain(a) {
  if (!isObject(a) || !isObjectObject) {
    return false;
  }

  if (Object.getPrototypeOf(a) === null) {
    return true;
  }

  let proto = a;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(a) === proto;
}
/**
 * Checks if a value is a primary type
 * @param {*} a
 * @returns {Boolean}
 */

function isPrimary(a) {
  return isBoolean(a) || isNumber(a) || isString(a);
}
/**
 * Checks if a value is a promise
 * @param {*} a
 * @returns {Boolean}
 */

function isPromise(a) {
  return isObject(a) && isFunction(a.then);
}
/**
 * Checks if a value is a string
 * @param {*} a
 * @returns {Boolean}
 */

function isString(a) {
  return isTag(a, "[object String]");
}
/**
 * Checks if a value is a symbol
 * @param {*} a
 * @returns {Boolean}
 */

function isSymbol(a) {
  return typeof a === "symbol" || isTag(a, "[object Symbol]");
}
/**
 * Checks if a class is extended from another
 * @param {*} Constructor
 * @param {*} SuperConstructor
 * @returns {boolean}
 */

function isSubclassOf(Constructor, SuperConstructor) {
  if (!isFunction(Constructor)) return false;

  while (isFunction(Constructor)) {
    if (Constructor === SuperConstructor) return true;
    Constructor = Reflect.getPrototypeOf(Constructor);
  }

  return false;
}
/**
 * Checks if a value has a given tag
 * @param {*} a
 * @param {String} tag
 * @returns {Boolean}
 */

function isTag(a, tag) {
  return toString.call(a) === tag;
}
/**
 * Checks if a string is preceded with 'Tr2' or 'Tri'
 * @param {String} string
 * @returns {boolean}
 */

function isTr2OrTri(string) {
  return string && string.indexOf("Tr2") === 0 || string.indexOf("Tri") === 0;
}
/**
 * Converts a string that is preceeded with a 'Tr2' or 'Tri' to 'Tw2'
 * @param string
 * @returns {void|*|string}
 */

function toTw2(string) {
  return isTr2OrTri(string) ? string.replace("Tr2", "Tw2").replace("Tri", "Tw2") : string;
}
/**
 * Gets an object's type in uppercase
 * @param {*} a
 * @returns {string}
 */

function getTypeUpper(a) {
  return Object.prototype.toString.call(a).slice(8, -1).toUpperCase();
}
/**
 * Checks if a value is a typed array
 * @param {*} a
 * @returns {Boolean}
 */

function isTyped(a) {
  return a ? !!(a.buffer instanceof ArrayBuffer && a.BYTES_PER_ELEMENT) : false;
}
/**
 * Checks if a value is undefined
 * @param {*} a
 * @returns {Boolean}
 */

function isUndefined(a) {
  return a === undefined;
}
/**
 * Checks if a value is arraylike and only contains numbers
 * @param {*} a
 * @returns {Boolean}
 */

function isVector(a) {
  if (a) {
    if (isTyped(a)) {
      return true;
    }

    if (isArray(a)) {
      for (let i = 0; i < a.length; i++) {
        if (!isNumber(a[i])) return false;
      }

      return true;
    }
  }

  return false;
}
/**
 * Checks if a value is a vector of length 2
 * @param {*} a
 * @returns {boolean}
 */

function isVector2(a) {
  return isVector(a) ? a.length === 2 : false;
}
/**
 * Checks if a value is a vector of length 3
 * @param {*} a
 * @returns {boolean}
 */

function isVector3(a) {
  return isVector(a) ? a.length === 3 : false;
}
/**
 * Checks if a value is a vector of length 4
 * @param {*} a
 * @returns {boolean}
 */

function isVector4(a) {
  return isVector(a) ? a.length === 4 : false;
}
/**
 * Checks if a value is a vector of length 9
 * @param {*} a
 * @returns {boolean}
 */

function isMatrix3(a) {
  return isVector(a) ? a.length === 9 : false;
}
/**
 * Checks if a value is a vector of length 16
 * @param {*} a
 * @returns {boolean}
 */

function isMatrix4(a) {
  return isVector(a) ? a.length === 16 : false;
}

/***/ }),

/***/ "./global/util/url.js":
/*!****************************!*\
  !*** ./global/util/url.js ***!
  \****************************/
/*! exports provided: getURL, getURLString, getURLInteger, getURLFloat, getURLBoolean */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getURL", function() { return getURL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getURLString", function() { return getURLString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getURLInteger", function() { return getURLInteger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getURLFloat", function() { return getURLFloat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getURLBoolean", function() { return getURLBoolean; });
const url = {},
      query = window.location.search.substring(1),
      split = query.split("&");

for (let i = 0; i < split.length; i++) {
  const result = split[i].split("="),
        key = result[0].toLowerCase(),
        value = unescape(result[1]);

  if (key) {
    let v = value.toLowerCase();
    url[key] = v === "true" ? true : v === "false" ? false : value;
  }
}
/**
 * Gets the url as an object
 * @returns {*}
 */


function getURL() {
  return Object.assign({}, url);
}
/**
 * Gets a string from the url, returning a default value if not found
 * @param {String} key
 * @param {String} defaultValue
 * @returns {String}
 */

function getURLString(key, defaultValue) {
  key = key.toLowerCase();
  return key in url ? url[key] : defaultValue;
}
/**
 * Gets an integer from the url, returning a default value if not found
 * @param {String} key
 * @param {number} defaultValue
 * @returns {number}
 */

function getURLInteger(key, defaultValue) {
  key = key.toLowerCase();
  return key in url ? parseInt(url[key], 10) : defaultValue;
}
/**
 * Gets a float from the url, returning a default value if not found
 * @param {String} key
 * @param {number} defaultValue
 * @returns {number}
 */

function getURLFloat(key, defaultValue) {
  key = key.toLowerCase();
  return key in url ? parseFloat(url[key]) : defaultValue;
}
/**
 * Gets a boolean from the url, returning a default value if not found
 * @param {String} key
 * @param {Boolean} defaultValue
 * @returns {Boolean}
 */

function getURLBoolean(key, defaultValue) {
  key = key.toLowerCase();
  return key in url ? url[key] : defaultValue;
}

/***/ }),

/***/ "./global/util/uuid.js":
/*!*****************************!*\
  !*** ./global/util/uuid.js ***!
  \*****************************/
/*! exports provided: enableUUID, generateID */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableUUID", function() { return enableUUID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateID", function() { return generateID; });
/**
 * Identifies if UUIDs should be used for ID generation
 * @type {?Boolean}
 */
let USE_UUID = null;
/**
 * Internal object count
 * @type {number}
 */

let OBJECT_COUNT = 0;
/**
 * Stores uuid scratch
 * @type {?Array}
 */

let LUT = null;
/**
 * Generates a UUID
 * @author Three.js
 * @returns {String}
 */

function generateUUID() {
  const d0 = Math.random() * 0xffffffff | 0,
        d1 = Math.random() * 0xffffffff | 0,
        d2 = Math.random() * 0xffffffff | 0,
        d3 = Math.random() * 0xffffffff | 0;
  return LUT[d0 & 0xff] + LUT[d0 >> 8 & 0xff] + LUT[d0 >> 16 & 0xff] + LUT[d0 >> 24 & 0xff] + "-" + LUT[d1 & 0xff] + LUT[d1 >> 8 & 0xff] + "-" + LUT[d1 >> 16 & 0x0f | 0x40] + LUT[d1 >> 24 & 0xff] + "-" + LUT[d2 & 0x3f | 0x80] + LUT[d2 >> 8 & 0xff] + "-" + LUT[d2 >> 16 & 0xff] + LUT[d2 >> 24 & 0xff] + LUT[d3 & 0xff] + LUT[d3 >> 8 & 0xff] + LUT[d3 >> 16 & 0xff] + LUT[d3 >> 24 & 0xff];
}
/**
 * Enables UUID's for ID generation
 * @param {Boolean} bool
 * @throws When generateID has already been used and trying to set a different ID type
 */


function enableUUID(bool) {
  if (bool === USE_UUID) {
    return;
  }

  if (USE_UUID !== null) {
    throw new Error("Cannot change id generation type once set");
  }

  if (bool) {
    LUT = [];

    for (let i = 0; i < 256; i++) {
      LUT[i] = (i < 16 ? "0" : "") + i.toString(16).toUpperCase();
    }
  }

  USE_UUID = bool;
}
/**
 * Generates an id
 * - Defaults to Object IDs
 * @returns {String|number}
 */

function generateID() {
  if (USE_UUID === null) {
    USE_UUID = false;
  }

  return USE_UUID ? generateUUID() : OBJECT_COUNT++;
}

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: tw2, ccpwgl_int */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ccpwgl_int", function() { return ccpwgl_int; });
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.description */ "../node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.symbol.async-iterator */ "../node_modules/core-js/modules/es.symbol.async-iterator.js");
/* harmony import */ var core_js_modules_es_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_flat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.flat */ "../node_modules/core-js/modules/es.array.flat.js");
/* harmony import */ var core_js_modules_es_array_flat__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_flat__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_flat_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.flat-map */ "../node_modules/core-js/modules/es.array.flat-map.js");
/* harmony import */ var core_js_modules_es_array_flat_map__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_flat_map__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.iterator */ "../node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_reverse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.reverse */ "../node_modules/core-js/modules/es.array.reverse.js");
/* harmony import */ var core_js_modules_es_array_reverse__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_reverse__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.sort */ "../node_modules/core-js/modules/es.array.sort.js");
/* harmony import */ var core_js_modules_es_array_sort__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_sort__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_array_unscopables_flat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.array.unscopables.flat */ "../node_modules/core-js/modules/es.array.unscopables.flat.js");
/* harmony import */ var core_js_modules_es_array_unscopables_flat__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_unscopables_flat__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_array_unscopables_flat_map__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.array.unscopables.flat-map */ "../node_modules/core-js/modules/es.array.unscopables.flat-map.js");
/* harmony import */ var core_js_modules_es_array_unscopables_flat_map__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_unscopables_flat_map__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_buffer_constructor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array-buffer.constructor */ "../node_modules/core-js/modules/es.array-buffer.constructor.js");
/* harmony import */ var core_js_modules_es_array_buffer_constructor__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_buffer_constructor__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_array_buffer_slice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.array-buffer.slice */ "../node_modules/core-js/modules/es.array-buffer.slice.js");
/* harmony import */ var core_js_modules_es_array_buffer_slice__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_buffer_slice__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_number_parse_float__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.number.parse-float */ "../node_modules/core-js/modules/es.number.parse-float.js");
/* harmony import */ var core_js_modules_es_number_parse_float__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_parse_float__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_object_define_getter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.object.define-getter */ "../node_modules/core-js/modules/es.object.define-getter.js");
/* harmony import */ var core_js_modules_es_object_define_getter__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_getter__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_object_define_setter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.object.define-setter */ "../node_modules/core-js/modules/es.object.define-setter.js");
/* harmony import */ var core_js_modules_es_object_define_setter__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_setter__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_object_from_entries__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.object.from-entries */ "../node_modules/core-js/modules/es.object.from-entries.js");
/* harmony import */ var core_js_modules_es_object_from_entries__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_from_entries__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_object_lookup_getter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.object.lookup-getter */ "../node_modules/core-js/modules/es.object.lookup-getter.js");
/* harmony import */ var core_js_modules_es_object_lookup_getter__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_lookup_getter__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_object_lookup_setter__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.object.lookup-setter */ "../node_modules/core-js/modules/es.object.lookup-setter.js");
/* harmony import */ var core_js_modules_es_object_lookup_setter__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_lookup_setter__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/es.promise */ "../node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var core_js_modules_es_promise_finally__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! core-js/modules/es.promise.finally */ "../node_modules/core-js/modules/es.promise.finally.js");
/* harmony import */ var core_js_modules_es_promise_finally__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_finally__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var core_js_modules_es_string_pad_end__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! core-js/modules/es.string.pad-end */ "../node_modules/core-js/modules/es.string.pad-end.js");
/* harmony import */ var core_js_modules_es_string_pad_end__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_pad_end__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var core_js_modules_es_string_pad_start__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! core-js/modules/es.string.pad-start */ "../node_modules/core-js/modules/es.string.pad-start.js");
/* harmony import */ var core_js_modules_es_string_pad_start__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_pad_start__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var core_js_modules_es_string_replace__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! core-js/modules/es.string.replace */ "../node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var core_js_modules_es_string_trim__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! core-js/modules/es.string.trim */ "../node_modules/core-js/modules/es.string.trim.js");
/* harmony import */ var core_js_modules_es_string_trim__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var core_js_modules_es_string_trim_end__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! core-js/modules/es.string.trim-end */ "../node_modules/core-js/modules/es.string.trim-end.js");
/* harmony import */ var core_js_modules_es_string_trim_end__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_end__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var core_js_modules_es_string_trim_start__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! core-js/modules/es.string.trim-start */ "../node_modules/core-js/modules/es.string.trim-start.js");
/* harmony import */ var core_js_modules_es_string_trim_start__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_start__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var core_js_modules_es_typed_array_float32_array__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! core-js/modules/es.typed-array.float32-array */ "../node_modules/core-js/modules/es.typed-array.float32-array.js");
/* harmony import */ var core_js_modules_es_typed_array_float32_array__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_float32_array__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var core_js_modules_es_typed_array_float64_array__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! core-js/modules/es.typed-array.float64-array */ "../node_modules/core-js/modules/es.typed-array.float64-array.js");
/* harmony import */ var core_js_modules_es_typed_array_float64_array__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_float64_array__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var core_js_modules_es_typed_array_int8_array__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! core-js/modules/es.typed-array.int8-array */ "../node_modules/core-js/modules/es.typed-array.int8-array.js");
/* harmony import */ var core_js_modules_es_typed_array_int8_array__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_int8_array__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var core_js_modules_es_typed_array_int16_array__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! core-js/modules/es.typed-array.int16-array */ "../node_modules/core-js/modules/es.typed-array.int16-array.js");
/* harmony import */ var core_js_modules_es_typed_array_int16_array__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_int16_array__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var core_js_modules_es_typed_array_int32_array__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! core-js/modules/es.typed-array.int32-array */ "../node_modules/core-js/modules/es.typed-array.int32-array.js");
/* harmony import */ var core_js_modules_es_typed_array_int32_array__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_int32_array__WEBPACK_IMPORTED_MODULE_29__);
/* harmony import */ var core_js_modules_es_typed_array_uint8_array__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint8-array */ "../node_modules/core-js/modules/es.typed-array.uint8-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint8_array__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint8_array__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var core_js_modules_es_typed_array_uint8_clamped_array__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint8-clamped-array */ "../node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint8_clamped_array__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint8_clamped_array__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var core_js_modules_es_typed_array_uint16_array__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint16-array */ "../node_modules/core-js/modules/es.typed-array.uint16-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint16_array__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint16_array__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var core_js_modules_es_typed_array_uint32_array__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint32-array */ "../node_modules/core-js/modules/es.typed-array.uint32-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint32_array__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint32_array__WEBPACK_IMPORTED_MODULE_33__);
/* harmony import */ var core_js_modules_es_typed_array_from__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! core-js/modules/es.typed-array.from */ "../node_modules/core-js/modules/es.typed-array.from.js");
/* harmony import */ var core_js_modules_es_typed_array_from__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_from__WEBPACK_IMPORTED_MODULE_34__);
/* harmony import */ var core_js_modules_es_typed_array_of__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! core-js/modules/es.typed-array.of */ "../node_modules/core-js/modules/es.typed-array.of.js");
/* harmony import */ var core_js_modules_es_typed_array_of__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_of__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each */ "../node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each__WEBPACK_IMPORTED_MODULE_36__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator */ "../node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator__WEBPACK_IMPORTED_MODULE_37__);
/* harmony import */ var core_js_modules_web_immediate__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! core-js/modules/web.immediate */ "../node_modules/core-js/modules/web.immediate.js");
/* harmony import */ var core_js_modules_web_immediate__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_immediate__WEBPACK_IMPORTED_MODULE_38__);
/* harmony import */ var core_js_modules_web_queue_microtask__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! core-js/modules/web.queue-microtask */ "../node_modules/core-js/modules/web.queue-microtask.js");
/* harmony import */ var core_js_modules_web_queue_microtask__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_queue_microtask__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var core_js_modules_web_url__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! core-js/modules/web.url */ "../node_modules/core-js/modules/web.url.js");
/* harmony import */ var core_js_modules_web_url__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url__WEBPACK_IMPORTED_MODULE_40__);
/* harmony import */ var core_js_modules_web_url_to_json__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! core-js/modules/web.url.to-json */ "../node_modules/core-js/modules/web.url.to-json.js");
/* harmony import */ var core_js_modules_web_url_to_json__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_to_json__WEBPACK_IMPORTED_MODULE_41__);
/* harmony import */ var core_js_modules_web_url_search_params__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! core-js/modules/web.url-search-params */ "../node_modules/core-js/modules/web.url-search-params.js");
/* harmony import */ var core_js_modules_web_url_search_params__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_search_params__WEBPACK_IMPORTED_MODULE_42__);
/* harmony import */ var reflect_metadata__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! reflect-metadata */ "../node_modules/reflect-metadata/Reflect.js");
/* harmony import */ var reflect_metadata__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(reflect_metadata__WEBPACK_IMPORTED_MODULE_43__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./config */ "./config.js");
/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./global */ "./global/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tw2", function() { return _global__WEBPACK_IMPORTED_MODULE_45__["tw2"]; });















































_global__WEBPACK_IMPORTED_MODULE_45__["tw2"].Register(_config__WEBPACK_IMPORTED_MODULE_44__["config"]);
const ccpwgl_int = _global__WEBPACK_IMPORTED_MODULE_45__["tw2"];


/***/ }),

/***/ "./interior/Tr2Model.js":
/*!******************************!*\
  !*** ./interior/Tr2Model.js ***!
  \******************************/
/*! exports provided: Tr2Model */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2Model", function() { return Tr2Model; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2Model
 * TODO: The ccpwgl class Tw2Model is for a different purpose than this one...
 * @ccp Tr2Model
 *
 * @property {Array.<Tr2Mesh>} meshes -
 */

class Tr2Model extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.meshes = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["meshes", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2Model.__isStaging = 4;

/***/ }),

/***/ "./interior/character/Tr2IntSkinnedObject.js":
/*!***************************************************!*\
  !*** ./interior/character/Tr2IntSkinnedObject.js ***!
  \***************************************************/
/*! exports provided: Tr2IntSkinnedObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2IntSkinnedObject", function() { return Tr2IntSkinnedObject; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2IntSkinnedObject
 * TODO: Do we need this class?
 * TODO: Implement
 *
 * @property {Array.<TriCurveSet>} curveSets -
 * @property {TriMatrix} transform           -
 * @property {Tr2SkinnedModel} visualModel   -
 */

class Tr2IntSkinnedObject extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.curveSets = [];
    this.transform = null;
    this.visualModel = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["curveSets", r.array], ["transform", r.object], ["visualModel", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2IntSkinnedObject.__isStaging = 4;

/***/ }),

/***/ "./interior/character/Tr2SkinnedModel.js":
/*!***********************************************!*\
  !*** ./interior/character/Tr2SkinnedModel.js ***!
  \***********************************************/
/*! exports provided: Tr2SkinnedModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2SkinnedModel", function() { return Tr2SkinnedModel; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2SkinnedModel
 * TODO: Do we need this class?
 * TODO: Implement
 *
 * @property {String} name            -
 * @property {String} geometryResPath -
 * @property {Array.<Mesh>} meshes    -
 * @property {String} skeletonName    -
 */

class Tr2SkinnedModel extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.geometryResPath = "";
    this.meshes = [];
    this.skeletonName = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["geometryResPath", r.string], ["meshes", r.array], ["name", r.string], ["skeletonName", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2SkinnedModel.__isStaging = 4;

/***/ }),

/***/ "./interior/character/index.js":
/*!*************************************!*\
  !*** ./interior/character/index.js ***!
  \*************************************/
/*! exports provided: Tr2IntSkinnedObject, Tr2SkinnedModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2IntSkinnedObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2IntSkinnedObject */ "./interior/character/Tr2IntSkinnedObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2IntSkinnedObject", function() { return _Tr2IntSkinnedObject__WEBPACK_IMPORTED_MODULE_0__["Tr2IntSkinnedObject"]; });

/* harmony import */ var _Tr2SkinnedModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2SkinnedModel */ "./interior/character/Tr2SkinnedModel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2SkinnedModel", function() { return _Tr2SkinnedModel__WEBPACK_IMPORTED_MODULE_1__["Tr2SkinnedModel"]; });




/***/ }),

/***/ "./interior/index.js":
/*!***************************!*\
  !*** ./interior/index.js ***!
  \***************************/
/*! exports provided: Tr2Model, Tr2IntSkinnedObject, Tr2SkinnedModel, Tr2InteriorLightSource, Tr2KelvinColor, Tr2InteriorPlaceable, Tr2InteriorScene, WodPlaceableRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./character */ "./interior/character/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2IntSkinnedObject", function() { return _character__WEBPACK_IMPORTED_MODULE_0__["Tr2IntSkinnedObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2SkinnedModel", function() { return _character__WEBPACK_IMPORTED_MODULE_0__["Tr2SkinnedModel"]; });

/* harmony import */ var _lighting__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lighting */ "./interior/lighting/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorLightSource", function() { return _lighting__WEBPACK_IMPORTED_MODULE_1__["Tr2InteriorLightSource"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2KelvinColor", function() { return _lighting__WEBPACK_IMPORTED_MODULE_1__["Tr2KelvinColor"]; });

/* harmony import */ var _scene__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scene */ "./interior/scene/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorPlaceable", function() { return _scene__WEBPACK_IMPORTED_MODULE_2__["Tr2InteriorPlaceable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorScene", function() { return _scene__WEBPACK_IMPORTED_MODULE_2__["Tr2InteriorScene"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WodPlaceableRes", function() { return _scene__WEBPACK_IMPORTED_MODULE_2__["WodPlaceableRes"]; });

/* harmony import */ var _Tr2Model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tr2Model */ "./interior/Tr2Model.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2Model", function() { return _Tr2Model__WEBPACK_IMPORTED_MODULE_3__["Tr2Model"]; });






/***/ }),

/***/ "./interior/lighting/Tr2InteriorLightSource.js":
/*!*****************************************************!*\
  !*** ./interior/lighting/Tr2InteriorLightSource.js ***!
  \*****************************************************/
/*! exports provided: Tr2InteriorLightSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorLightSource", function() { return Tr2InteriorLightSource; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");


/**
 * Tr2InteriorLightSource
 * TODO: Do we need this class?
 * TODO: Implement
 *
 * @property {String} name                -
 * @property {vec4} color                 -
 * @property {Number} coneAlphaInner      -
 * @property {Number} coneAlphaOuter      -
 * @property {vec3} coneDirection         -
 * @property {Number} falloff             -
 * @property {Number} importanceBias      -
 * @property {Number} importanceScale     -
 * @property {Tr2KelvinColor} kelvinColor -
 * @property {vec3} position              -
 * @property {Number} radius              -
 * @property {Boolean} useKelvinColor     -
 */

class Tr2InteriorLightSource extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.coneAlphaInner = 0;
    this.coneAlphaOuter = 0;
    this.coneDirection = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.falloff = 0;
    this.importanceBias = 0;
    this.importanceScale = 0;
    this.kelvinColor = null;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radius = 0;
    this.useKelvinColor = false;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["color", r.vector4], ["coneAlphaInner", r.float], ["coneAlphaOuter", r.float], ["coneDirection", r.vector3], ["falloff", r.float], ["importanceBias", r.float], ["importanceScale", r.float], ["kelvinColor", r.object], ["name", r.string], ["position", r.vector3], ["radius", r.float], ["useKelvinColor", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2InteriorLightSource.__isStaging = 4;

/***/ }),

/***/ "./interior/lighting/Tr2KelvinColor.js":
/*!*********************************************!*\
  !*** ./interior/lighting/Tr2KelvinColor.js ***!
  \*********************************************/
/*! exports provided: Tr2KelvinColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2KelvinColor", function() { return Tr2KelvinColor; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2KelvinColor
 * TODO: Do we need this class?
 * TODO: Implement
 *
 * @property {Number} temperature -
 * @property {Number} tint        -
 */

class Tr2KelvinColor extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.temperature = 0;
    this.tint = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["temperature", r.float], ["tint", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2KelvinColor.__isStaging = 4;

/***/ }),

/***/ "./interior/lighting/index.js":
/*!************************************!*\
  !*** ./interior/lighting/index.js ***!
  \************************************/
/*! exports provided: Tr2InteriorLightSource, Tr2KelvinColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2InteriorLightSource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2InteriorLightSource */ "./interior/lighting/Tr2InteriorLightSource.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorLightSource", function() { return _Tr2InteriorLightSource__WEBPACK_IMPORTED_MODULE_0__["Tr2InteriorLightSource"]; });

/* harmony import */ var _Tr2KelvinColor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2KelvinColor */ "./interior/lighting/Tr2KelvinColor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2KelvinColor", function() { return _Tr2KelvinColor__WEBPACK_IMPORTED_MODULE_1__["Tr2KelvinColor"]; });




/***/ }),

/***/ "./interior/scene/Tr2InteriorPlaceable.js":
/*!************************************************!*\
  !*** ./interior/scene/Tr2InteriorPlaceable.js ***!
  \************************************************/
/*! exports provided: Tr2InteriorPlaceable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorPlaceable", function() { return Tr2InteriorPlaceable; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2InteriorPlaceable
 * TODO: Do we need this class?
 * TODO: Implement
 *
 * @property {String} placeableResPath -
 * @property {TriMatrix} transform     -
 */

class Tr2InteriorPlaceable extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.placeableResPath = "";
    this.transform = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["placeableResPath", r.path], ["transform", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2InteriorPlaceable.__isStaging = 4;

/***/ }),

/***/ "./interior/scene/Tr2InteriorScene.js":
/*!********************************************!*\
  !*** ./interior/scene/Tr2InteriorScene.js ***!
  \********************************************/
/*! exports provided: Tr2InteriorScene */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorScene", function() { return Tr2InteriorScene; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2InteriorScene
 * TODO: Do we need this class?
 * TODO: Implement
 *
 * @property {Array.<Tr2IntSkinnedObject>} dynamics  -
 * @property {Array.<Tr2InteriorLightSource>} lights -
 */

class Tr2InteriorScene extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.dynamics = [];
    this.lights = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["dynamics", r.array], ["lights", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2InteriorScene.__isStaging = 4;

/***/ }),

/***/ "./interior/scene/WodPlaceableRes.js":
/*!*******************************************!*\
  !*** ./interior/scene/WodPlaceableRes.js ***!
  \*******************************************/
/*! exports provided: WodPlaceableRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WodPlaceableRes", function() { return WodPlaceableRes; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * WodPlaceableRes
 * TODO: Do we need this class?
 * TODO: Implement
 *
 * @property {Number} farFadeDistance  -
 * @property {Number} nearFadeDistance -
 * @property {Tr2Model} visualModel    -
 */

class WodPlaceableRes extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.farFadeDistance = 0;
    this.nearFadeDistance = 0;
    this.visualModel = null;
  }

}

/***/ }),

/***/ "./interior/scene/index.js":
/*!*********************************!*\
  !*** ./interior/scene/index.js ***!
  \*********************************/
/*! exports provided: Tr2InteriorPlaceable, Tr2InteriorScene, WodPlaceableRes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2InteriorPlaceable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2InteriorPlaceable */ "./interior/scene/Tr2InteriorPlaceable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorPlaceable", function() { return _Tr2InteriorPlaceable__WEBPACK_IMPORTED_MODULE_0__["Tr2InteriorPlaceable"]; });

/* harmony import */ var _Tr2InteriorScene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2InteriorScene */ "./interior/scene/Tr2InteriorScene.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2InteriorScene", function() { return _Tr2InteriorScene__WEBPACK_IMPORTED_MODULE_1__["Tr2InteriorScene"]; });

/* harmony import */ var _WodPlaceableRes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WodPlaceableRes */ "./interior/scene/WodPlaceableRes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WodPlaceableRes", function() { return _WodPlaceableRes__WEBPACK_IMPORTED_MODULE_2__["WodPlaceableRes"]; });





/***/ }),

/***/ "./particle/Tw2GpuParticleSystem.js":
/*!******************************************!*\
  !*** ./particle/Tw2GpuParticleSystem.js ***!
  \******************************************/
/*! exports provided: Tr2GpuParticleSystem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuParticleSystem", function() { return Tr2GpuParticleSystem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2GpuParticleSystem
 * TODO: Implement
 * @ccp Tr2GpuParticleSystem
 *
 * @property {Tw2Effect} clear             -
 * @property {Tw2Effect} emit              -
 * @property {Tw2Effect} render            -
 * @property {Tw2Effect} setDrawParameters -
 * @property {Tw2Effect} setSortParameters -
 * @property {Tw2Effect} sort              -
 * @property {Tw2Effect} sortInner         -
 * @property {Tw2Effect} sortStep          -
 * @property {Tw2Effect} update            -
 */

class Tr2GpuParticleSystem extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.clear = null;
    this.emit = null;
    this.render = null;
    this.setDrawParameters = null;
    this.setSortParameters = null;
    this.sort = null;
    this.sortInner = null;
    this.sortStep = null;
    this.update = null;
  }

  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */
  GetResources(out = []) {
    if (this.clear) this.clear.GetResources(out);
    if (this.emit) this.emit.GetResources(out);
    if (this.render) this.render.GetResources(out);
    if (this.setDrawParameters) this.setDrawParameters.GetResources(out);
    if (this.setSortParameters) this.setSortParameters.GetResources(out);
    if (this.sort) this.sort.GetResources(out);
    if (this.sortInner) this.sortInner.GetResources(out);
    if (this.sortStep) this.sortStep.GetResources(out);
    if (this.update) this.update.GetResources(out);
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["clear", r.object], ["emit", r.object], ["render", r.object], ["setDrawParameters", r.object], ["setSortParameters", r.object], ["sort", r.object], ["sortInner", r.object], ["sortStep", r.object], ["update", r.object]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2GpuParticleSystem.__isStaging = 4;

/***/ }),

/***/ "./particle/Tw2ParticleSystem.js":
/*!***************************************!*\
  !*** ./particle/Tw2ParticleSystem.js ***!
  \***************************************/
/*! exports provided: Tw2ParticleSystem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleSystem", function() { return Tw2ParticleSystem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./element */ "./particle/element/index.js");



/**
 * Tw2ParticleSystem
 * TODO: Identify where "aabbMin" is used
 * TODO: Identify where "aabbMax" is used
 * TODO: Is "isGlobal" deprecated, it isn't used anywhere
 * TODO: Is "peakAliveCount" deprecated, it isn't used anywhere
 * TODO: Implement "useSimTimeRebase"
 * @ccp Tr2ParticleSystem
 *
 * @property {String} name                                                      - The particle system's name
 * @property {Boolean} applyAging                                               - Applies aging
 * @property {Boolean} applyForce                                               - Applies particle forces
 * @property {Array.<Tw2ParticleConstraint>} constraints                        - Particle constraints
 * @property {Array.<Tr2ParticleElementDeclaration>} elements                   - Particle elements
 * @property {ParticleEmitter|ParticleEmitterGPU} emitParticleDuringLifeEmitter - Particle emitter called when alive
 * @property {ParticleEmitter|ParticleEmitterGPU} emitParticleOnDeathEmitter    - Particle emitter called when dead
 * @property {Array.<Tw2ParticleForce>} forces                                  - Particle forces
 * @property {Boolean} isGlobal                                                 - unused?
 * @property {Number} maxParticleCount                                          - Maximum particle count
 * @property {number} peakAliveCount                                            - unused?
 * @property {Boolean} requiresSorting                                          - Identifies that particles require sorting
 * @property {Boolean} updateBoundingBox                                        - Identifies that bounds require updating
 * @property {Boolean} updateSimulation                                         - Identifies that forces an constraints are used
 * @property {Boolean} useSimTimeRebase                                         -
 * @property {vec3} _aabbMin                                                    - Axis aligned bounding box min
 * @property {vec3} _aabbMax                                                    - Axis aligned bounding box max
 * @property {number} _aliveCount                                               - The current particle count
 * @property {Boolean} _bufferDirty                                             - Identifies that buffers require rebuilding
 * @property {Array} _buffers                                                   -
 * @property {Tw2VertexDeclaration} _declaration                                - Instance declaration
 * @property {Array<Tw2ParticleElement>} _elements                              -
 * @property {Array} _instanceStride                                            -
 * @property {Boolean} _isValid                                                 - Identifies that the particle system is good
 * @property {Float32Array} _distancesBuffer                                    -
 * @property {Float32Array} _sortedBuffer                                       -
 * @property {Array} _sortedIndexes                                             -
 * @property {Array<Tw2ParticleElement>} _stdElements                           - Standard particle elements
 * @property {WebGLBuffer} _vb                                                  - Vertex buffer
 * @property {Array} _vertexStride                                              - Vertex stride
 */

class Tw2ParticleSystem extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  // ccpwgl
  //Float32Array
  //Float32Array
  // Array

  /**
   * Constructor
   */
  constructor() {
    super();
    this.name = "";
    this.applyAging = true;
    this.applyForce = true;
    this.constraints = [];
    this.elements = [];
    this.emitParticleDuringLifeEmitter = null;
    this.emitParticleOnDeathEmitter = null;
    this.forces = [];
    this.maxParticleCount = 0;
    this.requiresSorting = false;
    this.updateBoundingBox = false;
    this.updateSimulation = true;
    this.useSimTimeRebase = false;
    this.isGlobal = false;
    this.peakAliveCount = 0;
    this._aabbMin = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._aabbMax = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this._aliveCount = 0;
    this._bufferDirty = false;
    this._buffers = [null, null];
    this._declaration = null;
    this._elements = [];
    this._instanceStride = [null, null];
    this._isValid = false;
    this._distancesBuffer = null;
    this._sortedBuffer = null;
    this._sortedIndexes = null;
    this._stdElements = [null, null, null, null];
    this._vb = null;
    this._vertexStride = [null, null];
    Tw2ParticleSystem.init();
  }
  /**
   * Initializes the Particle System
   */


  Initialize() {
    this.UpdateElementDeclaration();
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    return out;
  }
  /**
   * Updates Element Declarations
   */


  UpdateElementDeclaration() {
    this._isValid = false;
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;

    if (this._vb) {
      gl.deleteBuffer(this._vb);
      this._vb = null;
    }

    this._declaration = null;
    this._aliveCount = 0;
    if (this.elements.length === 0) return;
    this._stdElements = [null, null, null, null];
    this._elements = [];
    this._instanceStride = [0, 0];
    this._vertexStride = [0, 0];
    this._declaration = new core__WEBPACK_IMPORTED_MODULE_1__["Tw2VertexDeclaration"]();
    this._buffers = [null, null];

    for (let i = 0; i < this.elements.length; ++i) {
      const bufferIndex = this.elements[i].usedByGPU ? 0 : 1,
            src = this.elements[i];
      const el = _element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].from({
        elementType: src.elementType,
        customName: src.customName,
        dimension: src.GetDimension(),
        usageIndex: src.usageIndex,
        usedByGPU: src.usedByGPU
      }); //el.buffer = this._buffers[bufferIndex];

      el.startOffset = this._vertexStride[bufferIndex];
      el.offset = el.startOffset;

      if (this.elements[i].elementType !== _element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.CUSTOM) {
        this._stdElements[this.elements[i].elementType] = el;
      }

      this._vertexStride[bufferIndex] += el.dimension;

      this._elements.push(el);

      if (bufferIndex === 0) {
        const d = this.elements[i].GetDeclaration();
        d.offset = el.startOffset * 4;

        this._declaration.elements.push(d);
      }
    }

    this._declaration.RebuildHash();

    for (let i = 0; i < this._elements.length; ++i) {
      const bufferIndex = this._elements[i].usedByGPU ? 0 : 1;
      this._elements[i].vertexStride = this._vertexStride[bufferIndex];
    }

    this._instanceStride[0] = this._vertexStride[0] * 4;
    this._instanceStride[1] = this._vertexStride[1] * 4;

    for (let i = 0; i < this._elements.length; ++i) {
      const bufferIndex = this._elements[i].usedByGPU ? 0 : 1;
      this._elements[i].instanceStride = this._instanceStride[bufferIndex];
    }

    this._buffers = [null, null];

    if (this._instanceStride[0] && this.maxParticleCount) {
      this._buffers[0] = new Float32Array(this._instanceStride[0] * this.maxParticleCount);
      this._vb = gl.createBuffer();
      gl.bindBuffer(gl.ARRAY_BUFFER, this._vb);
      gl.bufferData(gl.ARRAY_BUFFER, this._buffers[0].length, gl.DYNAMIC_DRAW);
      gl.bindBuffer(gl.ARRAY_BUFFER, null);
    }

    if (this._instanceStride[1]) {
      this._buffers[1] = new Float32Array(this._instanceStride[1] * this.maxParticleCount);
    }

    for (let i = 0; i < this._elements.length; ++i) {
      const bufferIndex = this._elements[i].usedByGPU ? 0 : 1;
      this._elements[i].buffer = this._buffers[bufferIndex];
    }

    if (this.requiresSorting) {
      this._sortedIndexes = new Array(this.maxParticleCount);
      this._sortedBuffer = new Float32Array(this._instanceStride[0] * this.maxParticleCount);
      this._distancesBuffer = new Float32Array(this.maxParticleCount);
    }

    this._isValid = true;
    this._bufferDirty = true;
  }
  /**
   * Checks if an element type exists
   * @param {number} type
   * @returns {Boolean}
   */


  HasElement(type) {
    return this._stdElements[type] !== null;
  }
  /**
   * Gets an element by it's type
   * @param {number} type
   * @returns {Tw2ParticleElement}
   */


  GetElement(type) {
    if (this._stdElements[type]) {
      this._stdElements[type].offset = this._stdElements[type].startOffset;
    }

    return this._stdElements[type];
  }
  /**
   * Begins particle spawning
   * @returns {?number}
   */


  BeginSpawnParticle() {
    if (!this._isValid || this._aliveCount >= this.maxParticleCount) return null;
    return this._aliveCount++;
  }
  /**
   * Ends particle spawning
   */


  EndSpawnParticle() {
    this._bufferDirty = true;
  }
  /**
   * Per frame update
   * @param {number} dt - delta time
   */


  Update(dt) {
    dt = Math.min(dt, 0.1);

    if (this.applyAging && this.HasElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.LIFETIME)) {
      const lifetime = this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.LIFETIME),
            position = this.emitParticleOnDeathEmitter ? this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION) : null,
            velocity = this.emitParticleOnDeathEmitter ? this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.VELOCITY) : null;

      for (let i = 0; i < this._aliveCount; ++i) {
        lifetime.buffer[lifetime.offset] += dt / lifetime.buffer[lifetime.offset + 1];

        if (lifetime.buffer[lifetime.offset] > 1) {
          if (this.emitParticleOnDeathEmitter) {
            this.emitParticleOnDeathEmitter.SpawnParticles(position, velocity, 1);
          }

          this._aliveCount--;

          if (i < this._aliveCount) {
            for (let j = 0; j < 2; ++j) {
              if (this._buffers[j]) {
                this._buffers[j].set(this._buffers[j].subarray(this._instanceStride[j] * this._aliveCount, this._instanceStride[j] * this._aliveCount + this._instanceStride[j]), i * this._instanceStride[j]);
              }
            }

            --i;
            this._bufferDirty = true;
          }
        } else {
          lifetime.offset += lifetime.instanceStride;
          if (position) position.offset += position.instanceStride;
          if (velocity) velocity.offset += velocity.instanceStride;
        }
      }

      lifetime.dirty = true;
    }

    const vec3_0 = Tw2ParticleSystem.global.vec3_0;

    if (this.updateSimulation && this.HasElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION) && this.HasElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.VELOCITY)) {
      const hasForces = this.applyForce && this.forces.length;

      for (let i = 0; i < this.forces.length; ++i) {
        this.forces[i].Update(dt);
      }

      const position = this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION),
            velocity = this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.VELOCITY),
            mass = hasForces ? this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.MASS) : null;

      for (let i = 0; i < this._aliveCount; ++i) {
        if (hasForces) {
          const amass = mass ? mass.buffer[mass.offset] : 1,
                force = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].set(vec3_0, 0, 0, 0);

          for (let j = 0; j < this.forces.length; ++j) {
            this.forces[j].ApplyForce(position, velocity, force, dt, amass);
          }

          if (mass) global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(force, force, 1 / mass.buffer[mass.offset]);
          velocity.buffer[velocity.offset] += force[0] * dt;
          velocity.buffer[velocity.offset + 1] += force[1] * dt;
          velocity.buffer[velocity.offset + 2] += force[2] * dt;
        }

        position.buffer[position.offset] += velocity.buffer[velocity.offset] * dt;
        position.buffer[position.offset + 1] += velocity.buffer[velocity.offset + 1] * dt;
        position.buffer[position.offset + 2] += velocity.buffer[velocity.offset + 2] * dt;

        if (this.emitParticleDuringLifeEmitter) {
          this.emitParticleDuringLifeEmitter.SpawnParticles(position, velocity, dt);
        }

        position.offset += position.instanceStride;
        velocity.offset += velocity.instanceStride;
        if (mass) mass.offset += mass.instanceStride;
      }

      position.dirty = true;
      velocity.dirty = true;
    }

    if (this.updateSimulation && this.constraints.length) {
      for (let i = 0; i < this.constraints.length; ++i) {
        this.constraints[i].ApplyConstraint(this._buffers, this._instanceStride, this._aliveCount, dt);
      }
    }

    if (this.updateBoundingBox) {
      this.GetBoundingBox(this._aabbMin, this._aabbMax);
    }

    if (this.emitParticleDuringLifeEmitter && !(this.HasElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION) && this.HasElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.VELOCITY)) && this.updateSimulation) {
      const position = this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION),
            velocity = this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.VELOCITY);

      for (let i = 0; i < this._aliveCount; ++i) {
        this.emitParticleDuringLifeEmitter.SpawnParticles(position, velocity, 1);
        if (position) position.offset += position.instanceStride;
        if (velocity) velocity.offset += velocity.instanceStride;
      }
    }

    for (let i = 0; i < this._elements.length; ++i) {
      const el = this._elements[i];
      el.offset = el.startOffset;

      if (el.dirty) {
        this._bufferDirty = true;
        el.dirty = false;
      }
    }
  }
  /**
   * Gets bounding box
   * @param {vec3} aabbMin
   * @param {vec3} aabbMax
   * @returns {Boolean}
   */


  GetBoundingBox(aabbMin, aabbMax) {
    if (this._aliveCount && this.HasElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION)) {
      const position = this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION);
      aabbMin[0] = position.buffer[position.offset];
      aabbMin[1] = position.buffer[position.offset + 1];
      aabbMin[2] = position.buffer[position.offset + 2];
      aabbMax[0] = position.buffer[position.offset];
      aabbMax[1] = position.buffer[position.offset + 1];
      aabbMax[2] = position.buffer[position.offset + 2];

      for (let i = 0; i < this._aliveCount; ++i) {
        aabbMin[0] = Math.min(aabbMin[0], position.buffer[position.offset]);
        aabbMin[1] = Math.min(aabbMin[1], position.buffer[position.offset + 1]);
        aabbMin[2] = Math.min(aabbMin[2], position.buffer[position.offset + 2]);
        aabbMax[0] = Math.max(aabbMax[0], position.buffer[position.offset]);
        aabbMax[1] = Math.max(aabbMax[1], position.buffer[position.offset + 1]);
        aabbMax[2] = Math.max(aabbMax[2], position.buffer[position.offset + 2]);
        position.offset += position.instanceStride;
      }

      return true;
    }

    return false;
  }
  /**
   * _Sort
   * @private
   */


  _Sort() {
    const eye = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].multiply(Tw2ParticleSystem.global.mat4_0, global__WEBPACK_IMPORTED_MODULE_0__["device"].projection, global__WEBPACK_IMPORTED_MODULE_0__["device"].view),
          //device.viewInverse;
    position = this.GetElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION),
          count = this._aliveCount,
          distances = this._distancesBuffer;

    for (let i = 0; i < count; ++i) {
      const o0 = position.offset + position.instanceStride * i;
      let dd = position.buffer[o0] - eye[12],
          l0 = dd * dd;
      dd = position.buffer[o0 + 1] - eye[13];
      l0 += dd * dd;
      dd = position.buffer[o0 + 2] - eye[14];
      l0 += dd * dd;
      distances[i] = l0;
    }
    /**
     * sortItems
     * @param a
     * @param b
     * @returns {number}
     * @private
     */


    function sortItems(a, b) {
      if (a >= count && b >= count) {
        if (a < b) return -1;
        if (a > b) return 1;
        return 0;
      }

      if (a >= count) return 1;
      if (b >= count) return -1;
      const l0 = distances[a],
            l1 = distances[b];
      if (l0 < l1) return 1;
      if (l0 > l1) return -1;
      return 0;
    }

    for (let i = 0; i < this.maxParticleCount; ++i) {
      this._sortedIndexes[i] = i;
    }

    this._sortedIndexes.sort(sortItems);
  }
  /**
   * Updates and gets the particle system's InstanceBuffer
   * @returns {?WebGLBuffer}
   */


  GetInstanceBuffer() {
    if (this._aliveCount === 0) return undefined;
    const gl = global__WEBPACK_IMPORTED_MODULE_0__["device"].gl;

    if (this.requiresSorting && this.HasElement(_element__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleElement"].Type.POSITION) && this._buffers) {
      this._Sort();

      const stride = this._instanceStride[0],
            gpuBuffer = this._buffers[0];

      for (let i = 0; i < this._aliveCount; ++i) {
        const toOffset = i * stride,
              fromOffset = this._sortedIndexes[i] * stride;

        for (let j = 0; j < stride; ++j) {
          this._sortedBuffer[toOffset + j] = gpuBuffer[j + fromOffset];
        }
      }

      gl.bindBuffer(gl.ARRAY_BUFFER, this._vb);
      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._sortedBuffer.subarray(0, this._vertexStride[0] * this._aliveCount));
      this._bufferDirty = false;
    } else if (this._bufferDirty) {
      gl.bindBuffer(gl.ARRAY_BUFFER, this._vb);
      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this._buffers[0].subarray(0, this._vertexStride[0] * this._aliveCount));
      this._bufferDirty = false;
    }

    return this._vb;
  }
  /**
   * Gets the particle system's InstanceDeclaration
   * @returns {Tw2VertexDeclaration}
   */


  GetInstanceDeclaration() {
    return this._declaration;
  }
  /**
   * Gets the particle system's InstanceStride
   * @returns {number}
   */


  GetInstanceStride() {
    return this._instanceStride[0];
  }
  /**
   * Gets the particle system's InstanceCount
   * @returns {number}
   */


  GetInstanceCount() {
    return this._aliveCount;
  }
  /**
   * Initializes class globals
   */


  static init() {
    if (!Tw2ParticleSystem.global) {
      Tw2ParticleSystem.global = {
        vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        mat4_0: global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create()
      };
    }
  }
  /**
   * Global and scratch variables
   */


  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["constraints", r.array], ["name", r.string], ["applyAging", r.boolean], ["applyForce", r.boolean], ["elements", r.array], ["emitParticleDuringLifeEmitter", r.object], ["emitParticleOnDeathEmitter", r.object], ["forces", r.array], ["maxParticleCount", r.uint], ["requiresSorting", r.boolean], ["updateBoundingBox", r.boolean], ["updateSimulation", r.boolean], ["useSimTimeRebase", r.boolean]];
  }

}
Tw2ParticleSystem.global = null;

/***/ }),

/***/ "./particle/constraint/Tr2PlaneConstraint.js":
/*!***************************************************!*\
  !*** ./particle/constraint/Tr2PlaneConstraint.js ***!
  \***************************************************/
/*! exports provided: Tr2PlaneConstraint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2PlaneConstraint", function() { return Tr2PlaneConstraint; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleConstraint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleConstraint */ "./particle/constraint/Tw2ParticleConstraint.js");
var _dec, _dec2, _class, _class2, _class3, _temp;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }



/**
 * Tr2PlaneConstraint
 * TODO: Implement
 * @ccp Tr2PlaneConstraint
 *
 * @property {Array.<ParticleAttributeGenerator>} generators -
 * @property {Number} reflectionNoise                        -
 */

let Tr2PlaneConstraint = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_class2 = (_temp = _class3 = class Tr2PlaneConstraint extends _Tw2ParticleConstraint__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleConstraint"] {
  constructor(...args) {
    super(...args);
    this.generators = [];
    this.reflectionNoise = 0;
  }

  /**
   * Applies constraints
   * @param {Array} buffers
   * @param {Array} instanceStride
   * @param {number} aliveCount
   * @param {number} dt
   */
  ApplyConstraint(buffers, instanceStride, aliveCount, dt) {}
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["reflectionNoise", r.float], ["generators", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}, _class3.__isStaging = 4, _temp), (_applyDecoratedDescriptor(_class2.prototype, "ApplyConstraint", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "ApplyConstraint"), _class2.prototype)), _class2)) || _class);

/***/ }),

/***/ "./particle/constraint/Tw2ParticleConstraint.js":
/*!******************************************************!*\
  !*** ./particle/constraint/Tw2ParticleConstraint.js ***!
  \******************************************************/
/*! exports provided: Tw2ParticleConstraint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleConstraint", function() { return Tw2ParticleConstraint; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _dec2, _class, _class2;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

/**
 * Tw2ParticleConstraint base class
 * - Not implemented yet
 *
 * @property {String|number} _id
 * @property {String} name
 */

let Tw2ParticleConstraint = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_class2 = class Tw2ParticleConstraint extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Applies constraints
   * @param {Array} buffers
   * @param {Array} instanceStride
   * @param {number} aliveCount
   * @param {number} dt
   */
  ApplyConstraint(buffers, instanceStride, aliveCount, dt) {}

}, (_applyDecoratedDescriptor(_class2.prototype, "ApplyConstraint", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "ApplyConstraint"), _class2.prototype)), _class2)) || _class);

/***/ }),

/***/ "./particle/constraint/index.js":
/*!**************************************!*\
  !*** ./particle/constraint/index.js ***!
  \**************************************/
/*! exports provided: Tr2PlaneConstraint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2PlaneConstraint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2PlaneConstraint */ "./particle/constraint/Tr2PlaneConstraint.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2PlaneConstraint", function() { return _Tr2PlaneConstraint__WEBPACK_IMPORTED_MODULE_0__["Tr2PlaneConstraint"]; });



/***/ }),

/***/ "./particle/element/Tw2ParticleElement.js":
/*!************************************************!*\
  !*** ./particle/element/Tw2ParticleElement.js ***!
  \************************************************/
/*! exports provided: Tw2ParticleElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleElement", function() { return Tw2ParticleElement; });
/**
 * Tw2ParticleElement
 *
 * @property {number} elementType
 * @property {String} customName
 * @property {number} dimension
 * @property {number} usageIndex
 * @property {Boolean} usedByGPU
 * @property buffer
 * @property {number} startOffset
 * @property {number} offset
 * @property {number} instanceStride
 * @property {number} vertexStride
 * @property {Boolean} dirty
 * @class
 */
class Tw2ParticleElement {
  constructor() {
    this.elementType = null;
    this.customName = null;
    this.dimension = null;
    this.usageIndex = null;
    this.usedByGPU = null;
    this.buffer = null;
    this.startOffset = 0;
    this.offset = 0;
    this.instanceStride = 0;
    this.vertexStride = 0;
    this.dirty = false;
  }

  /**
   * Gets the element type as a string
   * @returns {String}
   */
  get string() {
    return Tw2ParticleElement.TypeMap[this.elementType] || "UNKNOWN";
  }
  /**
   * Particle element factory
   * @param {*} values
   * @returns {Tw2ParticleElement}
   */


  static from(values) {
    const item = new Tw2ParticleElement();

    if (values) {
      const type = values.elementType;
      item.elementType = typeof type === "string" ? this.Type[type.toUpperCase()] : type;
      item.customName = values.customName;
      item.dimension = values.dimension;
      item.usageIndex = values.usageIndex;
      item.usedByGPU = values.usedByGPU ? 1 : 0;
    }

    return item;
  }
  /**
   * Particle element types
   * @type {{LIFETIME: number, POSITION: number, VELOCITY: number, MASS: number, CUSTOM: number}}
   */


}
Tw2ParticleElement.Type = {
  LIFETIME: 0,
  POSITION: 1,
  VELOCITY: 2,
  MASS: 3,
  CUSTOM: 4
};
Tw2ParticleElement.TypeMap = ["LIFETIME", "POSITION", "VELOCITY", "MASS", "CUSTOM"];

/***/ }),

/***/ "./particle/element/Tw2ParticleElementDeclaration.js":
/*!***********************************************************!*\
  !*** ./particle/element/Tw2ParticleElementDeclaration.js ***!
  \***********************************************************/
/*! exports provided: Tw2ParticleElementDeclaration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleElementDeclaration", function() { return Tw2ParticleElementDeclaration; });
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleElement */ "./particle/element/Tw2ParticleElement.js");
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! global */ "./global/index.js");



/**
 * Tw2ParticleElementDeclaration
 * TODO: Handle "elementType" if passed a string by .black format
 * @ccp Tr2ParticleElementDeclaration
 *
 * @property {String} customName  -
 * @property {Number} dimension   -
 * @property {Number} elementType -
 * @property {Number} usageIndex  -
 * @property {Boolean} usedByGPU  -
 */

class Tw2ParticleElementDeclaration extends global__WEBPACK_IMPORTED_MODULE_2__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.customName = "";
    this.dimension = 1;
    this.elementType = 4;
    this.usageIndex = 0;
    this.usedByGPU = true;
  }

  /**
   * Gets the element's dimension
   * @returns {number}
   */
  GetDimension() {
    switch (this.elementType) {
      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.LIFETIME:
        return 2;

      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.POSITION:
        return 3;

      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.VELOCITY:
        return 3;

      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.MASS:
        return 1;
    }

    return this.dimension;
  }
  /**
   * Gets the object's vertex declaration
   * @returns {Tw2VertexElement}
   */


  GetDeclaration() {
    let usage;

    switch (this.elementType) {
      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.LIFETIME:
        usage = core__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexElement"].Type.TANGENT;
        break;

      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.POSITION:
        usage = core__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexElement"].Type.POSITION;
        break;

      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.VELOCITY:
        usage = core__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexElement"].Type.NORMAL;
        break;

      case _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.MASS:
        usage = core__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexElement"].Type.BINORMAL;
        break;

      default:
        usage = core__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexElement"].Type.TEXCOORD;
    }

    return core__WEBPACK_IMPORTED_MODULE_0__["Tw2VertexElement"].from({
      usage: usage,
      usageIndex: this.usageIndex,
      elements: this.GetDimension()
    });
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["customName", r.string], ["dimension", r.uint], ["elementType", r.uint], ["usageIndex", r.uint], ["usedByGPU", r.boolean]];
  }

}

/***/ }),

/***/ "./particle/element/index.js":
/*!***********************************!*\
  !*** ./particle/element/index.js ***!
  \***********************************/
/*! exports provided: Tw2ParticleElement, Tw2ParticleElementDeclaration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2ParticleElement */ "./particle/element/Tw2ParticleElement.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleElement", function() { return _Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_0__["Tw2ParticleElement"]; });

/* harmony import */ var _Tw2ParticleElementDeclaration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleElementDeclaration */ "./particle/element/Tw2ParticleElementDeclaration.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleElementDeclaration", function() { return _Tw2ParticleElementDeclaration__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElementDeclaration"]; });




/***/ }),

/***/ "./particle/emitter/Tr2GpuSharedEmitter.js":
/*!*************************************************!*\
  !*** ./particle/emitter/Tr2GpuSharedEmitter.js ***!
  \*************************************************/
/*! exports provided: Tr2GpuSharedEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuSharedEmitter", function() { return Tr2GpuSharedEmitter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleEmitter */ "./particle/emitter/Tw2ParticleEmitter.js");


/**
 * Tr2GpuSharedEmitter
 * TODO: Implement
 * @ccp Tr2GpuSharedEmitter
 *
 * @property {String} name                         -
 * @property {Number} angle                        -
 * @property {vec3} attractorPosition              -
 * @property {Number} attractorStrength            -
 * @property {vec4} color0                         -
 * @property {vec4} color1                         -
 * @property {vec4} color2                         -
 * @property {vec4} color3                         -
 * @property {Number} colorMidpoint                -
 * @property {Boolean} continuousEmitter           -
 * @property {vec3} direction                      -
 * @property {Number} drag                         -
 * @property {Number} emissionDensity              -
 * @property {Number} gravity                      -
 * @property {Number} inheritVelocity              -
 * @property {Number} innerAngle                   -
 * @property {Number} maxDisplacement              -
 * @property {Number} maxEmissionDensity           -
 * @property {Number} maxLifeTime                  -
 * @property {Number} maxSpeed                     -
 * @property {Number} minLifeTime                  -
 * @property {Number} minSpeed                     -
 * @property {Tw2GpuParticleSystem} particleSystem -
 * @property {vec3} position                       -
 * @property {Number} radius                       -
 * @property {Number} rate                         -
 * @property {Boolean} scaledByParent              -
 * @property {Number} sizeVariance                 -
 * @property {vec3} sizes                          -
 * @property {Number} textureIndex                 -
 * @property {Number} turbulenceAmplitude          -
 * @property {Number} turbulenceFrequency          -
 * @property {Number} velocityStretchRotation      -
 */

class Tr2GpuSharedEmitter extends _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleEmitter"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.angle = 0;
    this.attractorPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.attractorStrength = 0;
    this.color0 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.color1 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.color2 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.color3 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.colorMidpoint = 0;
    this.continuousEmitter = false;
    this.direction = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.drag = 0;
    this.emissionDensity = 0;
    this.gravity = 0;
    this.inheritVelocity = 0;
    this.innerAngle = 0;
    this.maxDisplacement = 0;
    this.maxEmissionDensity = 0;
    this.maxLifeTime = 0;
    this.maxSpeed = 0;
    this.minLifeTime = 0;
    this.minSpeed = 0;
    this.particleSystem = null;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radius = 0;
    this.rate = 0;
    this.scaledByParent = false;
    this.sizeVariance = 0;
    this.sizes = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.textureIndex = 0;
    this.turbulenceAmplitude = 0;
    this.turbulenceFrequency = 0;
    this.velocityStretchRotation = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["particleSystem", r.object], ["angle", r.float], ["attractorPosition", r.vector3], ["attractorStrength", r.float], ["color0", r.vector4], ["color1", r.vector4], ["color2", r.vector4], ["color3", r.vector4], ["colorMidpoint", r.float], ["continuousEmitter", r.boolean], ["direction", r.vector3], ["drag", r.float], ["emissionDensity", r.float], ["gravity", r.float], ["maxDisplacement", r.float], ["maxEmissionDensity", r.float], ["maxLifeTime", r.float], ["maxSpeed", r.float], ["minLifeTime", r.float], ["minSpeed", r.float], ["position", r.vector3], ["inheritVelocity", r.float], ["innerAngle", r.float], ["radius", r.float], ["rate", r.float], ["sizeVariance", r.float], ["sizes", r.vector3], ["scaledByParent", r.boolean], ["textureIndex", r.uint], ["turbulenceAmplitude", r.float], ["turbulenceFrequency", r.float], ["velocityStretchRotation", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2GpuSharedEmitter.__isStaging = 4;

/***/ }),

/***/ "./particle/emitter/Tr2GpuUniqueEmitter.js":
/*!*************************************************!*\
  !*** ./particle/emitter/Tr2GpuUniqueEmitter.js ***!
  \*************************************************/
/*! exports provided: Tr2GpuUniqueEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuUniqueEmitter", function() { return Tr2GpuUniqueEmitter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleEmitter */ "./particle/emitter/Tw2ParticleEmitter.js");


/**
 * Tr2GpuUniqueEmitter
 * TODO: Implement
 * @ccp Tr2GpuUniqueEmitter
 *
 * @property {String} name                         -
 * @property {Number} angle                        -
 * @property {vec3} attractorPosition              -
 * @property {Number} attractorStrength            -
 * @property {vec4} color0                         -
 * @property {vec4} color1                         -
 * @property {vec4} color2                         -
 * @property {vec4} color3                         -
 * @property {Number} colorMidpoint                -
 * @property {Boolean} continuousEmitter           -
 * @property {vec3} direction                      -
 * @property {Number} drag                         -
 * @property {Number} emissionDensity              -
 * @property {Number} gravity                      -
 * @property {Number} inheritVelocity              -
 * @property {Number} innerAngle                   -
 * @property {Number} maxDisplacement              -
 * @property {Number} maxEmissionDensity           -
 * @property {Number} maxLifeTime                  -
 * @property {Number} maxSpeed                     -
 * @property {Number} minLifeTime                  -
 * @property {Number} minSpeed                     -
 * @property {Tw2GpuParticleSystem} particleSystem -
 * @property {vec3} position                       -
 * @property {Number} radius                       -
 * @property {Number} rate                         -
 * @property {Boolean} scaledByParent              -
 * @property {Number} sizeVariance                 -
 * @property {vec3} sizes                          -
 * @property {Number} textureIndex                 -
 * @property {Number} turbulenceAmplitude          -
 * @property {Number} turbulenceFrequency          -
 * @property {Number} velocityStretchRotation      -
 */

class Tr2GpuUniqueEmitter extends _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleEmitter"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.angle = 0;
    this.attractorPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.attractorStrength = 0;
    this.color0 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.color1 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.color2 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.color3 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.colorMidpoint = 0;
    this.continuousEmitter = false;
    this.direction = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.drag = 0;
    this.emissionDensity = 0;
    this.gravity = 0;
    this.inheritVelocity = 0;
    this.innerAngle = 0;
    this.maxDisplacement = 0;
    this.maxEmissionDensity = 0;
    this.maxLifeTime = 0;
    this.maxSpeed = 0;
    this.minLifeTime = 0;
    this.minSpeed = 0;
    this.particleSystem = null;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radius = 0;
    this.rate = 0;
    this.scaledByParent = false;
    this.sizeVariance = 0;
    this.sizes = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.textureIndex = 0;
    this.turbulenceAmplitude = 0;
    this.turbulenceFrequency = 0;
    this.velocityStretchRotation = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["particleSystem", r.object], ["angle", r.float], ["attractorPosition", r.vector3], ["attractorStrength", r.float], ["color0", r.vector4], ["color1", r.vector4], ["color2", r.vector4], ["color3", r.vector4], ["colorMidpoint", r.float], ["continuousEmitter", r.boolean], ["direction", r.vector3], ["drag", r.float], ["emissionDensity", r.float], ["gravity", r.float], ["maxDisplacement", r.float], ["maxEmissionDensity", r.float], ["maxLifeTime", r.float], ["maxSpeed", r.float], ["minLifeTime", r.float], ["minSpeed", r.float], ["position", r.vector3], ["inheritVelocity", r.float], ["innerAngle", r.float], ["radius", r.float], ["rate", r.float], ["sizeVariance", r.float], ["sizes", r.vector3], ["scaledByParent", r.boolean], ["textureIndex", r.uint], ["turbulenceAmplitude", r.float], ["turbulenceFrequency", r.float], ["velocityStretchRotation", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2GpuUniqueEmitter.__isStaging = 4;

/***/ }),

/***/ "./particle/emitter/Tw2DynamicEmitter.js":
/*!***********************************************!*\
  !*** ./particle/emitter/Tw2DynamicEmitter.js ***!
  \***********************************************/
/*! exports provided: Tw2DynamicEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2DynamicEmitter", function() { return Tw2DynamicEmitter; });
/* harmony import */ var _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2ParticleEmitter */ "./particle/emitter/Tw2ParticleEmitter.js");

/**
 * Tw2DynamicEmitter
 * Todo: Implement "maxParticles"
 * @ccp Tr2DynamicEmitter
 *
 * @property {String} name                                      -
 * @property {Array.<Tw2ParticleAttributeGenerator>} generators -
 * @property {Number} maxParticles                              -
 * @property {Tw2ParticleSystem} particleSystem                 -
 * @property {Number} rate                                      -
 * @property {number} _accumulatedRate                          -
 * @property {Boolean} _isValid                                 -
 */

class Tw2DynamicEmitter extends _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_0__["Tw2ParticleEmitter"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.generators = [];
    this.maxParticles = 0;
    this.particleSystem = null;
    this.rate = 0;
    this._accumulatedRate = 0;
    this._isValid = false;
  }

  /**
   * Initializes the particle emitter
   */
  Initialize() {
    this.Rebind();
  }
  /**
   * Per frame update
   * @param {number} dt - delta time
   */


  Update(dt) {
    this.SpawnParticles(null, null, Math.min(dt, 0.1));
  }
  /**
   * Rebinds the emitter's generators to it's particle system
   */


  Rebind() {
    this._isValid = false;
    if (!this.particleSystem) return;

    for (let i = 0; i < this.generators.length; ++i) {
      if (!this.generators[i].Bind(this.particleSystem)) return;
    }

    this._isValid = true;
  }
  /**
   * Spawn particles
   * @param position
   * @param velocity
   * @param rateModifier
   */


  SpawnParticles(position, velocity, rateModifier) {
    if (!this._isValid) return;
    this._accumulatedRate += this.rate * rateModifier;
    const count = Math.floor(this._accumulatedRate);
    this._accumulatedRate -= count;

    for (let i = 0; i < count; ++i) {
      const index = this.particleSystem.BeginSpawnParticle();
      if (index === null) break;

      for (let j = 0; j < this.generators.length; ++j) {
        this.generators[j].Generate(position, velocity, index);
      }

      this.particleSystem.EndSpawnParticle();
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["particleSystem", r.object], ["generators", r.array], ["maxParticles", r.uint], ["rate", r.float]];
  }

}

/***/ }),

/***/ "./particle/emitter/Tw2ParticleEmitter.js":
/*!************************************************!*\
  !*** ./particle/emitter/Tw2ParticleEmitter.js ***!
  \************************************************/
/*! exports provided: Tw2ParticleEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleEmitter", function() { return Tw2ParticleEmitter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _class, _temp;

/* eslint no-unused-vars:0 */

/**
 * Particle Emitter base class
 * @ccp N/A
 *
 * @property {Tw2ParticleSystem} particleSystem
 */

let Tw2ParticleEmitter = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_temp = class Tw2ParticleEmitter extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.particleSystem = null;
  }

  /**
   * Initializes the particle emitter
   */
  //@meta.abstract
  Initialize() {}
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.particleSystem) this.particleSystem.GetResources(out);
    return out;
  }
  /**
   * Per frame update
   * @param {number} dt - delta time
   */
  //@meta.abstract


  Update(dt) {}

}, _temp)) || _class);

/***/ }),

/***/ "./particle/emitter/Tw2StaticEmitter.js":
/*!**********************************************!*\
  !*** ./particle/emitter/Tw2StaticEmitter.js ***!
  \**********************************************/
/*! exports provided: Tw2StaticEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2StaticEmitter", function() { return Tw2StaticEmitter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2ParticleEmitter */ "./particle/emitter/Tw2ParticleEmitter.js");



/**
 * Tw2StaticEmitter
 * @ccp Tr2StaticEmitter
 *
 * @property {String} name                     -
 * @property {Tw2GeometryRes} geometryResource -
 * @property {Number} geometryIndex            -
 * @property {Boolean} _spawned                -
 */

class Tw2StaticEmitter extends _Tw2ParticleEmitter__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleEmitter"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.geometryResourcePath = "";
    this.meshIndex = 0;
    this.geometryResource = null;
    this._spawned = false;
  }

  /**
   * Alias for meshIndex
   * @returns {Number}
   */
  get geometryIndex() {
    return this.meshIndex;
  }
  /**
   * Alias for meshIndex
   * @param {Number} val
   */


  set geometryIndex(val) {
    this.meshIndex = val;
  }
  /**
   * Initializes the particle emitter
   */


  Initialize() {
    if (this.geometryResourcePath !== "") {
      this.geometryResource = global__WEBPACK_IMPORTED_MODULE_0__["resMan"].GetResource(this.geometryResourcePath, res => {
        res.systemMirror = true;
        this.OnResPrepared(res);
      });
    }

    this._spawned = false;
  }
  /**
   * Gets object resources
   * @param {Array} [out=[]] - Optional receiving array
   * @returns {Array.<Tw2Resource>} [out]
   */


  GetResources(out = []) {
    if (this.particleSystem) this.particleSystem.GetResources(out);

    if (this.geometryResource && !out.includes(this.geometryResource)) {
      out.push(this.geometryResource);
    }

    return out;
  }
  /**
   * Rebuilds cached data
   */


  OnResPrepared() {
    if (this.geometryResource && this.geometryResource.meshes.length) {
      if (!this.geometryResource.meshes[0].bufferData) {
        this.geometryResource.systemMirror = true;
        this.geometryResource.Reload();
      }
    }
  }
  /**
   * Per frame update
   */


  Update() {
    const res = this.geometryResource;

    if (!this._spawned && this.particleSystem && res && res.IsGood() && // TODO: Why does this need an isPrepared && isLoaded check??
    res.meshes.length > this.meshIndex && res.meshes[this.meshIndex].bufferData) {
      this._spawned = true;
      const mesh = res.meshes[this.meshIndex],
            elts = this.particleSystem.elements,
            inputs = new Array(elts.length);

      for (let i = 0; i < elts.length; ++i) {
        const d = elts[i].GetDeclaration(),
              input = mesh.declaration.FindUsage(d.usage, d.usageIndex - 8);

        if (input === null) {
          res.OnError(new core__WEBPACK_IMPORTED_MODULE_1__["ErrGeometryMeshMissingParticleElement"]({
            path: res.path,
            elementUsage: d.usage,
            elementUsageIndex: d.usageIndex
          }));
          return;
        }

        if (input.elements < d.elements) {
          res.OnError(new core__WEBPACK_IMPORTED_MODULE_1__["ErrGeometryMeshElementComponentsMissing"]({
            path: res.path,
            inputCount: input.elements,
            elementCount: d.elements,
            elementUsage: d.usage,
            elementUsageIndex: d.usageIndex
          }));
          return;
        }

        inputs[i] = input.offset / 4;
      }

      const vertexCount = mesh.bufferData.length / mesh.declaration.stride * 4;

      for (let i = 0; i < vertexCount; ++i) {
        const index = this.particleSystem.BeginSpawnParticle();
        if (index === null) break;

        for (let j = 0; j < this.particleSystem._elements.length; ++j) {
          const e = this.particleSystem._elements[j];

          for (let k = 0; k < e.dimension; ++k) {
            e.buffer[e.instanceStride * index + e.startOffset + k] = mesh.bufferData[inputs[j] + k + i * mesh.declaration.stride / 4];
          }
        }

        this.particleSystem.EndSpawnParticle();
      }
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["particleSystem", r.object], ["geometryResourcePath", r.string], ["meshIndex", r.uint]];
  }

}

/***/ }),

/***/ "./particle/emitter/index.js":
/*!***********************************!*\
  !*** ./particle/emitter/index.js ***!
  \***********************************/
/*! exports provided: Tr2GpuSharedEmitter, Tr2GpuUniqueEmitter, Tw2StaticEmitter, Tw2DynamicEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2GpuSharedEmitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2GpuSharedEmitter */ "./particle/emitter/Tr2GpuSharedEmitter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuSharedEmitter", function() { return _Tr2GpuSharedEmitter__WEBPACK_IMPORTED_MODULE_0__["Tr2GpuSharedEmitter"]; });

/* harmony import */ var _Tr2GpuUniqueEmitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2GpuUniqueEmitter */ "./particle/emitter/Tr2GpuUniqueEmitter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuUniqueEmitter", function() { return _Tr2GpuUniqueEmitter__WEBPACK_IMPORTED_MODULE_1__["Tr2GpuUniqueEmitter"]; });

/* harmony import */ var _Tw2StaticEmitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2StaticEmitter */ "./particle/emitter/Tw2StaticEmitter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2StaticEmitter", function() { return _Tw2StaticEmitter__WEBPACK_IMPORTED_MODULE_2__["Tw2StaticEmitter"]; });

/* harmony import */ var _Tw2DynamicEmitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2DynamicEmitter */ "./particle/emitter/Tw2DynamicEmitter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2DynamicEmitter", function() { return _Tw2DynamicEmitter__WEBPACK_IMPORTED_MODULE_3__["Tw2DynamicEmitter"]; });






/***/ }),

/***/ "./particle/force/Tr2ForceSphereVolume.js":
/*!************************************************!*\
  !*** ./particle/force/Tr2ForceSphereVolume.js ***!
  \************************************************/
/*! exports provided: Tr2ForceSphereVolume */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ForceSphereVolume", function() { return Tr2ForceSphereVolume; });
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var core_reader_Tw2BlackPropertyReaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core/reader/Tw2BlackPropertyReaders */ "./core/reader/Tw2BlackPropertyReaders.js");



/**
 * Tr2ForceSphereVolume
 * TODO: Implement
 * @ccp Tr2ForceSphereVolume
 *
 * @property {Array.<Tw2ParticleForce>} forces -
 * @property {Number} radius                -
 */

class Tr2ForceSphereVolume extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_0__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.forces = [];
    this.radius = 0;
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {
    // Todo: Implement ApplyForce
    throw new core__WEBPACK_IMPORTED_MODULE_1__["ErrFeatureNotImplemented"]();
  }
  /**
   * Per frame update
   * @param {Number} dt
   */


  Update(dt) {
    // Todo: Implement Update
    for (let i = 0; i < this.forces.length; i++) {
      this.forces[i].Update(dt);
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["forces", r.array], ["radius", r.float]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ForceSphereVolume.__isStaging = 4;

/***/ }),

/***/ "./particle/force/Tr2ParticleVortexForce.js":
/*!**************************************************!*\
  !*** ./particle/force/Tr2ParticleVortexForce.js ***!
  \**************************************************/
/*! exports provided: Tr2ParticleVortexForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ParticleVortexForce", function() { return Tr2ParticleVortexForce; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");


/**
 * Tr2ParticleVortexForce
 * Todo: Implement
 * @ccp Tr2ParticleVortexForce
 *
 * @property {vec3} axis        -
 * @property {Number} magnitude -
 * @property {vec3} position    -
 */

class Tr2ParticleVortexForce extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.axis = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.magnitude = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {} // Todo: Implement ApplyForce

  /**
   * Per frame update
   * @param {Number} dt
   */


  Update(dt) {} // Todo: Implement Update

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["axis", r.vector3], ["magnitude", r.float], ["position", r.vector3]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ParticleVortexForce.__isStaging = 4;

/***/ }),

/***/ "./particle/force/Tw2ParticleAttractorForce.js":
/*!*****************************************************!*\
  !*** ./particle/force/Tw2ParticleAttractorForce.js ***!
  \*****************************************************/
/*! exports provided: Tw2ParticleAttractorForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleAttractorForce", function() { return Tw2ParticleAttractorForce; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");


/**
 * Tw2ParticleAttractorForce
 * @ccp Tr2ParticleAttractorForce
 *
 * @property {number} magnitude
 * @property {vec3} position
 */

class Tw2ParticleAttractorForce extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.magnitude = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {
    const vec3_0 = _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"].global.vec3_0;
    vec3_0[0] = this.position[0] - position.buffer[position.offset];
    vec3_0[1] = this.position[1] - position.buffer[position.offset + 1];
    vec3_0[2] = this.position[2] - position.buffer[position.offset + 2];
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].normalize(vec3_0, vec3_0);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(vec3_0, vec3_0, this.magnitude);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(force, force, vec3_0);
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["magnitude", r.float], ["position", r.vector3]];
  }

}

/***/ }),

/***/ "./particle/force/Tw2ParticleDirectForce.js":
/*!**************************************************!*\
  !*** ./particle/force/Tw2ParticleDirectForce.js ***!
  \**************************************************/
/*! exports provided: Tw2ParticleDirectForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleDirectForce", function() { return Tw2ParticleDirectForce; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");


/**
 * Tw2ParticleDirectForce
 * @ccp Tr2ParticleDirectForce
 *
 * @property {vec3} force
 */

class Tw2ParticleDirectForce extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.force = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(force, force, this.force);
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["force", r.vector3]];
  }

}

/***/ }),

/***/ "./particle/force/Tw2ParticleDragForce.js":
/*!************************************************!*\
  !*** ./particle/force/Tw2ParticleDragForce.js ***!
  \************************************************/
/*! exports provided: Tw2ParticleDragForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleDragForce", function() { return Tw2ParticleDragForce; });
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");

/**
 * Tw2ParticleDragForce
 * @ccp Tr2ParticleDragForce
 *
 * @property {number} drag
 */

class Tw2ParticleDragForce extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_0__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.drag = 0.1;
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {
    force[0] += velocity.buffer[velocity.offset] * -this.drag;
    force[1] += velocity.buffer[velocity.offset + 1] * -this.drag;
    force[2] += velocity.buffer[velocity.offset + 2] * -this.drag;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["drag", r.float]];
  }

}

/***/ }),

/***/ "./particle/force/Tw2ParticleFluidDragForce.js":
/*!*****************************************************!*\
  !*** ./particle/force/Tw2ParticleFluidDragForce.js ***!
  \*****************************************************/
/*! exports provided: Tw2ParticleFluidDragForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleFluidDragForce", function() { return Tw2ParticleFluidDragForce; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");


/**
 * Tw2ParticleFluidDragForce
 * @ccp Tr2ParticleFluidDragForce
 *
 * @property {number} drag
 */

class Tw2ParticleFluidDragForce extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.drag = 0.1;
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {
    const vec3_0 = _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"].global.vec3_0,
          vec3_1 = _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"].global.vec3_1,
          speed = Math.sqrt(velocity.buffer[velocity.offset] * velocity.buffer[velocity.offset] + velocity.buffer[velocity.offset + 1] * velocity.buffer[velocity.offset + 1] + velocity.buffer[velocity.offset + 2] * velocity.buffer[velocity.offset + 2]);
    vec3_0[0] = velocity.buffer[velocity.offset] * -speed * this.drag;
    vec3_0[1] = velocity.buffer[velocity.offset + 1] * -speed * this.drag;
    vec3_0[2] = velocity.buffer[velocity.offset + 2] * -speed * this.drag;
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(vec3_1, vec3_0, dt * mass);
    vec3_1[0] += velocity.buffer[velocity.offset];
    vec3_1[1] += velocity.buffer[velocity.offset + 1];
    vec3_1[2] += velocity.buffer[velocity.offset + 2];
    const dot = velocity.buffer[velocity.offset] * vec3_1[0] + velocity.buffer[velocity.offset + 1] * vec3_1[1] + velocity.buffer[velocity.offset + 2] * vec3_1[2];

    if (dot < 0) {
      force[0] = -velocity.buffer[velocity.offset] / dt / mass;
      force[1] = -velocity.buffer[velocity.offset + 1] / dt / mass;
      force[2] = -velocity.buffer[velocity.offset + 2] / dt / mass;
    } else {
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(force, vec3_0);
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["drag", r.float]];
  }

}

/***/ }),

/***/ "./particle/force/Tw2ParticleForce.js":
/*!********************************************!*\
  !*** ./particle/force/Tw2ParticleForce.js ***!
  \********************************************/
/*! exports provided: Tw2ParticleForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleForce", function() { return Tw2ParticleForce; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _dec2, _class, _class2, _class3, _temp;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

/**
 * Tw2ParticleForce base class
 * @ccp N/A
 */

let Tw2ParticleForce = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_class2 = (_temp = _class3 = class Tw2ParticleForce extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Applies forces
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {}
  /**
   * Per frame update (Called before ApplyForce)
   * @param {number} dt - delta time
   */
  //@meta.abstract


  Update(dt) {}
  /**
   * Global and scratch variables
   * @type {*}
   */


}, _class3.global = {
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec3_1: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
  vec4_0: global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create()
}, _temp), (_applyDecoratedDescriptor(_class2.prototype, "ApplyForce", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "ApplyForce"), _class2.prototype)), _class2)) || _class);

/***/ }),

/***/ "./particle/force/Tw2ParticleSpring.js":
/*!*********************************************!*\
  !*** ./particle/force/Tw2ParticleSpring.js ***!
  \*********************************************/
/*! exports provided: Tw2ParticleSpring */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleSpring", function() { return Tw2ParticleSpring; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");


/**
 * Tw2ParticleSpring
 * @ccp Tr2ParticleSpring
 *
 * @property {number} springConstant
 * @property {vec3} position
 */

class Tw2ParticleSpring extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.springConstant = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {
    force[0] += (this.position[0] - position.buffer[position.offset]) * this.springConstant;
    force[1] += (this.position[1] - position.buffer[position.offset + 1]) * this.springConstant;
    force[2] += (this.position[2] - position.buffer[position.offset + 2]) * this.springConstant;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["position", r.vector3], ["springConstant", r.float]];
  }

}

/***/ }),

/***/ "./particle/force/Tw2ParticleTurbulenceForce.js":
/*!******************************************************!*\
  !*** ./particle/force/Tw2ParticleTurbulenceForce.js ***!
  \******************************************************/
/*! exports provided: Tw2ParticleTurbulenceForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleTurbulenceForce", function() { return Tw2ParticleTurbulenceForce; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2ParticleForce */ "./particle/force/Tw2ParticleForce.js");


/**
 * Tw2ParticleTurbulenceForce
 * @ccp Tr2ParticleTurbulenceForce
 *
 * @property {vec3} amplitude    -
 * @property {vec4} frequency    -
 * @property {Number} noiseLevel -
 * @property {Number} noiseRatio -
 * @property {number} _time      -
 */

class Tw2ParticleTurbulenceForce extends _Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"] {
  constructor(...args) {
    super(...args);
    this.amplitude = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.frequency = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].fromValues(1, 1, 1, 1);
    this.noiseLevel = 3;
    this.noiseRatio = 0.5;
    this._time = 0;
  }

  /**
   * Applies force
   * @param {Tw2ParticleElement} position - Position
   * @param {Tw2ParticleElement} velocity - Velocity
   * @param {Tw2ParticleElement} force    - force
   * @param {Number} [dt]                 - unused
   * @param {Number} [mass]               - unused
   */
  ApplyForce(position, velocity, force, dt, mass) {
    if (this.noiseLevel === 0) return;
    let pos_0 = position.buffer[position.offset] * this.frequency[0],
        pos_1 = position.buffer[position.offset + 1] * this.frequency[1],
        pos_2 = position.buffer[position.offset + 2] * this.frequency[2],
        pos_3 = this._time * this.frequency[3];
    let sum = 0,
        power = 0.5,
        frequency = 1 / this.noiseRatio;
    const out = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(_Tw2ParticleForce__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleForce"].global.vec4_0, 0, 0, 0, 0);

    for (let i = 0; i < this.noiseLevel; ++i) {
      global__WEBPACK_IMPORTED_MODULE_0__["noise"].turbulence(out, pos_0, pos_1, pos_2, pos_3, power);
      sum += power;
      pos_0 *= frequency;
      pos_1 *= frequency;
      pos_2 *= frequency;
      pos_3 *= frequency;
      power *= this.noiseRatio;
    }

    force[0] += out[0] * this.amplitude[0] * sum;
    force[1] += out[1] * this.amplitude[1] * sum;
    force[2] += out[2] * this.amplitude[2] * sum;
  }
  /**
   * Per frame update (Called before ApplyForce)
   * @param {number} dt - delta Time
   */


  Update(dt) {
    this._time += dt;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["amplitude", r.vector3], ["frequency", r.vector4], ["noiseLevel", r.float], ["noiseRatio", r.float]];
  }

}

/***/ }),

/***/ "./particle/force/index.js":
/*!*********************************!*\
  !*** ./particle/force/index.js ***!
  \*********************************/
/*! exports provided: Tr2ForceSphereVolume, Tr2ParticleVortexForce, Tw2ParticleAttractorForce, Tw2ParticleDirectForce, Tw2ParticleDragForce, Tw2ParticleFluidDragForce, Tw2ParticleSpring, Tw2ParticleTurbulenceForce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2ForceSphereVolume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2ForceSphereVolume */ "./particle/force/Tr2ForceSphereVolume.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ForceSphereVolume", function() { return _Tr2ForceSphereVolume__WEBPACK_IMPORTED_MODULE_0__["Tr2ForceSphereVolume"]; });

/* harmony import */ var _Tr2ParticleVortexForce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2ParticleVortexForce */ "./particle/force/Tr2ParticleVortexForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ParticleVortexForce", function() { return _Tr2ParticleVortexForce__WEBPACK_IMPORTED_MODULE_1__["Tr2ParticleVortexForce"]; });

/* harmony import */ var _Tw2ParticleAttractorForce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2ParticleAttractorForce */ "./particle/force/Tw2ParticleAttractorForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleAttractorForce", function() { return _Tw2ParticleAttractorForce__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleAttractorForce"]; });

/* harmony import */ var _Tw2ParticleDirectForce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tw2ParticleDirectForce */ "./particle/force/Tw2ParticleDirectForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleDirectForce", function() { return _Tw2ParticleDirectForce__WEBPACK_IMPORTED_MODULE_3__["Tw2ParticleDirectForce"]; });

/* harmony import */ var _Tw2ParticleDragForce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tw2ParticleDragForce */ "./particle/force/Tw2ParticleDragForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleDragForce", function() { return _Tw2ParticleDragForce__WEBPACK_IMPORTED_MODULE_4__["Tw2ParticleDragForce"]; });

/* harmony import */ var _Tw2ParticleFluidDragForce__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2ParticleFluidDragForce */ "./particle/force/Tw2ParticleFluidDragForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleFluidDragForce", function() { return _Tw2ParticleFluidDragForce__WEBPACK_IMPORTED_MODULE_5__["Tw2ParticleFluidDragForce"]; });

/* harmony import */ var _Tw2ParticleSpring__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2ParticleSpring */ "./particle/force/Tw2ParticleSpring.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleSpring", function() { return _Tw2ParticleSpring__WEBPACK_IMPORTED_MODULE_6__["Tw2ParticleSpring"]; });

/* harmony import */ var _Tw2ParticleTurbulenceForce__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tw2ParticleTurbulenceForce */ "./particle/force/Tw2ParticleTurbulenceForce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleTurbulenceForce", function() { return _Tw2ParticleTurbulenceForce__WEBPACK_IMPORTED_MODULE_7__["Tw2ParticleTurbulenceForce"]; });










/***/ }),

/***/ "./particle/generators/Tw2ParticleAttributeGenerator.js":
/*!**************************************************************!*\
  !*** ./particle/generators/Tw2ParticleAttributeGenerator.js ***!
  \**************************************************************/
/*! exports provided: Tw2ParticleAttributeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleAttributeGenerator", function() { return Tw2ParticleAttributeGenerator; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
var _dec, _dec2, _dec3, _class, _class2, _class3, _temp;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

/* eslint no-unused-vars:0 */

/**
 * Tw2ParticleAttributeGenerator base class
 *
 * @property {number|String} id
 * @property {String} name
 * @class
 */

let Tw2ParticleAttributeGenerator = (_dec = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec2 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec3 = global__WEBPACK_IMPORTED_MODULE_0__["meta"].abstract, _dec(_class = (_class2 = (_temp = _class3 = class Tw2ParticleAttributeGenerator extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Binds a particle system element to the generator
   * @param {Tw2ParticleSystem} ps
   * @returns {Boolean} True if successfully bound
   */
  Bind(ps) {}
  /**
   * Generates the attributes
   * @param {Tw2ParticleElement} position
   * @param {Tw2ParticleElement} velocity
   * @param {number} index
   */


  Generate(position, velocity, index) {}
  /**
   * Global and scratch variables
   * @type {*}
   */


}, _class3.global = {
  vec3_0: global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create()
}, _temp), (_applyDecoratedDescriptor(_class2.prototype, "Bind", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "Bind"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "Generate", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "Generate"), _class2.prototype)), _class2)) || _class);

/***/ }),

/***/ "./particle/generators/Tw2RandomIntegerAttributeGenerator.js":
/*!*******************************************************************!*\
  !*** ./particle/generators/Tw2RandomIntegerAttributeGenerator.js ***!
  \*******************************************************************/
/*! exports provided: Tw2RandomIntegerAttributeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomIntegerAttributeGenerator", function() { return Tw2RandomIntegerAttributeGenerator; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../element/Tw2ParticleElement */ "./particle/element/Tw2ParticleElement.js");
/* harmony import */ var _Tw2ParticleAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2ParticleAttributeGenerator */ "./particle/generators/Tw2ParticleAttributeGenerator.js");



/**
 * Tw2RandomIntegerAttributeGenerator
 * @ccp Tr2RandomIntegerAttributeGenerator
 *
 * @property {String} customName           -
 * @property {Number} elementType          -
 * @property {vec4} maxRange               -
 * @property {vec4} minRange               -
 * @property {Tw2ParticleElement} _element -
 */

class Tw2RandomIntegerAttributeGenerator extends _Tw2ParticleAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleAttributeGenerator"] {
  constructor(...args) {
    super(...args);
    this.customName = "";
    this.elementType = _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.CUSTOM;
    this.minRange = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.maxRange = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this._element = null;
  }

  /**
   * Binds a particle system element to the generator
   * @param {Tw2ParticleSystem} ps
   * @returns {Boolean} True if successfully bound
   */
  Bind(ps) {
    for (let i = 0; i < ps._elements.length; ++i) {
      if (ps._elements[i].elementType === this.elementType && (this.elementType !== _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.CUSTOM || ps._elements[i].customName === this.customName)) {
        this._element = ps._elements[i];
        return true;
      }
    }

    return false;
  }
  /**
   * Generates the attributes
   * @param {Tw2ParticleElement} position
   * @param {Tw2ParticleElement} velocity
   * @param {number} index
   */


  Generate(position, velocity, index) {
    for (let i = 0; i < this._element.dimension; ++i) {
      this._element.buffer[this._element.instanceStride * index + this._element.startOffset + i] = Math.floor(this.minRange[i] + Math.random() * (this.maxRange[i] - this.minRange[i]) + 0.5);
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["customName", r.string], ["minRange", r.vector4], ["maxRange", r.vector4]];
  }

}

/***/ }),

/***/ "./particle/generators/Tw2RandomUniformAttributeGenerator.js":
/*!*******************************************************************!*\
  !*** ./particle/generators/Tw2RandomUniformAttributeGenerator.js ***!
  \*******************************************************************/
/*! exports provided: Tw2RandomUniformAttributeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomUniformAttributeGenerator", function() { return Tw2RandomUniformAttributeGenerator; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../element/Tw2ParticleElement */ "./particle/element/Tw2ParticleElement.js");
/* harmony import */ var _Tw2ParticleAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2ParticleAttributeGenerator */ "./particle/generators/Tw2ParticleAttributeGenerator.js");



/**
 * Tw2RandomUniformAttributeGenerator
 * @ccp Tr2RandomUniformAttributeGenerator
 *
 * @property {String} customName           -
 * @property {Number} elementType          -
 * @property {vec4} maxRange               -
 * @property {vec4} minRange               -
 * @property {Tw2ParticleElement} _element -
 */

class Tw2RandomUniformAttributeGenerator extends _Tw2ParticleAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleAttributeGenerator"] {
  constructor(...args) {
    super(...args);
    this.customName = "";
    this.elementType = _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.CUSTOM;
    this.minRange = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.maxRange = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this._element = null;
  }

  /**
   * Binds a particle system element to the generator
   * @param {Tw2ParticleSystem} ps
   * @returns {Boolean} True if successfully bound
   */
  Bind(ps) {
    for (let i = 0; i < ps._elements.length; ++i) {
      if (ps._elements[i].elementType === this.elementType && (this.elementType !== _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.CUSTOM || ps._elements[i].customName === this.customName)) {
        this._element = ps._elements[i];
        return true;
      }
    }

    return false;
  }
  /**
   * Generates the attributes
   * @param {Tw2ParticleElement} position
   * @param {Tw2ParticleElement} velocity
   * @param {number} index
   */


  Generate(position, velocity, index) {
    for (let i = 0; i < this._element.dimension; ++i) {
      this._element.buffer[this._element.instanceStride * index + this._element.startOffset + i] = this.minRange[i] + Math.random() * (this.maxRange[i] - this.minRange[i]);
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["customName", r.string], ["elementType", r.uint], ["minRange", r.vector4], ["maxRange", r.vector4]];
  }

}

/***/ }),

/***/ "./particle/generators/Tw2SphereShapeAttributeGenerator.js":
/*!*****************************************************************!*\
  !*** ./particle/generators/Tw2SphereShapeAttributeGenerator.js ***!
  \*****************************************************************/
/*! exports provided: Tw2SphereShapeAttributeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tw2SphereShapeAttributeGenerator", function() { return Tw2SphereShapeAttributeGenerator; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../element/Tw2ParticleElement */ "./particle/element/Tw2ParticleElement.js");
/* harmony import */ var _Tw2ParticleAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2ParticleAttributeGenerator */ "./particle/generators/Tw2ParticleAttributeGenerator.js");



/**
 * Tw2SphereShapeAttributeGenerator
 * TODO: Is "controlPosition" deprecated?
 * TODO: Is "controlVelocity" deprecated?
 * TODO: Implement "distributionExponent"
 * TODO: Implement "customName"
 * @ccp Tr2SphereShapeAttributeGenerator
 *
 * @property {String} customName             -
 * @property {Boolean} controlPosition       -
 * @property {Boolean} controlVelocity       -
 * @property {Number} distributionExponent   -
 * @property {Number} maxPhi                 -
 * @property {Number} maxRadius              -
 * @property {Number} maxSpeed               -
 * @property {Number} maxTheta               -
 * @property {Number} minPhi                 -
 * @property {Number} minRadius              -
 * @property {Number} minSpeed               -
 * @property {Number} minTheta               -
 * @property {Number} parentVelocityFactor   -
 * @property {vec3} position                 -
 * @property {quat} rotation                 -
 * @property {?Tw2ParticleElement} _position -
 * @property {?Tw2ParticleElement}_velocity  -
 */

class Tw2SphereShapeAttributeGenerator extends _Tw2ParticleAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleAttributeGenerator"] {
  constructor(...args) {
    super(...args);
    this.customName = "";
    this.distributionExponent = 0;
    this.maxPhi = 360;
    this.maxRadius = 0;
    this.maxSpeed = 0;
    this.maxTheta = 360;
    this.minPhi = 0;
    this.minRadius = 0;
    this.minSpeed = 0;
    this.minTheta = 0;
    this.parentVelocityFactor = 1;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.controlPosition = true;
    this.controlVelocity = true;
    this._position = null;
    this._velocity = null;
  }

  /**
   * Binds a particle system element to the generator
   * @param {Tw2ParticleSystem} ps
   * @returns {Boolean} True if successfully bound
   */
  Bind(ps) {
    this._position = null;
    this._velocity = null;

    for (let i = 0; i < ps._elements.length; ++i) {
      if (ps._elements[i].elementType === _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.POSITION && this.controlPosition) {
        this._position = ps._elements[i];
      } else if (ps._elements[i].elementType === _element_Tw2ParticleElement__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"].Type.VELOCITY && this.controlVelocity) {
        this._velocity = ps._elements[i];
      }
    }

    return (!this.controlPosition || this._position !== null) && (!this.controlVelocity || this._velocity !== null);
  }
  /**
   * Generates the attributes
   * @param {Tw2ParticleElement} position
   * @param {Tw2ParticleElement} velocity
   * @param {number} index
   */


  Generate(position, velocity, index) {
    const phi = (this.minPhi + Math.random() * (this.maxPhi - this.minPhi)) / 180 * Math.PI,
          theta = (this.minTheta + Math.random() * (this.maxTheta - this.minTheta)) / 180 * Math.PI,
          rv = _Tw2ParticleAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__["Tw2ParticleAttributeGenerator"].global.vec3_0;
    rv[0] = Math.sin(phi) * Math.cos(theta);
    rv[1] = -Math.cos(phi);
    rv[2] = Math.sin(phi) * Math.sin(theta);
    global__WEBPACK_IMPORTED_MODULE_0__["vec3"].transformQuat(rv, rv, this.rotation);

    if (this._velocity) {
      const speed = this.minSpeed + Math.random() * (this.maxSpeed - this.minSpeed),
            offset = this._velocity.instanceStride * index + this._velocity.startOffset;
      this._velocity.buffer[offset] = rv[0] * speed;
      this._velocity.buffer[offset + 1] = rv[1] * speed;
      this._velocity.buffer[offset + 2] = rv[2] * speed;

      if (velocity) {
        this._velocity.buffer[offset] += velocity.buffer[velocity.offset] * this.parentVelocityFactor;
        this._velocity.buffer[offset + 1] += velocity.buffer[velocity.offset + 1] * this.parentVelocityFactor;
        this._velocity.buffer[offset + 2] += velocity.buffer[velocity.offset + 2] * this.parentVelocityFactor;
      }
    }

    if (this._position) {
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].scale(rv, rv, this.minRadius + Math.random() * (this.maxRadius - this.minRadius));
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].add(rv, rv, this.position);

      if (position) {
        rv[0] += position.buffer[position.offset];
        rv[1] += position.buffer[position.offset + 1];
        rv[2] += position.buffer[position.offset + 2];
      }

      const offset = this._position.instanceStride * index + this._position.startOffset;
      this._position.buffer[offset] = rv[0];
      this._position.buffer[offset + 1] = rv[1];
      this._position.buffer[offset + 2] = rv[2];
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["customName", r.string], ["distributionExponent", r.float], ["maxPhi", r.float], ["maxRadius", r.float], ["maxSpeed", r.float], ["maxTheta", r.float], ["minPhi", r.float], ["minRadius", r.float], ["minSpeed", r.float], ["minTheta", r.float], ["parentVelocityFactor", r.float], ["position", r.vector3], ["rotation", r.vector4]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tw2SphereShapeAttributeGenerator.__isStaging = 1;

/***/ }),

/***/ "./particle/generators/index.js":
/*!**************************************!*\
  !*** ./particle/generators/index.js ***!
  \**************************************/
/*! exports provided: Tw2RandomIntegerAttributeGenerator, Tw2RandomUniformAttributeGenerator, Tw2SphereShapeAttributeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tw2RandomIntegerAttributeGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tw2RandomIntegerAttributeGenerator */ "./particle/generators/Tw2RandomIntegerAttributeGenerator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomIntegerAttributeGenerator", function() { return _Tw2RandomIntegerAttributeGenerator__WEBPACK_IMPORTED_MODULE_0__["Tw2RandomIntegerAttributeGenerator"]; });

/* harmony import */ var _Tw2RandomUniformAttributeGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tw2RandomUniformAttributeGenerator */ "./particle/generators/Tw2RandomUniformAttributeGenerator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomUniformAttributeGenerator", function() { return _Tw2RandomUniformAttributeGenerator__WEBPACK_IMPORTED_MODULE_1__["Tw2RandomUniformAttributeGenerator"]; });

/* harmony import */ var _Tw2SphereShapeAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tw2SphereShapeAttributeGenerator */ "./particle/generators/Tw2SphereShapeAttributeGenerator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SphereShapeAttributeGenerator", function() { return _Tw2SphereShapeAttributeGenerator__WEBPACK_IMPORTED_MODULE_2__["Tw2SphereShapeAttributeGenerator"]; });





/***/ }),

/***/ "./particle/index.js":
/*!***************************!*\
  !*** ./particle/index.js ***!
  \***************************/
/*! exports provided: Tr2GpuParticleSystem, Tw2ParticleSystem, Tr2PlaneConstraint, Tw2ParticleElement, Tw2ParticleElementDeclaration, Tr2GpuSharedEmitter, Tr2GpuUniqueEmitter, Tw2StaticEmitter, Tw2DynamicEmitter, Tr2ForceSphereVolume, Tr2ParticleVortexForce, Tw2ParticleAttractorForce, Tw2ParticleDirectForce, Tw2ParticleDragForce, Tw2ParticleFluidDragForce, Tw2ParticleSpring, Tw2ParticleTurbulenceForce, Tw2RandomIntegerAttributeGenerator, Tw2RandomUniformAttributeGenerator, Tw2SphereShapeAttributeGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _constraint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constraint */ "./particle/constraint/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2PlaneConstraint", function() { return _constraint__WEBPACK_IMPORTED_MODULE_0__["Tr2PlaneConstraint"]; });

/* harmony import */ var _element__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element */ "./particle/element/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleElement", function() { return _element__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleElementDeclaration", function() { return _element__WEBPACK_IMPORTED_MODULE_1__["Tw2ParticleElementDeclaration"]; });

/* harmony import */ var _emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./emitter */ "./particle/emitter/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuSharedEmitter", function() { return _emitter__WEBPACK_IMPORTED_MODULE_2__["Tr2GpuSharedEmitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuUniqueEmitter", function() { return _emitter__WEBPACK_IMPORTED_MODULE_2__["Tr2GpuUniqueEmitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2StaticEmitter", function() { return _emitter__WEBPACK_IMPORTED_MODULE_2__["Tw2StaticEmitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2DynamicEmitter", function() { return _emitter__WEBPACK_IMPORTED_MODULE_2__["Tw2DynamicEmitter"]; });

/* harmony import */ var _force__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./force */ "./particle/force/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ForceSphereVolume", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tr2ForceSphereVolume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ParticleVortexForce", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tr2ParticleVortexForce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleAttractorForce", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tw2ParticleAttractorForce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleDirectForce", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tw2ParticleDirectForce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleDragForce", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tw2ParticleDragForce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleFluidDragForce", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tw2ParticleFluidDragForce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleSpring", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tw2ParticleSpring"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleTurbulenceForce", function() { return _force__WEBPACK_IMPORTED_MODULE_3__["Tw2ParticleTurbulenceForce"]; });

/* harmony import */ var _generators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./generators */ "./particle/generators/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomIntegerAttributeGenerator", function() { return _generators__WEBPACK_IMPORTED_MODULE_4__["Tw2RandomIntegerAttributeGenerator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2RandomUniformAttributeGenerator", function() { return _generators__WEBPACK_IMPORTED_MODULE_4__["Tw2RandomUniformAttributeGenerator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2SphereShapeAttributeGenerator", function() { return _generators__WEBPACK_IMPORTED_MODULE_4__["Tw2SphereShapeAttributeGenerator"]; });

/* harmony import */ var _Tw2GpuParticleSystem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tw2GpuParticleSystem */ "./particle/Tw2GpuParticleSystem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2GpuParticleSystem", function() { return _Tw2GpuParticleSystem__WEBPACK_IMPORTED_MODULE_5__["Tr2GpuParticleSystem"]; });

/* harmony import */ var _Tw2ParticleSystem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tw2ParticleSystem */ "./particle/Tw2ParticleSystem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tw2ParticleSystem", function() { return _Tw2ParticleSystem__WEBPACK_IMPORTED_MODULE_6__["Tw2ParticleSystem"]; });









/***/ }),

/***/ "./sof/EveSOF.js":
/*!***********************!*\
  !*** ./sof/EveSOF.js ***!
  \***********************/
/*! exports provided: EveSOF */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOF", function() { return EveSOF; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! curve */ "./curve/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var _eve__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../eve */ "./eve/index.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }






function EveSOF(tw2) {
  var _this = this;

  const self = this;
  var data = null;
  var spriteEffect = null;
  this.SKIP_EMPTY_ITEMS = true;
  /**
   * @String}
   */

  function GetShaderPrefix(isAnimated) {
    return isAnimated ? Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data["generic"], "shaderPrefixAnimated", "") : Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data["generic"], "shaderPrefix", "");
  }

  function ModifyTextureResPath(path, name, area, faction, commands) {
    var pathInsert = null;

    if (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(faction, "resPathInsert", "").length) {
      pathInsert = faction.resPathInsert;
    }

    if ("respathinsert" in commands && commands.respathinsert.length === 1) {
      if (commands.respathinsert[0] === "none") {
        return path;
      } else {
        pathInsert = commands.respathinsert[0];
      }
    }

    if (name === "MaterialMap" || name === "PaintMaskMap" || name === "PmdgMap") {
      var index = path.lastIndexOf("/");
      var pathCopy = path;

      if (index >= 0) {
        pathCopy = path.substr(0, index + 1) + pathInsert + "/" + path.substr(index + 1);
      }

      index = pathCopy.lastIndexOf("_");

      if (index >= 0) {
        pathCopy = pathCopy.substr(0, index) + "_" + pathInsert + pathCopy.substr(index);
        var textureOverrides = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(area, "textureOverrides", {});

        if (name in textureOverrides && faction.name in textureOverrides[name]) {
          return pathCopy;
        }
      }
    }

    return path;
  }
  /**
   * @String}
   */


  function ModifyShaderPath(shader, isSkinned) {
    var prefix = GetShaderPrefix(isSkinned);
    shader = "/" + shader;
    var index = shader.lastIndexOf("/");
    return shader.substr(0, index + 1) + prefix + shader.substr(index + 1);
  }

  function FindPrefix(prefixes, name) {
    for (var m = 0; m < prefixes.length; ++m) {
      if (name.substr(0, prefixes[m].length) === prefixes[m]) {
        return m;
      }
    }

    return null;
  }

  function GetOverridenParameter(name, area, commands, race) {
    var prefixes, materialIndex, materialData, shortName;

    if ("mesh" in commands) {
      prefixes = data.generic.materialPrefixes;
      materialIndex = FindPrefix(prefixes, name);

      if (materialIndex !== null && materialIndex < commands.mesh.length && (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(area, "blockedMaterials", 0) & 1 << materialIndex) === 0) {
        materialData = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data.material, commands.mesh[materialIndex], null);

        if (materialData) {
          shortName = name.substr(prefixes[materialIndex].length);
          return Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(materialData.parameters, shortName, undefined);
        }
      }
    }

    prefixes = data.generic.patternMaterialPrefixes;
    materialIndex = FindPrefix(prefixes, name);

    if ("pattern" in commands) {
      if (materialIndex !== null && 1 + materialIndex < commands.pattern.length) {
        materialData = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data.material, commands.pattern[1 + materialIndex], null);

        if (materialData) {
          shortName = name.substr(prefixes[materialIndex].length);
          return Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(materialData.parameters, shortName, undefined);
        }
      }
    }

    if (materialIndex !== null) {
      materialData = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data.material, race.defaultPatternLayer1MaterialName, null);

      if (materialData) {
        shortName = name.substr(prefixes[materialIndex].length);
        return Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(materialData.parameters, shortName, undefined);
      }
    }
  }
  /**
   * Gets an address mode from a projection type
   * @param {Number} projectionType
   * @returns {Number}
   */


  function GetAddressMode(projectionType) {
    switch (projectionType) {
      case 2:
        return 4;

      case 1:
        return 3;

      default:
        return 1;
    }
  }

  function FillMeshAreas(areas, areasName, hull, faction, race, pattern, commands, shaderOverride, masks) {
    const hullAreas = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, areasName, []);

    for (let i = 0; i < hullAreas.length; ++i) {
      const area = hullAreas[i],
            effect = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2Effect"](); // Use references to custom mask parameters - do not recreate them

      for (let i = 0; i < 2; i++) {
        const mask = masks[i];

        if (mask) {
          const {
            PatternMaskMap,
            DiffuseColor,
            FresnelColor,
            Gloss
          } = mask.parameters;
          effect.parameters[PatternMaskMap.name] = PatternMaskMap;
          effect.parameters[DiffuseColor.name] = DiffuseColor;
          effect.parameters[FresnelColor.name] = FresnelColor;
          effect.parameters[Gloss.name] = Gloss;
        } else {
          console.error("Missing mask " + i);
        }
      }

      effect.effectFilePath = data["generic"]["areaShaderLocation"] + ModifyShaderPath(shaderOverride ? shaderOverride : area.shader, hull["isSkinned"]);
      const names = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data["generic"]["areaShaders"], area.shader, {}), "parameters", []);

      for (let j = 0; j < names.length; ++j) {
        const name = names[j];
        let param = GetOverridenParameter(name, area, commands, race);
        param = param || Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data.generic.hullAreas, area.name, {}), "parameters", {}), name);
        param = param || Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(race.hullAreas, area.name, {}), "parameters", {}), name);
        param = param || Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(faction.areas, area.name, {}), "parameters", {}), name);
        param = param || Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(area, "parameters", {}), name);

        if (param) {
          if (effect.parameters[name]) {
            effect.parameters[name].SetValue(param);
          } else {
            effect.parameters[name] = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2Vector4Parameter"](name, param);
          }
        }
      }

      const hullTextures = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(area, "textures", {});

      for (let name in hullTextures) {
        if (hullTextures.hasOwnProperty(name)) {
          const path = ModifyTextureResPath(hullTextures[name], name, area, faction, commands);

          if (effect.parameters[name]) {
            effect.parameters[name].SetValue(path);
          } else {
            effect.parameters[name] = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2TextureParameter"](name, path);
          }
        }
      } // Only create pattern parameters if they don't already exist


      for (let j = 0; j < pattern.layers.length; ++j) {
        const textureName = pattern.layers[j] ? pattern.layers[j].textureName : "";

        if (textureName && !effect.parameters[textureName]) {
          const patternTex = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2TextureParameter"](pattern.layers[j].textureName);
          patternTex.resourcePath = pattern.layers[j].textureResFilePath;
          patternTex.useAllOverrides = true;
          patternTex.addressUMode = GetAddressMode(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(pattern.layers[j], "projectionTypeU", 0));
          patternTex.addressVMode = GetAddressMode(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(pattern.layers[j], "projectionTypeV", 0));
          patternTex.Initialize();
          effect.parameters[pattern.layers[j].textureName] = patternTex;
        }
      }

      const defaultTextures = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data["generic"]["areaShaders"], area.shader, {}), "defaultTextures", {});

      for (let name in defaultTextures) {
        if (defaultTextures.hasOwnProperty(name)) {
          if (!(name in effect.parameters)) {
            effect.parameters[name] = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2TextureParameter"](name, defaultTextures[name]);
          }
        }
      }

      effect.Initialize();
      const newArea = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2MeshArea"]();
      newArea.name = area.name;
      newArea.effect = effect;
      newArea.index = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(area, "index", 0);
      newArea.count = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(area, "count", 1);
      areas.push(newArea);
    }
  }

  function SetupMesh(ship, hull, faction, race, commands, pattern) {
    const mesh = ship.mesh || new core__WEBPACK_IMPORTED_MODULE_3__["Tw2Mesh"]();
    mesh.geometryResPath = hull["geometryResFilePath"];

    if (ship.mesh !== mesh) {
      ship.boundingSphereCenter[0] = hull.boundingSphere[0];
      ship.boundingSphereCenter[1] = hull.boundingSphere[1];
      ship.boundingSphereCenter[2] = hull.boundingSphere[2];
      ship.boundingSphereRadius = hull.boundingSphere[3];
    } else {
      mesh.EmptyAreas();
    }

    const masks = ship.customMasks;
    masks[0] = masks[0] || new _eve__WEBPACK_IMPORTED_MODULE_4__["EveCustomMask"]();
    masks[1] = masks[1] || new _eve__WEBPACK_IMPORTED_MODULE_4__["EveCustomMask"]();
    const args = [hull, faction, race, pattern, commands, undefined, masks];
    FillMeshAreas(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(mesh, "opaqueAreas", []), "opaqueAreas", ...args);
    FillMeshAreas(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(mesh, "transparentAreas", []), "transparentAreas", ...args);
    FillMeshAreas(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(mesh, "additiveAreas", []), "additiveAreas", ...args);
    FillMeshAreas(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(mesh, "decalAreas", []), "decalAreas", ...args);
    FillMeshAreas(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(mesh, "depthAreas", []), "depthAreas", ...args);

    if (ship.mesh !== mesh) {
      if ("shapeEllipsoidCenter" in hull) {
        ship.shapeEllipsoidCenter = hull.shapeEllipsoidCenter;
      }

      if ("shapeEllipsoidRadius" in hull) {
        ship.shapeEllipsoidRadius = hull.shapeEllipsoidRadius;
      }
    }

    ship.mesh = mesh;
    mesh.Initialize();
  }

  function SetupPattern(hull, race, commands) {
    const pattern = {
      patterns: [],
      layers: []
    }; // Requested pattern

    if ("pattern" in commands) {
      // Layers
      let l = {};

      for (let i = 0; i < data.pattern.length; ++i) {
        if (data.pattern[i].name === commands.pattern[0]) {
          l = data.pattern[i];
          break;
        }
      }

      pattern.layers.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(l, "layer1", {}));
      pattern.layers.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(l, "layer2", {}));
      const projections = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(l, "projections", []); // Projections

      let p = {};

      for (let i = 0; i < projections.length; ++i) {
        if (projections[i].name === hull.name) {
          p = projections[i];
          break;
        }
      }

      pattern.patterns.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(p, "transformLayer1", {}));
      pattern.patterns.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(p, "transformLayer2", {}));
    } // Default pattern
    else {
        // Layers
        const l = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(race, "defaultPattern", {});
        pattern.layers.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(l, "layer1", {}));
        pattern.layers.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(l, "layer2", {})); // Projections

        const p = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "defaultPattern", {});
        pattern.patterns.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(p, "transformLayer1", {}));
        pattern.patterns.push(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(p, "transformLayer2", {}));
      }

    return pattern;
  }

  function SetupInstancedMeshes(ship, hull, faction, race, commands, pattern) {
    var instancedMeshes = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "instancedMeshes", []);

    for (var i = 0; i < instancedMeshes.length; ++i) {
      var him = instancedMeshes[i];
      var mesh = new core__WEBPACK_IMPORTED_MODULE_3__["Tw2InstancedMesh"]();
      mesh.instanceGeometryResPath = him.instanceGeometryResPath;
      mesh.geometryResPath = him.geometryResPath;
      mesh.Initialize();
      FillMeshAreas(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(mesh, "opaqueAreas", []), "opaqueAreas", hull, faction, race, pattern, commands, him.shader);
      var child = new _eve__WEBPACK_IMPORTED_MODULE_4__["EveChildMesh"]();
      child.mesh = mesh;
      ship.effectChildren.push(child);
    }
  }

  function SetupCustomMasks(ship, pattern = {}) {
    const {
      patterns = [],
      layers = []
    } = pattern;

    for (let i = 0; i < 2; ++i) {
      const p = patterns[i] || {},
            l = layers[i] || {}; // Default pattern values

      const {
        rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create(),
        scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1),
        position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create(),
        isMirrored = false
      } = p; // Default layer values

      const {
        display = !!layers[i].textureName,
        materialSource = 0,
        textureName = "PatternMask".concat(i + 1, "Map"),
        textureResFilePath = "res:/texture/global/black.dds.0.png",
        projectionTypeU = 0,
        projectionTypeV = 0,
        isTargetMtl1 = true,
        isTargetMtl2 = true,
        isTargetMtl3 = true,
        isTargetMtl4 = true
      } = l;
      const mask = ship.customMasks[i] || new _eve__WEBPACK_IMPORTED_MODULE_4__["EveCustomMask"]();
      mask.name = "Pattern".concat(i + 1);
      mask.display = display;
      global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(mask.rotation, rotation);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(mask.scaling, scaling);
      global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(mask.translation, position);
      global__WEBPACK_IMPORTED_MODULE_0__["vec4"].set(mask.targetMaterials, isTargetMtl1 ? 1 : 0, isTargetMtl2 ? 1 : 0, isTargetMtl3 ? 1 : 0, isTargetMtl4 ? 1 : 0);
      mask.materialIndex = materialSource;
      mask.isMirrored = !!isMirrored;
      const {
        PatternMaskMap,
        DiffuseColor,
        FresnelColor,
        Gloss
      } = mask.parameters;
      PatternMaskMap.name = textureName;
      PatternMaskMap.resourcePath = textureResFilePath;
      PatternMaskMap.useAllOverrides = true;
      PatternMaskMap.addressUMode = GetAddressMode(projectionTypeU);
      PatternMaskMap.addressVMode = GetAddressMode(projectionTypeV);
      PatternMaskMap.Initialize();
      const prefix = "PMtl".concat(i + 1);
      DiffuseColor.name = "".concat(prefix, "DiffuseColor");
      FresnelColor.name = "".concat(prefix, "FresnelColor");
      Gloss.name = "".concat(prefix, "Gloss");
      mask.Initialize();

      if (ship.customMasks[i] !== mask) {
        ship.customMasks.push(mask);
      }
    }
  }
  /**
   * Sets up decals
   * @param ship
   * @param hull
   * @param faction
   */


  function SetupDecals(ship, hull, faction = {}) {
    const hullDecals = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "hullDecals", []);

    for (let i = 0; i < hullDecals.length; ++i) {
      const src = hullDecals[i],
            factionDecal = getGroupIndex(faction.decals, src.groupIndex);
      if (factionDecal && !factionDecal.isVisible) continue;
      const shader = factionDecal ? factionDecal.shader || src.shader : src.shader;
      if (!shader) continue;
      const effectFilePath = data["generic"]["decalShaderLocation"] + "/" + GetShaderPrefix(false) + shader,
            parameters = Object.assign({}, src.parameters),
            // Should src.shader actually be shader?
      textures = Object.assign(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(data["generic"]["decalShaders"], src.shader, {}), "defaultTextures", {}));

      if (factionDecal) {
        Object.assign(parameters, factionDecal.parameters);
        Object.assign(textures, factionDecal.textures);
      }

      Object.assign(textures, src.textures);
      ship.decals.push(_eve__WEBPACK_IMPORTED_MODULE_4__["EveSpaceObjectDecal"].from({
        name: src.name,
        groupIndex: src.groupIndex,
        parentBoneIndex: src.boneIndex,
        indexBuffer: src.indexBuffer,
        position: src.position,
        rotation: src.rotation,
        scaling: src.scaling,
        effect: {
          effectFilePath,
          parameters,
          textures
        }
      }));
    }
  }
  /**
   * Gets a group index object
   * @param {*} src
   * @param {Number} [groupIndex=-1]
   * @returns {null|*}
   */


  function getGroupIndex(src, groupIndex = -1) {
    if (!src) return null;
    const groupName = "group".concat(groupIndex);
    return src[groupName] ? src[groupName] : null;
  }
  /**
   * Sets up sprite sets
   * @param ship
   * @param hull
   * @param faction
   */


  function SetupSpriteSets(ship, hull, faction) {
    const hullSets = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "spriteSets", []),
          factionSets = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(faction, "spriteSets", {});

    for (let i = 0; i < hullSets.length; ++i) {
      const hullSet = hullSets[i],
            hullSetItems = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullSet, "items", []),
            items = [];

      for (let j = 0; j < hullSetItems.length; j++) {
        const item = Object.assign({
          blinkRate: 0.1,
          maxScale: 10,
          minScale: 1
        }, hullSetItems[j]),
              factionSet = getGroupIndex(factionSets, item.groupIndex);
        /*
        // const item = Object.assign({}, hullData[j]);
        // Source data is the same as the input data
        // -- Defaults don't match
        const item = {};
        item.name = src.name;                           // ""
        item.groupIndex = get(src, "groupIndex", -1);   // -1
        item.boneIndex = get(src, "boneIndex", 0);      // 0
        item.blinkPhase = get(src, "blinkPhase", 0);    // 0
        item.blinkRate = get(src, "blinkRate", 0.1);    // 0.1
        item.falloff = get(src, "falloff", 0);          // 0
        item.maxScale = get(src, "maxScale", 10);       // 10
        item.minScale = get(src, "minScale", 1);        // 1
        assignIfExists(item, src, "position");          // [0,0,0]
        */

        if (factionSet) {
          item.groupName = factionSet.name; // ""

          Object(global_util__WEBPACK_IMPORTED_MODULE_1__["assignIfExists"])(item, factionSet, "color"); // [0,0,0,0]
        }

        if (!self.SKIP_EMPTY_ITEMS || item.color && !global__WEBPACK_IMPORTED_MODULE_0__["vec3"].isEmpty(item.color)) {
          items.push(item);
        }
      }

      if (!self.SKIP_EMPTY_ITEMS || items.length) {
        ship.spriteSets.push(_eve__WEBPACK_IMPORTED_MODULE_4__["EveSpriteSet"].from({
          name: hullSet.name,
          useQuads: true,
          skinned: !!(hull.isSkinned && hullSet.skinned),
          effect: spriteEffect,
          // Constructed effect can be passed as an option
          items
        }));
      }
    }
  }

  const EFF_SPOTLIGHT_CONE = "res:/graphics/effect/managed/space/spaceobject/fx/spotlightcone.fx";
  const EFF_SPOTLIGHT_CONE_SKINNED = "res:/graphics/effect/managed/space/spaceobject/fx/skinned_spotlightcone.fx";
  const EFF_SPOTLIGHT_GLOW = "res:/graphics/effect/managed/space/spaceobject/fx/spotlightglow.fx";
  const EFF_SPOTLIGHT_GLOW_SKINNED = "res:/graphics/effect/managed/space/spaceobject/fx/skinned_spotlightglow.fx";
  /**
   * Sets up spotlight sets
   * @param ship
   * @param hull
   * @param faction
   */

  function SetupSpotlightSets(ship, hull, faction) {
    const hullSets = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "spotlightSets", []),
          factionSets = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(faction, "spotlightSets", {});

    for (let i = 0; i < hullSets.length; ++i) {
      const hullSet = hullSets[i],
            hullSetItems = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullSet, "items", []),
            isSkinned = hullSet.skinned,
            items = []; // Get spotlight items

      for (let j = 0; j < hullSetItems.length; ++j) {
        const item = Object.assign({}, hullSetItems[j]),
              factionSet = getGroupIndex(factionSets, item.groupIndex);
        /*
        // const item = Object.assign({}, hullData[j]);
        // Source data is the same as the input data
        // -- Defaults match
        const item = {};
        item.name = src.name;                                // ""
        item.groupIndex = src.groupIndex;                    // -1
        item.boneIndex = get(src, "boneIndex", 0);           // 0
        item.boosterGainInfluence = src.boosterGainInfluence;// 0
        item.coneIntensity = src.coneIntensity;              // 0
        item.spriteIntensity = src.spriteIntensity;          // 0
        item.flareIntensity = src.flareIntensity;            // 0
        assignIfExists(item, src, "transform");              // mat4.identity
        */

        if (factionSet) {
          Object(global_util__WEBPACK_IMPORTED_MODULE_1__["assignIfExists"])(item, factionSet, ["coneColor", "spriteColor", "flareColor"]); // [0,0,0,0]
        }

        if (!self.SKIP_EMPTY_ITEMS || factionSet) {
          items.push(item);
        }
      }

      if (!self.SKIP_EMPTY_ITEMS || items.length) {
        ship.spotlightSets.push(_eve__WEBPACK_IMPORTED_MODULE_4__["EveSpotlightSet"].from({
          name: hullSet.name,
          items,
          coneEffect: {
            effectFilePath: isSkinned ? EFF_SPOTLIGHT_CONE_SKINNED : EFF_SPOTLIGHT_CONE,
            parameters: {
              TextureMap: hullSet.coneTextureResPath,
              zOffset: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullSet, "zOffset", 0)
            }
          },
          glowEffect: {
            effectFilePath: isSkinned ? EFF_SPOTLIGHT_GLOW_SKINNED : EFF_SPOTLIGHT_GLOW,
            parameters: {
              TextureMap: hullSet.glowTextureResPath
            }
          }
        }));
      }
    }
  }

  const EFF_PLANE = "res:/graphics/effect/managed/space/spaceobject/fx/planeglow.fx";
  const EFF_PLANE_SKINNED = "res:/graphics/effect/managed/space/spaceobject/fx/skinned_planeglow.fx";
  /**
   * Sets up booster sets
   * @param ship
   * @param hull
   * @param faction
   */

  function SetupPlaneSets(ship, hull, faction) {
    const hullSets = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "planeSets", []),
          factionSets = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(faction, "planeSets", {});

    for (let i = 0; i < hullSets.length; ++i) {
      const hullSet = hullSets[i],
            hullSetItems = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullSet, "items", []),
            items = []; // Get plane items

      for (let j = 0; j < hullSetItems.length; ++j) {
        const item = Object.assign({
          boneIndex: -1
        }, hullSetItems[j]),
              factionSet = getGroupIndex(factionSets, item.groupIndex);
        /*
        const item = {};
        item.name = src.name;                       // ""
        item.groupIndex = src.groupIndex;           // -1
        item.boneIndex = get(src, "boneIndex", -1); // -1
        item.maskAtlasID = src.maskMapAtlasIndex;   // 0
        assignIfExists(item, src, [
            "position", "rotation", "scaling",
            "layer1Transform", "layer1Scroll",
            "layer2Transform", "layer2Scroll"
        ]);
        */

        if (factionSet) {
          Object(global_util__WEBPACK_IMPORTED_MODULE_1__["assignIfExists"])(item, factionSet, "color"); // [0, 0, 0, 0]);
        }

        if (!self.SKIP_EMPTY_ITEMS || item.color && !global__WEBPACK_IMPORTED_MODULE_0__["vec3"].isEmpty(item.color)) {
          items.push(item);
        }
      }

      if (!self.SKIP_EMPTY_ITEMS || items.length) {
        ship.planeSets.push(_eve__WEBPACK_IMPORTED_MODULE_4__["EvePlaneSet"].from({
          name: hullSet.name,
          items,
          effect: {
            effectFilePath: hullSet.skinned ? EFF_PLANE_SKINNED : EFF_PLANE,
            textures: {
              Layer1Map: hullSet.layer1MapResPath,
              Layer2Map: hullSet.layer2MapResPath,
              MaskMap: hullSet.maskMapResPath,
              PlaneData: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullSet, "planeData", [1, 0, 0, 0])
            }
          }
        }));
      }
    }
  }

  const EFF_BOOSTER_VOLUMETRIC = "res:/Graphics/Effect/Managed/Space/Booster/BoosterVolumetric.fx";
  const EFF_BOOSTER_GLOW_SKINNED = "res:/Graphics/Effect/Managed/Space/Booster/BoosterGlowAnimated.fx";
  const TEX_NOISE = "res:/Texture/global/noise.dds.0.png";
  const TEX_NOISE_32_CUBE = "res:/Texture/Global/noise32cube_volume.dds.0.png";
  const TEX_WHITE_SHARP = "res:/Texture/Particle/whitesharp.dds.0.png";
  /**
   * Sets up boosters
   * @param ship
   * @param hull
   * @param race
   */

  function SetupBoosters(ship, hull, race) {
    if (!hull.booster) return;
    const zero = [0, 0, 0, 0],
          raceBooster = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(race, "booster", {}),
          hullBooster = hull["booster"],
          hullBoosterItems = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullBooster, "items", []);

    for (let i = 0; i < hullBoosterItems.length; ++i) {
      ship.locators.push(_eve__WEBPACK_IMPORTED_MODULE_4__["EveLocator2"].from({
        name: "locator_booster_" + (i + 1),
        transform: hullBoosterItems[i].transform,
        atlasIndex0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullBoosterItems[i], "atlasIndex0", 0),
        atlasIndex1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hullBoosterItems[i], "atlasIndex1", 0)
      }));
    }

    ship.boosters = _eve__WEBPACK_IMPORTED_MODULE_4__["EveBoosterSet"].from({
      glowScale: raceBooster.glowScale,
      symHaloScale: raceBooster.symHaloScale,
      haloScaleX: raceBooster.haloScaleX,
      haloScaleY: raceBooster.haloScaleY,
      haloColor: raceBooster.haloColor,
      glowColor: raceBooster.glowColor,
      warpGlowColor: raceBooster.warpGlowColor,
      warpHaloColor: raceBooster.warpHalpColor,
      trailColor: raceBooster.trailColor,
      trailSize: raceBooster.trailSize,
      effect: {
        effectFilePath: EFF_BOOSTER_VOLUMETRIC,
        parameters: {
          NoiseFunction0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape0, "noiseFunction", 0),
          NoiseSpeed0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape0, "noiseSpeed", 0),
          NoiseAmplitudeStart0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape0, "noiseAmplitureStart", zero),
          NoiseAmplitudeEnd0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape0, "noiseAmplitureEnd", zero),
          NoiseFrequency0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape0, "noiseFrequency", zero),
          Color0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape0, "color", zero),
          NoiseFunction1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape1, "noiseFunction", 0),
          NoiseSpeed1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape1, "noiseSpeed", 0),
          NoiseAmplitudeStart1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape1, "noiseAmplitureStart", zero),
          NoiseAmplitudeEnd1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape1, "noiseAmplitureEnd", zero),
          NoiseFrequency1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape1, "noiseFrequency", zero),
          Color1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.shape1, "color", zero),
          WarpNoiseFunction0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape0, "noiseFunction", 0),
          WarpNoiseSpeed0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape0, "noiseSpeed", 0),
          WarpNoiseAmplitudeStart0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape0, "noiseAmplitureStart", zero),
          WarpNoiseAmplitudeEnd0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape0, "noiseAmplitureEnd", zero),
          WarpNoiseFrequency0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape0, "noiseFrequency", zero),
          WarpColor0: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape0, "color", zero),
          WarpNoiseFunction1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape1, "noiseFunction", 0),
          WarpNoiseSpeed1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape1, "noiseSpeed", 0),
          WarpNoiseAmplitudeStart1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape1, "noiseAmplitureStart", zero),
          WarpNoiseAmplitudeEnd1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape1, "noiseAmplitureEnd", zero),
          WarpNoiseFrequency1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape1, "noiseFrequency", zero),
          WarpColor1: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster.warpShape1, "color", zero),
          ShapeAtlasSize: [Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster, "shapeAtlasHeight", 0), Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster, "shapeAtlasCount", 0), 0, 0],
          BoosterScale: Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(raceBooster, "scale", [1, 1, 1, 1])
        },
        textures: {
          ShapeMap: raceBooster.shapeAtlasResPath,
          GradientMap0: raceBooster.gradient0ResPath,
          GradientMap1: raceBooster.gradient1ResPath,
          NoiseMap: TEX_NOISE_32_CUBE
        }
      },
      glows: {
        useQuads: true,
        effect: {
          effectFilePath: EFF_BOOSTER_GLOW_SKINNED,
          textures: {
            DiffuseMap: TEX_WHITE_SHARP,
            NoiseMap: TEX_NOISE
          }
        }
      }
    });
  }
  /**
   * Sets up locators
   * @param ship
   * @param hull
   */


  function SetupLocators(ship, hull) {
    const hullLocators = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "locatorTurrets", []);

    for (let i = 0; i < hullLocators.length; ++i) {
      ship.locators.push(_eve__WEBPACK_IMPORTED_MODULE_4__["EveLocator2"].from(hullLocators[i]));
    }
  }

  function BindParticleEmitters(obj, curveSet, curve) {
    if (Array.isArray(obj.particleEmitters)) {
      for (var i = 0; i < obj.particleEmitters.length; ++i) {
        if ("rate" in obj.particleEmitters[i]) {
          var binding = new curve__WEBPACK_IMPORTED_MODULE_2__["Tw2ValueBinding"]();
          binding.sourceObject = curve;
          binding.sourceAttribute = "currentValue";
          binding.destinationObject = obj.particleEmitters[i];
          binding.destinationAttribute = "rate";
          binding.Initialize();
          curveSet.bindings.push(binding);
        }
      }

      for (i = 0; i < obj.children.length; ++i) {
        BindParticleEmitters(obj.children[i], curveSet, curve);
      }
    } else {
      tw2.Log({
        type: "warning",
        name: "Space object factory",
        message: "Unable to bind particle emitters: ".concat(obj.constructor.name)
      });
    }
  }

  function SetupChildren(ship, hull, curveSet, curves) {
    function onChildLoaded(child) {
      return function (obj) {
        if (obj.constructor.__isEffectChild) {
          ship.effectChildren.push(obj);
        } else {
          ship.children.push(obj);
        }

        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(obj.translation, Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(child, "translation", [0, 0, 0]));
        global__WEBPACK_IMPORTED_MODULE_0__["quat"].copy(obj.rotation, Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(child, "rotation", [0, 0, 0, 1]));
        global__WEBPACK_IMPORTED_MODULE_0__["vec3"].copy(obj.scaling, Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(child, "scaling", [1, 1, 1]));
        var id = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(child, "id", -1);

        if (id !== -1 && curves[id]) {
          BindParticleEmitters(obj, curveSet, curves[id]);
        }
      };
    }

    const children = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "children", []);

    for (let i = 0; i < children.length; ++i) {
      const resPath = children[i]["redFilePath"];

      if (resPath) {
        tw2.resMan.GetObject(resPath, onChildLoaded(children[i]));
      } else {
        tw2.Log({
          type: "warning",
          name: "Space object factory",
          message: "No resource path found for \"".concat(hull.name, "\" child at index ").concat(i)
        });
      }
    }
  }

  function SetupAnimations(ship, hull) {
    var id_curves = [];
    var curveSet = null;
    var animations = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "animations", []);

    for (var i = 0; i < animations.length; ++i) {
      if (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(animations[i], "id", -1) !== -1 && Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(animations[i], "startRate", -1) !== -1) {
        if (!curveSet) {
          curveSet = new curve__WEBPACK_IMPORTED_MODULE_2__["Tw2CurveSet"]();
        }

        var curve = new curve__WEBPACK_IMPORTED_MODULE_2__["Tw2ScalarCurve2"]();
        curve.keys.push(new curve__WEBPACK_IMPORTED_MODULE_2__["Tw2ScalarKey2"]());
        curve.keys.push(new curve__WEBPACK_IMPORTED_MODULE_2__["Tw2ScalarKey2"]());
        curve.keys[0].value = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(animations[i], "startRate", -1);
        curve.keys[1].time = 1;
        curve.keys[1].value = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(animations[i], "endRate", -1);
        curve.Initialize();
        curveSet.curves.push(curve);
        ship.curveSets.push(curveSet);
        id_curves[Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(animations[i], "id", -1)] = curve;
      }
    }

    if (curveSet) {
      curveSet.Initialize();
    }

    return [curveSet, id_curves];
  }

  function GetTurretMaterialParameter(name, parentFaction, areaData) {
    var materialIdx = -1;

    for (var i = 0; i < data["generic"]["materialPrefixes"].length; ++i) {
      if (name.substr(0, data["generic"]["materialPrefixes"][i].length) === data["generic"]["materialPrefixes"][i]) {
        materialIdx = i;
        name = name.substr(data["generic"]["materialPrefixes"][i].length);
      }
    }

    if (materialIdx !== -1) {
      var turretMaterialIndex = Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(parentFaction, "materialUsageMtl" + (materialIdx + 1), materialIdx);

      if (turretMaterialIndex >= 0 && turretMaterialIndex < data["generic"]["materialPrefixes"].length) {
        name = data["generic"]["materialPrefixes"][turretMaterialIndex] + name;

        if (name in areaData.parameters) {
          return areaData.parameters[name];
        }
      }
    }
  }

  var zeroColor = [0, 0, 0, 0];

  function CombineTurretMaterial(name, parentValue, turretValue, overrideMethod) {
    switch (overrideMethod) {
      case "overridable":
        return parentValue ? parentValue : turretValue ? turretValue : zeroColor;

      case "half_overridable":
        if (name.indexOf("GlowColor") >= 0) {
          return turretValue ? turretValue : zeroColor;
        }

        return parentValue ? parentValue : turretValue ? turretValue : zeroColor;

      case "not_overridable":
      case "half_overridable_2":
        return turretValue ? turretValue : zeroColor;
    }

    return zeroColor;
  }

  function SetupTurretMaterial(turretSet, parentFactionName, turretFactionName) {
    var parentFaction = data["faction"][parentFactionName];
    var turretFaction = data["faction"][turretFactionName];
    var parentArea = null;

    if (parentFaction && parentFaction.areas && "hull" in parentFaction.areas) {
      parentArea = parentFaction.areas.hull;
    }

    var turretArea = null;

    if (turretFaction && turretFaction.areas && "hull" in turretFaction.areas) {
      turretArea = turretFaction.areas.hull;
    }

    if (!parentArea && !turretArea) {
      return;
    }

    if (turretSet.turretEffect) {
      var params = turretSet.turretEffect.parameters;

      for (var i in params) {
        if (params.hasOwnProperty(i)) {
          if (params[i].constructor.prototype !== core__WEBPACK_IMPORTED_MODULE_3__["Tw2Vector4Parameter"].prototype) {
            continue;
          }

          var parentValue = null;
          var turretValue = null;

          if (parentArea) {
            parentValue = GetTurretMaterialParameter(i, parentFaction, parentArea);
          }

          if (turretArea) {
            turretValue = GetTurretMaterialParameter(i, parentFaction, parentArea);
          }

          global__WEBPACK_IMPORTED_MODULE_0__["vec4"].copy(params[i].value, CombineTurretMaterial(i, parentValue, turretValue, turretSet.turretEffect.name));
        }
      }

      turretSet.turretEffect.BindParameters();
    }
  }

  this.SetupTurretMaterial = function (turretSet, parentFactionName, turretFactionName, onResolved, onRejected) {
    return this.FetchTurretMaterial(turretSet, parentFactionName, turretFactionName).then(onResolved).catch(onRejected);
  };

  this.FetchTurretMaterial =
  /*#__PURE__*/
  function () {
    var _ref = _asyncToGenerator(function* (turretSet, parentFactionName, turretFactionName) {
      yield this.FetchSOF();
      SetupTurretMaterial(turretSet, parentFactionName, turretFactionName);
      return turretSet;
    });

    return function (_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }();
  /**
   * Fetches sof data
   */


  this.FetchSOF = function () {
    let sofPromise = null;
    /**
     * Gets sof data asynchronously
     * @returns {Promise}
     */

    return (
      /*#__PURE__*/
      _asyncToGenerator(function* () {
        if (!sofPromise) {
          spriteEffect = core__WEBPACK_IMPORTED_MODULE_3__["Tw2Effect"].from({
            effectFilePath: "res:/graphics/effect/managed/space/spaceobject/fx/blinkinglightspool.fx",
            parameters: {
              MainIntensity: 1,
              GradientMap: "res:/texture/particle/whitesharp_gradient.dds.0.png"
            }
          });
          sofPromise = tw2.FetchObject("res:/dx9/model/spaceobjectfactory/data.red").then(sof => data = sof).catch(err => {
            tw2.Log({
              type: "error",
              name: "Space object factory",
              message: "Could not load data"
            });
          });
        }

        return sofPromise;
      })
    );
  }();
  /**
   * Extends the sof data object with patterns from a space object factory file
   * @param {String} [resPath] - The resource path to a source space object factory file
   * @returns {Promise}
   */


  this.ExtendPatternsFrom =
  /*#__PURE__*/
  function () {
    var _ref3 = _asyncToGenerator(function* (resPath) {
      if (!resPath) {
        return Promise.reject(new Error("Invalid respath: undefined"));
      }

      const currentSof = yield this.FetchSOF(),
            extendSof = yield tw2.FetchObject(resPath);
      currentSof.pattern = currentSof.pattern.concat(extendSof.pattern);
    });

    return function (_x4) {
      return _ref3.apply(this, arguments);
    };
  }();
  /**
   * Extends the sof data object with materials from a space object factory file
   * @param {String} [resPath] - The resource path to a source space object factory file
   * @returns {Promise}
   */


  this.ExtendMaterialsFrom =
  /*#__PURE__*/
  function () {
    var _ref4 = _asyncToGenerator(function* (resPath) {
      if (!resPath) {
        return Promise.reject(new Error("Invalid respath: undefined"));
      }

      const currentSof = yield this.FetchSOF(),
            extendSof = yield tw2.FetchObject(resPath);
      const materials = extendSof.material;

      if (resPath.includes(".black")) {
        extendSof.material.forEach(material => {
          currentSof.material[material.name] = material.Assign();
        });
      } else {
        Object.assign(currentSof.material, extendSof.material);
      }
    });

    return function (_x5) {
      return _ref4.apply(this, arguments);
    };
  }();
  /**
   * Gets a sof object
   * @param {String} name
   * @returns {Promise<{}>}
   */


  const getSofObject =
  /*#__PURE__*/
  function () {
    var _ref5 = _asyncToGenerator(function* (name) {
      const sof = yield _this.FetchSOF();
      if (sof[name]) return sof[name];
      throw new Error("Invalid sof object (".concat(name, ")"));
    });

    return function getSofObject(_x6) {
      return _ref5.apply(this, arguments);
    };
  }();
  /**
   * Gets a sof object's key's value
   * @param {String} name
   * @param {String} key
   * @param {Tw2Error} ErrorConstructor
   * @returns {Promise<{}>}
   */


  const getSofObjectKey =
  /*#__PURE__*/
  function () {
    var _ref6 = _asyncToGenerator(function* (name, key, ErrorConstructor) {
      const sofObject = yield getSofObject(name);

      if (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sofObject)) {
        for (let i = 0; i < sofObject.length; i++) {
          if (sofObject[key].name === name) {
            return sofObject[key];
          }
        }
      } else if (sofObject[key]) {
        return sofObject[key];
      }

      if (ErrorConstructor) {
        throw new ErrorConstructor({
          name: key
        });
      }

      throw new Error("Invalid sof object key (".concat(name, ":").concat(key, ")"));
    });

    return function getSofObjectKey(_x7, _x8, _x9) {
      return _ref6.apply(this, arguments);
    };
  }();
  /**
   * Gets a sof object's value's and descriptions
   * @param {String} name
   * @returns {Promise<{}>}
   */


  const getSofObjectValueDescriptions =
  /*#__PURE__*/
  function () {
    var _ref7 = _asyncToGenerator(function* (name) {
      const sofObject = yield getSofObject(name),
            out = {};

      if (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(sofObject)) {
        for (let i = 0; i < sofObject.length; i++) {
          out[sofObject[i].name] = sofObject[i].description || "";
        }

        return out;
      }

      for (const key in sofObject) {
        if (sofObject.hasOwnProperty(key)) {
          out[key] = sofObject[key].description || "";
        }
      }

      return out;
    });

    return function getSofObjectValueDescriptions(_x10) {
      return _ref7.apply(this, arguments);
    };
  }();
  /**
   * Helper to get a hull's projection data from a pattern
   * @param {String} hull
   * @param {*} patternData
   */


  const getHullProjection =
  /*#__PURE__*/
  function () {
    var _ref8 = _asyncToGenerator(function* (hull, patternData) {
      yield _this.FetchHull(hull);
      const {
        projections = []
      } = patternData;

      for (let i = 0; i < projections.length; i++) {
        if (projections[i].name === hull) {
          const out = {};
          out.name = patternData.name;
          out.layer1 = patternData.layer1;
          out.layer2 = patternData.layer2;
          out.transformLayer1 = projections[i].transformLayer1;
          out.transformLayer2 = projections[i].transformLayer2;
          return out;
        }
      }
    });

    return function getHullProjection(_x11, _x12) {
      return _ref8.apply(this, arguments);
    };
  }();
  /**
   * Gets a sof object from dna
   * @param {String} dna
   * @returns {Promise<*>}
   */


  this.FetchObject =
  /*#__PURE__*/
  function () {
    var _ref9 = _asyncToGenerator(function* (dna) {
      if (!Object(global_util__WEBPACK_IMPORTED_MODULE_1__["isDNA"])(dna)) {
        throw new Error("Invalid DNA (".concat(dna, ")"));
      }

      const parts = dna.split(":"),
            commands = {};

      for (let i = 3; i < parts.length; ++i) {
        const subParts = parts[i].split("?");
        commands[subParts[0]] = subParts[1].split(";");
      }

      const hull = yield _this.FetchHull(parts[0]),
            faction = yield _this.FetchFaction(parts[1]),
            race = yield _this.FetchRace(parts[2]); // Ensure we have valid materials

      if (commands.mesh) {
        for (let i = 0; i < commands.mesh.length; i++) {
          yield _this.FetchMaterial(commands.mesh[i]);
        }
      } // Ensure we have valid materials


      if (commands.pattern && commands.pattern.length > 1) {
        for (let i = 1; i < commands.pattern.length; i++) {
          yield _this.FetchMaterial(commands.pattern[i]);
        }
      }

      const ship = new (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["get"])(hull, "buildClass", 0) === 2 ? _eve__WEBPACK_IMPORTED_MODULE_4__["EveSpaceObject"] : _eve__WEBPACK_IMPORTED_MODULE_4__["EveShip"])(),
            pattern = SetupPattern(hull, race, commands);
      SetupCustomMasks(ship, pattern); // Custom masks must be first

      SetupMesh(ship, hull, faction, race, commands, pattern);
      SetupDecals(ship, hull, faction);
      SetupSpriteSets(ship, hull, faction);
      SetupSpotlightSets(ship, hull, faction);
      SetupPlaneSets(ship, hull, faction);
      SetupBoosters(ship, hull, race);
      SetupLocators(ship, hull);
      const curves = SetupAnimations(ship, hull);
      SetupChildren(ship, hull, curves[0], curves[1]);
      SetupInstancedMeshes(ship, hull, faction, race, commands, pattern);
      ship.Initialize();
      return ship;
    });

    return function (_x13) {
      return _ref9.apply(this, arguments);
    };
  }();
  /**
   * Gets a sof hull
   * @param {String} hull
   * @returns {Promise<EveSOFDataHull>}
   */


  this.FetchHull =
  /*#__PURE__*/
  function () {
    var _ref10 = _asyncToGenerator(function* (hull) {
      return getSofObjectKey("hull", hull, core__WEBPACK_IMPORTED_MODULE_3__["ErrSOFHullNotFound"]);
    });

    return function (_x14) {
      return _ref10.apply(this, arguments);
    };
  }();
  /**
   * Gets sof hull names and descriptions
   * @returns {Promise<{}>}
   */


  this.FetchHullNames =
  /*#__PURE__*/
  _asyncToGenerator(function* () {
    return getSofObjectValueDescriptions("hull");
  });
  /**
   * Gets a sof hull projection
   * @param {String} hull
   * @param {String} pattern
   * @returns {Promise<*>}
   */

  this.FetchHullPattern =
  /*#__PURE__*/
  function () {
    var _ref12 = _asyncToGenerator(function* (hull, pattern) {
      const patternData = yield _this.FetchPattern(pattern),
            found = getHullProjection(hull, patternData);
      if (found) return found;
      throw new Error("Invalid pattern for hull (".concat(hull, ":").concat(pattern, ")"));
    });

    return function (_x15, _x16) {
      return _ref12.apply(this, arguments);
    };
  }();
  /**
   * Gets all hull projections
   * @param {String} hull
   * @returns {Promise<{}>}
   */


  this.FetchHullPatternNames =
  /*#__PURE__*/
  function () {
    var _ref13 = _asyncToGenerator(function* (hull) {
      const patterns = yield getSofObject("pattern");
      let out = [];
      patterns.forEach(pattern => {
        for (let i = 0; i < pattern.projections.length; i++) {
          if (pattern.projections[i].name === hull) {
            out.push(pattern.name);
            break;
          }
        }
      });
      out.sort();
      return out;
    });

    return function (_x17) {
      return _ref13.apply(this, arguments);
    };
  }();
  /**
   * Gets a sof hull's build class
   * @param {String} dna
   * @returns {Promise<number>}
   */


  this.FetchHullBuildClass =
  /*#__PURE__*/
  function () {
    var _ref14 = _asyncToGenerator(function* (dna) {
      const hull = dna.split(":")[0],
            data = yield _this.FetchHull(hull);
      return data.buildClass === 2 ? 2 : 1;
    });

    return function (_x18) {
      return _ref14.apply(this, arguments);
    };
  }();
  /**
   * Gets a sof race
   * @param race
   * @returns {Promise<EveSOFDataRace>}
   */


  this.FetchRace =
  /*#__PURE__*/
  function () {
    var _ref15 = _asyncToGenerator(function* (race) {
      return getSofObjectKey("race", race, core__WEBPACK_IMPORTED_MODULE_3__["ErrSOFRaceNotFound"]);
    });

    return function (_x19) {
      return _ref15.apply(this, arguments);
    };
  }();
  /**
   * Get all sof race names and descriptions
   * @returns {Promise<{}>}
   */


  this.FetchRaceNames =
  /*#__PURE__*/
  _asyncToGenerator(function* () {
    return getSofObjectValueDescriptions("race");
  });
  /**
   * Gets a sof faction
   * @param faction
   * @returns {Promise<EveSOFDataFaction>}
   */

  this.FetchFaction =
  /*#__PURE__*/
  function () {
    var _ref17 = _asyncToGenerator(function* (faction) {
      return getSofObjectKey("faction", faction, core__WEBPACK_IMPORTED_MODULE_3__["ErrSOFFactionNotFound"]);
    });

    return function (_x20) {
      return _ref17.apply(this, arguments);
    };
  }();
  /**
   * Gets all sof faction names and descriptions
   * @returns {Promise<{}>}
   */


  this.FetchFactionNames =
  /*#__PURE__*/
  _asyncToGenerator(function* () {
    return getSofObjectValueDescriptions("faction");
  });
  /**
   * Gets a sof material
   * @param material
   * @returns {Promise<EveSOFDataMaterial>}
   */

  this.FetchMaterial =
  /*#__PURE__*/
  function () {
    var _ref19 = _asyncToGenerator(function* (material) {
      return getSofObjectKey("material", material, core__WEBPACK_IMPORTED_MODULE_3__["ErrSOFMaterialNotFound"]);
    });

    return function (_x21) {
      return _ref19.apply(this, arguments);
    };
  }();
  /**
   * Gets all material names and descriptions
   * @returns {Promise<{}>}
   */


  this.FetchMaterialNames =
  /*#__PURE__*/
  _asyncToGenerator(function* () {
    return getSofObjectValueDescriptions("material");
  });
  /**
   * Gets a sof pattern
   * @param pattern
   * @returns {Promise<EveSOFDataPattern>}
   */

  this.FetchPattern =
  /*#__PURE__*/
  function () {
    var _ref21 = _asyncToGenerator(function* (pattern) {
      return getSofObjectKey("pattern", pattern, core__WEBPACK_IMPORTED_MODULE_3__["ErrSOFPatternNotFound"]);
    });

    return function (_x22) {
      return _ref21.apply(this, arguments);
    };
  }();
  /**
   * Gets all pattern names and descriptions
   * @returns {Promise<{}>}
   */


  this.FetchPatternNames =
  /*#__PURE__*/
  _asyncToGenerator(function* () {
    return getSofObjectValueDescriptions("pattern");
  });
}

/***/ }),

/***/ "./sof/EveSOFData.js":
/*!***************************!*\
  !*** ./sof/EveSOFData.js ***!
  \***************************/
/*! exports provided: EveSOFData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFData", function() { return EveSOFData; });
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");


/**
 * EveSOFData
 *
 * @property {Array.<EveSOFDataFaction>} faction   -
 * @property {EveSOFDataGeneric} generic           -
 * @property {Array.<EveSOFDataHull>} hull         -
 * @property {Array.<EveSOFDataMaterial>} material -
 * @property {Array.<EveSOFDataPattern>} pattern   -
 * @property {Array.<EveSOFDataRace>} race         -
 */

class EveSOFData {
  constructor() {
    this.faction = [];
    this.generic = null;
    this.hull = [];
    this.material = [];
    this.pattern = [];
    this.race = [];
  }

  /**
   * Initializes the sof data
   */
  Initialize() {}
  /*
  this._spriteEffect = Tw2Effect.from({
      effectFilePath: "res:/graphics/effect/managed/space/spaceobject/fx/blinkinglightspool.fx",
      parameters: {
          MainIntensity: 1,
          GradientMap: "res:/texture/particle/whitesharp_gradient.dds.0.png"
      }
  });
    this._bannerEffect = this.generic.CreateEffect(this.generic.bannerShader);
  */

  /**
   * Gets a hull by it's name
   * @param {String} name
   * @returns {EveSOFDataHull|null}
   */


  GetHull(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.hull, "name", name, core__WEBPACK_IMPORTED_MODULE_1__["ErrSOFHullNotFound"]);
  }
  /**
   * Gets hull names
   * @param {Object|Array} [out={}]
   * @returns {Object|Array} out
   */


  GetHullNames(out) {
    return EveSOFData.GetNames(this.hull, out);
  }
  /**
   * Checks if a hull exists
   * @param {String} name
   * @returns {boolean}
   */


  HasHull(name) {
    return !!Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.hull, "name", name);
  }
  /**
   * Gets a hull's build class
   * @param {String} name
   * @returns {Number}
   */


  GetHullBuildClass(name) {
    return this.GetHull(name).buildClass === 2 ? 2 : 1;
  }
  /**
   * Gets a hull's pattern names
   * @param {String} name
   */


  GetHullPatternNames(name) {
    this.GetHull(name);
    let patternNames = [];

    for (let i = 0; i < this.pattern.length; i++) {
      if (this.pattern[i].HasProjection(name)) {
        patternNames.push(this.pattern[i].name);
      }
    }

    return patternNames.sort();
  }
  /**
   * Checks if a hull has a given pattern
   * @param {String} hullName
   * @param {String} patternName
   * @returns {boolean}
   */


  HasHullPattern(hullName, patternName) {
    const hull = this.GetHull(hullName);
    return this.HasPattern(patternName) ? this.GetPattern(patternName).HasProjection(hull.name) : false;
  }
  /**
   * Gets a hull pattern
   * @param {String} hullName
   * @param {String} patternName
   * @returns {*}
   */


  GetHullPattern(hullName, patternName) {
    const hull = this.GetHull(hullName);
    return this.GetPattern(patternName).GetHullPattern(hullName);
  }
  /**
   * Gets a faction by it's name
   * @param {String} name
   * @returns {EveSOFDataFaction|null}
   */


  GetFaction(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.faction, "name", name, core__WEBPACK_IMPORTED_MODULE_1__["ErrSOFFactionNotFound"]);
  }
  /**
   * Gets faction names
   * @param {Object|Array} [out={}]
   * @returns {Object|Array} out
   */


  GetFactionNames(out) {
    return EveSOFData.GetNames(this.faction, out);
  }
  /**
   * Checks if a faction exists
   * @param {String} name
   * @returns {boolean}
   */


  HasFaction(name) {
    return !!Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.faction, "name", name);
  }
  /**
   * Gets a race
   * @param {String} name
   * @returns {EveSOFDataRace|null}
   */


  GetRace(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.race, "name", name, core__WEBPACK_IMPORTED_MODULE_1__["ErrSOFRaceNotFound"]);
  }
  /**
   * Gets race names
   * @param {Object|Array} [out={}]
   * @returns {Object|Array} out
   */


  GetRaceNames(out) {
    return EveSOFData.GetNames(this.race, out);
  }
  /**
   * Checks if a race exists
   * @param {String} name
   * @returns {boolean}
   */


  HasRace(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.race, "name", name);
  }
  /**
   * Gets a material
   * @param {String} name
   * @returns {EveSOFDataMaterial|null}
   */


  GetMaterial(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.material, "name", name, core__WEBPACK_IMPORTED_MODULE_1__["ErrSOFMaterialNotFound"]);
  }
  /**
   * Gets material names
   * @param {Object|Array} [out={}]
   * @returns {Object|Array} out
   */


  GetMaterialNames(out) {
    return EveSOFData.GetNames(this.material, out);
  }
  /**
   * Checks if a material exists
   * @param {String} name
   * @returns {boolean}
   */


  HasMaterial(name) {
    return !!Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.material, "name", name);
  }
  /**
   * Gets a pattern
   * @param {String} name
   * @returns {EveSOFDataPattern|null}
   */


  GetPattern(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.pattern, "name", name, core__WEBPACK_IMPORTED_MODULE_1__["ErrSOFPatternNotFound"]);
  }
  /**
   * Gets pattern names
   * @param {Object|Array} [out={}]
   * @returns {Object|Array} out
   */


  GetPatternNames(out) {
    return EveSOFData.GetNames(this.pattern, out);
  }
  /**
   * Checks if a pattern exists
   * @param {String} name
   * @returns {boolean}
   */


  HasPattern(name) {
    return !!Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.pattern, "name", name);
  }
  /**
   * Gets the names from a sof array
   * @param {Array} arr
   * @param {Object|Array} [out={}]
   * @returns {Object|Array} out
   */


  static GetNames(arr, out = {}) {
    const getDescription = !Object(global_util__WEBPACK_IMPORTED_MODULE_0__["isArray"])(out);

    for (let i = 0; i < arr.length; i++) {
      if (getDescription) {
        out[arr[i].name] = arr[i].description || "";
      } else {
        out.push(getDescription);
      }
    }

    if (!getDescription) {
      out.sort();
    }

    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["faction", r.array], ["generic", r.object], ["hull", r.array], ["material", r.array], ["pattern", r.array], ["race", r.array]];
  }

}

/***/ }),

/***/ "./sof/faction/EveSOFDataFaction.js":
/*!******************************************!*\
  !*** ./sof/faction/EveSOFDataFaction.js ***!
  \******************************************/
/*! exports provided: EveSOFDataFaction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFaction", function() { return EveSOFDataFaction; });
/**
 * EveSOFDataFaction
 *
 * @property {String} name                                            -
 * @property {EveSOFDataArea} areaTypes                               -
 * @property {Array.<EveSOFDataFactionChild>} children                -
 * @property {EveSOFDataFactionColorSet} colorSet                     -
 * @property {Array.<EveSOFDataFactionDecal>} decals                  -
 * @property {EveSOFDataPatternLayer} defaultPattern                  -
 * @property {String} defaultPatternLayer1MaterialName                -
 * @property {String} description                                     -
 * @property {EveSOFDataLogoSet} logoSet                              -
 * @property {Number} materialUsageMtl1                               -
 * @property {Number} materialUsageMtl2                               -
 * @property {Number} materialUsageMtl3                               -
 * @property {Number} materialUsageMtl4                               -
 * @property {Array.<EveSOFDataFactionPlaneSet>} planeSets            -
 * @property {String} resPathInsert                                   -
 * @property {Array.<EveSOFDataFactionSpotlightSet>} spotlightSets    -
 * @property {EveSOFDataFactionVisibilityGroupSet} visibilityGroupSet -
 */
class EveSOFDataFaction {
  constructor() {
    this.name = "";
    this.areaTypes = null;
    this.children = [];
    this.colorSet = null;
    this.defaultPattern = null;
    this.defaultPatternLayer1MaterialName = "";
    this.description = "";
    this.logoSet = null;
    this.materialUsageMtl1 = 0;
    this.materialUsageMtl2 = 0;
    this.materialUsageMtl3 = 0;
    this.materialUsageMtl4 = 0;
    this.planeSets = [];
    this.resPathInsert = "";
    this.spotlightSets = [];
    this.visibilityGroupSet = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["areas", r.array], ["areaTypes", r.object], ["colorSet", r.object], ["children", r.array], ["defaultPattern", r.object], ["defaultPatternLayer1MaterialName", r.string], ["description", r.string], ["logoSet", r.object], ["materialUsageMtl1", r.uint], ["materialUsageMtl2", r.uint], ["materialUsageMtl3", r.uint], ["materialUsageMtl4", r.uint], ["name", r.string], ["planeSets", r.array], ["resPathInsert", r.string], ["spotlightSets", r.array], ["spriteSets", r.array], ["visibilityGroupSet", r.object]];
  }

}

/***/ }),

/***/ "./sof/faction/EveSOFDataFactionChild.js":
/*!***********************************************!*\
  !*** ./sof/faction/EveSOFDataFactionChild.js ***!
  \***********************************************/
/*! exports provided: EveSOFDataFactionChild */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionChild", function() { return EveSOFDataFactionChild; });
/**
 * EveSOFDataFactionChild
 *
 * @property {String} name
 * @property {Number} groupIndex -
 * @property {Boolean} isVisible -
 */
class EveSOFDataFactionChild {
  constructor() {
    this.name = "";
    this.groupIndex = -1;
    this.isVisible = false;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["groupIndex", r.uint], ["name", r.string], ["isVisible", r.boolean]];
  }

}

/***/ }),

/***/ "./sof/faction/EveSOFDataFactionColorSet.js":
/*!**************************************************!*\
  !*** ./sof/faction/EveSOFDataFactionColorSet.js ***!
  \**************************************************/
/*! exports provided: EveSOFDataFactionColorSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionColorSet", function() { return EveSOFDataFactionColorSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataFactionColorSet
 *
 * @property {vec4} Black          -
 * @property {vec4} Blue           -
 * @property {vec4} Booster        -
 * @property {vec4} Cyan           -
 * @property {vec4} Darkhull       -
 * @property {vec4} Fire           -
 * @property {vec4} Glass          -
 * @property {vec4} Green          -
 * @property {vec4} Hull           -
 * @property {vec4} Killmark       -
 * @property {vec4} Orange         -
 * @property {vec4} Primary        -
 * @property {vec4} PrimaryLight   -
 * @property {vec4} Reactor        -
 * @property {vec4} Red            -
 * @property {vec4} Secondary      -
 * @property {vec4} SecondaryLight -
 * @property {vec4} Tertiary       -
 * @property {vec4} TertiaryLight  -
 * @property {vec4} White          -
 * @property {vec4} WhiteLight     -
 * @property {vec4} Yellow         -
 */

class EveSOFDataFactionColorSet {
  constructor() {
    this.Black = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Blue = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Booster = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Cyan = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Darkhull = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Fire = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Glass = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Green = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Hull = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Killmark = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Orange = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Primary = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.PrimaryLight = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Reactor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Red = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Secondary = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.SecondaryLight = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Tertiary = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.TertiaryLight = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.White = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.WhiteLight = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.Yellow = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
  }

  /**
   * Gets a faction color set by name
   * @param {String} name
   * @returns {vec4|null}
   */
  Get(name) {
    name = name.charAt(0).toUpperCase() + name.substring(1).toLowerCase();
    return name in this ? this[name] : null;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["Black", r.vector4], ["Blue", r.vector4], ["Booster", r.vector4], ["Cyan", r.vector4], ["Darkhull", r.vector4], ["Fire", r.vector4], ["Glass", r.vector4], ["Green", r.vector4], ["Hull", r.vector4], ["Killmark", r.vector4], ["Orange", r.vector4], ["Primary", r.vector4], ["PrimaryLight", r.vector4], ["Reactor", r.vector4], ["Red", r.vector4], ["Secondary", r.vector4], ["SecondaryLight", r.vector4], ["Tertiary", r.vector4], ["TertiaryLight", r.vector4], ["White", r.vector4], ["WhiteLight", r.vector4], ["Yellow", r.vector4]];
  }

}

/***/ }),

/***/ "./sof/faction/EveSOFDataFactionPlaneSet.js":
/*!**************************************************!*\
  !*** ./sof/faction/EveSOFDataFactionPlaneSet.js ***!
  \**************************************************/
/*! exports provided: EveSOFDataFactionPlaneSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionPlaneSet", function() { return EveSOFDataFactionPlaneSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataFactionPlaneSet
 *
 * @property {String} name       -
 * @property {vec4} color        -
 * @property {Number} groupIndex -
 */

class EveSOFDataFactionPlaneSet {
  constructor() {
    this.name = "";
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.groupIndex = -1;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["color", r.vector4], ["groupIndex", r.uint], ["name", r.string]];
  }

}

/***/ }),

/***/ "./sof/faction/EveSOFDataFactionSpotlightSet.js":
/*!******************************************************!*\
  !*** ./sof/faction/EveSOFDataFactionSpotlightSet.js ***!
  \******************************************************/
/*! exports provided: EveSOFDataFactionSpotlightSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionSpotlightSet", function() { return EveSOFDataFactionSpotlightSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataFactionSpotlightSet
 *
 * @property {String} name       -
 * @property {vec4} coneColor    -
 * @property {vec4} flareColor   -
 * @property {Number} groupIndex -
 * @property {vec4} spriteColor  -
 */

class EveSOFDataFactionSpotlightSet {
  constructor() {
    this.name = "";
    this.coneColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.flareColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.groupIndex = -1;
    this.spriteColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["coneColor", r.vector4], ["flareColor", r.vector4], ["groupIndex", r.uint], ["name", r.string], ["spriteColor", r.vector4]];
  }

}

/***/ }),

/***/ "./sof/faction/EveSOFDataFactionVisibilityGroupSet.js":
/*!************************************************************!*\
  !*** ./sof/faction/EveSOFDataFactionVisibilityGroupSet.js ***!
  \************************************************************/
/*! exports provided: EveSOFDataFactionVisibilityGroupSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionVisibilityGroupSet", function() { return EveSOFDataFactionVisibilityGroupSet; });
/**
 * EveSOFDataFactionVisibilityGroupSet
 *
 * @property {Array.<EveSOFDataGenericString>} visibilityGroups -
 */
class EveSOFDataFactionVisibilityGroupSet {
  constructor() {
    this.visibilityGroups = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["visibilityGroups", r.array]];
  }

}

/***/ }),

/***/ "./sof/faction/index.js":
/*!******************************!*\
  !*** ./sof/faction/index.js ***!
  \******************************/
/*! exports provided: EveSOFDataFaction, EveSOFDataFactionChild, EveSOFDataFactionColorSet, EveSOFDataFactionPlaneSet, EveSOFDataFactionSpotlightSet, EveSOFDataFactionVisibilityGroupSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveSOFDataFaction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveSOFDataFaction */ "./sof/faction/EveSOFDataFaction.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFaction", function() { return _EveSOFDataFaction__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataFaction"]; });

/* harmony import */ var _EveSOFDataFactionChild__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveSOFDataFactionChild */ "./sof/faction/EveSOFDataFactionChild.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionChild", function() { return _EveSOFDataFactionChild__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataFactionChild"]; });

/* harmony import */ var _EveSOFDataFactionColorSet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveSOFDataFactionColorSet */ "./sof/faction/EveSOFDataFactionColorSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionColorSet", function() { return _EveSOFDataFactionColorSet__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataFactionColorSet"]; });

/* harmony import */ var _EveSOFDataFactionPlaneSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveSOFDataFactionPlaneSet */ "./sof/faction/EveSOFDataFactionPlaneSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionPlaneSet", function() { return _EveSOFDataFactionPlaneSet__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataFactionPlaneSet"]; });

/* harmony import */ var _EveSOFDataFactionSpotlightSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveSOFDataFactionSpotlightSet */ "./sof/faction/EveSOFDataFactionSpotlightSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionSpotlightSet", function() { return _EveSOFDataFactionSpotlightSet__WEBPACK_IMPORTED_MODULE_4__["EveSOFDataFactionSpotlightSet"]; });

/* harmony import */ var _EveSOFDataFactionVisibilityGroupSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveSOFDataFactionVisibilityGroupSet */ "./sof/faction/EveSOFDataFactionVisibilityGroupSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionVisibilityGroupSet", function() { return _EveSOFDataFactionVisibilityGroupSet__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataFactionVisibilityGroupSet"]; });








/***/ }),

/***/ "./sof/generic/EveSOFDataGeneric.js":
/*!******************************************!*\
  !*** ./sof/generic/EveSOFDataGeneric.js ***!
  \******************************************/
/*! exports provided: EveSOFDataGeneric, ErrSOFAreaShaderNotFound, ErrSOFDecalShaderNotFound, ErrSOFMaterialPrefixNotFound, ErrSOFPatternMaterialPrefixNotFound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGeneric", function() { return EveSOFDataGeneric; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFAreaShaderNotFound", function() { return ErrSOFAreaShaderNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFDecalShaderNotFound", function() { return ErrSOFDecalShaderNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFMaterialPrefixNotFound", function() { return ErrSOFMaterialPrefixNotFound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFPatternMaterialPrefixNotFound", function() { return ErrSOFPatternMaterialPrefixNotFound; });
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core */ "./core/index.js");
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! global/util */ "./global/util/index.js");


/**
 * EveSOFDataGeneric
 *
 * @property {String} areaShaderLocation                               -
 * @property {Array.<EveSOFDataGenericShader>} areaShaders             -
 * @property {EveSOFDataGenericShader} bannerShader                    -
 * @property {EveSOFDataGenericDamage} damage                          -
 * @property {String} decalShaderLocation                              -
 * @property {Array.<EveSOFDataGenericDecalShader>} decalShaders       -
 * @property {EveSOFDataAreaMaterial} genericWreckMaterial             -
 * @property {EveSOFDataGenericHullDamage} hullDamage                  -
 * @property {Array.<EveSOFDataGenericString>} materialPrefixes        -
 * @property {Array.<EveSOFDataGenericString>} patternMaterialPrefixes -
 * @property {String} resPathDefaultAlliance                           -
 * @property {String} resPathDefaultCeo                                -
 * @property {String} resPathDefaultCorp                               -
 * @property {String} shaderPrefixAnimated                             -
 * @property {EveSOFDataGenericSwarm} swarm                            -
 * @property {Array.<EveSOFDataGenericVariant>} variants               -
 */

class EveSOFDataGeneric {
  constructor() {
    this.areaShaderLocation = "";
    this.areaShaders = [];
    this.bannerShader = null;
    this.damage = null;
    this.decalShaderLocation = "";
    this.decalShaders = [];
    this.genericWreckMaterial = null;
    this.hullDamage = null;
    this.materialPrefixes = [];
    this.patternMaterialPrefixes = [];
    this.resPathDefaultAlliance = "";
    this.resPathDefaultCeo = "";
    this.resPathDefaultCorp = "";
    this.shaderPrefixAnimated = "";
    this.swarm = null;
    this.variants = [];
  }

  /**
   * Creates an effect from a sof shader
   * @param {*|EveSOFDataGenericShader|EveSOFDataGenericDecalShader} shader
   * @param {Boolean} [isAnimated]
   * @param {*} [assignable]
   * @returns {Tw2Effect}
   */
  CreateEffect(shader, isAnimated, assignable) {
    const parameters = {},
          textures = {},
          overrides = {},
          effectFilePath = this.GetShaderPath(shader.shader || shader.effectFilePath, isAnimated);

    function assignObject(dest, src) {
      if (!src) return; // Sof object array

      if (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["isArray"])(src)) {
        src.forEach(child => child.Assign(dest));
      } // Plain object
      else if (Object(global_util__WEBPACK_IMPORTED_MODULE_1__["isPlain"])(src)) {
          Object.assign(dest, src);
        }
    }

    assignObject(parameters, shader.defaultParameters);
    assignObject(textures, shader.defaultTextures);

    if (assignable) {
      assignObject(parameters, assignable.parameters);
      assignObject(textures, assignable.textures);
      assignObject(overrides, assignable.overrides);
    }

    return core__WEBPACK_IMPORTED_MODULE_0__["Tw2Effect"].from({
      effectFilePath,
      parameters,
      textures,
      overrides
    });
  }
  /**
   * Gets a shader's prefix
   * @param {Boolean} [isAnimated]
   * @returns {String}
   */


  GetShaderPrefix(isAnimated) {
    return isAnimated ? this.shaderPrefixAnimated : "";
  }
  /**
   * Gets a shader's full path
   * @param {String} shader
   * @param {Boolean} [isAnimated]
   * @returns {string}
   */


  GetShaderPath(shader, isAnimated) {
    const prefix = this.GetShaderPrefix(isAnimated);
    if (shader.charAt(0) !== "/") shader += "/";
    const index = shader.lastIndexOf("/");
    return shader.substring(0, index + 1) + prefix + shader.substring(index + 1);
  }
  /**
   * Checks if an area shader exists
   * @param {String} name
   * @returns {boolean}
   */


  HasAreaShader(name) {
    return !!Object(global_util__WEBPACK_IMPORTED_MODULE_1__["findElementByPropertyValue"])(this.areaShaders, "name", name);
  }
  /**
   * Gets area shader by it's short name
   * @param {String} name
   * @returns {null|EveSOFDataGenericShader}
   */


  GetAreaShader(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_1__["findElementByPropertyValue"])(this.areaShaders, "name", name, ErrSOFAreaShaderNotFound);
  }
  /**
   * Checks if a decal shader exists
   * @param {String} name
   * @returns {boolean}
   */


  HasDecalShader(name) {
    return !!Object(global_util__WEBPACK_IMPORTED_MODULE_1__["findElementByPropertyValue"])(this.decalShaders, "name", name);
  }
  /**
   * Gets a decal shader by it's short name
   * @param {String} name
   * @returns {null|EveSOFDataGenericShader}
   */


  GetDecalShader(name) {
    return Object(global_util__WEBPACK_IMPORTED_MODULE_1__["findElementByPropertyValue"])(this.decalShaders, "name", name, ErrSOFDecalShaderNotFound);
  }
  /**
   * Gets material prefixes
   * @returns {Array<String>}
   */


  GetMaterialPrefixes() {
    const out = [];

    for (let i = 0; i < this.materialPrefixes.length; i++) {
      out.push(this.materialPrefixes[i].str);
    }

    return out;
  }
  /**
   * Gets pattern material prefixes
   * @returns {Array<String>}
   */


  GetPatternMaterialPrefixes() {
    const out = [];

    for (let i = 0; i < this.patternMaterialPrefixes.length; i++) {
      out.push(this.patternMaterialPrefixes[i].str);
    }

    return out;
  }
  /**
   * Gets a material prefix by it's index
   * @param {Number} index
   * @returns {String}
   */


  GetMaterialPrefix(index) {
    let offByOne = index - 1;

    if (this.materialPrefixes[offByOne] === undefined) {
      throw new ErrSOFMaterialPrefixNotFound({
        index
      });
    }

    return this.materialPrefixes[offByOne].str;
  }
  /**
   * Gets a pattern material prefix by it's index
   * @param {Number} index
   * @returns {String}
   */


  GetPatternMaterialPrefix(index) {
    let offByOne = index - 1;

    if (this.patternMaterialPrefixes[offByOne] === undefined) {
      throw new ErrSOFPatternMaterialPrefixNotFound({
        index
      });
    }

    return this.patternMaterialPrefixes[offByOne].str;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["areaShaderLocation", r.path], ["areaShaders", r.array], ["bannerShader", r.rawObject], ["decalShaderLocation", r.path], ["decalShaders", r.array], ["damage", r.object], ["genericWreckMaterial", r.object], ["hullAreas", r.array], ["hullDamage", r.object], ["materialPrefixes", r.array], ["patternMaterialPrefixes", r.array], ["resPathDefaultAlliance", r.path], ["resPathDefaultCeo", r.path], ["resPathDefaultCorp", r.path], ["shaderPrefixAnimated", r.string], ["swarm", r.object], ["variants", r.array]];
  }

}
/**
 * Fires when a sof area shader is not found
 */

class ErrSOFAreaShaderNotFound extends core__WEBPACK_IMPORTED_MODULE_0__["Tw2Error"] {
  constructor(data) {
    super(data, "SOF Area shader not found: %name%");
  }

}
/**
 * Fires when a sof decal shader is not found
 */

class ErrSOFDecalShaderNotFound extends core__WEBPACK_IMPORTED_MODULE_0__["Tw2Error"] {
  constructor(data) {
    super(data, "SOF Decal area shader not found: %name%");
  }

}
/**
 * Fires when a sof material prefix is not found
 */

class ErrSOFMaterialPrefixNotFound extends core__WEBPACK_IMPORTED_MODULE_0__["Tw2Error"] {
  constructor(data) {
    super(data, "SOF Material prefix index not found: %index%");
  }

}
/**
 * Fires when a sof pattern material prefix is not found
 */

class ErrSOFPatternMaterialPrefixNotFound extends core__WEBPACK_IMPORTED_MODULE_0__["Tw2Error"] {
  constructor(data) {
    super(data, "SOF Pattern material prefix index not found: %index%");
  }

}

/***/ }),

/***/ "./sof/generic/EveSOFDataGenericDamage.js":
/*!************************************************!*\
  !*** ./sof/generic/EveSOFDataGenericDamage.js ***!
  \************************************************/
/*! exports provided: EveSOFDataGenericDamage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericDamage", function() { return EveSOFDataGenericDamage; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataGenericDamage
 *
 * @property {Number} armorParticleAngle                   -
 * @property {vec4} armorParticleColor0                    -
 * @property {vec4} armorParticleColor1                    -
 * @property {vec4} armorParticleColor2                    -
 * @property {vec4} armorParticleColor3                    -
 * @property {Number} armorParticleDrag                    -
 * @property {vec2} armorParticleMinMaxLifeTime            -
 * @property {vec2} armorParticleMinMaxSpeed               -
 * @property {Number} armorParticleRate                    -
 * @property {vec4} armorParticleSizes                     -
 * @property {Number} armorParticleTextureIndex            -
 * @property {Number} armorParticleTurbulenceAmplitude     -
 * @property {Number} armorParticleTurbulenceFrequency     -
 * @property {Number} armorParticleVelocityStretchRotation -
 * @property {String} armorShader                          -
 * @property {Number} flickerPerlinAlpha                   -
 * @property {Number} flickerPerlinBeta                    -
 * @property {Number} flickerPerlinN                       -
 * @property {Number} flickerPerlinSpeed                   -
 * @property {String} shieldGeometryResFilePath            -
 * @property {String} shieldShaderEllipsoid                -
 * @property {String} shieldShaderHull                     -
 */

class EveSOFDataGenericDamage {
  constructor() {
    this.armorParticleAngle = 0;
    this.armorParticleColor0 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.armorParticleColor1 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.armorParticleColor2 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.armorParticleColor3 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.armorParticleDrag = 0;
    this.armorParticleMinMaxLifeTime = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.armorParticleMinMaxSpeed = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.armorParticleRate = 0;
    this.armorParticleSizes = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.armorParticleTextureIndex = 0;
    this.armorParticleTurbulenceAmplitude = 0;
    this.armorParticleTurbulenceFrequency = 0;
    this.armorParticleVelocityStretchRotation = 0;
    this.armorShader = "";
    this.flickerPerlinAlpha = 0;
    this.flickerPerlinBeta = 0;
    this.flickerPerlinN = 0;
    this.flickerPerlinSpeed = 0;
    this.shieldGeometryResFilePath = "";
    this.shieldShaderEllipsoid = "";
    this.shieldShaderHull = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["armorParticleAngle", r.float], ["armorParticleColor0", r.vector4], ["armorParticleColor1", r.vector4], ["armorParticleColor2", r.vector4], ["armorParticleColor3", r.vector4], ["armorParticleDrag", r.float], ["armorParticleMinMaxLifeTime", r.vector2], ["armorParticleMinMaxSpeed", r.vector2], ["armorParticleRate", r.float], ["armorParticleSizes", r.vector4], ["armorParticleTurbulenceAmplitude", r.float], ["armorParticleTurbulenceFrequency", r.float], ["armorParticleVelocityStretchRotation", r.float], ["armorParticleTextureIndex", r.uint], ["armorShader", r.string], ["flickerPerlinAlpha", r.float], ["flickerPerlinBeta", r.float], ["flickerPerlinSpeed", r.float], ["flickerPerlinN", r.uint], ["shieldGeometryResFilePath", r.path], ["shieldShaderEllipsoid", r.string], ["shieldShaderHull", r.string]];
  }

}

/***/ }),

/***/ "./sof/generic/EveSOFDataGenericDecalShader.js":
/*!*****************************************************!*\
  !*** ./sof/generic/EveSOFDataGenericDecalShader.js ***!
  \*****************************************************/
/*! exports provided: EveSOFDataGenericDecalShader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericDecalShader", function() { return EveSOFDataGenericDecalShader; });
/**
 * EveSOFDataGenericDecalShader
 *
 * @property {Array.<EveSOFDataParameter>} defaultParameters  -
 * @property {Array.<EveSOFDataTexture>} defaultTextures      -
 * @property {Array.<EveSOFDataGenericString>} parameters     -
 * @property {Array.<EveSOFDataGenericString>} parentTextures -
 * @property {String} shader                                  -
 */
class EveSOFDataGenericDecalShader {
  constructor() {
    this.defaultTextures = [];
    this.parameters = [];
    this.parentTextures = [];
    this.shader = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["defaultTextures", r.array], ["parameters", r.array], ["parentTextures", r.array], ["shader", r.string]];
  }

}

/***/ }),

/***/ "./sof/generic/EveSOFDataGenericHullDamage.js":
/*!****************************************************!*\
  !*** ./sof/generic/EveSOFDataGenericHullDamage.js ***!
  \****************************************************/
/*! exports provided: EveSOFDataGenericHullDamage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericHullDamage", function() { return EveSOFDataGenericHullDamage; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataGenericHullDamage
 *
 * @property {Number} hullParticleAngle               -
 * @property {vec4} hullParticleColor0                -
 * @property {vec4} hullParticleColor1                -
 * @property {vec4} hullParticleColor2                -
 * @property {Number} hullParticleColorMidpoint       -
 * @property {Number} hullParticleDrag                -
 * @property {vec2} hullParticleMinMaxLifeTime        -
 * @property {vec2} hullParticleMinMaxSpeed           -
 * @property {Number} hullParticleRate                -
 * @property {vec4} hullParticleSizes                 -
 * @property {Number} hullParticleTextureIndex        -
 * @property {Number} hullParticleTurbulenceAmplitude -
 * @property {Number} hullParticleTurbulenceFrequency -
 */

class EveSOFDataGenericHullDamage {
  constructor() {
    this.hullParticleAngle = 0;
    this.hullParticleColor0 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.hullParticleColor1 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.hullParticleColor2 = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.hullParticleColorMidpoint = 0;
    this.hullParticleDrag = 0;
    this.hullParticleMinMaxLifeTime = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.hullParticleMinMaxSpeed = global__WEBPACK_IMPORTED_MODULE_0__["vec2"].create();
    this.hullParticleRate = 0;
    this.hullParticleSizes = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.hullParticleTextureIndex = 0;
    this.hullParticleTurbulenceAmplitude = 0;
    this.hullParticleTurbulenceFrequency = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["hullParticleAngle", r.float], ["hullParticleColor0", r.vector4], ["hullParticleColor1", r.vector4], ["hullParticleColor2", r.vector4], ["hullParticleColorMidpoint", r.float], ["hullParticleDrag", r.float], ["hullParticleMinMaxLifeTime", r.vector2], ["hullParticleMinMaxSpeed", r.vector2], ["hullParticleRate", r.float], ["hullParticleSizes", r.vector4], ["hullParticleTurbulenceAmplitude", r.float], ["hullParticleTurbulenceFrequency", r.float], ["hullParticleTextureIndex", r.uint]];
  }

}

/***/ }),

/***/ "./sof/generic/EveSOFDataGenericShader.js":
/*!************************************************!*\
  !*** ./sof/generic/EveSOFDataGenericShader.js ***!
  \************************************************/
/*! exports provided: EveSOFDataGenericShader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericShader", function() { return EveSOFDataGenericShader; });
/**
 * EveSOFDataGenericShader
 *
 * @property {Array.<EveSOFDataParameter>} defaultParameters -
 * @property {Array.<EveSOFDataTexture>} defaultTextures     -
 * @property {Boolean} doGenerateDepthArea                   -
 * @property {Array.<EveSOFDataGenericString>} parameters    -
 * @property {String} shader                                 -
 * @property {Array.<EveSOFData
 * @property {String} transparencyTextureName                -
 */
class EveSOFDataGenericShader {
  constructor() {
    this.defaultParameters = [];
    this.defaultTextures = [];
    this.doGenerateDepthArea = false;
    this.parameters = [];
    this.shader = "";
    this.transparencyTextureName = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["defaultParameters", r.array], ["defaultTextures", r.array], ["doGenerateDepthArea", r.boolean], ["parameters", r.array], ["shader", r.path], ["transparencyTextureName", r.string]];
  }

}

/***/ }),

/***/ "./sof/generic/EveSOFDataGenericString.js":
/*!************************************************!*\
  !*** ./sof/generic/EveSOFDataGenericString.js ***!
  \************************************************/
/*! exports provided: EveSOFDataGenericString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericString", function() { return EveSOFDataGenericString; });
/**
 * EveSOFDataGenericString
 *
 * @property {String} str -
 */
class EveSOFDataGenericString {
  constructor() {
    this.str = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["str", r.string]];
  }

}

/***/ }),

/***/ "./sof/generic/EveSOFDataGenericSwarm.js":
/*!***********************************************!*\
  !*** ./sof/generic/EveSOFDataGenericSwarm.js ***!
  \***********************************************/
/*! exports provided: EveSOFDataGenericSwarm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericSwarm", function() { return EveSOFDataGenericSwarm; });
/**
 * EveSOFDataGenericSwarm
 *
 * @property {Number} formationDistance  -
 * @property {Number} maxDeceleration    -
 * @property {Number} maxDistance0       -
 * @property {Number} separationDistance -
 * @property {Number} wanderDistance     -
 * @property {Number} wanderFluctuation  -
 * @property {Number} wanderRadius       -
 * @property {Number} weightAlign        -
 * @property {Number} weightAnchor       -
 * @property {Number} weightCohesion     -
 * @property {Number} weightDeceleration -
 * @property {Number} weightFormation    -
 * @property {Number} weightSeparation   -
 */
class EveSOFDataGenericSwarm {
  constructor() {
    this.formationDistance = 0;
    this.maxDeceleration = 0;
    this.maxDistance0 = 0;
    this.separationDistance = 0;
    this.wanderDistance = 0;
    this.wanderFluctuation = 0;
    this.wanderRadius = 0;
    this.weightAlign = 0;
    this.weightAnchor = 0;
    this.weightCohesion = 0;
    this.weightDeceleration = 0;
    this.weightFormation = 0;
    this.weightSeparation = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["formationDistance", r.float], ["maxDistance0", r.float], ["maxDeceleration", r.float], ["separationDistance", r.float], ["wanderDistance", r.float], ["wanderFluctuation", r.float], ["wanderRadius", r.float], ["weightAlign", r.float], ["weightAnchor", r.float], ["weightCohesion", r.float], ["weightDeceleration", r.float], ["weightFormation", r.float], ["weightSeparation", r.float]];
  }

}

/***/ }),

/***/ "./sof/generic/EveSOFDataGenericVariant.js":
/*!*************************************************!*\
  !*** ./sof/generic/EveSOFDataGenericVariant.js ***!
  \*************************************************/
/*! exports provided: EveSOFDataGenericVariant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericVariant", function() { return EveSOFDataGenericVariant; });
/**
 * EveSOFDataGenericVariant
 *
 * @property {String} name                 -
 * @property {EveSOFDataHullArea} hullArea -
 * @property {Boolean} isTransparent       -
 */
class EveSOFDataGenericVariant {
  constructor() {
    this.name = "";
    this.hullArea = null;
    this.isTransparent = false;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["hullArea", r.object], ["isTransparent", r.boolean], ["name", r.string]];
  }

}

/***/ }),

/***/ "./sof/generic/index.js":
/*!******************************!*\
  !*** ./sof/generic/index.js ***!
  \******************************/
/*! exports provided: EveSOFDataGeneric, ErrSOFAreaShaderNotFound, ErrSOFDecalShaderNotFound, ErrSOFMaterialPrefixNotFound, ErrSOFPatternMaterialPrefixNotFound, EveSOFDataGenericDamage, EveSOFDataGenericDecalShader, EveSOFDataGenericHullDamage, EveSOFDataGenericShader, EveSOFDataGenericString, EveSOFDataGenericSwarm, EveSOFDataGenericVariant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveSOFDataGeneric__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveSOFDataGeneric */ "./sof/generic/EveSOFDataGeneric.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGeneric", function() { return _EveSOFDataGeneric__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataGeneric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFAreaShaderNotFound", function() { return _EveSOFDataGeneric__WEBPACK_IMPORTED_MODULE_0__["ErrSOFAreaShaderNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFDecalShaderNotFound", function() { return _EveSOFDataGeneric__WEBPACK_IMPORTED_MODULE_0__["ErrSOFDecalShaderNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFMaterialPrefixNotFound", function() { return _EveSOFDataGeneric__WEBPACK_IMPORTED_MODULE_0__["ErrSOFMaterialPrefixNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFPatternMaterialPrefixNotFound", function() { return _EveSOFDataGeneric__WEBPACK_IMPORTED_MODULE_0__["ErrSOFPatternMaterialPrefixNotFound"]; });

/* harmony import */ var _EveSOFDataGenericDamage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveSOFDataGenericDamage */ "./sof/generic/EveSOFDataGenericDamage.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericDamage", function() { return _EveSOFDataGenericDamage__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericDamage"]; });

/* harmony import */ var _EveSOFDataGenericDecalShader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveSOFDataGenericDecalShader */ "./sof/generic/EveSOFDataGenericDecalShader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericDecalShader", function() { return _EveSOFDataGenericDecalShader__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataGenericDecalShader"]; });

/* harmony import */ var _EveSOFDataGenericHullDamage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveSOFDataGenericHullDamage */ "./sof/generic/EveSOFDataGenericHullDamage.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericHullDamage", function() { return _EveSOFDataGenericHullDamage__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataGenericHullDamage"]; });

/* harmony import */ var _EveSOFDataGenericShader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveSOFDataGenericShader */ "./sof/generic/EveSOFDataGenericShader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericShader", function() { return _EveSOFDataGenericShader__WEBPACK_IMPORTED_MODULE_4__["EveSOFDataGenericShader"]; });

/* harmony import */ var _EveSOFDataGenericString__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveSOFDataGenericString */ "./sof/generic/EveSOFDataGenericString.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericString", function() { return _EveSOFDataGenericString__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataGenericString"]; });

/* harmony import */ var _EveSOFDataGenericSwarm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveSOFDataGenericSwarm */ "./sof/generic/EveSOFDataGenericSwarm.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericSwarm", function() { return _EveSOFDataGenericSwarm__WEBPACK_IMPORTED_MODULE_6__["EveSOFDataGenericSwarm"]; });

/* harmony import */ var _EveSOFDataGenericVariant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EveSOFDataGenericVariant */ "./sof/generic/EveSOFDataGenericVariant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericVariant", function() { return _EveSOFDataGenericVariant__WEBPACK_IMPORTED_MODULE_7__["EveSOFDataGenericVariant"]; });










/***/ }),

/***/ "./sof/hull/EveSOFDataHull.js":
/*!************************************!*\
  !*** ./sof/hull/EveSOFDataHull.js ***!
  \************************************/
/*! exports provided: EveSOFDataHull */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHull", function() { return EveSOFDataHull; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHull
 *
 * @property {String} name                                        -
 * @property {Array.<EveSOFDataHullArea>} additiveAreas           -
 * @property {Array.<EveSOFDataHullAnimation>} animations         -
 * @property {vec3} audioPosition                                 -
 * @property {Array.<EveSOFDataHullBanner>} banners               -
 * @property {EveSOFDataHullBooster} booster                      -
 * @property {vec4} boundingSphere                                -
 * @property {Number} buildClass                                  -
 * @property {Boolean} castShadow                                 -
 * @property {String} category                                    -
 * @property {Array.<EveSOFDataHullChild>} children               -
 * @property {Array.<EveSOFDataHullController>} controllers       -
 * @property {Array.<EveSOFDataHullArea>} decalAreas              -
 * @property {Array.<EveSOFDataHullDecalSet>} decalSets           -
 * @property {EveSOFDataPatternPerHull} defaultPattern            -
 * @property {String} description                                 -
 * @property {Array.<EveSOFDataHullArea>} distortionAreas         -
 * @property {Boolean} enableDynamicBoundingSphere                -
 * @property {String} geometryResFilePath                         -
 * @property {Array.<EveSOFDataHullHazeSet>} hazeSets             -
 * @property {Array.<EveSOFDataHullDecalSet>} hullDecals          -
 * @property {Number} impactEffectType                            -
 * @property {Array.<EveSOFDataInstancedMesh>} instancedMeshes    -
 * @property {Boolean} isSkinned                                  -
 * @property {Array.<EveSOFDataHullLightSet>} lightSets           -
 * @property {Array.<EveSOFDataHullLocatorSet>} locatorSets       -
 * @property {Array.<EveSOFDataHullLocator>} locatorTurrets       -
 * @property {String} modelRotationCurvePath                      -
 * @property {Array.<EveSOFDataHullArea>} opaqueAreas             -
 * @property {Array.<EveSOFDataHullPlaneSet>} planeSets           -
 * @property {vec3} shapeEllipsoidCenter                          -
 * @property {vec3} shapeEllipsoidRadius                          -
 * @property {Array.<EveSOFDataHullSoundEmitter>} soundEmitters   -
 * @property {Array.<EveSOFDataHullSpotlightSet>} spotlightSets   -
 * @property {Array.<EveSOFDataHullSpriteLineSet>} spriteLineSets -
 * @property {Array.<EveSOFDataHullSpriteSet>} spriteSets         -
 * @property {Array.<EveSOFDataHullArea>} transparentAreas        -
 */

class EveSOFDataHull {
  constructor() {
    this.name = "";
    this.additiveAreas = [];
    this.animations = [];
    this.audioPosition = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.banners = [];
    this.booster = null;
    this.boundingSphere = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.buildClass = 0;
    this.castShadow = false;
    this.category = "";
    this.children = [];
    this.controllers = [];
    this.decalAreas = [];
    this.decalSets = [];
    this.defaultPattern = null;
    this.description = "";
    this.distortionAreas = [];
    this.enableDynamicBoundingSphere = false;
    this.geometryResFilePath = "";
    this.hazeSets = [];
    this.hullDecals = [];
    this.impactEffectType = 0;
    this.instancedMeshes = [];
    this.isSkinned = false;
    this.lightSets = [];
    this.locatorSets = [];
    this.locatorTurrets = [];
    this.modelRotationCurvePath = "";
    this.opaqueAreas = [];
    this.planeSets = [];
    this.shapeEllipsoidCenter = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.shapeEllipsoidRadius = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.soundEmitters = [];
    this.spotlightSets = [];
    this.spriteLineSets = [];
    this.spriteSets = [];
    this.transparentAreas = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["additiveAreas", r.array], ["animations", r.array], ["audioPosition", r.vector3], ["banners", r.array], ["booster", r.object], ["boundingSphere", r.vector4], ["buildClass", r.uint], ["castShadow", r.boolean], ["category", r.string], ["children", r.array], ["controllers", r.array], ["decalAreas", r.array], ["decalSets", r.array], ["defaultPattern", r.object], ["depthAreas", r.array], ["description", r.string], ["distortionAreas", r.array], ["enableDynamicBoundingSphere", r.boolean], ["geometryResFilePath", r.path], ["hazeSets", r.array], ["hullDecals", r.array], ["impactEffectType", r.uint], ["instancedMeshes", r.array], ["isSkinned", r.boolean], ["lightSets", r.array], ["locatorSets", r.array], ["locatorTurrets", r.array], ["name", r.string], ["opaqueAreas", r.array], ["planeSets", r.array], ["modelRotationCurvePath", r.string], ["shapeEllipsoidCenter", r.vector3], ["shapeEllipsoidRadius", r.vector3], ["soundEmitters", r.array], ["spotlightSets", r.array], ["spriteLineSets", r.array], ["spriteSets", r.array], ["transparentAreas", r.array]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullAnimation.js":
/*!*********************************************!*\
  !*** ./sof/hull/EveSOFDataHullAnimation.js ***!
  \*********************************************/
/*! exports provided: EveSOFDataHullAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullAnimation", function() { return EveSOFDataHullAnimation; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullAnimation
 *
 * @property {String} name              -
 * @property {Number} endRate           -
 * @property {Number} endRotationTime   -
 * @property {quat} endRotationValue    -
 * @property {Number} id                -
 * @property {Number} startRate         -
 * @property {Number} startRotationTime -
 * @property {quat} startRotationValue  -
 */

class EveSOFDataHullAnimation {
  constructor() {
    this.name = "";
    this.endRate = 0;
    this.endRotationTime = 0;
    this.endRotationValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.id = 0;
    this.startRate = 0;
    this.startRotationTime = 0;
    this.startRotationValue = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["endRate", r.float], ["endRotationTime", r.float], ["endRotationValue", r.vector4], ["id", r.uint], ["name", r.string], ["startRate", r.float], ["startRotationTime", r.float], ["startRotationValue", r.vector4]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullArea.js":
/*!****************************************!*\
  !*** ./sof/hull/EveSOFDataHullArea.js ***!
  \****************************************/
/*! exports provided: EveSOFDataHullArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullArea", function() { return EveSOFDataHullArea; });
/**
 * EveSOFDataHullArea
 *
 * @property {String} name                            -
 * @property {Number} areaType                        -
 * @property {Number} blockedMaterials                -
 * @property {Number} count                           -
 * @property {Number} index                           -
 * @property {Array.<EveSOFDataParameter>} parameters -
 * @property {String} shader                          -
 * @property {Array.<EveSOFDataTexture>} textures     -
 */
class EveSOFDataHullArea {
  constructor() {
    this.name = "";
    this.areaType = 0;
    this.blockedMaterials = 0;
    this.count = 0;
    this.index = 0;
    this.parameters = [];
    this.shader = "";
    this.textures = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["areaType", r.uint], ["blockedMaterials", r.uint], ["count", r.uint], ["index", r.uint], ["name", r.string], ["parameters", r.array], ["shader", r.string], ["textures", r.array]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullBanner.js":
/*!******************************************!*\
  !*** ./sof/hull/EveSOFDataHullBanner.js ***!
  \******************************************/
/*! exports provided: EveSOFDataHullBanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBanner", function() { return EveSOFDataHullBanner; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullBanner
 *
 * @property {String} name      -
 * @property {Number} angleX    -
 * @property {Number} angleY    -
 * @property {Number} boneIndex -
 * @property {vec3} position    -
 * @property {quat} rotation    -
 * @property {vec3} scaling     -
 * @property {Number} usage     -
 */

class EveSOFDataHullBanner {
  constructor() {
    this.name = "";
    this.angleX = 0;
    this.angleY = 0;
    this.boneIndex = -1;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.usage = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["angleX", r.float], ["angleY", r.float], ["angleZ", r.float], ["boneIndex", r.uint], ["name", r.string], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3], ["usage", r.uint]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullBooster.js":
/*!*******************************************!*\
  !*** ./sof/hull/EveSOFDataHullBooster.js ***!
  \*******************************************/
/*! exports provided: EveSOFDataHullBooster */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBooster", function() { return EveSOFDataHullBooster; });
/**
 * EveSOFDataHullBooster
 *
 * @property {Boolean} alwaysOn                        -
 * @property {Boolean} hasTrails                       -
 * @property {Array.<EveSOFDataHullBoosterItem>} items -
 */
class EveSOFDataHullBooster {
  constructor() {
    this.alwaysOn = false;
    this.hasTrails = false;
    this.items = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["alwaysOn", r.boolean], ["hasTrails", r.boolean], ["items", r.array]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullBoosterItem.js":
/*!***********************************************!*\
  !*** ./sof/hull/EveSOFDataHullBoosterItem.js ***!
  \***********************************************/
/*! exports provided: EveSOFDataHullBoosterItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBoosterItem", function() { return EveSOFDataHullBoosterItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullBoosterItem
 *
 * @property {Number} atlasIndex0 -
 * @property {Number} atlasIndex1 -
 * @property {vec4} functionality -
 * @property {Boolean} hasTrail   -
 * @property {mat4} transform     -
 */

class EveSOFDataHullBoosterItem {
  constructor() {
    this.atlasIndex0 = 0;
    this.atlasIndex1 = 0;
    this.functionality = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.hasTrail = false;
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["atlasIndex0", r.uint], ["atlasIndex1", r.uint], ["functionality", r.vector4], ["hasTrail", r.boolean], ["transform", r.matrix]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullChild.js":
/*!*****************************************!*\
  !*** ./sof/hull/EveSOFDataHullChild.js ***!
  \*****************************************/
/*! exports provided: EveSOFDataHullChild */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullChild", function() { return EveSOFDataHullChild; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullChild
 *
 * @property {String} name             -
 * @property {Number} groupIndex       -
 * @property {Number} id               -
 * @property {Number} lowestLodVisible -
 * @property {String} redFilePath      -
 * @property {quat} rotation           -
 * @property {vec3} scaling            -
 * @property {vec3} translation        -
 */

class EveSOFDataHullChild {
  constructor() {
    this.name = "";
    this.groupIndex = -1;
    this.id = 0;
    this.lowestLodVisible = 0;
    this.redFilePath = "";
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.translation = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["groupIndex", r.uint], ["id", r.uint], ["lowestLodVisible", r.uint], ["name", r.string], ["redFilePath", r.path], ["rotation", r.vector4], ["scaling", r.vector3], ["translation", r.vector3]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullController.js":
/*!**********************************************!*\
  !*** ./sof/hull/EveSOFDataHullController.js ***!
  \**********************************************/
/*! exports provided: EveSOFDataHullController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullController", function() { return EveSOFDataHullController; });
/**
 * EveSOFDataHullController
 *
 * @property {String} path -
 */
class EveSOFDataHullController {
  constructor() {
    this.path = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["path", r.path]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullDecalSet.js":
/*!********************************************!*\
  !*** ./sof/hull/EveSOFDataHullDecalSet.js ***!
  \********************************************/
/*! exports provided: EveSOFDataHullDecalSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullDecalSet", function() { return EveSOFDataHullDecalSet; });
/**
 * EveSOFDataHullDecalSet
 * @ccp EveSOFDataHullDecalSet
 *
 * @property {String} name
 * @property {Array<EveSOFDataHullDecalSetItem>} items
 * @property {String} visibilityGroup
 */
class EveSOFDataHullDecalSet {
  constructor() {
    this.name = "";
    this.items = [];
    this.visibilityGroup = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["items", r.array], ["visibilityGroup", r.string]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullDecalSetItem.js":
/*!************************************************!*\
  !*** ./sof/hull/EveSOFDataHullDecalSetItem.js ***!
  \************************************************/
/*! exports provided: EveSOFDataHullDecalSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullDecalSetItem", function() { return EveSOFDataHullDecalSetItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullDecalSetItem
 * @ccp EveSOFDataHullDecalSetItem
 *
 * @property {String} name
 * @property {Number} boneIndex
 * @property {Number[]} indexBuffer
 * @property {Number} glowColorType
 * @property {Number} logoType
 * @property {Number} meshIndex
 * @property {Array<EveSOFDataParameter>} parameters
 * @property {vec3} position
 * @property {quat} rotation
 * @property {vec3} scaling
 * @property {Array<EveSOFDataTexture>} texture
 * @property {String} visibilityGroup
 */

class EveSOFDataHullDecalSetItem {
  constructor() {
    this.name = "";
    this.boneIndex = -1;
    this.indexBuffer = [];
    this.glowColorType = 0;
    this.logoType = 0;
    this.meshIndex = 0;
    this.parameters = [];
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.textures = [];
    this.usage = 0;
    this.visibilityGroup = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["boneIndex", r.uint], ["indexBuffer", r.indexBuffer], ["glowColorType", r.uint], ["logoType", r.uint], ["meshIndex", r.uint], ["parameters", r.array], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3], ["textures", r.array], ["usage", r.uint], ["visibilityGroup", r.string]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullHazeSet.js":
/*!*******************************************!*\
  !*** ./sof/hull/EveSOFDataHullHazeSet.js ***!
  \*******************************************/
/*! exports provided: EveSOFDataHullHazeSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullHazeSet", function() { return EveSOFDataHullHazeSet; });
/**
 * EveSOFDataHullHazeSet
 *
 * @property {String} name                             -
 * @property {Array.<EveSOFDataHullHazeSetItem>} items -
 * @property {Number} visibilityGroup                  -
 */
class EveSOFDataHullHazeSet {
  constructor() {
    this.name = "";
    this.items = [];
    this.visibilityGroup = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["items", r.array], ["name", r.string], ["visibilityGroup", r.string]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullHazeSetItem.js":
/*!***********************************************!*\
  !*** ./sof/hull/EveSOFDataHullHazeSetItem.js ***!
  \***********************************************/
/*! exports provided: EveSOFDataHullHazeSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullHazeSetItem", function() { return EveSOFDataHullHazeSetItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullHazeSetItem
 *
 * @property {Boolean} boosterGainInfluence -
 * @property {Number} colorType             -
 * @property {Number} hazeBrightness        -
 * @property {Number} hazeFalloff           -
 * @property {vec3} position                -
 * @property {quat} rotation                -
 * @property {vec3} scaling                 -
 * @property {Number} sourceBrightness      -
 * @property {Number} sourceSize            -
 */

class EveSOFDataHullHazeSetItem {
  constructor() {
    this.boosterGainInfluence = false;
    this.colorType = 0;
    this.hazeBrightness = 0;
    this.hazeFalloff = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.sourceBrightness = 0;
    this.sourceSize = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boosterGainInfluence", r.boolean], ["colorType", r.uint], ["hazeBrightness", r.float], ["hazeFalloff", r.float], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3], ["sourceBrightness", r.float], ["sourceSize", r.float]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullLightSet.js":
/*!********************************************!*\
  !*** ./sof/hull/EveSOFDataHullLightSet.js ***!
  \********************************************/
/*! exports provided: EveSOFDataHullLightSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSet", function() { return EveSOFDataHullLightSet; });
/**
 * EveSOFDataHullLightSet
 * @ccp EveSOFDataHullLightSet
 *
 * @property {String} name
 * @property {Array<EveSOFDataHullLightSetItem>} items
 */
class EveSOFDataHullLightSet {
  constructor() {
    this.name = "";
    this.items = [];
    this.visibilityGroup = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["items", r.array], ["visibilityGroup", r.string]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullLightSetItem.js":
/*!************************************************!*\
  !*** ./sof/hull/EveSOFDataHullLightSetItem.js ***!
  \************************************************/
/*! exports provided: EveSOFDataHullLightSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetItem", function() { return EveSOFDataHullLightSetItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullLightSetItem
 * @ccp EveSOFDataHullLightSetItem
 *
 * @property {String} name
 * @property {Number} brightness
 * @property {Number} innerRadius
 * @property {vec4} lightColor
 * @property {vec3} position
 * @property {Number} radius
 */

class EveSOFDataHullLightSetItem {
  constructor() {
    this.name = "";
    this.brightness = 0;
    this.innerRadius = 0;
    this.lightColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.noiseAmplitude = 0;
    this.noiseFrequency = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radius = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["brightness", r.float], ["innerRadius", r.float], ["lightColor", r.vector4], ["noiseAmplitude", r.float], ["noiseFrequency", r.float], ["position", r.vector3], ["radius", r.float]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullLightSetSpotLight.js":
/*!*****************************************************!*\
  !*** ./sof/hull/EveSOFDataHullLightSetSpotLight.js ***!
  \*****************************************************/
/*! exports provided: EveSOFDataHullLightSetSpotLight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetSpotLight", function() { return EveSOFDataHullLightSetSpotLight; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullLightSetSpotLight
 * @ccp EveSOFDataHullLightSetSpotLight
 *
 * @property {String} name
 * @property {Number} brightness
 * @property {Number} innerAngle
 * @property {Number} innerRadius
 * @property {vec4} lightColor
 * @property {Number} outerAngle
 * @property {vec3} position
 * @property {Number} radius
 * @property {quat} rotation
 */

class EveSOFDataHullLightSetSpotLight {
  constructor() {
    this.name = "";
    this.brightness = 0;
    this.innerAngle = 0;
    this.innerRadius = 0;
    this.lightColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.outerAngle = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radius = 0;
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["brightness", r.float], ["innerAngle", r.float], ["innerRadius", r.float], ["lightColor", r.color], ["outerAngle", r.float], ["position", r.vector3], ["radius", r.uint], ["rotation", r.vector4]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullLightSetTexturedPointLight.js":
/*!**************************************************************!*\
  !*** ./sof/hull/EveSOFDataHullLightSetTexturedPointLight.js ***!
  \**************************************************************/
/*! exports provided: EveSOFDataHullLightSetTexturedPointLight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetTexturedPointLight", function() { return EveSOFDataHullLightSetTexturedPointLight; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullLightSetTexturedPointLight
 * @ccp EveSOFDataHullLightSetTexturedPointLight
 *
 * @property {String} name
 * @property {Number} brightness
 * @property {vec3} position
 * @property {Number} radius
 * @property {String} texturePath
 */

class EveSOFDataHullLightSetTexturedPointLight {
  constructor() {
    this.name = "";
    this.brightness = 0;
    this.innerRadius = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.radius = 0;
    this.texturePath = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["brightness", r.float], ["innerRadius", r.float], ["position", r.vector3], ["radius", r.float], ["texturePath", r.path]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullLocator.js":
/*!*******************************************!*\
  !*** ./sof/hull/EveSOFDataHullLocator.js ***!
  \*******************************************/
/*! exports provided: EveSOFDataHullLocator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLocator", function() { return EveSOFDataHullLocator; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullLocator
 *
 * @property {String} name    -
 * @property {mat4} transform -
 */

class EveSOFDataHullLocator {
  constructor() {
    this.name = "";
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["transform", r.matrix]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullLocatorSet.js":
/*!**********************************************!*\
  !*** ./sof/hull/EveSOFDataHullLocatorSet.js ***!
  \**********************************************/
/*! exports provided: EveSOFDataHullLocatorSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLocatorSet", function() { return EveSOFDataHullLocatorSet; });
/**
 * EveSOFDataHullLocatorSet
 *
 * @property {String} name                          -
 * @property {Array.<EveSOFDataTransform>} locators -
 */
class EveSOFDataHullLocatorSet {
  constructor() {
    this.name = "";
    this.locators = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["locators", r.array]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullPlaneSet.js":
/*!********************************************!*\
  !*** ./sof/hull/EveSOFDataHullPlaneSet.js ***!
  \********************************************/
/*! exports provided: EveSOFDataHullPlaneSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullPlaneSet", function() { return EveSOFDataHullPlaneSet; });
/**
 * EveSOFDataHullPlaneSet
 *
 * @property {String} name                              -
 * @property {Number} atlasSize                         -
 * @property {Array.<EveSOFDataHullPlaneSetItem>} items -
 * @property {String} layer1MapResPath                  -
 * @property {String} layer2MapResPath                  -
 * @property {String} maskMapResPath                    -
 * @property {Boolean} skinned                          -
 * @property {Number} usage                             -
 */
class EveSOFDataHullPlaneSet {
  constructor() {
    this.name = "";
    this.atlasSize = 0;
    this.items = [];
    this.layer1MapResPath = "";
    this.layer2MapResPath = "";
    this.maskMapResPath = "";
    this.skinned = false;
    this.usage = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["atlasSize", r.uint], ["items", r.array], ["layer1MapResPath", r.path], ["layer2MapResPath", r.path], ["maskMapResPath", r.path], ["name", r.string], ["planeData", r.vector4], ["skinned", r.boolean], ["usage", r.uint]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullPlaneSetItem.js":
/*!************************************************!*\
  !*** ./sof/hull/EveSOFDataHullPlaneSetItem.js ***!
  \************************************************/
/*! exports provided: EveSOFDataHullPlaneSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullPlaneSetItem", function() { return EveSOFDataHullPlaneSetItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullPlaneSetItem
 *
 * @property {Number} boneIndex         -
 * @property {vec4} color               -
 * @property {Number} groupIndex        -
 * @property {vec4} layer1Scroll        -
 * @property {vec4} layer1Transform     -
 * @property {vec4} layer2Scroll        -
 * @property {vec4} layer2Transform     -
 * @property {Number} maskMapAtlasIndex -
 * @property {vec3} position            -
 * @property {quat} rotation            -
 * @property {vec3} scaling             -
 */

class EveSOFDataHullPlaneSetItem {
  constructor() {
    this.boneIndex = -1;
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.groupIndex = -1;
    this.layer1Scroll = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.layer1Transform = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.layer2Scroll = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.layer2Transform = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.maskMapAtlasIndex = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boneIndex", r.uint], ["color", r.vector4], ["groupIndex", r.uint], ["layer1Scroll", r.vector4], ["layer1Transform", r.vector4], ["layer2Scroll", r.vector4], ["layer2Transform", r.vector4], ["maskMapAtlasIndex", r.uint], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullSoundEmitter.js":
/*!************************************************!*\
  !*** ./sof/hull/EveSOFDataHullSoundEmitter.js ***!
  \************************************************/
/*! exports provided: EveSOFDataHullSoundEmitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSoundEmitter", function() { return EveSOFDataHullSoundEmitter; });
/**
 * EveSOFDataHullSoundEmitter
 *
 * @property {String} name   -
 * @property {String} prefix -
 */
class EveSOFDataHullSoundEmitter {
  constructor() {
    this.name = "";
    this.prefix = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["prefix", r.string]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullSpotlightSet.js":
/*!************************************************!*\
  !*** ./sof/hull/EveSOFDataHullSpotlightSet.js ***!
  \************************************************/
/*! exports provided: EveSOFDataHullSpotlightSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpotlightSet", function() { return EveSOFDataHullSpotlightSet; });
/**
 * EveSOFDataHullSpotlightSet
 *
 * @property {String} name                                  -
 * @property {String} coneTextureResPath                    -
 * @property {String} glowTextureResPath                    -
 * @property {Array.<EveSOFDataHullSpotlightSetItem>} items -
 * @property {Boolean} skinned                              -
 * @property {Number} zOffset                               -
 */
class EveSOFDataHullSpotlightSet {
  constructor() {
    this.name = "";
    this.coneTextureResPath = "";
    this.glowTextureResPath = "";
    this.items = [];
    this.skinned = false;
    this.zOffset = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["coneTextureResPath", r.path], ["glowTextureResPath", r.path], ["items", r.array], ["name", r.string], ["skinned", r.boolean], ["zOffset", r.float]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullSpotlightSetItem.js":
/*!****************************************************!*\
  !*** ./sof/hull/EveSOFDataHullSpotlightSetItem.js ***!
  \****************************************************/
/*! exports provided: EveSOFDataHullSpotlightSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpotlightSetItem", function() { return EveSOFDataHullSpotlightSetItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullSpotlightSetItem
 *
 * @property {Number} boneIndex             -
 * @property {Boolean} boosterGainInfluence -
 * @property {Number} coneIntensity         -
 * @property {Number} flareIntensity        -
 * @property {Number} groupIndex            -
 * @property {Number} spriteIntensity       -
 * @property {vec3} spriteScale             -
 * @property {mat4} transform               -
 */

class EveSOFDataHullSpotlightSetItem {
  constructor() {
    this.boneIndex = -1;
    this.boosterGainInfluence = false;
    this.coneIntensity = 0;
    this.flareIntensity = 0;
    this.groupIndex = -1;
    this.spriteIntensity = 0;
    this.spriteScale = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.transform = global__WEBPACK_IMPORTED_MODULE_0__["mat4"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boneIndex", r.uint], ["boosterGainInfluence", r.boolean], ["coneIntensity", r.float], ["flareIntensity", r.float], ["groupIndex", r.uint], ["spriteScale", r.vector3], ["spriteIntensity", r.float], ["transform", r.matrix]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullSpriteLineSet.js":
/*!*************************************************!*\
  !*** ./sof/hull/EveSOFDataHullSpriteLineSet.js ***!
  \*************************************************/
/*! exports provided: EveSOFDataHullSpriteLineSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteLineSet", function() { return EveSOFDataHullSpriteLineSet; });
/**
 * EveSOFDataHullSpriteLineSet
 *
 * @property {String} name                                   -
 * @property {Array.<EveSOFDataHullSpriteLineSetItem>} items -
 * @property {Boolean} skinned                               -
 * @property {String} visibilityGroup                        -
 */
class EveSOFDataHullSpriteLineSet {
  constructor() {
    this.name = "";
    this.items = [];
    this.skinned = false;
    this.visibilityGroup = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["items", r.array], ["name", r.string], ["skinned", r.boolean], ["visibilityGroup", r.string]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullSpriteLineSetItem.js":
/*!*****************************************************!*\
  !*** ./sof/hull/EveSOFDataHullSpriteLineSetItem.js ***!
  \*****************************************************/
/*! exports provided: EveSOFDataHullSpriteLineSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteLineSetItem", function() { return EveSOFDataHullSpriteLineSetItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullSpriteLineSetItem
 *
 * @property {Number} blinkPhase      -
 * @property {Number} blinkPhaseShift -
 * @property {Number} blinkRate       -
 * @property {Number} boneIndex       -
 * @property {Number} colorType       -
 * @property {Number} falloff         -
 * @property {Number} intensity       -
 * @property {Boolean} isCircle       -
 * @property {Number} maxScale        -
 * @property {Number} minScale        -
 * @property {vec3} position          -
 * @property {quat} rotation          -
 * @property {vec3} scaling           -
 * @property {Number} spacing         -
 */

class EveSOFDataHullSpriteLineSetItem {
  constructor() {
    this.blinkPhase = 0;
    this.blinkPhaseShift = 0;
    this.blinkRate = 0;
    this.boneIndex = -1;
    this.colorType = 0;
    this.falloff = 0;
    this.intensity = 0;
    this.isCircle = false;
    this.maxScale = 0;
    this.minScale = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
    this.spacing = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["blinkRate", r.float], ["blinkPhase", r.float], ["blinkPhaseShift", r.float], ["boneIndex", r.uint], ["colorType", r.uint], ["falloff", r.float], ["groupIndex", r.uint], ["intensity", r.float], ["isCircle", r.boolean], ["maxScale", r.float], ["minScale", r.float], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3], ["spacing", r.float]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullSpriteSet.js":
/*!*********************************************!*\
  !*** ./sof/hull/EveSOFDataHullSpriteSet.js ***!
  \*********************************************/
/*! exports provided: EveSOFDataHullSpriteSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteSet", function() { return EveSOFDataHullSpriteSet; });
/**
 * EveSOFDataHullSpriteSet
 *
 * @property {String} name                               -
 * @property {Array.<EveSOFDataHullSpriteSetItem>} items -
 * @property {Boolean} skinned                           -
 * @property {String} visibilityGroup                    -
 */
class EveSOFDataHullSpriteSet {
  constructor() {
    this.name = "";
    this.items = [];
    this.skinned = false;
    this.visibilityGroup = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["items", r.array], ["skinned", r.boolean], ["visibilityGroup", r.string]];
  }

}

/***/ }),

/***/ "./sof/hull/EveSOFDataHullSpriteSetItem.js":
/*!*************************************************!*\
  !*** ./sof/hull/EveSOFDataHullSpriteSetItem.js ***!
  \*************************************************/
/*! exports provided: EveSOFDataHullSpriteSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteSetItem", function() { return EveSOFDataHullSpriteSetItem; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataHullSpriteSetItem
 *
 * @property {Number} blinkPhase -
 * @property {Number} blinkRate  -
 * @property {Number} boneIndex  -
 * @property {Number} colorType  -
 * @property {Number} falloff    -
 * @property {Number} intensity  -
 * @property {Number} maxScale   -
 * @property {Number} minScale   -
 * @property {vec3} position     -
 */

class EveSOFDataHullSpriteSetItem {
  constructor() {
    this.blinkPhase = 0;
    this.blinkRate = 0;
    this.boneIndex = -1;
    this.colorType = 0;
    this.falloff = 0;
    this.intensity = 0;
    this.maxScale = 0;
    this.minScale = 0;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["blinkRate", r.float], ["blinkPhase", r.float], ["boneIndex", r.uint], ["colorType", r.uint], ["falloff", r.float], ["groupIndex", r.uint], ["intensity", r.float], ["maxScale", r.float], ["minScale", r.float], ["position", r.vector3]];
  }

}

/***/ }),

/***/ "./sof/hull/index.js":
/*!***************************!*\
  !*** ./sof/hull/index.js ***!
  \***************************/
/*! exports provided: EveSOFDataHull, EveSOFDataHullAnimation, EveSOFDataHullArea, EveSOFDataHullBanner, EveSOFDataHullBooster, EveSOFDataHullBoosterItem, EveSOFDataHullChild, EveSOFDataHullController, EveSOFDataHullDecalSet, EveSOFDataHullDecalSetItem, EveSOFDataHullHazeSet, EveSOFDataHullHazeSetItem, EveSOFDataHullLightSet, EveSOFDataHullLightSetItem, EveSOFDataHullLightSetSpotLight, EveSOFDataHullLightSetTexturedPointLight, EveSOFDataHullLocator, EveSOFDataHullLocatorSet, EveSOFDataHullPlaneSet, EveSOFDataHullPlaneSetItem, EveSOFDataHullSoundEmitter, EveSOFDataHullSpotlightSet, EveSOFDataHullSpotlightSetItem, EveSOFDataHullSpriteLineSet, EveSOFDataHullSpriteLineSetItem, EveSOFDataHullSpriteSet, EveSOFDataHullSpriteSetItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveSOFDataHull__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveSOFDataHull */ "./sof/hull/EveSOFDataHull.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHull", function() { return _EveSOFDataHull__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataHull"]; });

/* harmony import */ var _EveSOFDataHullAnimation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveSOFDataHullAnimation */ "./sof/hull/EveSOFDataHullAnimation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullAnimation", function() { return _EveSOFDataHullAnimation__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataHullAnimation"]; });

/* harmony import */ var _EveSOFDataHullArea__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveSOFDataHullArea */ "./sof/hull/EveSOFDataHullArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullArea", function() { return _EveSOFDataHullArea__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullArea"]; });

/* harmony import */ var _EveSOFDataHullBanner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveSOFDataHullBanner */ "./sof/hull/EveSOFDataHullBanner.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBanner", function() { return _EveSOFDataHullBanner__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataHullBanner"]; });

/* harmony import */ var _EveSOFDataHullBooster__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveSOFDataHullBooster */ "./sof/hull/EveSOFDataHullBooster.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBooster", function() { return _EveSOFDataHullBooster__WEBPACK_IMPORTED_MODULE_4__["EveSOFDataHullBooster"]; });

/* harmony import */ var _EveSOFDataHullBoosterItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveSOFDataHullBoosterItem */ "./sof/hull/EveSOFDataHullBoosterItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBoosterItem", function() { return _EveSOFDataHullBoosterItem__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataHullBoosterItem"]; });

/* harmony import */ var _EveSOFDataHullChild__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveSOFDataHullChild */ "./sof/hull/EveSOFDataHullChild.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullChild", function() { return _EveSOFDataHullChild__WEBPACK_IMPORTED_MODULE_6__["EveSOFDataHullChild"]; });

/* harmony import */ var _EveSOFDataHullController__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EveSOFDataHullController */ "./sof/hull/EveSOFDataHullController.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullController", function() { return _EveSOFDataHullController__WEBPACK_IMPORTED_MODULE_7__["EveSOFDataHullController"]; });

/* harmony import */ var _EveSOFDataHullDecalSet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EveSOFDataHullDecalSet */ "./sof/hull/EveSOFDataHullDecalSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullDecalSet", function() { return _EveSOFDataHullDecalSet__WEBPACK_IMPORTED_MODULE_8__["EveSOFDataHullDecalSet"]; });

/* harmony import */ var _EveSOFDataHullDecalSetItem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EveSOFDataHullDecalSetItem */ "./sof/hull/EveSOFDataHullDecalSetItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullDecalSetItem", function() { return _EveSOFDataHullDecalSetItem__WEBPACK_IMPORTED_MODULE_9__["EveSOFDataHullDecalSetItem"]; });

/* harmony import */ var _EveSOFDataHullHazeSet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EveSOFDataHullHazeSet */ "./sof/hull/EveSOFDataHullHazeSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullHazeSet", function() { return _EveSOFDataHullHazeSet__WEBPACK_IMPORTED_MODULE_10__["EveSOFDataHullHazeSet"]; });

/* harmony import */ var _EveSOFDataHullHazeSetItem__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./EveSOFDataHullHazeSetItem */ "./sof/hull/EveSOFDataHullHazeSetItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullHazeSetItem", function() { return _EveSOFDataHullHazeSetItem__WEBPACK_IMPORTED_MODULE_11__["EveSOFDataHullHazeSetItem"]; });

/* harmony import */ var _EveSOFDataHullLightSet__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./EveSOFDataHullLightSet */ "./sof/hull/EveSOFDataHullLightSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSet", function() { return _EveSOFDataHullLightSet__WEBPACK_IMPORTED_MODULE_12__["EveSOFDataHullLightSet"]; });

/* harmony import */ var _EveSOFDataHullLightSetItem__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./EveSOFDataHullLightSetItem */ "./sof/hull/EveSOFDataHullLightSetItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetItem", function() { return _EveSOFDataHullLightSetItem__WEBPACK_IMPORTED_MODULE_13__["EveSOFDataHullLightSetItem"]; });

/* harmony import */ var _EveSOFDataHullLightSetSpotLight__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./EveSOFDataHullLightSetSpotLight */ "./sof/hull/EveSOFDataHullLightSetSpotLight.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetSpotLight", function() { return _EveSOFDataHullLightSetSpotLight__WEBPACK_IMPORTED_MODULE_14__["EveSOFDataHullLightSetSpotLight"]; });

/* harmony import */ var _EveSOFDataHullLightSetTexturedPointLight__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./EveSOFDataHullLightSetTexturedPointLight */ "./sof/hull/EveSOFDataHullLightSetTexturedPointLight.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetTexturedPointLight", function() { return _EveSOFDataHullLightSetTexturedPointLight__WEBPACK_IMPORTED_MODULE_15__["EveSOFDataHullLightSetTexturedPointLight"]; });

/* harmony import */ var _EveSOFDataHullLocator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./EveSOFDataHullLocator */ "./sof/hull/EveSOFDataHullLocator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLocator", function() { return _EveSOFDataHullLocator__WEBPACK_IMPORTED_MODULE_16__["EveSOFDataHullLocator"]; });

/* harmony import */ var _EveSOFDataHullLocatorSet__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./EveSOFDataHullLocatorSet */ "./sof/hull/EveSOFDataHullLocatorSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLocatorSet", function() { return _EveSOFDataHullLocatorSet__WEBPACK_IMPORTED_MODULE_17__["EveSOFDataHullLocatorSet"]; });

/* harmony import */ var _EveSOFDataHullPlaneSet__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./EveSOFDataHullPlaneSet */ "./sof/hull/EveSOFDataHullPlaneSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullPlaneSet", function() { return _EveSOFDataHullPlaneSet__WEBPACK_IMPORTED_MODULE_18__["EveSOFDataHullPlaneSet"]; });

/* harmony import */ var _EveSOFDataHullPlaneSetItem__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./EveSOFDataHullPlaneSetItem */ "./sof/hull/EveSOFDataHullPlaneSetItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullPlaneSetItem", function() { return _EveSOFDataHullPlaneSetItem__WEBPACK_IMPORTED_MODULE_19__["EveSOFDataHullPlaneSetItem"]; });

/* harmony import */ var _EveSOFDataHullSoundEmitter__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./EveSOFDataHullSoundEmitter */ "./sof/hull/EveSOFDataHullSoundEmitter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSoundEmitter", function() { return _EveSOFDataHullSoundEmitter__WEBPACK_IMPORTED_MODULE_20__["EveSOFDataHullSoundEmitter"]; });

/* harmony import */ var _EveSOFDataHullSpotlightSet__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./EveSOFDataHullSpotlightSet */ "./sof/hull/EveSOFDataHullSpotlightSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpotlightSet", function() { return _EveSOFDataHullSpotlightSet__WEBPACK_IMPORTED_MODULE_21__["EveSOFDataHullSpotlightSet"]; });

/* harmony import */ var _EveSOFDataHullSpotlightSetItem__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./EveSOFDataHullSpotlightSetItem */ "./sof/hull/EveSOFDataHullSpotlightSetItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpotlightSetItem", function() { return _EveSOFDataHullSpotlightSetItem__WEBPACK_IMPORTED_MODULE_22__["EveSOFDataHullSpotlightSetItem"]; });

/* harmony import */ var _EveSOFDataHullSpriteLineSet__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./EveSOFDataHullSpriteLineSet */ "./sof/hull/EveSOFDataHullSpriteLineSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteLineSet", function() { return _EveSOFDataHullSpriteLineSet__WEBPACK_IMPORTED_MODULE_23__["EveSOFDataHullSpriteLineSet"]; });

/* harmony import */ var _EveSOFDataHullSpriteLineSetItem__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./EveSOFDataHullSpriteLineSetItem */ "./sof/hull/EveSOFDataHullSpriteLineSetItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteLineSetItem", function() { return _EveSOFDataHullSpriteLineSetItem__WEBPACK_IMPORTED_MODULE_24__["EveSOFDataHullSpriteLineSetItem"]; });

/* harmony import */ var _EveSOFDataHullSpriteSet__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./EveSOFDataHullSpriteSet */ "./sof/hull/EveSOFDataHullSpriteSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteSet", function() { return _EveSOFDataHullSpriteSet__WEBPACK_IMPORTED_MODULE_25__["EveSOFDataHullSpriteSet"]; });

/* harmony import */ var _EveSOFDataHullSpriteSetItem__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./EveSOFDataHullSpriteSetItem */ "./sof/hull/EveSOFDataHullSpriteSetItem.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteSetItem", function() { return _EveSOFDataHullSpriteSetItem__WEBPACK_IMPORTED_MODULE_26__["EveSOFDataHullSpriteSetItem"]; });





























/***/ }),

/***/ "./sof/index.js":
/*!**********************!*\
  !*** ./sof/index.js ***!
  \**********************/
/*! exports provided: EveSOFData, EveSOF, EveSOFDataFaction, EveSOFDataFactionChild, EveSOFDataFactionColorSet, EveSOFDataFactionPlaneSet, EveSOFDataFactionSpotlightSet, EveSOFDataFactionVisibilityGroupSet, EveSOFDataGeneric, ErrSOFAreaShaderNotFound, ErrSOFDecalShaderNotFound, ErrSOFMaterialPrefixNotFound, ErrSOFPatternMaterialPrefixNotFound, EveSOFDataGenericDamage, EveSOFDataGenericDecalShader, EveSOFDataGenericHullDamage, EveSOFDataGenericShader, EveSOFDataGenericString, EveSOFDataGenericSwarm, EveSOFDataGenericVariant, EveSOFDataHull, EveSOFDataHullAnimation, EveSOFDataHullArea, EveSOFDataHullBanner, EveSOFDataHullBooster, EveSOFDataHullBoosterItem, EveSOFDataHullChild, EveSOFDataHullController, EveSOFDataHullDecalSet, EveSOFDataHullDecalSetItem, EveSOFDataHullHazeSet, EveSOFDataHullHazeSetItem, EveSOFDataHullLightSet, EveSOFDataHullLightSetItem, EveSOFDataHullLightSetSpotLight, EveSOFDataHullLightSetTexturedPointLight, EveSOFDataHullLocator, EveSOFDataHullLocatorSet, EveSOFDataHullPlaneSet, EveSOFDataHullPlaneSetItem, EveSOFDataHullSoundEmitter, EveSOFDataHullSpotlightSet, EveSOFDataHullSpotlightSetItem, EveSOFDataHullSpriteLineSet, EveSOFDataHullSpriteLineSetItem, EveSOFDataHullSpriteSet, EveSOFDataHullSpriteSetItem, EveSOFDataPattern, ErrSOFProjectionNotFound, EveSOFDataPatternLayer, EveSOFDataPatternPerHull, EveSOFDataPatternTransform, EveSOFDataRace, EveSOFDataRaceDamage, EveSOFDataArea, EveSOFDataAreaMaterial, EveSOFDataBooster, EveSOFDataBoosterShape, EveSOFDataInstancedMesh, EveSOFDataLogo, EveSOFDataLogoSet, EveSOFDataMaterial, EveSOFDataParameter, EveSOFDataTexture, EveSOFDataTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _faction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./faction */ "./sof/faction/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFaction", function() { return _faction__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataFaction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionChild", function() { return _faction__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataFactionChild"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionColorSet", function() { return _faction__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataFactionColorSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionPlaneSet", function() { return _faction__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataFactionPlaneSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionSpotlightSet", function() { return _faction__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataFactionSpotlightSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataFactionVisibilityGroupSet", function() { return _faction__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataFactionVisibilityGroupSet"]; });

/* harmony import */ var _generic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generic */ "./sof/generic/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGeneric", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGeneric"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFAreaShaderNotFound", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["ErrSOFAreaShaderNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFDecalShaderNotFound", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["ErrSOFDecalShaderNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFMaterialPrefixNotFound", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["ErrSOFMaterialPrefixNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFPatternMaterialPrefixNotFound", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["ErrSOFPatternMaterialPrefixNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericDamage", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericDamage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericDecalShader", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericDecalShader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericHullDamage", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericHullDamage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericShader", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericShader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericString", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericSwarm", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericSwarm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataGenericVariant", function() { return _generic__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataGenericVariant"]; });

/* harmony import */ var _hull__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hull */ "./sof/hull/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHull", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullAnimation", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullAnimation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullArea", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBanner", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullBanner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBooster", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullBooster"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullBoosterItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullBoosterItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullChild", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullChild"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullController", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullController"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullDecalSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullDecalSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullDecalSetItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullDecalSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullHazeSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullHazeSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullHazeSetItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullHazeSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullLightSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullLightSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetSpotLight", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullLightSetSpotLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLightSetTexturedPointLight", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullLightSetTexturedPointLight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLocator", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullLocator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullLocatorSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullLocatorSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullPlaneSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullPlaneSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullPlaneSetItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullPlaneSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSoundEmitter", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullSoundEmitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpotlightSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullSpotlightSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpotlightSetItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullSpotlightSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteLineSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullSpriteLineSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteLineSetItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullSpriteLineSetItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteSet", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullSpriteSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataHullSpriteSetItem", function() { return _hull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataHullSpriteSetItem"]; });

/* harmony import */ var _pattern__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pattern */ "./sof/pattern/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPattern", function() { return _pattern__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataPattern"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFProjectionNotFound", function() { return _pattern__WEBPACK_IMPORTED_MODULE_3__["ErrSOFProjectionNotFound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternLayer", function() { return _pattern__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataPatternLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternPerHull", function() { return _pattern__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataPatternPerHull"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternTransform", function() { return _pattern__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataPatternTransform"]; });

/* harmony import */ var _race__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./race */ "./sof/race/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataRace", function() { return _race__WEBPACK_IMPORTED_MODULE_4__["EveSOFDataRace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataRaceDamage", function() { return _race__WEBPACK_IMPORTED_MODULE_4__["EveSOFDataRaceDamage"]; });

/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared */ "./sof/shared/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataArea", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataAreaMaterial", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataAreaMaterial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataBooster", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataBooster"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataBoosterShape", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataBoosterShape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataInstancedMesh", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataInstancedMesh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataLogo", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataLogo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataLogoSet", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataLogoSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataMaterial", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataMaterial"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataParameter", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataParameter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataTexture", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataTexture"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataTransform", function() { return _shared__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataTransform"]; });

/* harmony import */ var _EveSOFData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveSOFData */ "./sof/EveSOFData.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFData", function() { return _EveSOFData__WEBPACK_IMPORTED_MODULE_6__["EveSOFData"]; });

/* harmony import */ var _EveSOF__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EveSOF */ "./sof/EveSOF.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOF", function() { return _EveSOF__WEBPACK_IMPORTED_MODULE_7__["EveSOF"]; });










/***/ }),

/***/ "./sof/pattern/EveSOFDataPattern.js":
/*!******************************************!*\
  !*** ./sof/pattern/EveSOFDataPattern.js ***!
  \******************************************/
/*! exports provided: EveSOFDataPattern, ErrSOFProjectionNotFound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPattern", function() { return EveSOFDataPattern; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrSOFProjectionNotFound", function() { return ErrSOFProjectionNotFound; });
/* harmony import */ var global_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global/util */ "./global/util/index.js");
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core */ "./core/index.js");


/**
 * EveSOFDataPattern
 *
 * @property {String} name                                  -
 * @property {EveSOFDataPatternLayer} layer1                -
 * @property {EveSOFDataPatternLayer} layer2                -
 * @property {Array.<EveSOFDataPatternPerHull>} projections -
 */

class EveSOFDataPattern {
  constructor() {
    this.name = "";
    this.layer1 = null;
    this.layer2 = null;
    this.projections = [];
  }

  /**
   * Gets a hull pattern
   * @param {String} hullName
   * @returns {*}
   */
  GetHullPattern(hullName) {
    const projection = this.GetProjection(hullName);
    return {
      name: this.name,
      layer1: this.layer1,
      layer2: this.layer2,
      transformLayer1: projection.transformLayer1,
      transformLayer2: projection.transformLayer2
    };
  }
  /**
   * Checks if a pattern has a projection for a hull
   * @param name
   * @returns {boolean}
   */


  HasProjection(name) {
    return !!Object(global_util__WEBPACK_IMPORTED_MODULE_0__["findElementByPropertyValue"])(this.projections, "name", name);
  }
  /**
   * Gets a hull projection
   * @param {String} name
   * @returns {null|EveSOFDataPatternPerHull}
   */


  GetProjection(name) {
    for (let i = 0; i < this.projections.length; i++) {
      if (this.projections[i].name === name) {
        return this.projections[i];
      }
    }

    throw new ErrSOFProjectionNotFound({
      pattern: this.name,
      projection: name
    });
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["layer1", r.object], ["layer2", r.object], ["projections", r.array]];
  }

}
/**
 * Fires when a sof pattern projection is not found
 */

class ErrSOFProjectionNotFound extends core__WEBPACK_IMPORTED_MODULE_1__["Tw2Error"] {
  constructor(data) {
    super(data, "SOF Pattern projection '%projection%' not found for pattern '%pattern%'");
  }

}

/***/ }),

/***/ "./sof/pattern/EveSOFDataPatternLayer.js":
/*!***********************************************!*\
  !*** ./sof/pattern/EveSOFDataPatternLayer.js ***!
  \***********************************************/
/*! exports provided: EveSOFDataPatternLayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternLayer", function() { return EveSOFDataPatternLayer; });
/**
 * EveSOFDataPatternLayer
 *
 * @property {Boolean} isTargetMtl1      -
 * @property {Boolean} isTargetMtl2      -
 * @property {Boolean} isTargetMtl3      -
 * @property {Boolean} isTargetMtl4      -
 * @property {Number} materialSource     -
 * @property {Number} projectionTypeU    -
 * @property {Number} projectionTypeV    -
 * @property {String} textureName        -
 * @property {String} textureResFilePath -
 */
class EveSOFDataPatternLayer {
  constructor() {
    this.isTargetMtl1 = true;
    this.isTargetMtl2 = true;
    this.isTargetMtl3 = true;
    this.isTargetMtl4 = true;
    this.materialSource = 0;
    this.projectionTypeU = 0;
    this.projectionTypeV = 0;
    this.textureName = "";
    this.textureResFilePath = "";
  }

  /**
   * Gets an address mode from a projection type
   * @param {Number} projectionType
   * @returns {Number}
   */
  static ToAddress(projectionType) {
    switch (projectionType) {
      case 2:
        return 4;

      case 1:
        return 3;

      default:
        return 1;
    }
  }
  /**
   * Gets a projection type from an address mode
   * @param {Number} addressMode
   * @returns {Number}
   */


  static FromProjection(addressMode) {
    switch (addressMode) {
      case 4:
        return 2;

      case 3:
        return 1;

      default:
        return 0;
    }
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["isTargetMtl1", r.boolean], ["isTargetMtl2", r.boolean], ["isTargetMtl3", r.boolean], ["isTargetMtl4", r.boolean], ["materialSource", r.uint], ["projectionTypeU", r.uint], ["projectionTypeV", r.uint], ["textureName", r.string], ["textureResFilePath", r.path]];
  }

}

/***/ }),

/***/ "./sof/pattern/EveSOFDataPatternPerHull.js":
/*!*************************************************!*\
  !*** ./sof/pattern/EveSOFDataPatternPerHull.js ***!
  \*************************************************/
/*! exports provided: EveSOFDataPatternPerHull */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternPerHull", function() { return EveSOFDataPatternPerHull; });
/**
 * EveSOFDataPatternPerHull
 *
 * @property {String} name                                -
 * @property {EveSOFDataPatternTransform} transformLayer1 -
 * @property {EveSOFDataPatternTransform} transformLayer2 -
 */
class EveSOFDataPatternPerHull {
  constructor() {
    this.name = "";
    this.transformLayer1 = null;
    this.transformLayer2 = null;
  }

  /**
   * Reduces transforms to an array
   * @param {Array} [out=[]]
   * @returns {Array}
   */
  AssignTransforms(out = []) {
    if (this.transformLayer1) out[0] = this.transformLayer1.Reduce();
    if (this.transformLayer2) out[1] = this.transformLayer2.Reduce();
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["transformLayer1", r.object], ["transformLayer2", r.object]];
  }

}

/***/ }),

/***/ "./sof/pattern/EveSOFDataPatternTransform.js":
/*!***************************************************!*\
  !*** ./sof/pattern/EveSOFDataPatternTransform.js ***!
  \***************************************************/
/*! exports provided: EveSOFDataPatternTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternTransform", function() { return EveSOFDataPatternTransform; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataPatternTransform
 *
 * @property {Boolean} isMirrored -
 * @property {vec3} position      -
 * @property {quat} rotation      -
 * @property {vec3} scaling       -
 */

class EveSOFDataPatternTransform {
  constructor() {
    this.isMirrored = false;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["isMirrored", r.boolean], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3]];
  }

}

/***/ }),

/***/ "./sof/pattern/index.js":
/*!******************************!*\
  !*** ./sof/pattern/index.js ***!
  \******************************/
/*! exports provided: EveSOFDataPattern, ErrSOFProjectionNotFound, EveSOFDataPatternLayer, EveSOFDataPatternPerHull, EveSOFDataPatternTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveSOFDataPattern__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveSOFDataPattern */ "./sof/pattern/EveSOFDataPattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPattern", function() { return _EveSOFDataPattern__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataPattern"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrSOFProjectionNotFound", function() { return _EveSOFDataPattern__WEBPACK_IMPORTED_MODULE_0__["ErrSOFProjectionNotFound"]; });

/* harmony import */ var _EveSOFDataPatternLayer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveSOFDataPatternLayer */ "./sof/pattern/EveSOFDataPatternLayer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternLayer", function() { return _EveSOFDataPatternLayer__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataPatternLayer"]; });

/* harmony import */ var _EveSOFDataPatternPerHull__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveSOFDataPatternPerHull */ "./sof/pattern/EveSOFDataPatternPerHull.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternPerHull", function() { return _EveSOFDataPatternPerHull__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataPatternPerHull"]; });

/* harmony import */ var _EveSOFDataPatternTransform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveSOFDataPatternTransform */ "./sof/pattern/EveSOFDataPatternTransform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataPatternTransform", function() { return _EveSOFDataPatternTransform__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataPatternTransform"]; });






/***/ }),

/***/ "./sof/race/EveSOFDataRace.js":
/*!************************************!*\
  !*** ./sof/race/EveSOFDataRace.js ***!
  \************************************/
/*! exports provided: EveSOFDataRace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataRace", function() { return EveSOFDataRace; });
/**
 * EveSOFDataRace
 *
 * @property {String} name                 -
 * @property {EveSOFDataBooster} booster   -
 * @property {EveSOFDataRaceDamage} damage -
 */
class EveSOFDataRace {
  constructor() {
    this.name = "";
    this.booster = null;
    this.damage = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["booster", r.object], ["damage", r.object], ["name", r.string]];
  }

}

/***/ }),

/***/ "./sof/race/EveSOFDataRaceDamage.js":
/*!******************************************!*\
  !*** ./sof/race/EveSOFDataRaceDamage.js ***!
  \******************************************/
/*! exports provided: EveSOFDataRaceDamage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataRaceDamage", function() { return EveSOFDataRaceDamage; });
/**
 * EveSOFDataRaceDamage
 *
 * @property {Array.<EveSOFDataParameter>} armorImpactParameters  -
 * @property {Array.<EveSOFDataTexture>} armorImpactTextures      -
 * @property {Array.<EveSOFDataParameter>} shieldImpactParameters -
 * @property {Array.<EveSOFDataTexture>} shieldImpactTextures     -
 */
class EveSOFDataRaceDamage {
  constructor() {
    this.armorImpactParameters = [];
    this.armorImpactTextures = [];
    this.shieldImpactParameters = [];
    this.shieldImpactTextures = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["armorImpactParameters", r.array], ["armorImpactTextures", r.array], ["shieldImpactParameters", r.array], ["shieldImpactTextures", r.array]];
  }

}

/***/ }),

/***/ "./sof/race/index.js":
/*!***************************!*\
  !*** ./sof/race/index.js ***!
  \***************************/
/*! exports provided: EveSOFDataRace, EveSOFDataRaceDamage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveSOFDataRace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveSOFDataRace */ "./sof/race/EveSOFDataRace.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataRace", function() { return _EveSOFDataRace__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataRace"]; });

/* harmony import */ var _EveSOFDataRaceDamage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveSOFDataRaceDamage */ "./sof/race/EveSOFDataRaceDamage.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataRaceDamage", function() { return _EveSOFDataRaceDamage__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataRaceDamage"]; });




/***/ }),

/***/ "./sof/shared/EveSOFDataArea.js":
/*!**************************************!*\
  !*** ./sof/shared/EveSOFDataArea.js ***!
  \**************************************/
/*! exports provided: EveSOFDataArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataArea", function() { return EveSOFDataArea; });
/**
 * EveSOFDataArea
 *
 * @property {EveSOFDataAreaMaterial} Black     -
 * @property {EveSOFDataAreaMaterial} Blue      -
 * @property {EveSOFDataAreaMaterial} Booster   -
 * @property {EveSOFDataAreaMaterial} Cyan      -
 * @property {EveSOFDataAreaMaterial} Darkhull  -
 * @property {EveSOFDataAreaMaterial} Fire      -
 * @property {EveSOFDataAreaMaterial} Glass     -
 * @property {EveSOFDataAreaMaterial} Green     -
 * @property {EveSOFDataAreaMaterial} Hull      -
 * @property {EveSOFDataAreaMaterial} Killmark  -
 * @property {EveSOFDataAreaMaterial} Monument  -
 * @property {EveSOFDataAreaMaterial} Orange    -
 * @property {EveSOFDataAreaMaterial} Primary   -
 * @property {EveSOFDataAreaMaterial} Reactor   -
 * @property {EveSOFDataAreaMaterial} Red       -
 * @property {EveSOFDataAreaMaterial} Rock      -
 * @property {EveSOFDataAreaMaterial} Sails     -
 * @property {EveSOFDataAreaMaterial} Secondary -
 * @property {EveSOFDataAreaMaterial} Tertiary  -
 * @property {EveSOFDataAreaMaterial} White     -
 * @property {EveSOFDataAreaMaterial} Yellow    -
 */
class EveSOFDataArea {
  constructor() {
    this.Black = null;
    this.Blue = null;
    this.Booster = null;
    this.Cyan = null;
    this.Darkhull = null;
    this.Fire = null;
    this.Glass = null;
    this.Green = null;
    this.Hull = null;
    this.Killmark = null;
    this.Monument = null;
    this.Orange = null;
    this.Primary = null;
    this.Reactor = null;
    this.Red = null;
    this.Rock = null;
    this.Sails = null;
    this.Secondary = null;
    this.Tertiary = null;
    this.White = null;
    this.Yellow = null;
  }

  /**
   * Gets a data area by it's name
   * @param {String} name
   * @returns {EveSOFDataAreaMaterial|null}
   */
  Get(name) {
    if (name.indexOf("area_") === 0) name = name.substring(5);
    name = name.charAt(0).toUpperCase() + name.substring(1).toLowerCase();
    return name in this ? this[name] : null;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["Black", r.object], ["Blue", r.object], ["Booster", r.object], ["Cyan", r.object], ["Darkhull", r.object], ["Fire", r.object], ["Glass", r.object], ["Green", r.object], ["Hull", r.object], ["Killmark", r.object], ["Monument", r.object], ["Orange", r.object], ["Primary", r.object], ["Reactor", r.object], ["Red", r.object], ["Rock", r.object], ["Sails", r.object], ["Secondary", r.object], ["Tertiary", r.object], ["White", r.object], ["Yellow", r.object]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataAreaMaterial.js":
/*!**********************************************!*\
  !*** ./sof/shared/EveSOFDataAreaMaterial.js ***!
  \**********************************************/
/*! exports provided: EveSOFDataAreaMaterial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataAreaMaterial", function() { return EveSOFDataAreaMaterial; });
/**
 * EveSOFDataAreaMaterial
 *
 * @property {Number} colorType -
 * @property {String} material1 -
 * @property {String} material2 -
 * @property {String} material3 -
 * @property {String} material4 -
 */
class EveSOFDataAreaMaterial {
  constructor() {
    this.colorType = 0;
    this.material1 = "";
    this.material2 = "";
    this.material3 = "";
    this.material4 = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["colorType", r.uint], ["material1", r.string], ["material2", r.string], ["material3", r.string], ["material4", r.string]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataBooster.js":
/*!*****************************************!*\
  !*** ./sof/shared/EveSOFDataBooster.js ***!
  \*****************************************/
/*! exports provided: EveSOFDataBooster */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataBooster", function() { return EveSOFDataBooster; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataBooster
 *
 * @property {vec4} glowColor                    -
 * @property {Number} glowScale                  -
 * @property {String} gradient0ResPath           -
 * @property {String} gradient1ResPath           -
 * @property {vec4} haloColor                    -
 * @property {Number} haloScaleX                 -
 * @property {Number} haloScaleY                 -
 * @property {vec4} lightColor                   -
 * @property {Number} lightFlickerAmplitude      -
 * @property {Number} lightFlickerFrequency      -
 * @property {Number} lightRadius                -
 * @property {vec4} lightWarpColor               -
 * @property {Number} lightWarpRadius            -
 * @property {EveSOFDataBoosterShape} shape0     -
 * @property {EveSOFDataBoosterShape} shape1     -
 * @property {Number} shapeAtlasCount            -
 * @property {Number} shapeAtlasHeight           -
 * @property {String} shapeAtlasResPath          -
 * @property {Number} symHaloScale               -
 * @property {vec4} trailColor                   -
 * @property {vec4} trailSize                    -
 * @property {vec4} warpGlowColor                -
 * @property {vec4} warpHaloColor                -
 * @property {EveSOFDataBoosterShape} warpShape0 -
 * @property {EveSOFDataBoosterShape} warpShape1 -
 */

class EveSOFDataBooster {
  constructor() {
    this.glowColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.glowScale = 0;
    this.gradient0ResPath = "";
    this.gradient1ResPath = "";
    this.haloColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.haloScaleX = 0;
    this.haloScaleY = 0;
    this.lightColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.lightFlickerAmplitude = 0;
    this.lightFlickerFrequency = 0;
    this.lightRadius = 0;
    this.lightWarpColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.lightWarpRadius = 0;
    this.shape0 = null;
    this.shape1 = null;
    this.shapeAtlasCount = 0;
    this.shapeAtlasHeight = 0;
    this.shapeAtlasResPath = "";
    this.symHaloScale = 0;
    this.trailColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.trailSize = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.warpGlowColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.warpHaloColor = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.warpShape0 = null;
    this.warpShape1 = null;
  }

  /**
   * Alias for `warpHaloColor` (ccp typo)
   * @returns {vec4}
   */
  get warpHalpColor() {
    return this.warpHaloColor;
  }
  /**
   * Alias for `warpHaloColor` (ccp typo)
   * @param {vec4} v
   */


  set warpHalpColor(v) {
    this.warpHaloColor = v;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["glowColor", r.vector4], ["glowScale", r.float], ["gradient0ResPath", r.path], ["gradient1ResPath", r.path], ["haloColor", r.vector4], ["haloScaleX", r.float], ["haloScaleY", r.float], ["lightFlickerAmplitude", r.float], ["lightFlickerColor", r.vector4], ["lightFlickerFrequency", r.float], ["lightFlickerRadius", r.float], ["lightColor", r.vector4], ["lightRadius", r.float], ["lightWarpColor", r.vector4], ["lightWarpRadius", r.float], ["shape0", r.object], ["shape1", r.object], ["shapeAtlasCount", r.uint], ["shapeAtlasHeight", r.uint], ["shapeAtlasResPath", r.path], ["shapeAtlasWidth", r.uint], ["symHaloScale", r.float], ["trailColor", r.vector4], ["trailSize", r.vector4], ["volumetric", r.boolean], ["warpGlowColor", r.vector4], ["warpHalpColor", r.vector4], ["warpShape0", r.object], ["warpShape1", r.object]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataBoosterShape.js":
/*!**********************************************!*\
  !*** ./sof/shared/EveSOFDataBoosterShape.js ***!
  \**********************************************/
/*! exports provided: EveSOFDataBoosterShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataBoosterShape", function() { return EveSOFDataBoosterShape; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataBoosterShape
 *
 * @property {vec4} color               -
 * @property {vec4} noiseAmplitureEnd   -
 * @property {vec4} noiseAmplitureStart -
 * @property {vec4} noiseFrequency      -
 * @property {Number} noiseFunction     -
 * @property {Number} noiseSpeed        -
 */

class EveSOFDataBoosterShape {
  constructor() {
    this.color = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.noiseAmplitureEnd = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.noiseAmplitureStart = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.noiseFrequency = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
    this.noiseFunction = 0;
    this.noiseSpeed = 0;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["color", r.vector4], ["noiseFunction", r.float], ["noiseSpeed", r.float], ["noiseAmplitureStart", r.vector4], ["noiseAmplitureEnd", r.vector4], ["noiseFrequency", r.vector4]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataInstancedMesh.js":
/*!***********************************************!*\
  !*** ./sof/shared/EveSOFDataInstancedMesh.js ***!
  \***********************************************/
/*! exports provided: EveSOFDataInstancedMesh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataInstancedMesh", function() { return EveSOFDataInstancedMesh; });
/**
 * Instanced Mesh instance reader
 */
class EveSOFDataInstancedMeshInstanceReader {
  constructor(data) {
    this.data = data;
  }

  static blackStruct(reader) {
    let data = [reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32(), reader.ReadF32()];
    return new EveSOFDataInstancedMeshInstanceReader(data);
  }

}
/**
 * EveSOFDataInstancedMesh
 *
 * @property {String} name                        -
 * @property {String} geometryResPath             -
 * @property {Array.} instances                   -
 * @property {Number} lowestLodVisible            -
 * @property {String} shader                      -
 * @property {Array.<EveSOFDataTexture>} textures -
 */


class EveSOFDataInstancedMesh {
  constructor() {
    this.name = "";
    this.geometryResPath = "";
    this.instances = [];
    this.lowestLodVisible = 0;
    this.shader = "";
    this.textures = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["geometryResPath", r.path], ["instances", r.structList(EveSOFDataInstancedMeshInstanceReader)], ["lowestLodVisible", r.uint], ["name", r.string], ["shader", r.string], ["textures", r.array]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataLogo.js":
/*!**************************************!*\
  !*** ./sof/shared/EveSOFDataLogo.js ***!
  \**************************************/
/*! exports provided: EveSOFDataLogo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataLogo", function() { return EveSOFDataLogo; });
/**
 * EveSOFDataLogo
 *
 * @parameter {Array<EveSOFDataTexture>} textures
 */
class EveSOFDataLogo {
  constructor() {
    this.textures = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["textures", r.array]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataLogoSet.js":
/*!*****************************************!*\
  !*** ./sof/shared/EveSOFDataLogoSet.js ***!
  \*****************************************/
/*! exports provided: EveSOFDataLogoSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataLogoSet", function() { return EveSOFDataLogoSet; });
/**
 * EveSOFDataLogoSet
 *
 * @property {EveSOFDataLogo} Marking_01
 * @property {EveSOFDataLogo} Marking_02
 * @property {EveSOFDataLogo} Primary
 * @property {EveSOFDataLogo} Secondary
 * @property {EveSOFDataLogo} Tertiary
 */
class EveSOFDataLogoSet {
  constructor() {
    this.Marking_01 = null;
    this.Marking_02 = null;
    this.Primary = null;
    this.Secondary = null;
    this.Tertiary = null;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["Marking_01", r.object], ["Marking_02", r.object], ["Primary", r.object], ["Secondary", r.object], ["Tertiary", r.object]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataMaterial.js":
/*!******************************************!*\
  !*** ./sof/shared/EveSOFDataMaterial.js ***!
  \******************************************/
/*! exports provided: EveSOFDataMaterial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataMaterial", function() { return EveSOFDataMaterial; });
/**
 * EveSOFDataMaterial
 *
 * @property {String} name                            -
 * @property {Array.<EveSOFDataParameter>} parameters -
 */
class EveSOFDataMaterial {
  constructor() {
    this.name = "";
    this.parameters = [];
  }

  /**
   * Assigns the material to a simple plain object
   * @param {*} [out={}]
   * @param {String} [prefix]
   * @returns {{ name: String, parameters: Object}} out
   */
  Assign(out = {}, prefix) {
    out.name = this.name;
    out.parameters = this.AssignParameters(out.parameters, prefix);
    return out;
  }
  /**
   * Assigns the material's parameters to a simple plain object
   * @param {{}} [out={}]
   * @param {String} [prefix]
   * @returns {Object} out
   */


  AssignParameters(out = {}, prefix) {
    this.parameters.forEach(parameter => parameter.Assign(out, prefix));
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["parameters", r.array]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataParameter.js":
/*!*******************************************!*\
  !*** ./sof/shared/EveSOFDataParameter.js ***!
  \*******************************************/
/*! exports provided: EveSOFDataParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataParameter", function() { return EveSOFDataParameter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataParameter
 *
 * @property {String} name -
 * @property {vec4} value  -
 */

class EveSOFDataParameter {
  constructor() {
    this.name = "";
    this.value = global__WEBPACK_IMPORTED_MODULE_0__["vec4"].create();
  }

  /**
   * Assigns the parameter's values to an object
   * @param {{}} [out]
   * @param {String} [prefix]
   * @return {{}} out
   */
  Assign(out = {}, prefix) {
    out[prefix ? prefix + this.name : this.name] = Array.from(this.value);
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["value", r.vector4]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataTexture.js":
/*!*****************************************!*\
  !*** ./sof/shared/EveSOFDataTexture.js ***!
  \*****************************************/
/*! exports provided: EveSOFDataTexture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataTexture", function() { return EveSOFDataTexture; });
/**
 * EveSOFDataTexture
 *
 * @property {String} name        -
 * @property {String} resFilePath -
 */
class EveSOFDataTexture {
  constructor() {
    this.name = "";
    this.resFilePath = "";
  }

  /**
   * Assigns the texture's values to an object
   * @param {{}} [out={}]
   * @returns {{}}
   */
  Assign(out = {}) {
    out[this.name] = this.resFilePath;
    return out;
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["resFilePath", r.path]];
  }

}

/***/ }),

/***/ "./sof/shared/EveSOFDataTransform.js":
/*!*******************************************!*\
  !*** ./sof/shared/EveSOFDataTransform.js ***!
  \*******************************************/
/*! exports provided: EveSOFDataTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataTransform", function() { return EveSOFDataTransform; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * EveSOFDataTransform
 *
 * @property {Number} boneIndex -
 * @property {vec3} position    -
 * @property {quat} rotation    -
 */

class EveSOFDataTransform {
  constructor() {
    this.boneIndex = -1;
    this.position = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].create();
    this.rotation = global__WEBPACK_IMPORTED_MODULE_0__["quat"].create();
    this.scaling = global__WEBPACK_IMPORTED_MODULE_0__["vec3"].fromValues(1, 1, 1);
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["boneIndex", r.uint], ["position", r.vector3], ["rotation", r.vector4], ["scaling", r.vector3]];
  }

}

/***/ }),

/***/ "./sof/shared/index.js":
/*!*****************************!*\
  !*** ./sof/shared/index.js ***!
  \*****************************/
/*! exports provided: EveSOFDataArea, EveSOFDataAreaMaterial, EveSOFDataBooster, EveSOFDataBoosterShape, EveSOFDataInstancedMesh, EveSOFDataLogo, EveSOFDataLogoSet, EveSOFDataMaterial, EveSOFDataParameter, EveSOFDataTexture, EveSOFDataTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _EveSOFDataArea__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EveSOFDataArea */ "./sof/shared/EveSOFDataArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataArea", function() { return _EveSOFDataArea__WEBPACK_IMPORTED_MODULE_0__["EveSOFDataArea"]; });

/* harmony import */ var _EveSOFDataAreaMaterial__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EveSOFDataAreaMaterial */ "./sof/shared/EveSOFDataAreaMaterial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataAreaMaterial", function() { return _EveSOFDataAreaMaterial__WEBPACK_IMPORTED_MODULE_1__["EveSOFDataAreaMaterial"]; });

/* harmony import */ var _EveSOFDataBooster__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EveSOFDataBooster */ "./sof/shared/EveSOFDataBooster.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataBooster", function() { return _EveSOFDataBooster__WEBPACK_IMPORTED_MODULE_2__["EveSOFDataBooster"]; });

/* harmony import */ var _EveSOFDataBoosterShape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EveSOFDataBoosterShape */ "./sof/shared/EveSOFDataBoosterShape.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataBoosterShape", function() { return _EveSOFDataBoosterShape__WEBPACK_IMPORTED_MODULE_3__["EveSOFDataBoosterShape"]; });

/* harmony import */ var _EveSOFDataInstancedMesh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EveSOFDataInstancedMesh */ "./sof/shared/EveSOFDataInstancedMesh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataInstancedMesh", function() { return _EveSOFDataInstancedMesh__WEBPACK_IMPORTED_MODULE_4__["EveSOFDataInstancedMesh"]; });

/* harmony import */ var _EveSOFDataLogo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./EveSOFDataLogo */ "./sof/shared/EveSOFDataLogo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataLogo", function() { return _EveSOFDataLogo__WEBPACK_IMPORTED_MODULE_5__["EveSOFDataLogo"]; });

/* harmony import */ var _EveSOFDataLogoSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./EveSOFDataLogoSet */ "./sof/shared/EveSOFDataLogoSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataLogoSet", function() { return _EveSOFDataLogoSet__WEBPACK_IMPORTED_MODULE_6__["EveSOFDataLogoSet"]; });

/* harmony import */ var _EveSOFDataMaterial__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./EveSOFDataMaterial */ "./sof/shared/EveSOFDataMaterial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataMaterial", function() { return _EveSOFDataMaterial__WEBPACK_IMPORTED_MODULE_7__["EveSOFDataMaterial"]; });

/* harmony import */ var _EveSOFDataParameter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./EveSOFDataParameter */ "./sof/shared/EveSOFDataParameter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataParameter", function() { return _EveSOFDataParameter__WEBPACK_IMPORTED_MODULE_8__["EveSOFDataParameter"]; });

/* harmony import */ var _EveSOFDataTexture__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./EveSOFDataTexture */ "./sof/shared/EveSOFDataTexture.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataTexture", function() { return _EveSOFDataTexture__WEBPACK_IMPORTED_MODULE_9__["EveSOFDataTexture"]; });

/* harmony import */ var _EveSOFDataTransform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EveSOFDataTransform */ "./sof/shared/EveSOFDataTransform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EveSOFDataTransform", function() { return _EveSOFDataTransform__WEBPACK_IMPORTED_MODULE_10__["EveSOFDataTransform"]; });













/***/ }),

/***/ "./state/Tr2StateMachine.js":
/*!**********************************!*\
  !*** ./state/Tr2StateMachine.js ***!
  \**********************************/
/*! exports provided: Tr2StateMachine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2StateMachine", function() { return Tr2StateMachine; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2StateMachine
 * Todo: Implement
 *
 * @property {String} name                         -
 * @property {Number} startState                   -
 * @property {Array.<Tr2StateMachineState>} states -
 */

class Tr2StateMachine extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.startState = 0;
    this.states = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["name", r.string], ["states", r.array], ["startState", r.uint]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2StateMachine.__isStaging = 4;

/***/ }),

/***/ "./state/Tr2StateMachineState.js":
/*!***************************************!*\
  !*** ./state/Tr2StateMachineState.js ***!
  \***************************************/
/*! exports provided: Tr2StateMachineState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2StateMachineState", function() { return Tr2StateMachineState; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2StateMachineState
 * Todo: Implement
 *
 * @property {String} name                                   -
 * @property {Array.<StateAction>} actions                   -
 * @property {Tr2SyncToAnimation} finalizer                  -
 * @property {Array.<Tr2StateMachineTransition>} transitions -
 */

class Tr2StateMachineState extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.actions = [];
    this.finalizer = null;
    this.transitions = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["actions", r.array], ["finalizer", r.object], ["name", r.string], ["transitions", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2StateMachineState.__isStaging = 4;

/***/ }),

/***/ "./state/Tr2StateMachineTransition.js":
/*!********************************************!*\
  !*** ./state/Tr2StateMachineTransition.js ***!
  \********************************************/
/*! exports provided: Tr2StateMachineTransition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2StateMachineTransition", function() { return Tr2StateMachineTransition; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2StateMachineTransition
 * Todo: Implement
 *
 * @property {String} name      -
 * @property {String} condition -
 */

class Tr2StateMachineTransition extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.condition = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["condition", r.string], ["name", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2StateMachineTransition.__isStaging = 4;

/***/ }),

/***/ "./state/Tr2SyncToAnimation.js":
/*!*************************************!*\
  !*** ./state/Tr2SyncToAnimation.js ***!
  \*************************************/
/*! exports provided: Tr2SyncToAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2SyncToAnimation", function() { return Tr2SyncToAnimation; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2SyncToAnimation
 * Todo: Implement
 */

class Tr2SyncToAnimation extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2SyncToAnimation.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionAnimateCurveSet.js":
/*!**************************************************!*\
  !*** ./state/action/Tr2ActionAnimateCurveSet.js ***!
  \**************************************************/
/*! exports provided: Tr2ActionAnimateCurveSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionAnimateCurveSet", function() { return Tr2ActionAnimateCurveSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionAnimateCurveSet
 * TODO: Implement
 *
 * @property {Tw2CurveSet} curveSet -
 * @property {String} value         -
 */

class Tr2ActionAnimateCurveSet extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.curveSet = null;
    this.value = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["curveSet", r.object], ["value", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionAnimateCurveSet.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionAnimateValue.js":
/*!***********************************************!*\
  !*** ./state/action/Tr2ActionAnimateValue.js ***!
  \***********************************************/
/*! exports provided: Tr2ActionAnimateValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionAnimateValue", function() { return Tr2ActionAnimateValue; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionAnimateValue
 * Todo: Implement
 *
 * @property {String} attribute               -
 * @property {Tr2CurveScalarExpression} curve -
 * @property {String} path                    -
 * @property {String} value                   -
 */

class Tr2ActionAnimateValue extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.attribute = "";
    this.curve = null;
    this.path = "";
    this.value = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["attribute", r.string], ["curve", r.object], ["path", r.path], ["value", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionAnimateValue.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionChildEffect.js":
/*!**********************************************!*\
  !*** ./state/action/Tr2ActionChildEffect.js ***!
  \**********************************************/
/*! exports provided: Tr2ActionChildEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionChildEffect", function() { return Tr2ActionChildEffect; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionChildEffect
 * Todo: Implement
 *
 * @property {String} childName     -
 * @property {String} path          -
 * @property {Boolean} removeOnStop -
 */

class Tr2ActionChildEffect extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.childName = "";
    this.path = "";
    this.removeOnStop = false;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["childName", r.string], ["path", r.path], ["removeOnStop", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionChildEffect.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionOverlay.js":
/*!******************************************!*\
  !*** ./state/action/Tr2ActionOverlay.js ***!
  \******************************************/
/*! exports provided: Tr2ActionOverlay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionOverlay", function() { return Tr2ActionOverlay; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionOverlay
 * Todo: Implement
 *
 * @property {String} path -
 */

class Tr2ActionOverlay extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.path = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["path", r.path]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionOverlay.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionPlayCurveSet.js":
/*!***********************************************!*\
  !*** ./state/action/Tr2ActionPlayCurveSet.js ***!
  \***********************************************/
/*! exports provided: Tr2ActionPlayCurveSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlayCurveSet", function() { return Tr2ActionPlayCurveSet; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionPlayCurveSet
 * @implements StateAction
 * Todo: Implement
 *
 * @property {String} curveSetName -
 * @property {String} rangeName    -
 * @property {Boolean} syncToRange -
 */

class Tr2ActionPlayCurveSet extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.curveSetName = "";
    this.rangeName = "";
    this.syncToRange = false;
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["curveSetName", r.string], ["rangeName", r.string], ["syncToRange", r.boolean]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionPlayCurveSet.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionPlayMeshAnimation.js":
/*!****************************************************!*\
  !*** ./state/action/Tr2ActionPlayMeshAnimation.js ***!
  \****************************************************/
/*! exports provided: Tr2ActionPlayMeshAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlayMeshAnimation", function() { return Tr2ActionPlayMeshAnimation; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionPlayMeshAnimation
 * Todo: Implement
 *
 * @property {String} animation -
 * @property {Number} loops     -
 * @property {String} mask      -
 */

class Tr2ActionPlayMeshAnimation extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.animation = "";
    this.loops = 0;
    this.mask = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["animation", r.string], ["loops", r.uint], ["mask", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionPlayMeshAnimation.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionPlaySound.js":
/*!********************************************!*\
  !*** ./state/action/Tr2ActionPlaySound.js ***!
  \********************************************/
/*! exports provided: Tr2ActionPlaySound */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlaySound", function() { return Tr2ActionPlaySound; });
/**
 * Tr2ActionPlaySound
 * TODO: Implement
 * @ccp Tr2ActionPlaySound
 *
 * @property {String} emitter
 * @property {String} event
 */
class Tr2ActionPlaySound {
  constructor() {
    this.emitter = "";
    this.event = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["emitter", r.string], ["event", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionPlaySound.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionResetClipSphereCenter.js":
/*!********************************************************!*\
  !*** ./state/action/Tr2ActionResetClipSphereCenter.js ***!
  \********************************************************/
/*! exports provided: Tr2ActionResetClipSphereCenter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionResetClipSphereCenter", function() { return Tr2ActionResetClipSphereCenter; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionResetClipSphereCenter
 * Todo: Implement
 */

class Tr2ActionResetClipSphereCenter extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionResetClipSphereCenter.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionSetValue.js":
/*!*******************************************!*\
  !*** ./state/action/Tr2ActionSetValue.js ***!
  \*******************************************/
/*! exports provided: Tr2ActionSetValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionSetValue", function() { return Tr2ActionSetValue; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ActionSetValue
 * Todo: Implement
 *
 * @property {String} attribute -
 * @property {String} path      -
 * @property {String} value     -
 */

class Tr2ActionSetValue extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.attribute = "";
    this.path = "";
    this.value = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["attribute", r.string], ["path", r.path], ["value", r.string]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionSetValue.__isStaging = 4;

/***/ }),

/***/ "./state/action/Tr2ActionSpawnParticles.js":
/*!*************************************************!*\
  !*** ./state/action/Tr2ActionSpawnParticles.js ***!
  \*************************************************/
/*! exports provided: Tr2ActionSpawnParticles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionSpawnParticles", function() { return Tr2ActionSpawnParticles; });
/**
 * Tr2ActionSpawnParticles
 * TODO: Implement
 * @ccp Tr2ActionSpawnParticles
 */
class Tr2ActionSpawnParticles {
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ActionSpawnParticles.__isStaging = 4;

/***/ }),

/***/ "./state/action/index.js":
/*!*******************************!*\
  !*** ./state/action/index.js ***!
  \*******************************/
/*! exports provided: Tr2ActionAnimateCurveSet, Tr2ActionAnimateValue, Tr2ActionChildEffect, Tr2ActionOverlay, Tr2ActionPlayCurveSet, Tr2ActionPlayMeshAnimation, Tr2ActionPlaySound, Tr2ActionResetClipSphereCenter, Tr2ActionSetValue, Tr2ActionSpawnParticles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2ActionAnimateCurveSet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2ActionAnimateCurveSet */ "./state/action/Tr2ActionAnimateCurveSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionAnimateCurveSet", function() { return _Tr2ActionAnimateCurveSet__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionAnimateCurveSet"]; });

/* harmony import */ var _Tr2ActionAnimateValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2ActionAnimateValue */ "./state/action/Tr2ActionAnimateValue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionAnimateValue", function() { return _Tr2ActionAnimateValue__WEBPACK_IMPORTED_MODULE_1__["Tr2ActionAnimateValue"]; });

/* harmony import */ var _Tr2ActionChildEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tr2ActionChildEffect */ "./state/action/Tr2ActionChildEffect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionChildEffect", function() { return _Tr2ActionChildEffect__WEBPACK_IMPORTED_MODULE_2__["Tr2ActionChildEffect"]; });

/* harmony import */ var _Tr2ActionOverlay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tr2ActionOverlay */ "./state/action/Tr2ActionOverlay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionOverlay", function() { return _Tr2ActionOverlay__WEBPACK_IMPORTED_MODULE_3__["Tr2ActionOverlay"]; });

/* harmony import */ var _Tr2ActionPlayCurveSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tr2ActionPlayCurveSet */ "./state/action/Tr2ActionPlayCurveSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlayCurveSet", function() { return _Tr2ActionPlayCurveSet__WEBPACK_IMPORTED_MODULE_4__["Tr2ActionPlayCurveSet"]; });

/* harmony import */ var _Tr2ActionPlayMeshAnimation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tr2ActionPlayMeshAnimation */ "./state/action/Tr2ActionPlayMeshAnimation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlayMeshAnimation", function() { return _Tr2ActionPlayMeshAnimation__WEBPACK_IMPORTED_MODULE_5__["Tr2ActionPlayMeshAnimation"]; });

/* harmony import */ var _Tr2ActionPlaySound__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tr2ActionPlaySound */ "./state/action/Tr2ActionPlaySound.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlaySound", function() { return _Tr2ActionPlaySound__WEBPACK_IMPORTED_MODULE_6__["Tr2ActionPlaySound"]; });

/* harmony import */ var _Tr2ActionResetClipSphereCenter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Tr2ActionResetClipSphereCenter */ "./state/action/Tr2ActionResetClipSphereCenter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionResetClipSphereCenter", function() { return _Tr2ActionResetClipSphereCenter__WEBPACK_IMPORTED_MODULE_7__["Tr2ActionResetClipSphereCenter"]; });

/* harmony import */ var _Tr2ActionSetValue__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Tr2ActionSetValue */ "./state/action/Tr2ActionSetValue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionSetValue", function() { return _Tr2ActionSetValue__WEBPACK_IMPORTED_MODULE_8__["Tr2ActionSetValue"]; });

/* harmony import */ var _Tr2ActionSpawnParticles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Tr2ActionSpawnParticles */ "./state/action/Tr2ActionSpawnParticles.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionSpawnParticles", function() { return _Tr2ActionSpawnParticles__WEBPACK_IMPORTED_MODULE_9__["Tr2ActionSpawnParticles"]; });












/***/ }),

/***/ "./state/controller/Tr2Controller.js":
/*!*******************************************!*\
  !*** ./state/controller/Tr2Controller.js ***!
  \*******************************************/
/*! exports provided: Tr2Controller */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2Controller", function() { return Tr2Controller; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2Controller
 * Todo: Implement
 *
 * @property {String} name                           -
 * @property {Boolean} isShared                      -
 * @property {Array.<Tr2StateMachine>} stateMachines -
 * @property {Array.<StateVariable>} variables       -
 */

class Tr2Controller extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.name = "";
    this.isShared = false;
    this.stateMachines = [];
    this.variables = [];
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["isShared", r.boolean], ["stateMachines", r.array], ["name", r.string], ["variables", r.array]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2Controller.__isStaging = 4;

/***/ }),

/***/ "./state/controller/Tr2ControllerFloatVariable.js":
/*!********************************************************!*\
  !*** ./state/controller/Tr2ControllerFloatVariable.js ***!
  \********************************************************/
/*! exports provided: Tr2ControllerFloatVariable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerFloatVariable", function() { return Tr2ControllerFloatVariable; });
/**
 * Tr2ControllerFloatVariable
 * TODO: Implement
 * @ccp Tr2ControllerFloatVariable
 *
 * @property {String} name
 * @property {Number} defaultValue
 * @property {Object<String,Number>} enumValues
 * @property {Number} variableType
 */
class Tr2ControllerFloatVariable {
  constructor() {
    this.name = "";
    this.defaultValue = 0;
    this.enumValues = {};
    this.variableType = 0;
  }

  /**
   * Gets enums as a string
   * @returns {string}
   */
  GetEnumsAsString() {
    let str = [];

    for (const string in this.enumValues) {
      if (this.enumValues.hasOwnProperty(string)) {
        str.push("".concat(string, "=").concat(this.enumValues[string]));
      }
    }

    return str.sort().join(",");
  }
  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */


  static black(r) {
    return [["name", r.string], ["defaultValue", r.float], ["enumValues", r.enums], ["variableType", r.uint]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ControllerFloatVariable.__isStaging = 4;

/***/ }),

/***/ "./state/controller/Tr2ControllerReference.js":
/*!****************************************************!*\
  !*** ./state/controller/Tr2ControllerReference.js ***!
  \****************************************************/
/*! exports provided: Tr2ControllerReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerReference", function() { return Tr2ControllerReference; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ControllerReference
 * Todo: Implement
 *
 * @property {String} path -
 */

class Tr2ControllerReference extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.path = "";
  }

  /**
   * Black definition
   * @param {*} r
   * @returns {*[]}
   */
  static black(r) {
    return [["path", r.path]];
  }
  /**
   * Identifies that the class is in staging
   * @property {null|Number}
   */


}
Tr2ControllerReference.__isStaging = 4;

/***/ }),

/***/ "./state/controller/index.js":
/*!***********************************!*\
  !*** ./state/controller/index.js ***!
  \***********************************/
/*! exports provided: Tr2Controller, Tr2ControllerFloatVariable, Tr2ControllerReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2Controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2Controller */ "./state/controller/Tr2Controller.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2Controller", function() { return _Tr2Controller__WEBPACK_IMPORTED_MODULE_0__["Tr2Controller"]; });

/* harmony import */ var _Tr2ControllerFloatVariable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tr2ControllerFloatVariable */ "./state/controller/Tr2ControllerFloatVariable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerFloatVariable", function() { return _Tr2ControllerFloatVariable__WEBPACK_IMPORTED_MODULE_1__["Tr2ControllerFloatVariable"]; });

/* harmony import */ var _Tr2ControllerReference__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tr2ControllerReference */ "./state/controller/Tr2ControllerReference.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerReference", function() { return _Tr2ControllerReference__WEBPACK_IMPORTED_MODULE_2__["Tr2ControllerReference"]; });





/***/ }),

/***/ "./state/index.js":
/*!************************!*\
  !*** ./state/index.js ***!
  \************************/
/*! exports provided: Tr2StateMachine, Tr2StateMachineState, Tr2StateMachineTransition, Tr2SyncToAnimation, Tr2ActionAnimateCurveSet, Tr2ActionAnimateValue, Tr2ActionChildEffect, Tr2ActionOverlay, Tr2ActionPlayCurveSet, Tr2ActionPlayMeshAnimation, Tr2ActionPlaySound, Tr2ActionResetClipSphereCenter, Tr2ActionSetValue, Tr2ActionSpawnParticles, Tr2Controller, Tr2ControllerFloatVariable, Tr2ControllerReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action */ "./state/action/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionAnimateCurveSet", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionAnimateCurveSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionAnimateValue", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionAnimateValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionChildEffect", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionChildEffect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionOverlay", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionOverlay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlayCurveSet", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionPlayCurveSet"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlayMeshAnimation", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionPlayMeshAnimation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionPlaySound", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionPlaySound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionResetClipSphereCenter", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionResetClipSphereCenter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionSetValue", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionSetValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ActionSpawnParticles", function() { return _action__WEBPACK_IMPORTED_MODULE_0__["Tr2ActionSpawnParticles"]; });

/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controller */ "./state/controller/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2Controller", function() { return _controller__WEBPACK_IMPORTED_MODULE_1__["Tr2Controller"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerFloatVariable", function() { return _controller__WEBPACK_IMPORTED_MODULE_1__["Tr2ControllerFloatVariable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerReference", function() { return _controller__WEBPACK_IMPORTED_MODULE_1__["Tr2ControllerReference"]; });

/* harmony import */ var _variable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./variable */ "./state/variable/index.js");
/* empty/unused harmony star reexport *//* harmony import */ var _Tr2StateMachine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tr2StateMachine */ "./state/Tr2StateMachine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2StateMachine", function() { return _Tr2StateMachine__WEBPACK_IMPORTED_MODULE_3__["Tr2StateMachine"]; });

/* harmony import */ var _Tr2StateMachineState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tr2StateMachineState */ "./state/Tr2StateMachineState.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2StateMachineState", function() { return _Tr2StateMachineState__WEBPACK_IMPORTED_MODULE_4__["Tr2StateMachineState"]; });

/* harmony import */ var _Tr2StateMachineTransition__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tr2StateMachineTransition */ "./state/Tr2StateMachineTransition.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2StateMachineTransition", function() { return _Tr2StateMachineTransition__WEBPACK_IMPORTED_MODULE_5__["Tr2StateMachineTransition"]; });

/* harmony import */ var _Tr2SyncToAnimation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Tr2SyncToAnimation */ "./state/Tr2SyncToAnimation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2SyncToAnimation", function() { return _Tr2SyncToAnimation__WEBPACK_IMPORTED_MODULE_6__["Tr2SyncToAnimation"]; });









/***/ }),

/***/ "./state/variable/Tr2ControllerFloatVariable.js":
/*!******************************************************!*\
  !*** ./state/variable/Tr2ControllerFloatVariable.js ***!
  \******************************************************/
/*! exports provided: Tr2ControllerFloatVariable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerFloatVariable", function() { return Tr2ControllerFloatVariable; });
/* harmony import */ var global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! global */ "./global/index.js");

/**
 * Tr2ControllerFloatVariable
 * Todo: Implement
 * Todo: Identify if "variableType" expects an Enum
 *
 * @property {Number} defaultValue -
 * @property {Number} variableType -
 */

class Tr2ControllerFloatVariable extends global__WEBPACK_IMPORTED_MODULE_0__["Tw2BaseClass"] {
  constructor(...args) {
    super(...args);
    this.defaultValue = 0;
    this.variableType = 0;
  }

}

/***/ }),

/***/ "./state/variable/index.js":
/*!*********************************!*\
  !*** ./state/variable/index.js ***!
  \*********************************/
/*! exports provided: Tr2ControllerFloatVariable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Tr2ControllerFloatVariable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tr2ControllerFloatVariable */ "./state/variable/Tr2ControllerFloatVariable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tr2ControllerFloatVariable", function() { return _Tr2ControllerFloatVariable__WEBPACK_IMPORTED_MODULE_0__["Tr2ControllerFloatVariable"]; });



/***/ })

/******/ });
});